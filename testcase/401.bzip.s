	.text
	.file	"ld-temp.o"
	.file	1 "/home/readm/fast-cfi/401.bzip2/spec.c"
	.file	2 "/home/readm/fast-cfi/401.bzip2/./bzlib_private.h"
	.file	3 "/home/readm/fast-cfi/401.bzip2/blocksort.c"
	.file	4 "/home/readm/fast-cfi/401.bzip2/bzip2.c"
	.file	5 "/home/readm/fast-cfi/401.bzip2/bzlib.c"
	.file	6 "/usr/include/ctype.h"
	.file	7 "/home/readm/fast-cfi/401.bzip2/./bzlib.h"
	.file	8 "/usr/local/lib/clang/8.0.0/include/stddef.h"
	.file	9 "/home/readm/fast-cfi/401.bzip2/crctable.c"
	.file	10 "/home/readm/fast-cfi/401.bzip2/randtable.c"
	.text
	.p2align	4, 0x90         # -- Begin function spec_ungetc
	.type	spec_ungetc,@function
spec_ungetc:                            # @spec_ungetc
.Lfunc_begin0:
	.loc	1 221 0                 # spec.c:221:0
	.cfi_startproc
# %bb.0:                                # %if.end
	pushq	%rax
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	#DEBUG_VALUE: spec_ungetc:fd <- $esi
	movl	%esi, %edx
.Ltmp0:
	#DEBUG_VALUE: spec_ungetc:rc <- 0
	#DEBUG_VALUE: spec_ungetc:fd <- $edx
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	.loc	1 224 12 prologue_end   # spec.c:224:12
	cmpl	$4, %esi
.Ltmp1:
	.loc	1 224 9 is_stmt 0       # spec.c:224:9
	jge	.LBB0_1
.Ltmp2:
# %bb.3:                                # %if.end4
	#DEBUG_VALUE: spec_ungetc:fd <- $edx
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	.loc	1 228 9 is_stmt 1       # spec.c:228:9
	movslq	%edx, %rax
	.loc	1 228 21 is_stmt 0      # spec.c:228:21
	leaq	(%rax,%rax,2), %rax
	movslq	spec_fd+8(,%rax,8), %rdx
.Ltmp3:
	testq	%rdx, %rdx
.Ltmp4:
	.loc	1 228 9                 # spec.c:228:9
	jle	.LBB0_4
.Ltmp5:
# %bb.5:                                # %if.end11
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	#DEBUG_VALUE: spec_ungetc:ch <- $dil
	.loc	1 0 0                   # spec.c:0:0
	leaq	spec_fd+8(,%rax,8), %rcx
.Ltmp6:
	.loc	1 232 21 is_stmt 1      # spec.c:232:21
	movq	spec_fd+16(,%rax,8), %rax
	.loc	1 232 25 is_stmt 0      # spec.c:232:25
	leaq	-1(%rdx), %rsi
	movl	%esi, (%rcx)
	.loc	1 232 44                # spec.c:232:44
	cmpb	%dil, -1(%rax,%rdx)
.Ltmp7:
	.loc	1 232 9                 # spec.c:232:9
	jne	.LBB0_7
.Ltmp8:
# %bb.6:                                # %if.end29
	#DEBUG_VALUE: spec_ungetc:ch <- $dil
	.loc	1 0 9                   # spec.c:0:9
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp9:
.LBB0_1:                                # %if.then2
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: spec_ungetc:fd <- $edx
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	.loc	1 225 10 is_stmt 1      # spec.c:225:10
	movq	stderr(%rip), %rdi
.Ltmp10:
	.loc	1 225 2 is_stmt 0       # spec.c:225:2
	movl	$.L.str.9, %esi
	jmp	.LBB0_2
.Ltmp11:
.LBB0_4:                                # %if.then6
	#DEBUG_VALUE: spec_ungetc:ch <- $edi
	.loc	1 229 10 is_stmt 1      # spec.c:229:10
	movq	stderr(%rip), %rdi
.Ltmp12:
	.loc	1 229 2 is_stmt 0       # spec.c:229:2
	movl	$.L.str.16, %esi
                                        # kill: def $edx killed $edx killed $rdx
.Ltmp13:
.LBB0_2:                                # %if.then2
	.loc	1 0 0                   # spec.c:0:0
	xorl	%eax, %eax
	callq	fprintf
	xorl	%edi, %edi
	callq	exit
.LBB0_7:                                # %if.then22
.Ltmp14:
	#DEBUG_VALUE: spec_ungetc:ch <- $dil
	.loc	1 233 10 is_stmt 1      # spec.c:233:10
	movq	stderr(%rip), %rcx
	.loc	1 233 2 is_stmt 0       # spec.c:233:2
	movl	$.L.str.17, %edi
.Ltmp15:
	movl	$71, %esi
	movl	$1, %edx
	callq	fwrite
	.loc	1 234 2 is_stmt 1       # spec.c:234:2
	xorl	%edi, %edi
	callq	exit
.Ltmp16:
.Lfunc_end0:
	.size	spec_ungetc, .Lfunc_end0-spec_ungetc
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function main
.LCPI1_0:
	.zero	16
	.text
	.hidden	main
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin1:
	.loc	1 286 0                 # spec.c:286:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$10072, %rsp            # imm = 0x2758
	.cfi_def_cfa_offset 10128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: main:argc <- $edi
	#DEBUG_VALUE: main:argv <- $rsi
	movl	$.L.str.23, %r14d
	movl	$64, %ecx
.Ltmp17:
	#DEBUG_VALUE: main:input_size <- 64
	.loc	1 293 14 prologue_end   # spec.c:293:14
	cmpl	$2, %edi
.Ltmp18:
	.loc	1 293 9 is_stmt 0       # spec.c:293:9
	jl	.LBB1_3
.Ltmp19:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: main:argv <- $rsi
	#DEBUG_VALUE: main:argc <- $edi
	.loc	1 0 9                   # spec.c:0:9
	movq	%rsi, %rbp
.Ltmp20:
	#DEBUG_VALUE: main:argv <- $rbp
	.loc	1 293 30                # spec.c:293:30
	movq	8(%rsi), %r14
.Ltmp21:
	#DEBUG_VALUE: main:input_name <- $r14
	.loc	1 294 9 is_stmt 1       # spec.c:294:9
	jne	.LBB1_54
.Ltmp22:
.LBB1_3:
	#DEBUG_VALUE: main:argc <- $edi
	.loc	1 0 0 is_stmt 0         # spec.c:0:0
	movl	$64, %eax
.Ltmp23:
.LBB1_4:                                # %if.end9
	#DEBUG_VALUE: main:compressed_size <- $eax
	#DEBUG_VALUE: spec_load:filename <- $r14
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	.loc	1 300 32 is_stmt 1      # spec.c:300:32
	movl	%ecx, %r15d
	shll	$20, %r15d
.Ltmp24:
	#DEBUG_VALUE: spec_load:size <- $r15d
	.loc	1 300 21 is_stmt 0      # spec.c:300:21
	movl	%r15d, spec_fd(%rip)
	.loc	1 301 37 is_stmt 1      # spec.c:301:37
	shll	$20, %eax
.Ltmp25:
	.loc	1 301 21 is_stmt 0      # spec.c:301:21
	movl	%eax, spec_fd+24(%rip)
	.loc	1 302 21 is_stmt 1      # spec.c:302:21
	movl	%r15d, spec_fd+48(%rip)
.Ltmp26:
	.loc	1 82 5                  # spec.c:82:5
	movl	$.Lstr.34, %edi
	callq	puts
.Ltmp27:
	#DEBUG_VALUE: spec_init:i <- 0
	.loc	1 88 25                 # spec.c:88:25
	movslq	spec_fd(%rip), %rbx
.Ltmp28:
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 89 2                  # spec.c:89:2
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, spec_fd(%rip)
	.loc	1 90 19                 # spec.c:90:19
	movl	%ebx, spec_fd(%rip)
	.loc	1 91 48                 # spec.c:91:48
	leaq	1048576(%rbx), %rdi
	.loc	1 91 36 is_stmt 0       # spec.c:91:36
	callq	malloc
	.loc	1 91 17                 # spec.c:91:17
	movq	%rax, spec_fd+16(%rip)
.Ltmp29:
	.loc	1 92 21 is_stmt 1       # spec.c:92:21
	testq	%rax, %rax
.Ltmp30:
	.loc	1 92 6 is_stmt 0        # spec.c:92:6
	je	.LBB1_240
.Ltmp31:
# %bb.5:                                # %for.cond19.preheader.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 96 16 is_stmt 1       # spec.c:96:16
	testl	%ebx, %ebx
.Ltmp32:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jle	.LBB1_14
.Ltmp33:
# %bb.6:                                # %for.body22.preheader.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 97 24 is_stmt 1       # spec.c:97:24
	movb	$0, (%rax)
.Ltmp34:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 16                 # spec.c:96:16
	cmpl	$1025, %ebx             # imm = 0x401
.Ltmp35:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jl	.LBB1_14
.Ltmp36:
# %bb.7:                                # %for.body22.for.body22_crit_edge.preheader.i
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 97 17 is_stmt 1       # spec.c:97:17
	addq	$-1025, %rbx            # imm = 0xFBFF
.Ltmp37:
	movq	%rbx, %rdi
	shrq	$10, %rdi
	leal	1(%rdi), %ecx
	andl	$3, %ecx
	movl	$1024, %edx             # imm = 0x400
	cmpq	$3072, %rbx             # imm = 0xC00
	jb	.LBB1_11
# %bb.8:                                # %for.body22.for.body22_crit_edge.preheader.new.i
	leaq	3(%rcx), %rsi
	subq	%rdi, %rsi
	movl	$5120, %edx             # imm = 0x1400
	jmp	.LBB1_10
	.p2align	4, 0x90
.LBB1_9:                                # %for.body22.for.body22_crit_edge.i.for.body22.for.body22_crit_edge.i_crit_edge
                                        #   in Loop: Header=BB1_10 Depth=1
	movq	spec_fd+16(%rip), %rax
.Ltmp38:
	.loc	1 96 2                  # spec.c:96:2
	addq	$4096, %rdx             # imm = 0x1000
	addq	$4, %rsi
.LBB1_10:                               # %for.body22.for.body22_crit_edge.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp39:
	#DEBUG_VALUE: spec_init:j <- undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -4096(%rax,%rdx)
.Ltmp40:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17 is_stmt 0       # spec.c:97:17
	movq	spec_fd+16(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -3072(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+16(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -2048(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+16(%rip), %rax
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -1024(%rax,%rdx)
.Ltmp41:
	.loc	1 96 2 is_stmt 1        # spec.c:96:2
	testq	%rsi, %rsi
	jne	.LBB1_9
.LBB1_11:                               # %for.end.loopexit.unr-lcssa.i
	testq	%rcx, %rcx
	je	.LBB1_14
# %bb.12:                               # %for.body22.for.body22_crit_edge.epil.i.preheader
.Ltmp42:
	.loc	1 97 17                 # spec.c:97:17
	negq	%rcx
	.p2align	4, 0x90
.LBB1_13:                               # %for.body22.for.body22_crit_edge.epil.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp43:
	#DEBUG_VALUE: spec_init:j <- $rdx
	movq	spec_fd+16(%rip), %rax
	.loc	1 97 24 is_stmt 0       # spec.c:97:24
	movb	$0, (%rax,%rdx)
.Ltmp44:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 26 is_stmt 1       # spec.c:96:26
	addq	$1024, %rdx             # imm = 0x400
.Ltmp45:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	incq	%rcx
	jne	.LBB1_13
.Ltmp46:
.LBB1_14:                               # %for.end.i
	#DEBUG_VALUE: spec_init:i <- 1
	#DEBUG_VALUE: spec_init:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 88 25 is_stmt 1       # spec.c:88:25
	movslq	spec_fd+24(%rip), %rbx
.Ltmp47:
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 89 2                  # spec.c:89:2
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, spec_fd+24(%rip)
	.loc	1 90 19                 # spec.c:90:19
	movl	%ebx, spec_fd+24(%rip)
	.loc	1 91 48                 # spec.c:91:48
	leaq	1048576(%rbx), %rdi
	.loc	1 91 36 is_stmt 0       # spec.c:91:36
	callq	malloc
	.loc	1 91 17                 # spec.c:91:17
	movq	%rax, spec_fd+40(%rip)
.Ltmp48:
	.loc	1 92 21 is_stmt 1       # spec.c:92:21
	testq	%rax, %rax
.Ltmp49:
	.loc	1 92 6 is_stmt 0        # spec.c:92:6
	je	.LBB1_240
.Ltmp50:
# %bb.15:                               # %for.cond19.preheader.1.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 96 16 is_stmt 1       # spec.c:96:16
	testl	%ebx, %ebx
.Ltmp51:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jle	.LBB1_24
.Ltmp52:
# %bb.16:                               # %for.body22.preheader.1.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 97 24 is_stmt 1       # spec.c:97:24
	movb	$0, (%rax)
.Ltmp53:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 16                 # spec.c:96:16
	cmpl	$1025, %ebx             # imm = 0x401
.Ltmp54:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jl	.LBB1_24
.Ltmp55:
# %bb.17:                               # %for.body22.1.for.body22.1_crit_edge.preheader.i
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 97 17 is_stmt 1       # spec.c:97:17
	addq	$-1025, %rbx            # imm = 0xFBFF
.Ltmp56:
	movq	%rbx, %rdi
	shrq	$10, %rdi
	leal	1(%rdi), %ecx
	andl	$3, %ecx
	movl	$1024, %edx             # imm = 0x400
	cmpq	$3072, %rbx             # imm = 0xC00
	jb	.LBB1_21
# %bb.18:                               # %for.body22.1.for.body22.1_crit_edge.preheader.new.i
	leaq	3(%rcx), %rsi
	subq	%rdi, %rsi
	movl	$5120, %edx             # imm = 0x1400
	jmp	.LBB1_20
	.p2align	4, 0x90
.LBB1_19:                               # %for.body22.1.for.body22.1_crit_edge.i.for.body22.1.for.body22.1_crit_edge.i_crit_edge
                                        #   in Loop: Header=BB1_20 Depth=1
	movq	spec_fd+40(%rip), %rax
.Ltmp57:
	.loc	1 96 2                  # spec.c:96:2
	addq	$4096, %rdx             # imm = 0x1000
	addq	$4, %rsi
.LBB1_20:                               # %for.body22.1.for.body22.1_crit_edge.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp58:
	#DEBUG_VALUE: spec_init:j <- undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -4096(%rax,%rdx)
.Ltmp59:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17 is_stmt 0       # spec.c:97:17
	movq	spec_fd+40(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -3072(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+40(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -2048(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+40(%rip), %rax
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -1024(%rax,%rdx)
.Ltmp60:
	.loc	1 96 2 is_stmt 1        # spec.c:96:2
	testq	%rsi, %rsi
	jne	.LBB1_19
.LBB1_21:                               # %for.end.1.loopexit.unr-lcssa.i
	testq	%rcx, %rcx
	je	.LBB1_24
# %bb.22:                               # %for.body22.1.for.body22.1_crit_edge.epil.i.preheader
.Ltmp61:
	.loc	1 97 17                 # spec.c:97:17
	negq	%rcx
	.p2align	4, 0x90
.LBB1_23:                               # %for.body22.1.for.body22.1_crit_edge.epil.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp62:
	#DEBUG_VALUE: spec_init:j <- $rdx
	movq	spec_fd+40(%rip), %rax
	.loc	1 97 24 is_stmt 0       # spec.c:97:24
	movb	$0, (%rax,%rdx)
.Ltmp63:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 26 is_stmt 1       # spec.c:96:26
	addq	$1024, %rdx             # imm = 0x400
.Ltmp64:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	incq	%rcx
	jne	.LBB1_23
.Ltmp65:
.LBB1_24:                               # %for.end.1.i
	#DEBUG_VALUE: spec_init:i <- 2
	#DEBUG_VALUE: spec_init:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 88 25 is_stmt 1       # spec.c:88:25
	movslq	spec_fd+48(%rip), %rbx
.Ltmp66:
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 89 2                  # spec.c:89:2
	pxor	%xmm0, %xmm0
	movdqa	%xmm0, spec_fd+48(%rip)
	.loc	1 90 19                 # spec.c:90:19
	movl	%ebx, spec_fd+48(%rip)
	.loc	1 91 48                 # spec.c:91:48
	leaq	1048576(%rbx), %rdi
	.loc	1 91 36 is_stmt 0       # spec.c:91:36
	callq	malloc
	.loc	1 91 17                 # spec.c:91:17
	movq	%rax, spec_fd+64(%rip)
.Ltmp67:
	.loc	1 92 21 is_stmt 1       # spec.c:92:21
	testq	%rax, %rax
.Ltmp68:
	.loc	1 92 6 is_stmt 0        # spec.c:92:6
	je	.LBB1_240
.Ltmp69:
# %bb.25:                               # %for.cond19.preheader.2.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 96 16 is_stmt 1       # spec.c:96:16
	testl	%ebx, %ebx
.Ltmp70:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jle	.LBB1_34
.Ltmp71:
# %bb.26:                               # %for.body22.preheader.2.i
	#DEBUG_VALUE: limit <- $ebx
	#DEBUG_VALUE: spec_init:j <- 0
	.loc	1 97 24 is_stmt 1       # spec.c:97:24
	movb	$0, (%rax)
.Ltmp72:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 16                 # spec.c:96:16
	cmpl	$1025, %ebx             # imm = 0x401
.Ltmp73:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	jl	.LBB1_34
.Ltmp74:
# %bb.27:                               # %for.body22.2.for.body22.2_crit_edge.preheader.i
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 97 17 is_stmt 1       # spec.c:97:17
	addq	$-1025, %rbx            # imm = 0xFBFF
.Ltmp75:
	movq	%rbx, %rdi
	shrq	$10, %rdi
	leal	1(%rdi), %ecx
	andl	$3, %ecx
	movl	$1024, %edx             # imm = 0x400
	cmpq	$3072, %rbx             # imm = 0xC00
	jb	.LBB1_31
# %bb.28:                               # %for.body22.2.for.body22.2_crit_edge.preheader.new.i
	leaq	3(%rcx), %rsi
	subq	%rdi, %rsi
	movl	$5120, %edx             # imm = 0x1400
	jmp	.LBB1_30
	.p2align	4, 0x90
.LBB1_29:                               # %for.body22.2.for.body22.2_crit_edge.i.for.body22.2.for.body22.2_crit_edge.i_crit_edge
                                        #   in Loop: Header=BB1_30 Depth=1
	movq	spec_fd+64(%rip), %rax
.Ltmp76:
	.loc	1 96 2                  # spec.c:96:2
	addq	$4096, %rdx             # imm = 0x1000
	addq	$4, %rsi
.LBB1_30:                               # %for.body22.2.for.body22.2_crit_edge.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp77:
	#DEBUG_VALUE: spec_init:j <- undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -4096(%rax,%rdx)
.Ltmp78:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17 is_stmt 0       # spec.c:97:17
	movq	spec_fd+64(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -3072(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+64(%rip), %rax
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -2048(%rax,%rdx)
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 17                 # spec.c:97:17
	movq	spec_fd+64(%rip), %rax
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 97 24                 # spec.c:97:24
	movb	$0, -1024(%rax,%rdx)
.Ltmp79:
	.loc	1 96 2 is_stmt 1        # spec.c:96:2
	testq	%rsi, %rsi
	jne	.LBB1_29
.LBB1_31:                               # %for.end.2.loopexit.unr-lcssa.i
	testq	%rcx, %rcx
	je	.LBB1_34
# %bb.32:                               # %for.body22.2.for.body22.2_crit_edge.epil.i.preheader
.Ltmp80:
	.loc	1 97 17                 # spec.c:97:17
	negq	%rcx
	.p2align	4, 0x90
.LBB1_33:                               # %for.body22.2.for.body22.2_crit_edge.epil.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp81:
	#DEBUG_VALUE: spec_init:j <- $rdx
	movq	spec_fd+64(%rip), %rax
	.loc	1 97 24 is_stmt 0       # spec.c:97:24
	movb	$0, (%rax,%rdx)
.Ltmp82:
	#DEBUG_VALUE: spec_init:j <- [DW_OP_plus_uconst 1024, DW_OP_stack_value] undef
	.loc	1 96 26 is_stmt 1       # spec.c:96:26
	addq	$1024, %rdx             # imm = 0x400
.Ltmp83:
	.loc	1 96 2 is_stmt 0        # spec.c:96:2
	incq	%rcx
	jne	.LBB1_33
.Ltmp84:
.LBB1_34:                               # %if.end17
	#DEBUG_VALUE: spec_init:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 306 5 is_stmt 1       # spec.c:306:5
	movl	$.Lstr.43, %edi
	callq	puts
.Ltmp85:
	#DEBUG_VALUE: spec_load:num <- 0
	.loc	1 138 10                # spec.c:138:10
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	open
.Ltmp86:
	.loc	1 139 12                # spec.c:139:12
	testl	%eax, %eax
.Ltmp87:
	.loc	1 139 9 is_stmt 0       # spec.c:139:9
	js	.LBB1_241
# %bb.35:                               # %if.end.i
	.loc	1 0 0                   # spec.c:0:0
	movl	%eax, %ebp
.Ltmp88:
	#DEBUG_VALUE: spec_load:fd <- $ebp
	#DEBUG_VALUE: spec_load:i <- 0
	.loc	1 143 41 is_stmt 1      # spec.c:143:41
	movq	$0, spec_fd+4(%rip)
.Ltmp89:
	.loc	1 144 20                # spec.c:144:20
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp90:
	.loc	1 144 5 is_stmt 0       # spec.c:144:5
	jle	.LBB1_40
.Ltmp91:
# %bb.36:                               # %for.body.i.preheader
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 0 5                   # spec.c:0:5
	xorl	%ebx, %ebx
.Ltmp92:
	.p2align	4, 0x90
.LBB1_37:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: spec_load:fd <- $ebp
	#DEBUG_VALUE: spec_load:i <- $ebx
	.loc	1 145 32 is_stmt 1      # spec.c:145:32
	movslq	%ebx, %rsi
	addq	spec_fd+16(%rip), %rsi
	.loc	1 145 7 is_stmt 0       # spec.c:145:7
	movl	$131072, %edx           # imm = 0x20000
	movl	%ebp, %edi
	callq	read
.Ltmp93:
	#DEBUG_VALUE: spec_load:rc <- $eax
	.loc	1 146 9 is_stmt 1       # spec.c:146:9
	testl	%eax, %eax
.Ltmp94:
	.loc	1 146 6 is_stmt 0       # spec.c:146:6
	je	.LBB1_40
.Ltmp95:
# %bb.38:                               # %if.end13.i
                                        #   in Loop: Header=BB1_37 Depth=1
	#DEBUG_VALUE: spec_load:rc <- $eax
	#DEBUG_VALUE: spec_load:i <- $ebx
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 147 6 is_stmt 1       # spec.c:147:6
	js	.LBB1_238
.Ltmp96:
# %bb.39:                               # %if.end20.i
                                        #   in Loop: Header=BB1_37 Depth=1
	#DEBUG_VALUE: spec_load:rc <- $eax
	#DEBUG_VALUE: spec_load:i <- $ebx
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 151 19                # spec.c:151:19
	addl	%eax, spec_fd+4(%rip)
.Ltmp97:
	.loc	1 144 29                # spec.c:144:29
	addl	%eax, %ebx
.Ltmp98:
	#DEBUG_VALUE: spec_load:i <- $ebx
	.loc	1 144 20 is_stmt 0      # spec.c:144:20
	cmpl	%r15d, %ebx
.Ltmp99:
	.loc	1 144 5                 # spec.c:144:5
	jl	.LBB1_37
.Ltmp100:
.LBB1_40:                               # %for.end.i8
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 153 5 is_stmt 1       # spec.c:153:5
	movl	%ebp, %edi
	callq	close
	.loc	1 154 25                # spec.c:154:25
	movl	spec_fd+4(%rip), %ebx
	.loc	1 154 29 is_stmt 0      # spec.c:154:29
	cmpl	%r15d, %ebx
	.loc	1 154 5                 # spec.c:154:5
	jge	.LBB1_42
.Ltmp101:
	.p2align	4, 0x90
.LBB1_41:                               # %while.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 155 17 is_stmt 1      # spec.c:155:17
	movl	%r15d, %ebp
.Ltmp102:
	subl	%ebx, %ebp
.Ltmp103:
	#DEBUG_VALUE: tmp <- $ebp
	.loc	1 156 10                # spec.c:156:10
	cmpl	%ebx, %ebp
.Ltmp104:
	.loc	1 156 6 is_stmt 0       # spec.c:156:6
	cmovgl	%ebx, %ebp
.Ltmp105:
	#DEBUG_VALUE: tmp <- $ebp
	.loc	1 157 2 is_stmt 1       # spec.c:157:2
	movl	$.L.str.7, %edi
	movl	%ebp, %esi
	xorl	%eax, %eax
	callq	printf
.Ltmp106:
	.loc	1 158 39                # spec.c:158:39
	movslq	spec_fd+4(%rip), %rdi
	.loc	1 158 22 is_stmt 0      # spec.c:158:22
	movq	spec_fd+16(%rip), %rsi
	.loc	1 158 25                # spec.c:158:25
	addq	%rsi, %rdi
	.loc	1 158 62                # spec.c:158:62
	movslq	%ebp, %rbx
	.loc	1 158 2                 # spec.c:158:2
	movq	%rbx, %rdx
	callq	memcpy
	.loc	1 159 19 is_stmt 1      # spec.c:159:19
	addl	spec_fd+4(%rip), %ebx
	movl	%ebx, spec_fd+4(%rip)
.Ltmp107:
	.loc	1 154 29                # spec.c:154:29
	cmpl	%r15d, %ebx
	.loc	1 154 5 is_stmt 0       # spec.c:154:5
	jl	.LBB1_41
.Ltmp108:
.LBB1_42:                               # %if.end23
	.loc	1 308 5 is_stmt 1       # spec.c:308:5
	movl	$.L.str.25, %edi
	movl	%ebx, %esi
	xorl	%eax, %eax
	callq	printf
	movq	16(%rsp), %rbx          # 8-byte Reload
.Ltmp109:
	.loc	1 310 59                # spec.c:310:59
	movl	%ebx, %eax
	shll	$10, %eax
	.loc	1 310 46 is_stmt 0      # spec.c:310:46
	movslq	%eax, %rdi
	.loc	1 310 39                # spec.c:310:39
	callq	malloc
.Ltmp110:
	#DEBUG_VALUE: main:validate_array <- $rax
	.loc	1 0 39                  # spec.c:0:39
	movq	%rax, 32(%rsp)          # 8-byte Spill
.Ltmp111:
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 311 24 is_stmt 1      # spec.c:311:24
	testq	%rax, %rax
.Ltmp112:
	.loc	1 311 9 is_stmt 0       # spec.c:311:9
	je	.LBB1_242
.Ltmp113:
# %bb.43:                               # %for.cond.preheader
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: main:i <- 0
	.loc	1 144 20 is_stmt 1      # spec.c:144:20
	testl	%ebx, %ebx
.Ltmp114:
	.loc	1 316 5                 # spec.c:316:5
	jle	.LBB1_46
.Ltmp115:
# %bb.44:                               # %for.body.lr.ph
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movslq	%r15d, %rbx
	cmpq	$1026, %rbx             # imm = 0x402
	movl	$1027, %eax             # imm = 0x403
	cmovgq	%rbx, %rax
	addq	$-1, %rax
	movabsq	$9196429372677011127, %rcx # imm = 0x7FA047CA2861B6B7
	mulq	%rcx
	movq	spec_fd+16(%rip), %rax
	shrq	$9, %rdx
	addq	$1, %rdx
	cmpq	$15, %rdx
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	ja	.LBB1_47
.Ltmp116:
# %bb.45:
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 5 is_stmt 0         # spec.c:0:5
	xorl	%ecx, %ecx
	xorl	%edi, %edi
	movq	32(%rsp), %r8           # 8-byte Reload
	jmp	.LBB1_51
.Ltmp117:
.LBB1_46:                               # %for.cond.preheader.for.end_crit_edge
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 329 5 is_stmt 1       # spec.c:329:5
	movslq	%r15d, %rax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	jmp	.LBB1_53
.Ltmp118:
.LBB1_47:                               # %vector.ph
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 5 is_stmt 0         # spec.c:0:5
	movabsq	$36028797018963952, %rcx # imm = 0x7FFFFFFFFFFFF0
.Ltmp119:
	.loc	1 316 5 is_stmt 1       # spec.c:316:5
	andq	%rdx, %rcx
	xorl	%esi, %esi
.Ltmp120:
	.loc	1 316 51 is_stmt 0      # spec.c:316:51
	movq	%rax, %rdi
	movq	32(%rsp), %r8           # 8-byte Reload
.Ltmp121:
	.p2align	4, 0x90
.LBB1_48:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 317 2 is_stmt 1       # spec.c:317:2
	movzbl	15405(%rdi), %ebp
	movd	%ebp, %xmm0
	movzbl	14378(%rdi), %ebp
	movd	%ebp, %xmm1
	punpcklbw	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	movzbl	13351(%rdi), %ebp
	movd	%ebp, %xmm0
	movzbl	12324(%rdi), %ebp
	movd	%ebp, %xmm2
	punpcklbw	%xmm0, %xmm2    # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklwd	%xmm1, %xmm2    # xmm2 = xmm2[0],xmm1[0],xmm2[1],xmm1[1],xmm2[2],xmm1[2],xmm2[3],xmm1[3]
	movzbl	11297(%rdi), %ebp
	movd	%ebp, %xmm0
	movzbl	10270(%rdi), %ebp
	movd	%ebp, %xmm1
	punpcklbw	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	movzbl	9243(%rdi), %ebp
	movd	%ebp, %xmm3
	movzbl	8216(%rdi), %ebp
	movd	%ebp, %xmm0
	punpcklbw	%xmm3, %xmm0    # xmm0 = xmm0[0],xmm3[0],xmm0[1],xmm3[1],xmm0[2],xmm3[2],xmm0[3],xmm3[3],xmm0[4],xmm3[4],xmm0[5],xmm3[5],xmm0[6],xmm3[6],xmm0[7],xmm3[7]
	punpcklwd	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1],xmm0[2],xmm1[2],xmm0[3],xmm1[3]
	punpckldq	%xmm2, %xmm0    # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1]
	movzbl	7189(%rdi), %ebp
	movd	%ebp, %xmm1
	movzbl	6162(%rdi), %ebp
	movd	%ebp, %xmm2
	punpcklbw	%xmm1, %xmm2    # xmm2 = xmm2[0],xmm1[0],xmm2[1],xmm1[1],xmm2[2],xmm1[2],xmm2[3],xmm1[3],xmm2[4],xmm1[4],xmm2[5],xmm1[5],xmm2[6],xmm1[6],xmm2[7],xmm1[7]
	movzbl	5135(%rdi), %ebp
	movd	%ebp, %xmm1
	movzbl	4108(%rdi), %ebp
	movd	%ebp, %xmm3
	punpcklbw	%xmm1, %xmm3    # xmm3 = xmm3[0],xmm1[0],xmm3[1],xmm1[1],xmm3[2],xmm1[2],xmm3[3],xmm1[3],xmm3[4],xmm1[4],xmm3[5],xmm1[5],xmm3[6],xmm1[6],xmm3[7],xmm1[7]
	punpcklwd	%xmm2, %xmm3    # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1],xmm3[2],xmm2[2],xmm3[3],xmm2[3]
	movzbl	3081(%rdi), %ebp
	movd	%ebp, %xmm1
	movzbl	2054(%rdi), %ebp
	movd	%ebp, %xmm2
	punpcklbw	%xmm1, %xmm2    # xmm2 = xmm2[0],xmm1[0],xmm2[1],xmm1[1],xmm2[2],xmm1[2],xmm2[3],xmm1[3],xmm2[4],xmm1[4],xmm2[5],xmm1[5],xmm2[6],xmm1[6],xmm2[7],xmm1[7]
	movzbl	1027(%rdi), %ebp
	movd	%ebp, %xmm1
	movzbl	(%rdi), %ebp
	movd	%ebp, %xmm4
	punpcklbw	%xmm1, %xmm4    # xmm4 = xmm4[0],xmm1[0],xmm4[1],xmm1[1],xmm4[2],xmm1[2],xmm4[3],xmm1[3],xmm4[4],xmm1[4],xmm4[5],xmm1[5],xmm4[6],xmm1[6],xmm4[7],xmm1[7]
	punpcklwd	%xmm2, %xmm4    # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1],xmm4[2],xmm2[2],xmm4[3],xmm2[3]
	punpckldq	%xmm3, %xmm4    # xmm4 = xmm4[0],xmm3[0],xmm4[1],xmm3[1]
	punpcklqdq	%xmm0, %xmm4    # xmm4 = xmm4[0],xmm0[0]
.Ltmp122:
	.loc	1 316 51                # spec.c:316:51
	movdqu	%xmm4, (%r8,%rsi)
	addq	$16, %rsi
	addq	$16432, %rdi            # imm = 0x4030
	cmpq	%rsi, %rcx
	jne	.LBB1_48
.Ltmp123:
# %bb.49:                               # %middle.block
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 51 is_stmt 0        # spec.c:0:51
	cmpq	%rcx, %rdx
	.loc	1 316 5                 # spec.c:316:5
	je	.LBB1_53
.Ltmp124:
# %bb.50:
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 5                   # spec.c:0:5
	imulq	$1027, %rcx, %rdi       # imm = 0x403
.Ltmp125:
.LBB1_51:                               # %for.body.preheader
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 317 22 is_stmt 1      # spec.c:317:22
	imulq	$1027, %rcx, %rdx       # imm = 0x403
	movq	%r8, %rsi
	addq	%rcx, %rsi
	addq	%rdi, %rax
.Ltmp126:
	.p2align	4, 0x90
.LBB1_52:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: main:i <- undef
	movzbl	(%rax), %ecx
.Ltmp127:
	#DEBUG_VALUE: main:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 317 20 is_stmt 0      # spec.c:317:20
	movb	%cl, (%rsi)
.Ltmp128:
	.loc	1 316 33 is_stmt 1      # spec.c:316:33
	addq	$1027, %rdx             # imm = 0x403
	addq	$1, %rsi
	addq	$1027, %rax             # imm = 0x403
	cmpq	%rbx, %rdx
	jl	.LBB1_52
.Ltmp129:
.LBB1_53:                               # %for.end
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 391 28                # spec.c:391:28
	movl	$9, blockSize100k(%rip)
	.loc	1 393 28                # spec.c:393:28
	movb	$1, workFactor(%rip)
.Ltmp130:
	#DEBUG_VALUE: main:level <- 5
	.loc	1 0 28 is_stmt 0        # spec.c:0:28
	movl	$5, %ebp
	jmp	.LBB1_57
.Ltmp131:
.LBB1_54:                               # %if.end4
	#DEBUG_VALUE: main:input_name <- $r14
	#DEBUG_VALUE: main:argv <- $rbp
	#DEBUG_VALUE: main:argc <- $edi
	movl	%edi, %ebx
.Ltmp132:
	#DEBUG_VALUE: main:argc <- $ebx
	.loc	1 294 35 is_stmt 1      # spec.c:294:35
	movq	16(%rbp), %rdi
.Ltmp133:
	#DEBUG_VALUE: atoi:__nptr <- $rdi
	.file	11 "/usr/include/stdlib.h"
	.loc	11 280 16               # /usr/include/stdlib.h:280:16
	xorl	%esi, %esi
	movl	$10, %edx
	callq	strtol
.Ltmp134:
	movq	%rax, %rcx
.Ltmp135:
	#DEBUG_VALUE: main:input_size <- $ecx
	.loc	1 295 14                # spec.c:295:14
	cmpl	$4, %ebx
.Ltmp136:
	.loc	1 295 9 is_stmt 0       # spec.c:295:9
	jl	.LBB1_193
.Ltmp137:
# %bb.55:                               # %if.then6
	#DEBUG_VALUE: main:input_size <- $ecx
	#DEBUG_VALUE: main:argc <- $ebx
	#DEBUG_VALUE: main:input_name <- $r14
	#DEBUG_VALUE: main:argv <- $rbp
	.loc	1 296 23 is_stmt 1      # spec.c:296:23
	movq	24(%rbp), %rdi
.Ltmp138:
	#DEBUG_VALUE: atoi:__nptr <- $rdi
	.loc	11 280 16               # /usr/include/stdlib.h:280:16
	xorl	%esi, %esi
	movl	$10, %edx
	movq	%rcx, %rbx
.Ltmp139:
	callq	strtol
.Ltmp140:
	.loc	11 0 16 is_stmt 0       # /usr/include/stdlib.h:0:16
	movq	%rbx, %rcx
.Ltmp141:
	#DEBUG_VALUE: main:compressed_size <- $eax
	jmp	.LBB1_4
.Ltmp142:
.LBB1_56:                               # %if.then21.i.i92
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1177 9 is_stmt 1      # bzlib.c:1177:9
	movl	$-2, 12(%rsp)
	jmp	.LBB1_185
.Ltmp143:
	.p2align	4, 0x90
.LBB1_57:                               # %if.end48
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_63 Depth 2
                                        #       Child Loop BB1_69 Depth 3
                                        #     Child Loop BB1_99 Depth 2
                                        #       Child Loop BB1_103 Depth 3
                                        #     Child Loop BB1_118 Depth 2
                                        #       Child Loop BB1_120 Depth 3
                                        #         Child Loop BB1_124 Depth 4
                                        #       Child Loop BB1_158 Depth 3
                                        #       Child Loop BB1_161 Depth 3
                                        #       Child Loop BB1_163 Depth 3
                                        #       Child Loop BB1_176 Depth 3
                                        #     Child Loop BB1_189 Depth 2
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	.loc	1 331 2                 # spec.c:331:2
	movl	$.L.str.27, %edi
	movl	%ebp, %esi
	xorl	%eax, %eax
	callq	printf
.Ltmp144:
	#DEBUG_VALUE: spec_compress:out <- 1
	#DEBUG_VALUE: spec_compress:in <- 0
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	.loc	1 397 29                # spec.c:397:29
	movl	%ebp, blockSize100k(%rip)
.Ltmp145:
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- 0
	#DEBUG_VALUE: BZ2_bzWriteOpen:verbosity <- 0
	#DEBUG_VALUE: BZ2_bzWriteOpen:f <- 1
	#DEBUG_VALUE: compressStream:bzf <- 0
	#DEBUG_VALUE: compressStream:zStream <- 1
	#DEBUG_VALUE: compressStream:stream <- 0
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	.loc	5 1005 10               # bzlib.c:1005:10
	movl	$5104, %edi             # imm = 0x13F0
	callq	malloc
.Ltmp146:
	.loc	5 1006 12               # bzlib.c:1006:12
	testq	%rax, %rax
.Ltmp147:
	.loc	5 1006 8 is_stmt 0      # bzlib.c:1006:8
	je	.LBB1_232
.Ltmp148:
# %bb.58:                               # %if.end9.i.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	movq	%rax, %r13
.Ltmp149:
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteClose64:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteClose64:b <- $r13
	#DEBUG_VALUE: BZ2_bzWrite:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWrite:b <- $r13
	.loc	5 1009 4 is_stmt 1      # bzlib.c:1009:4
	movl	$0, 5096(%rax)
.Ltmp150:
	.loc	5 1010 23               # bzlib.c:1010:23
	movb	$0, 5100(%rax)
	.loc	5 1011 23               # bzlib.c:1011:23
	movl	$0, 5004(%rax)
	.loc	5 1012 23               # bzlib.c:1012:23
	movl	$1, (%rax)
	.loc	5 1013 23               # bzlib.c:1013:23
	movb	$1, 5008(%rax)
.Ltmp151:
	#DEBUG_VALUE: BZ2_bzWriteOpen:workFactor <- 30
	.loc	5 0 23 is_stmt 0        # bzlib.c:0:23
	pxor	%xmm0, %xmm0
	.loc	5 1015 23 is_stmt 1     # bzlib.c:1015:23
	movdqu	%xmm0, 5072(%rax)
	movq	$0, 5088(%rax)
.Ltmp152:
	#DEBUG_VALUE: BZ2_bzCompressInit:workFactor <- 30
	#DEBUG_VALUE: BZ2_bzCompressInit:verbosity <- 0
	.loc	5 222 45                # bzlib.c:222:45
	movq	$default_bzalloc, 5072(%rax)
.Ltmp153:
	.loc	5 223 43                # bzlib.c:223:43
	movq	$default_bzfree, 5080(%rax)
.Ltmp154:
	.loc	5 225 8                 # bzlib.c:225:8
	xorl	%edi, %edi
	movl	$55768, %esi            # imm = 0xD9D8
	movl	$1, %edx
	callq	default_bzalloc
.Ltmp155:
	.loc	5 226 10                # bzlib.c:226:10
	testq	%rax, %rax
.Ltmp156:
	.loc	5 226 8 is_stmt 0       # bzlib.c:226:8
	je	.LBB1_231
.Ltmp157:
# %bb.59:                               # %if.end25.i.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: BZ2_bzWrite:b <- $r13
	#DEBUG_VALUE: BZ2_bzWrite:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteClose64:b <- $r13
	#DEBUG_VALUE: BZ2_bzWriteClose64:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	movq	%rax, %rbx
.Ltmp158:
	#DEBUG_VALUE: prepare_new_block:s <- $rbx
	#DEBUG_VALUE: init_RL:s <- $rbx
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	leaq	5016(%r13), %rax
.Ltmp159:
	#DEBUG_VALUE: BZ2_bzCompress:strm <- $rax
	#DEBUG_VALUE: BZ2_bzCompress:strm <- $rax
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- $rax
	movq	%rax, 24(%rsp)          # 8-byte Spill
.Ltmp160:
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	5 227 12 is_stmt 1      # bzlib.c:227:12
	movq	%rax, (%rbx)
	.loc	5 230 12                # bzlib.c:230:12
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 24(%rbx)
	movq	$0, 40(%rbx)
	.loc	5 234 14                # bzlib.c:234:14
	movq	5088(%r13), %rdi
	imull	$400000, %ebp, %r14d    # imm = 0x61A80
	movl	%r14d, %esi
	movl	$1, %edx
	callq	*5072(%r13)
	.loc	5 234 12 is_stmt 0      # bzlib.c:234:12
	movq	%rax, 24(%rbx)
	.loc	5 235 14 is_stmt 1      # bzlib.c:235:14
	movq	5088(%r13), %rdi
	addl	$136, %r14d
	movl	%r14d, %esi
	movl	$1, %edx
	callq	*5072(%r13)
	.loc	5 235 12 is_stmt 0      # bzlib.c:235:12
	movq	%rax, 32(%rbx)
	.loc	5 236 14 is_stmt 1      # bzlib.c:236:14
	movq	5088(%r13), %rdi
	movl	$262148, %esi           # imm = 0x40004
	movl	$1, %edx
	callq	*5072(%r13)
	.loc	5 236 12 is_stmt 0      # bzlib.c:236:12
	movq	%rax, 40(%rbx)
.Ltmp161:
	.loc	5 238 11 is_stmt 1      # bzlib.c:238:11
	movq	24(%rbx), %rsi
	.loc	5 238 16 is_stmt 0      # bzlib.c:238:16
	testq	%rsi, %rsi
	.loc	5 238 24                # bzlib.c:238:24
	je	.LBB1_226
.Ltmp162:
# %bb.60:                               # %lor.lhs.false47.i.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 238 54                # bzlib.c:238:54
	testq	%rax, %rax
	.loc	5 238 43                # bzlib.c:238:43
	je	.LBB1_225
.Ltmp163:
# %bb.61:                               # %lor.lhs.false47.i.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	movq	32(%rbx), %rax
	.loc	5 238 43                # bzlib.c:238:43
	testq	%rax, %rax
	je	.LBB1_225
.Ltmp164:
# %bb.62:                               # %BZ2_bzWriteOpen.exit.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	imull	$100000, %ebp, %ecx     # imm = 0x186A0
.Ltmp165:
	#DEBUG_VALUE: BZ2_bzCompressInit:n <- $ecx
	.loc	5 248 25 is_stmt 1      # bzlib.c:248:25
	movabsq	$8589934594, %rdx       # imm = 0x200000002
	movq	%rdx, 8(%rbx)
	.loc	5 249 25                # bzlib.c:249:25
	movq	$0, 652(%rbx)
	movl	%ebp, 44(%rsp)          # 4-byte Spill
.Ltmp166:
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	.loc	5 250 25                # bzlib.c:250:25
	movl	%ebp, 664(%rbx)
	.loc	5 251 50                # bzlib.c:251:50
	addl	$-19, %ecx
.Ltmp167:
	.loc	5 251 25 is_stmt 0      # bzlib.c:251:25
	movl	%ecx, 112(%rbx)
	.loc	5 253 25 is_stmt 1      # bzlib.c:253:25
	movl	$30, 88(%rbx)
	.loc	5 255 25                # bzlib.c:255:25
	movq	%rax, 64(%rbx)
	.loc	5 256 25                # bzlib.c:256:25
	movq	%rsi, 72(%rbx)
	.loc	5 257 25                # bzlib.c:257:25
	movq	$0, 80(%rbx)
	.loc	5 258 25                # bzlib.c:258:25
	movq	%rsi, 56(%rbx)
	.loc	5 260 25                # bzlib.c:260:25
	movq	%rbx, 5064(%r13)
	.loc	5 261 25                # bzlib.c:261:25
	movq	$0, 5028(%r13)
	.loc	5 263 25                # bzlib.c:263:25
	movq	$0, 5052(%r13)
.Ltmp168:
	.loc	5 190 20                # bzlib.c:190:20
	movq	$256, 92(%rbx)          # imm = 0x100
.Ltmp169:
	.loc	5 177 14                # bzlib.c:177:14
	movl	$0, 108(%rbx)
	.loc	5 178 12                # bzlib.c:178:12
	movq	$0, 116(%rbx)
.Ltmp170:
	.loc	5 180 4                 # bzlib.c:180:4
	movl	$-1, 648(%rbx)
.Ltmp171:
	#DEBUG_VALUE: prepare_new_block:i <- 0
	.loc	5 0 4 is_stmt 0         # bzlib.c:0:4
	pxor	%xmm0, %xmm0
.Ltmp172:
	.loc	5 181 42 is_stmt 1      # bzlib.c:181:42
	movdqu	%xmm0, 368(%rbx)
	movdqu	%xmm0, 352(%rbx)
	movdqu	%xmm0, 336(%rbx)
	movdqu	%xmm0, 320(%rbx)
	movdqu	%xmm0, 304(%rbx)
	movdqu	%xmm0, 288(%rbx)
	movdqu	%xmm0, 272(%rbx)
	movdqu	%xmm0, 256(%rbx)
	movdqu	%xmm0, 240(%rbx)
	movdqu	%xmm0, 224(%rbx)
	movdqu	%xmm0, 208(%rbx)
	movdqu	%xmm0, 192(%rbx)
	movdqu	%xmm0, 176(%rbx)
	movdqu	%xmm0, 160(%rbx)
	movdqu	%xmm0, 144(%rbx)
	movdqu	%xmm0, 128(%rbx)
.Ltmp173:
	#DEBUG_VALUE: prepare_new_block:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: prepare_new_block:i <- undef
	.loc	5 182 14                # bzlib.c:182:14
	movl	$1, 660(%rbx)
.Ltmp174:
	#DEBUG_VALUE: BZ2_bzWriteOpen:ret <- 0
	.loc	5 1024 23               # bzlib.c:1024:23
	movl	$0, 5024(%r13)
	.loc	5 1025 23               # bzlib.c:1025:23
	movb	$1, 5100(%r13)
.Ltmp175:
	#DEBUG_VALUE: compressStream:bzerr <- 0
	.loc	5 0 23 is_stmt 0        # bzlib.c:0:23
	movq	%r13, %r14
	addq	$4, %r14
.Ltmp176:
	#DEBUG_VALUE: spec_fwrite:buf <- $r14
	#DEBUG_VALUE: spec_fwrite:buf <- $r14
	xorl	%r12d, %r12d
.Ltmp177:
	.p2align	4, 0x90
.LBB1_63:                               # %while.cond.i
                                        #   Parent Loop BB1_57 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB1_69 Depth 3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: myfeof:f <- 0
	#DEBUG_VALUE: spec_getc:fd <- 0
	#DEBUG_VALUE: spec_getc:rc <- 0
	.loc	1 213 21 is_stmt 1      # spec.c:213:21
	movl	spec_fd+8(%rip), %r15d
	.loc	1 213 40 is_stmt 0      # spec.c:213:40
	movl	spec_fd+4(%rip), %eax
	.loc	1 213 25                # spec.c:213:25
	movl	%eax, %ebp
.Ltmp178:
	subl	%r15d, %ebp
.Ltmp179:
	.loc	1 213 9                 # spec.c:213:9
	jle	.LBB1_83
.Ltmp180:
# %bb.64:                               # %spec_getc.exit.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 217 41 is_stmt 1      # spec.c:217:41
	leal	1(%r15), %edx
	movl	%edx, spec_fd+8(%rip)
.Ltmp181:
	#DEBUG_VALUE: spec_ungetc:rc <- 0
	#DEBUG_VALUE: spec_ungetc:fd <- 0
	.loc	1 228 25                # spec.c:228:25
	testl	%r15d, %r15d
.Ltmp182:
	.loc	1 228 9 is_stmt 0       # spec.c:228:9
	js	.LBB1_196
.Ltmp183:
# %bb.65:                               # %if.end11.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 0                   # spec.c:0:0
	movslq	%r15d, %rsi
	.loc	1 217 10 is_stmt 1      # spec.c:217:10
	addq	spec_fd+16(%rip), %rsi
	movb	(%rsi), %cl
.Ltmp184:
	#DEBUG_VALUE: spec_ungetc:ch <- $cl
	.loc	1 232 25                # spec.c:232:25
	movl	%r15d, spec_fd+8(%rip)
	.loc	1 232 44 is_stmt 0      # spec.c:232:44
	cmpb	%cl, (%rsi)
.Ltmp185:
	.loc	1 232 9                 # spec.c:232:9
	jne	.LBB1_197
.Ltmp186:
# %bb.66:                               # %if.end13.i8.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: spec_fread:size <- 1
	#DEBUG_VALUE: spec_fread:num <- 5000
	#DEBUG_VALUE: spec_fread:fd <- 0
	#DEBUG_VALUE: spec_fread:rc <- 0
	.loc	1 196 25 is_stmt 1      # spec.c:196:25
	addl	$5000, %r15d            # imm = 0x1388
	.loc	1 196 38 is_stmt 0      # spec.c:196:38
	cmpl	%eax, %r15d
.Ltmp187:
	.loc	1 196 9                 # spec.c:196:9
	cmovgl	%eax, %r15d
	movl	$5000, %eax             # imm = 0x1388
	cmovll	%eax, %ebp
.Ltmp188:
	#DEBUG_VALUE: compressStream:nIbuf <- $ebp
	#DEBUG_VALUE: BZ2_bzWrite:len <- $ebp
	#DEBUG_VALUE: spec_fread:rc <- $ebp
	.loc	1 201 54 is_stmt 1      # spec.c:201:54
	movslq	%ebp, %rbx
.Ltmp189:
	#DEBUG_VALUE: spec_fread:buf <- [DW_OP_plus_uconst 5072] $rsp
	.loc	1 201 5 is_stmt 0       # spec.c:201:5
	leaq	5072(%rsp), %rdi
	movq	%rbx, %rdx
	callq	memcpy
	.loc	1 202 21 is_stmt 1      # spec.c:202:21
	movl	%r15d, spec_fd+8(%rip)
.Ltmp190:
	.loc	4 465 17                # bzip2.c:465:17
	testl	%ebx, %ebx
.Ltmp191:
	.loc	4 465 11 is_stmt 0      # bzip2.c:465:11
	jle	.LBB1_82
.Ltmp192:
# %bb.67:                               # %if.end16.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:len <- $ebp
	#DEBUG_VALUE: compressStream:nIbuf <- $ebp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1041 4 is_stmt 1      # bzlib.c:1041:4
	movl	$0, 5096(%r13)
.Ltmp193:
	.loc	5 1044 9                # bzlib.c:1044:9
	cmpb	$0, 5008(%r13)
.Ltmp194:
	.loc	5 1044 8 is_stmt 0      # bzlib.c:1044:8
	je	.LBB1_198
.Ltmp195:
# %bb.68:                               # %if.end35.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:len <- $ebp
	#DEBUG_VALUE: compressStream:nIbuf <- $ebp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1052 23 is_stmt 1     # bzlib.c:1052:23
	movl	%ebp, 5024(%r13)
.Ltmp196:
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	.loc	5 1053 23               # bzlib.c:1053:23
	leaq	5072(%rsp), %rax
	movq	%rax, 5016(%r13)
	movq	24(%rsp), %rbp          # 8-byte Reload
.Ltmp197:
	.p2align	4, 0x90
.LBB1_69:                               # %while.cond.i.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_63 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1056 27               # bzlib.c:1056:27
	movl	$5000, 5048(%r13)       # imm = 0x1388
	.loc	5 1057 26               # bzlib.c:1057:26
	movq	%r14, 5040(%r13)
.Ltmp198:
	#DEBUG_VALUE: BZ2_bzCompress:action <- 0
	.loc	5 469 14                # bzlib.c:469:14
	movq	5064(%r13), %rax
.Ltmp199:
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rax
	.loc	5 0 14 is_stmt 0        # bzlib.c:0:14
	movl	$-2, %r12d
.Ltmp200:
	.loc	5 470 10 is_stmt 1      # bzlib.c:470:10
	testq	%rax, %rax
.Ltmp201:
	.loc	5 470 8 is_stmt 0       # bzlib.c:470:8
	je	.LBB1_81
.Ltmp202:
# %bb.70:                               # %if.end3.i.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rax
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 471 16 is_stmt 1      # bzlib.c:471:16
	cmpq	%rbp, (%rax)
.Ltmp203:
	.loc	5 471 8 is_stmt 0       # bzlib.c:471:8
	jne	.LBB1_81
.Ltmp204:
# %bb.71:                               # %preswitch.preheader.i.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rax
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 474 15 is_stmt 1      # bzlib.c:474:15
	movl	8(%rax), %eax
.Ltmp205:
	.loc	5 474 4 is_stmt 0       # bzlib.c:474:4
	cmpl	$2, %eax
	jne	.LBB1_78
.Ltmp206:
# %bb.72:                               # %sw.bb8.i.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 481 24 is_stmt 1      # bzlib.c:481:24
	movq	%rbp, %rdi
	callq	handle_compress
.Ltmp207:
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	.loc	5 482 20                # bzlib.c:482:20
	testb	%al, %al
	je	.LBB1_81
.Ltmp208:
# %bb.73:                               # %if.end50.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:ret <- 1
	.loc	5 1062 21               # bzlib.c:1062:21
	movl	5048(%r13), %eax
	.loc	5 1062 31 is_stmt 0     # bzlib.c:1062:31
	cmpl	$4999, %eax             # imm = 0x1387
.Ltmp209:
	.loc	5 1062 11               # bzlib.c:1062:11
	ja	.LBB1_76
.Ltmp210:
# %bb.74:                               # %if.then54.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1064 15 is_stmt 1     # bzlib.c:1064:15
	movslq	(%r13), %rbx
.Ltmp211:
	#DEBUG_VALUE: spec_fwrite:fd <- undef
	cmpq	$4, %rbx
.Ltmp212:
	#DEBUG_VALUE: spec_fwrite:size <- 1
	.loc	1 263 9                 # spec.c:263:9
	jge	.LBB1_194
.Ltmp213:
# %bb.75:                               # %spec_fwrite.exit.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	$5000, %ecx             # imm = 0x1388
	subl	%eax, %ecx
.Ltmp214:
	#DEBUG_VALUE: BZ2_bzWrite:n <- $ecx
	#DEBUG_VALUE: spec_fwrite:num <- $ecx
	#DEBUG_VALUE: BZ2_bzWrite:n2 <- $ecx
	.loc	1 267 26 is_stmt 1      # spec.c:267:26
	shlq	$3, %rbx
	.loc	1 267 42 is_stmt 0      # spec.c:267:42
	movslq	spec_fd+8(%rbx,%rbx,2), %rdi
	.loc	1 267 14                # spec.c:267:14
	addq	spec_fd+16(%rbx,%rbx,2), %rdi
	.loc	1 267 54                # spec.c:267:54
	movslq	%ecx, %r12
	.loc	1 267 5                 # spec.c:267:5
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memcpy
.Ltmp215:
	.loc	1 268 21 is_stmt 1      # spec.c:268:21
	addl	%r12d, spec_fd+4(%rbx,%rbx,2)
	.loc	1 269 21                # spec.c:269:21
	addl	%r12d, spec_fd+8(%rbx,%rbx,2)
.Ltmp216:
.LBB1_76:                               # %if.end70.i.i
                                        #   in Loop: Header=BB1_69 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1070 30               # bzlib.c:1070:30
	cmpl	$0, 5024(%r13)
.Ltmp217:
	.loc	5 1070 11 is_stmt 0     # bzlib.c:1070:11
	jne	.LBB1_69
.Ltmp218:
# %bb.77:                               # %if.then74.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1071 12 is_stmt 1     # bzlib.c:1071:12
	movl	$0, 5096(%r13)
	xorl	%r12d, %r12d
	jmp	.LBB1_82
.Ltmp219:
.LBB1_78:                               # %preswitch.preheader.i.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 12 is_stmt 0        # bzlib.c:0:12
	xorl	%r12d, %r12d
	cmpl	$4, %eax
	ja	.LBB1_81
.Ltmp220:
# %bb.79:                               # %preswitch.preheader.i.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movl	$26, %ecx
	btl	%eax, %ecx
	jae	.LBB1_81
.Ltmp221:
# %bb.80:                               # %if.then42.i.i.loopexit
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movl	$-1, %r12d
.Ltmp222:
	.p2align	4, 0x90
.LBB1_81:                               # %if.then42.i.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWrite:ret <- 1
	.loc	5 1060 12 is_stmt 1     # bzlib.c:1060:12
	movl	%r12d, 5096(%r13)
.Ltmp223:
.LBB1_82:                               # %if.end12.i
                                        #   in Loop: Header=BB1_63 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	.loc	4 466 17                # bzip2.c:466:17
	testl	%r12d, %r12d
.Ltmp224:
	.loc	4 466 11 is_stmt 0      # bzip2.c:466:11
	je	.LBB1_63
	jmp	.LBB1_208
.Ltmp225:
	.p2align	4, 0x90
.LBB1_83:                               # %if.end6.i35.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteClose64:abandon <- 0
	.loc	5 1103 9 is_stmt 1      # bzlib.c:1103:9
	cmpb	$0, 5008(%r13)
	movq	24(%rsp), %rdi          # 8-byte Reload
.Ltmp226:
	.loc	5 1103 8 is_stmt 0      # bzlib.c:1103:8
	je	.LBB1_198
.Ltmp227:
# %bb.84:                               # %if.end15.i38.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1113 35 is_stmt 1     # bzlib.c:1113:35
	cmpl	$0, 5096(%r13)
.Ltmp228:
	.loc	5 1113 8 is_stmt 0      # bzlib.c:1113:8
	je	.LBB1_99
.Ltmp229:
.LBB1_85:                               # %if.end69.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1148 4 is_stmt 1      # bzlib.c:1148:4
	movl	$0, 5096(%r13)
.Ltmp230:
	.loc	5 529 14                # bzlib.c:529:14
	movq	5064(%r13), %rbx
.Ltmp231:
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	.loc	5 530 10                # bzlib.c:530:10
	testq	%rbx, %rbx
.Ltmp232:
	.loc	5 530 8 is_stmt 0       # bzlib.c:530:8
	je	.LBB1_94
.Ltmp233:
# %bb.86:                               # %if.end3.i163.i83.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 531 16 is_stmt 1      # bzlib.c:531:16
	cmpq	%rdi, (%rbx)
.Ltmp234:
	.loc	5 531 8 is_stmt 0       # bzlib.c:531:8
	jne	.LBB1_94
.Ltmp235:
# %bb.87:                               # %if.end7.i.i86.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 533 11 is_stmt 1      # bzlib.c:533:11
	movq	24(%rbx), %rsi
	.loc	5 533 16 is_stmt 0      # bzlib.c:533:16
	testq	%rsi, %rsi
.Ltmp236:
	.loc	5 533 8                 # bzlib.c:533:8
	je	.LBB1_89
.Ltmp237:
# %bb.88:                               # %if.then9.i.i89.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 533 25                # bzlib.c:533:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp238:
.LBB1_89:                               # %if.end11.i.i92.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 534 11 is_stmt 1      # bzlib.c:534:11
	movq	32(%rbx), %rsi
	.loc	5 534 16 is_stmt 0      # bzlib.c:534:16
	testq	%rsi, %rsi
.Ltmp239:
	.loc	5 534 8                 # bzlib.c:534:8
	je	.LBB1_91
.Ltmp240:
# %bb.90:                               # %if.then13.i.i95.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 534 25                # bzlib.c:534:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp241:
.LBB1_91:                               # %if.end17.i.i98.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 535 11 is_stmt 1      # bzlib.c:535:11
	movq	40(%rbx), %rsi
	.loc	5 535 16 is_stmt 0      # bzlib.c:535:16
	testq	%rsi, %rsi
.Ltmp242:
	.loc	5 535 8                 # bzlib.c:535:8
	je	.LBB1_93
.Ltmp243:
# %bb.92:                               # %if.then19.i.i101.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 535 25                # bzlib.c:535:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp244:
.LBB1_93:                               # %if.end23.i.i104.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 536 4 is_stmt 1       # bzlib.c:536:4
	movq	5064(%r13), %rsi
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp245:
.LBB1_94:                               # %BZ2_bzWriteClose64.exit106.i.thread
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1150 4                # bzlib.c:1150:4
	movq	%r13, %rdi
	callq	free
.Ltmp246:
	#DEBUG_VALUE: compressStream:bzerr <- 0
	.loc	5 0 4 is_stmt 0         # bzlib.c:0:4
	jmp	.LBB1_113
.Ltmp247:
.LBB1_95:                               # %lor.lhs.false66.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 198 23 is_stmt 1      # bzlib.c:198:23
	cmpl	$255, 92(%rbx)
	.loc	5 198 29 is_stmt 0      # bzlib.c:198:29
	ja	.LBB1_97
.Ltmp248:
# %bb.96:                               # %land.lhs.true.i115.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 198 48                # bzlib.c:198:48
	cmpl	$0, 96(%rbx)
.Ltmp249:
	.loc	5 198 8                 # bzlib.c:198:8
	jg	.LBB1_108
.Ltmp250:
.LBB1_97:                               # %lor.lhs.false69.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 516 17 is_stmt 1      # bzlib.c:516:17
	movl	120(%rbx), %eax
.Ltmp251:
	.loc	5 516 31 is_stmt 0      # bzlib.c:516:31
	cmpl	116(%rbx), %eax
.Ltmp252:
	.loc	5 515 14 is_stmt 1      # bzlib.c:515:14
	jl	.LBB1_108
.Ltmp253:
# %bb.98:                               # %if.end75.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 517 18                # bzlib.c:517:18
	movl	$1, 8(%rbx)
	movl	$4, %ebp
	jmp	.LBB1_108
.Ltmp254:
	.p2align	4, 0x90
.LBB1_99:                               # %while.cond.i48.i
                                        #   Parent Loop BB1_57 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB1_103 Depth 3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1115 30               # bzlib.c:1115:30
	movl	$5000, 5048(%r13)       # imm = 0x1388
	.loc	5 1116 29               # bzlib.c:1116:29
	movq	%r14, 5040(%r13)
.Ltmp255:
	#DEBUG_VALUE: BZ2_bzCompress:action <- 2
	.loc	5 469 14                # bzlib.c:469:14
	movq	5064(%r13), %rbx
.Ltmp256:
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: isempty_RL:s <- $rbx
	.loc	5 0 14 is_stmt 0        # bzlib.c:0:14
	movl	$-2, %r12d
.Ltmp257:
	.loc	5 470 10 is_stmt 1      # bzlib.c:470:10
	testq	%rbx, %rbx
.Ltmp258:
	.loc	5 470 8 is_stmt 0       # bzlib.c:470:8
	je	.LBB1_207
.Ltmp259:
# %bb.100:                              # %if.end3.i.i51.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 471 16 is_stmt 1      # bzlib.c:471:16
	cmpq	%rdi, (%rbx)
.Ltmp260:
	.loc	5 471 8 is_stmt 0       # bzlib.c:471:8
	jne	.LBB1_207
.Ltmp261:
# %bb.101:                              # %preswitch.preheader.i.i54.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 474 15 is_stmt 1      # bzlib.c:474:15
	movl	8(%rbx), %eax
	jmp	.LBB1_103
.Ltmp262:
	.p2align	4, 0x90
.LBB1_102:                              # %sw.bb8.i.i55.i
                                        #   in Loop: Header=BB1_103 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	5024(%r13), %eax
	movl	%eax, 16(%rbx)
	movl	$4, 8(%rbx)
	movl	$4, %eax
.Ltmp263:
.LBB1_103:                              # %preswitch.i.i.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_99 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 474 4                 # bzlib.c:474:4
	addl	$-1, %eax
	cmpl	$3, %eax
	ja	.LBB1_112
.Ltmp264:
# %bb.104:                              # %preswitch.i.i.i
                                        #   in Loop: Header=BB1_103 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 4                   # bzlib.c:0:4
	jmpq	*.LJTI1_0(,%rax,8)
.Ltmp265:
.LBB1_105:                              # %sw.bb47.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 511 17 is_stmt 1      # bzlib.c:511:17
	movl	16(%rbx), %eax
	movl	$-1, %r12d
	.loc	5 511 33 is_stmt 0      # bzlib.c:511:33
	cmpl	5024(%r13), %eax
.Ltmp266:
	.loc	5 511 14                # bzlib.c:511:14
	jne	.LBB1_207
.Ltmp267:
# %bb.106:                              # %if.end58.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 513 21 is_stmt 1      # bzlib.c:513:21
	callq	handle_compress
.Ltmp268:
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	.loc	5 514 15                # bzlib.c:514:15
	testb	%al, %al
.Ltmp269:
	.loc	5 514 14 is_stmt 0      # bzlib.c:514:14
	je	.LBB1_207
.Ltmp270:
# %bb.107:                              # %if.end62.i.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:progress <- $al
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 14                  # bzlib.c:0:14
	movl	$3, %ebp
.Ltmp271:
	.loc	5 515 33 is_stmt 1      # bzlib.c:515:33
	cmpl	$0, 16(%rbx)
	.loc	5 515 37 is_stmt 0      # bzlib.c:515:37
	je	.LBB1_95
.Ltmp272:
.LBB1_108:                              # %if.end45.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteClose64:ret <- $ebp
	.loc	5 1121 24 is_stmt 1     # bzlib.c:1121:24
	movl	5048(%r13), %eax
	.loc	5 1121 34 is_stmt 0     # bzlib.c:1121:34
	cmpl	$4999, %eax             # imm = 0x1387
.Ltmp273:
	.loc	5 1121 14               # bzlib.c:1121:14
	ja	.LBB1_111
.Ltmp274:
# %bb.109:                              # %if.then49.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteClose64:ret <- $ebp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1123 18 is_stmt 1     # bzlib.c:1123:18
	movslq	(%r13), %rbx
.Ltmp275:
	#DEBUG_VALUE: spec_fwrite:fd <- undef
	cmpq	$4, %rbx
.Ltmp276:
	#DEBUG_VALUE: spec_fwrite:size <- 1
	.loc	1 263 9                 # spec.c:263:9
	jge	.LBB1_194
.Ltmp277:
# %bb.110:                              # %spec_fwrite.exit.i71.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteClose64:ret <- $ebp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	$5000, %ecx             # imm = 0x1388
	subl	%eax, %ecx
.Ltmp278:
	#DEBUG_VALUE: BZ2_bzWriteClose64:n <- $ecx
	#DEBUG_VALUE: spec_fwrite:num <- $ecx
	#DEBUG_VALUE: BZ2_bzWriteClose64:n2 <- $ecx
	.loc	1 267 26 is_stmt 1      # spec.c:267:26
	shlq	$3, %rbx
	.loc	1 267 42 is_stmt 0      # spec.c:267:42
	movslq	spec_fd+8(%rbx,%rbx,2), %rdi
	.loc	1 267 14                # spec.c:267:14
	addq	spec_fd+16(%rbx,%rbx,2), %rdi
	.loc	1 267 54                # spec.c:267:54
	movslq	%ecx, %r12
	.loc	1 267 5                 # spec.c:267:5
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memcpy
.Ltmp279:
	.loc	1 268 21 is_stmt 1      # spec.c:268:21
	addl	%r12d, spec_fd+4(%rbx,%rbx,2)
	.loc	1 269 21                # spec.c:269:21
	addl	%r12d, spec_fd+8(%rbx,%rbx,2)
.Ltmp280:
.LBB1_111:                              # %if.end65.i.i
                                        #   in Loop: Header=BB1_99 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteClose64:ret <- $ebp
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1129 18               # bzlib.c:1129:18
	cmpl	$4, %ebp
	movq	24(%rsp), %rdi          # 8-byte Reload
.Ltmp281:
	.loc	5 1129 14 is_stmt 0     # bzlib.c:1129:14
	jne	.LBB1_99
	jmp	.LBB1_85
.Ltmp282:
	.p2align	4, 0x90
.LBB1_112:                              # %BZ2_bzWriteClose64.exit106.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1119 15 is_stmt 1     # bzlib.c:1119:15
	movl	$0, 5096(%r13)
.Ltmp283:
	#DEBUG_VALUE: compressStream:bzerr <- 0
.LBB1_113:                              # %if.end62
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: compressStream:ret <- 0
	.loc	1 336 2                 # spec.c:336:2
	movl	spec_fd+28(%rip), %esi
	movl	$.L.str.28, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp284:
	#DEBUG_VALUE: spec_reset:fd <- 0
	.loc	1 244 24                # spec.c:244:24
	movq	spec_fd+16(%rip), %rdi
	.loc	1 244 44 is_stmt 0      # spec.c:244:44
	movslq	spec_fd+4(%rip), %rdx
	.loc	1 244 5                 # spec.c:244:5
	xorl	%esi, %esi
	callq	memset
	.loc	1 245 39 is_stmt 1      # spec.c:245:39
	movq	$0, spec_fd+4(%rip)
.Ltmp285:
	#DEBUG_VALUE: spec_rewind:fd <- 1
	.loc	1 240 21                # spec.c:240:21
	movl	$0, spec_fd+32(%rip)
.Ltmp286:
	.loc	1 352 2                 # spec.c:352:2
	movl	$.Lstr.41, %edi
	callq	puts
.Ltmp287:
	#DEBUG_VALUE: spec_uncompress:lev <- undef
	#DEBUG_VALUE: spec_uncompress:out <- 0
	#DEBUG_VALUE: spec_uncompress:in <- 1
	.loc	1 401 29                # spec.c:401:29
	movl	$0, blockSize100k(%rip)
.Ltmp288:
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- undef
	#DEBUG_VALUE: BZ2_bzReadOpen:small <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:verbosity <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:f <- 1
	#DEBUG_VALUE: BZ2_bzReadOpen:bzerror <- undef
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_deref] undef
	#DEBUG_VALUE: uncompressStream:streamNo <- 0
	#DEBUG_VALUE: uncompressStream:nUnused <- 0
	#DEBUG_VALUE: uncompressStream:bzf <- 0
	#DEBUG_VALUE: uncompressStream:stream <- 0
	#DEBUG_VALUE: uncompressStream:zStream <- 1
	.loc	5 1170 4                # bzlib.c:1170:4
	movl	$0, 12(%rsp)
.Ltmp289:
	.loc	5 1182 10               # bzlib.c:1182:10
	movl	$5104, %edi             # imm = 0x13F0
	callq	malloc
.Ltmp290:
	.loc	5 1183 12               # bzlib.c:1183:12
	testq	%rax, %rax
.Ltmp291:
	.loc	5 1183 8 is_stmt 0      # bzlib.c:1183:8
	je	.LBB1_183
.Ltmp292:
# %bb.114:                              # %if.end39.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	movq	%rax, %r15
.Ltmp293:
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: default_bzalloc:opaque <- [DW_OP_plus_uconst 5088, DW_OP_deref, DW_OP_stack_value] $r15
	.loc	5 1186 4 is_stmt 1      # bzlib.c:1186:4
	movl	$0, 12(%rsp)
.Ltmp294:
	.loc	5 1186 4 is_stmt 0      # bzlib.c:1186:4
	movl	$0, 5096(%rax)
.Ltmp295:
	.loc	5 1188 23 is_stmt 1     # bzlib.c:1188:23
	movb	$0, 5100(%rax)
	.loc	5 1189 23               # bzlib.c:1189:23
	movl	$1, (%rax)
	.loc	5 1190 23               # bzlib.c:1190:23
	movl	$0, 5004(%rax)
	.loc	5 1191 23               # bzlib.c:1191:23
	movb	$0, 5008(%rax)
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- 0
	pxor	%xmm0, %xmm0
	.loc	5 1192 23               # bzlib.c:1192:23
	movdqu	%xmm0, 5080(%rax)
.Ltmp296:
	.loc	5 562 45                # bzlib.c:562:45
	movq	$default_bzalloc, 5072(%rax)
.Ltmp297:
	.loc	5 563 43                # bzlib.c:563:43
	movq	$default_bzfree, 5080(%rax)
.Ltmp298:
	#DEBUG_VALUE: default_bzalloc:size <- 1
	#DEBUG_VALUE: default_bzalloc:items <- 64144
	.loc	5 161 14                # bzlib.c:161:14
	movl	$64144, %edi            # imm = 0xFA90
	callq	malloc
.Ltmp299:
	#DEBUG_VALUE: default_bzalloc:v <- $rax
	#DEBUG_VALUE: BZ2_bzDecompressInit:s <- $rax
	.loc	5 566 10                # bzlib.c:566:10
	testq	%rax, %rax
.Ltmp300:
	.loc	5 566 8 is_stmt 0       # bzlib.c:566:8
	je	.LBB1_184
.Ltmp301:
# %bb.115:                              # %BZ2_bzReadOpen.exit.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompressInit:s <- $rax
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	leaq	5016(%r15), %rcx
.Ltmp302:
	.loc	5 567 29 is_stmt 1      # bzlib.c:567:29
	movq	%rcx, (%rax)
	.loc	5 568 29                # bzlib.c:568:29
	movq	%rax, 5064(%r15)
	.loc	5 569 29                # bzlib.c:569:29
	movl	$10, 8(%rax)
	.loc	5 571 29                # bzlib.c:571:29
	movq	$0, 32(%rax)
	.loc	5 572 29                # bzlib.c:572:29
	movl	$0, 3188(%rax)
	.loc	5 573 29                # bzlib.c:573:29
	movq	$0, 5028(%r15)
	.loc	5 575 29                # bzlib.c:575:29
	movq	$0, 5052(%r15)
	.loc	5 577 29                # bzlib.c:577:29
	movb	$0, 44(%rax)
	.loc	5 581 29                # bzlib.c:581:29
	movq	$0, 48(%rax)
	.loc	5 579 29                # bzlib.c:579:29
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 3152(%rax)
	movq	$0, 3168(%rax)
.Ltmp303:
	#DEBUG_VALUE: BZ2_bzReadOpen:ret <- -3
	.loc	5 1206 23               # bzlib.c:1206:23
	movl	$0, 5024(%r15)
	.loc	5 1207 30               # bzlib.c:1207:30
	movq	%r15, %rax
.Ltmp304:
	addq	$4, %rax
	.loc	5 1207 23 is_stmt 0     # bzlib.c:1207:23
	movq	%rax, 5016(%r15)
	.loc	5 1209 23 is_stmt 1     # bzlib.c:1209:23
	movb	$1, 5100(%r15)
.Ltmp305:
	#DEBUG_VALUE: uncompressStream:bzerr <- 0
	.loc	5 0 23 is_stmt 0        # bzlib.c:0:23
	jmp	.LBB1_118
.Ltmp306:
	.p2align	4, 0x90
.LBB1_116:                              # %if.then12.i.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 562 45 is_stmt 1      # bzlib.c:562:45
	movq	$default_bzalloc, (%rax)
	movl	$default_bzalloc, %ecx
.Ltmp307:
	.loc	5 563 21                # bzlib.c:563:21
	cmpq	$0, 5080(%r15)
.Ltmp308:
	.loc	5 563 8 is_stmt 0       # bzlib.c:563:8
	jne	.LBB1_181
.Ltmp309:
.LBB1_117:                              # %if.then16.i.i29.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 563 43                # bzlib.c:563:43
	movq	$default_bzfree, 5080(%r15)
	jmp	.LBB1_181
.Ltmp310:
	.p2align	4, 0x90
.LBB1_118:                              # %if.end.i28
                                        #   Parent Loop BB1_57 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB1_120 Depth 3
                                        #         Child Loop BB1_124 Depth 4
                                        #       Child Loop BB1_158 Depth 3
                                        #       Child Loop BB1_161 Depth 3
                                        #       Child Loop BB1_163 Depth 3
                                        #       Child Loop BB1_176 Depth 3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:streamNo <- undef
	#DEBUG_VALUE: BZ2_bzReadGetUnused:bzf <- $r15
	#DEBUG_VALUE: BZ2_bzReadGetUnused:b <- $r15
	#DEBUG_VALUE: BZ2_bzRead:bzf <- $r15
	#DEBUG_VALUE: BZ2_bzRead:b <- $r15
	.loc	5 0 43                  # bzlib.c:0:43
	leaq	5016(%r15), %r12
	leaq	4(%r15), %r14
.Ltmp311:
	#DEBUG_VALUE: spec_fread:buf <- $r14
	xorl	%eax, %eax
	jmp	.LBB1_120
.Ltmp312:
	.p2align	4, 0x90
.LBB1_119:                              # %if.then17.i.i36
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1248 9 is_stmt 1      # bzlib.c:1248:9
	movl	$-1, 12(%rsp)
.Ltmp313:
	.loc	5 1248 9 is_stmt 0      # bzlib.c:1248:9
	movl	$-1, 5096(%r15)
	movl	$-1, %eax
.Ltmp314:
.LBB1_120:                              # %while.cond4.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB1_124 Depth 4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 576 7 is_stmt 1       # bzip2.c:576:7
	testl	%eax, %eax
.Ltmp315:
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	jne	.LBB1_146
.Ltmp316:
# %bb.121:                              # %while.body7.i
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_deref] undef
	#DEBUG_VALUE: BZ2_bzRead:len <- 5000
	#DEBUG_VALUE: BZ2_bzRead:bzerror <- undef
	.loc	5 1242 4                # bzlib.c:1242:4
	movl	$0, 12(%rsp)
	testq	%r15, %r15
.Ltmp317:
	.loc	5 1242 4 is_stmt 0      # bzlib.c:1242:4
	je	.LBB1_140
.Ltmp318:
# %bb.122:                              # %if.end3.i.i32
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1242 4                # bzlib.c:1242:4
	movl	$0, 5096(%r15)
.Ltmp319:
	.loc	5 1247 8 is_stmt 1      # bzlib.c:1247:8
	cmpb	$0, 5008(%r15)
.Ltmp320:
	.loc	5 1247 8 is_stmt 0      # bzlib.c:1247:8
	jne	.LBB1_119
.Ltmp321:
# %bb.123:                              # %if.end25.i.i39
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1253 24 is_stmt 1     # bzlib.c:1253:24
	movl	$5000, 5048(%r15)       # imm = 0x1388
.Ltmp322:
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	.loc	5 1254 23               # bzlib.c:1254:23
	leaq	5072(%rsp), %rax
	movq	%rax, 5040(%r15)
.Ltmp323:
	.p2align	4, 0x90
.LBB1_124:                              # %while.cond.i.i40
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        #       Parent Loop BB1_120 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1261 30               # bzlib.c:1261:30
	cmpl	$0, 5024(%r15)
	.loc	5 1261 35 is_stmt 0     # bzlib.c:1261:35
	jne	.LBB1_131
.Ltmp324:
# %bb.125:                              # %land.lhs.true.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1261 51               # bzlib.c:1261:51
	movslq	(%r15), %rdx
.Ltmp325:
	#DEBUG_VALUE: myfeof:f <- undef
	#DEBUG_VALUE: spec_getc:fd <- undef
	cmpq	$4, %rdx
.Ltmp326:
	#DEBUG_VALUE: spec_getc:rc <- 0
	.loc	1 209 9 is_stmt 1       # spec.c:209:9
	jge	.LBB1_195
.Ltmp327:
# %bb.126:                              # %if.end4.i.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 213 21                # spec.c:213:21
	leaq	(,%rdx,8), %rcx
	movslq	spec_fd+8(%rcx,%rcx,2), %rax
	.loc	1 213 25 is_stmt 0      # spec.c:213:25
	cmpl	spec_fd+4(%rcx,%rcx,2), %eax
.Ltmp328:
	.loc	1 213 9                 # spec.c:213:9
	jge	.LBB1_131
.Ltmp329:
# %bb.127:                              # %spec_getc.exit.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 9                   # spec.c:0:9
	leaq	(%rcx,%rcx,2), %rcx
	addq	$spec_fd+8, %rcx
	.loc	1 217 22 is_stmt 1      # spec.c:217:22
	leaq	(%rdx,%rdx,2), %rsi
	movq	spec_fd+16(,%rsi,8), %rsi
	.loc	1 217 41 is_stmt 0      # spec.c:217:41
	leal	1(%rax), %edi
	movl	%edi, (%rcx)
	.loc	1 217 10                # spec.c:217:10
	movzbl	(%rsi,%rax), %edi
.Ltmp330:
	.loc	5 974 4 is_stmt 1       # bzlib.c:974:4
	movl	%edx, %esi
	callq	spec_ungetc
.Ltmp331:
	.loc	5 1262 14               # bzlib.c:1262:14
	movslq	(%r15), %rdx
.Ltmp332:
	#DEBUG_VALUE: spec_fread:fd <- undef
	cmpq	$4, %rdx
.Ltmp333:
	#DEBUG_VALUE: spec_fread:rc <- 0
	#DEBUG_VALUE: spec_fread:num <- 5000
	#DEBUG_VALUE: spec_fread:size <- 1
	.loc	1 188 9                 # spec.c:188:9
	jge	.LBB1_200
.Ltmp334:
# %bb.128:                              # %if.end4.i9.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 192 21                # spec.c:192:21
	leaq	(,%rdx,8), %rax
	movslq	spec_fd+8(%rax,%rax,2), %rsi
	.loc	1 192 40 is_stmt 0      # spec.c:192:40
	movl	spec_fd+4(%rax,%rax,2), %ebp
	movl	$-1, %ebx
	.loc	1 192 25                # spec.c:192:25
	cmpl	%esi, %ebp
.Ltmp335:
	.loc	1 192 9                 # spec.c:192:9
	jle	.LBB1_130
.Ltmp336:
# %bb.129:                              # %if.end13.i11.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 9                   # spec.c:0:9
	leaq	(%rax,%rax,2), %r13
	addq	$spec_fd+8, %r13
.Ltmp337:
	.loc	1 197 24 is_stmt 1      # spec.c:197:24
	movl	%ebp, %ebx
	subl	%esi, %ebx
.Ltmp338:
	.loc	1 196 25                # spec.c:196:25
	leal	5000(%rsi), %eax
	.loc	1 196 38 is_stmt 0      # spec.c:196:38
	cmpl	%ebp, %eax
.Ltmp339:
	.loc	1 196 9                 # spec.c:196:9
	cmovlel	%eax, %ebp
	movl	$5000, %eax             # imm = 0x1388
	cmovll	%eax, %ebx
.Ltmp340:
	#DEBUG_VALUE: spec_fread:rc <- $ebx
	.loc	1 201 31 is_stmt 1      # spec.c:201:31
	leaq	(%rdx,%rdx,2), %rax
	.loc	1 201 19 is_stmt 0      # spec.c:201:19
	addq	spec_fd+16(,%rax,8), %rsi
	.loc	1 201 54                # spec.c:201:54
	movslq	%ebx, %rdx
	.loc	1 201 5                 # spec.c:201:5
	movq	%r14, %rdi
	callq	memcpy
	.loc	1 202 21 is_stmt 1      # spec.c:202:21
	movl	%ebp, (%r13)
.Ltmp341:
.LBB1_130:                              # %spec_fread.exit.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:n <- $ebx
	.loc	5 1266 20               # bzlib.c:1266:20
	movl	%ebx, 5004(%r15)
	.loc	5 1267 29               # bzlib.c:1267:29
	movl	%ebx, 5024(%r15)
	.loc	5 1268 28               # bzlib.c:1268:28
	movq	%r14, 5016(%r15)
.Ltmp342:
	.p2align	4, 0x90
.LBB1_131:                              # %if.end50.i.i51
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1271 13               # bzlib.c:1271:13
	movq	%r12, %rdi
	callq	BZ2_bzDecompress
.Ltmp343:
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	.loc	5 1273 24               # bzlib.c:1273:24
	movl	%eax, %ecx
	orl	$4, %ecx
	cmpl	$4, %ecx
	jne	.LBB1_141
.Ltmp344:
# %bb.132:                              # %if.end64.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1276 24               # bzlib.c:1276:24
	testl	%eax, %eax
	je	.LBB1_134
.Ltmp345:
# %bb.133:                              # %if.end64.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	cmpl	$4, %eax
	jne	.LBB1_138
	jmp	.LBB1_142
.Ltmp346:
	.p2align	4, 0x90
.LBB1_134:                              # %land.lhs.true66.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1276 39 is_stmt 0     # bzlib.c:1276:39
	movslq	(%r15), %rdx
.Ltmp347:
	#DEBUG_VALUE: myfeof:f <- undef
	#DEBUG_VALUE: spec_getc:fd <- undef
	cmpq	$4, %rdx
.Ltmp348:
	#DEBUG_VALUE: spec_getc:rc <- 0
	.loc	1 209 9 is_stmt 1       # spec.c:209:9
	jge	.LBB1_195
.Ltmp349:
# %bb.135:                              # %if.end4.i21.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 213 21                # spec.c:213:21
	leaq	(,%rdx,8), %rcx
	movslq	spec_fd+8(%rcx,%rcx,2), %rax
.Ltmp350:
	.loc	1 213 25 is_stmt 0      # spec.c:213:25
	cmpl	spec_fd+4(%rcx,%rcx,2), %eax
.Ltmp351:
	.loc	1 213 9                 # spec.c:213:9
	jge	.LBB1_137
.Ltmp352:
# %bb.136:                              # %spec_getc.exit30.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 9                   # spec.c:0:9
	leaq	(%rcx,%rcx,2), %rcx
	addq	$spec_fd+8, %rcx
	.loc	1 217 22 is_stmt 1      # spec.c:217:22
	leaq	(%rdx,%rdx,2), %rsi
	movq	spec_fd+16(,%rsi,8), %rsi
	.loc	1 217 41 is_stmt 0      # spec.c:217:41
	leal	1(%rax), %edi
	movl	%edi, (%rcx)
	.loc	1 217 10                # spec.c:217:10
	movzbl	(%rsi,%rax), %edi
.Ltmp353:
	.loc	5 974 4 is_stmt 1       # bzlib.c:974:4
	movl	%edx, %esi
	callq	spec_ungetc
.Ltmp354:
	.loc	5 1283 31               # bzlib.c:1283:31
	cmpl	$0, 5048(%r15)
.Ltmp355:
	.loc	5 1283 11 is_stmt 0     # bzlib.c:1283:11
	jne	.LBB1_124
	jmp	.LBB1_139
.Ltmp356:
	.p2align	4, 0x90
.LBB1_137:                              # %land.lhs.true70.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1277 30 is_stmt 1     # bzlib.c:1277:30
	cmpl	$0, 5024(%r15)
	.loc	5 1277 35 is_stmt 0     # bzlib.c:1277:35
	je	.LBB1_144
.Ltmp357:
.LBB1_138:                              # %if.end105.i.i
                                        #   in Loop: Header=BB1_124 Depth=4
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1283 31 is_stmt 1     # bzlib.c:1283:31
	cmpl	$0, 5048(%r15)
.Ltmp358:
	.loc	5 1283 11 is_stmt 0     # bzlib.c:1283:11
	jne	.LBB1_124
.Ltmp359:
.LBB1_139:                              # %if.end13.i55.thread
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1284 12 is_stmt 1     # bzlib.c:1284:12
	movl	$0, 12(%rsp)
.Ltmp360:
	.loc	5 1284 12 is_stmt 0     # bzlib.c:1284:12
	movl	$0, 5096(%r15)
.Ltmp361:
	#DEBUG_VALUE: uncompressStream:nread <- 0
	.loc	5 0 12                  # bzlib.c:0:12
	movl	$5000, %ecx             # imm = 0x1388
	jmp	.LBB1_143
.Ltmp362:
	.p2align	4, 0x90
.LBB1_140:                              # %if.then8.i.i33
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1245 9 is_stmt 1      # bzlib.c:1245:9
	movl	$-2, 12(%rsp)
	movl	$-2, %eax
	jmp	.LBB1_120
.Ltmp363:
.LBB1_141:                              # %BZ2_bzRead.exit.i
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1274 12               # bzlib.c:1274:12
	movl	%eax, 12(%rsp)
.Ltmp364:
	.loc	5 1274 12 is_stmt 0     # bzlib.c:1274:12
	movl	%eax, 5096(%r15)
.Ltmp365:
	#DEBUG_VALUE: uncompressStream:nread <- 0
	.loc	4 578 20 is_stmt 1      # bzip2.c:578:20
	cmpl	$-5, %eax
.Ltmp366:
	.loc	4 578 14 is_stmt 0      # bzip2.c:578:14
	jne	.LBB1_120
	jmp	.LBB1_186
.Ltmp367:
.LBB1_142:                              # %if.end13.i55
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:ret <- $eax
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1281 12 is_stmt 1     # bzlib.c:1281:12
	movl	$4, 12(%rsp)
.Ltmp368:
	.loc	5 1281 12 is_stmt 0     # bzlib.c:1281:12
	movl	$4, 5096(%r15)
.Ltmp369:
	.loc	5 1282 23 is_stmt 1     # bzlib.c:1282:23
	movl	$5000, %ecx             # imm = 0x1388
	subl	5048(%r15), %ecx
	#DEBUG_VALUE: uncompressStream:nread <- 0
	movl	$4, %eax
.Ltmp370:
	.loc	4 579 66                # bzip2.c:579:66
	testl	%ecx, %ecx
	.loc	4 579 30 is_stmt 0      # bzip2.c:579:30
	jle	.LBB1_120
.Ltmp371:
.LBB1_143:                              # %if.then21.i
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: spec_fwrite:size <- 1
	#DEBUG_VALUE: spec_fwrite:num <- 0
	#DEBUG_VALUE: spec_fwrite:fd <- 0
	.loc	1 267 42 is_stmt 1      # spec.c:267:42
	movslq	spec_fd+8(%rip), %rdi
	.loc	1 267 14 is_stmt 0      # spec.c:267:14
	addq	spec_fd+16(%rip), %rdi
	.loc	1 267 54                # spec.c:267:54
	movslq	%ecx, %rbx
.Ltmp372:
	#DEBUG_VALUE: spec_fwrite:buf <- [DW_OP_plus_uconst 5072] $rsp
	.loc	1 267 5                 # spec.c:267:5
	leaq	5072(%rsp), %rsi
	movq	%rbx, %rdx
	callq	memcpy
	.loc	1 268 21 is_stmt 1      # spec.c:268:21
	addl	%ebx, spec_fd+4(%rip)
	.loc	1 269 21                # spec.c:269:21
	addl	%ebx, spec_fd+8(%rip)
.Ltmp373:
	.loc	4 576 14                # bzip2.c:576:14
	movl	12(%rsp), %eax
	jmp	.LBB1_120
.Ltmp374:
.LBB1_144:                              # %land.lhs.true75.i.i
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1277 58               # bzlib.c:1277:58
	cmpl	$0, 5048(%r15)
.Ltmp375:
	.loc	5 1276 11               # bzlib.c:1276:11
	je	.LBB1_139
.Ltmp376:
# %bb.145:                              # %if.then80.i.i
                                        #   in Loop: Header=BB1_120 Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1278 12               # bzlib.c:1278:12
	movl	$-7, 12(%rsp)
.Ltmp377:
	.loc	5 1278 12 is_stmt 0     # bzlib.c:1278:12
	movl	$-7, 5096(%r15)
	movl	$-7, %eax
	jmp	.LBB1_120
.Ltmp378:
	.p2align	4, 0x90
.LBB1_146:                              # %while.cond4.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 576 7 is_stmt 1       # bzip2.c:576:7
	cmpl	$4, %eax
	jne	.LBB1_186
.Ltmp379:
# %bb.147:                              # %if.end28.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- [DW_OP_deref] undef
	#DEBUG_VALUE: BZ2_bzReadGetUnused:unused <- undef
	.loc	5 1300 12               # bzlib.c:1300:12
	testq	%r15, %r15
.Ltmp380:
	.loc	5 1300 8 is_stmt 0      # bzlib.c:1300:8
	je	.LBB1_235
.Ltmp381:
# %bb.148:                              # %if.end6.i.i58
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1302 21 is_stmt 1     # bzlib.c:1302:21
	cmpl	$4, 5096(%r15)
.Ltmp382:
	.loc	5 1302 8 is_stmt 0      # bzlib.c:1302:8
	jne	.LBB1_236
.Ltmp383:
# %bb.149:                              # %BZ2_bzReadGetUnused.exit.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1307 4 is_stmt 1      # bzlib.c:1307:4
	movl	$0, 12(%rsp)
.Ltmp384:
	.loc	5 1307 4 is_stmt 0      # bzlib.c:1307:4
	movl	$0, 5096(%r15)
.Ltmp385:
	.loc	5 1308 25 is_stmt 1     # bzlib.c:1308:25
	movslq	5024(%r15), %rbx
.Ltmp386:
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	testq	%rbx, %rbx
.Ltmp387:
	#DEBUG_VALUE: uncompressStream:i <- 0
	#DEBUG_VALUE: uncompressStream:bzerr <- 0
	.loc	4 589 7                 # bzip2.c:589:7
	jle	.LBB1_164
.Ltmp388:
# %bb.150:                              # %for.body.preheader.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 7 is_stmt 0         # bzip2.c:0:7
	movq	5016(%r15), %rax
.Ltmp389:
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	.loc	4 589 49                # bzip2.c:589:49
	cmpl	$32, %ebx
	jae	.LBB1_152
.Ltmp390:
# %bb.151:                              #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 49                  # bzip2.c:0:49
	xorl	%ecx, %ecx
	jmp	.LBB1_163
.Ltmp391:
.LBB1_152:                              # %vector.memcheck.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	leaq	(%rax,%rbx), %rcx
.Ltmp392:
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 64] $rsp
	leaq	64(%rsp), %rdx
	cmpq	%rcx, %rdx
	jae	.LBB1_155
.Ltmp393:
# %bb.153:                              # %vector.memcheck.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 49                  # bzip2.c:0:49
	leaq	(%rsp,%rbx), %rcx
	addq	$64, %rcx
	.loc	4 589 49                # bzip2.c:589:49
	cmpq	%rcx, %rax
	jae	.LBB1_155
.Ltmp394:
# %bb.154:                              #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 49                  # bzip2.c:0:49
	xorl	%ecx, %ecx
	jmp	.LBB1_163
.Ltmp395:
.LBB1_155:                              # %vector.ph.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	movq	%rbx, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	addq	$1, %rsi
	movl	%esi, %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	.LBB1_157
.Ltmp396:
# %bb.156:                              #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 49                  # bzip2.c:0:49
	xorl	%esi, %esi
	.loc	4 589 33                # bzip2.c:589:33
	testq	%rdx, %rdx
	jne	.LBB1_160
	jmp	.LBB1_162
.Ltmp397:
.LBB1_157:                              # %vector.ph.new.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	movl	$1, %edi
	subq	%rsi, %rdi
	addq	%rdx, %rdi
	addq	$-1, %rdi
	.loc	4 589 33                # bzip2.c:589:33
	xorl	%esi, %esi
.Ltmp398:
	.p2align	4, 0x90
.LBB1_158:                              # %vector.body.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	movups	(%rax,%rsi), %xmm0
	movups	16(%rax,%rsi), %xmm1
	.loc	4 589 47                # bzip2.c:589:47
	movaps	%xmm0, 64(%rsp,%rsi)
	movaps	%xmm1, 80(%rsp,%rsi)
	.loc	4 589 49                # bzip2.c:589:49
	movups	32(%rax,%rsi), %xmm0
	movups	48(%rax,%rsi), %xmm1
	.loc	4 589 47                # bzip2.c:589:47
	movaps	%xmm0, 96(%rsp,%rsi)
	movaps	%xmm1, 112(%rsp,%rsi)
	.loc	4 589 49                # bzip2.c:589:49
	movups	64(%rax,%rsi), %xmm0
	movups	80(%rax,%rsi), %xmm1
	.loc	4 589 47                # bzip2.c:589:47
	movaps	%xmm0, 128(%rsp,%rsi)
	movaps	%xmm1, 144(%rsp,%rsi)
	.loc	4 589 49                # bzip2.c:589:49
	movdqu	96(%rax,%rsi), %xmm0
	movdqu	112(%rax,%rsi), %xmm1
	.loc	4 589 47                # bzip2.c:589:47
	movdqa	%xmm0, 160(%rsp,%rsi)
	movdqa	%xmm1, 176(%rsp,%rsi)
	.loc	4 589 33                # bzip2.c:589:33
	subq	$-128, %rsi
	addq	$4, %rdi
	jne	.LBB1_158
.Ltmp399:
# %bb.159:                              # %middle.block.unr-lcssa.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	testq	%rdx, %rdx
	je	.LBB1_162
.Ltmp400:
.LBB1_160:                              # %vector.body.epil.i.preheader
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	leaq	80(%rsp), %rdi
	leaq	(%rdi,%rsi), %rdi
	addq	%rax, %rsi
	addq	$16, %rsi
	shlq	$5, %rdx
	.loc	4 589 33                # bzip2.c:589:33
	xorl	%ebp, %ebp
.Ltmp401:
	.p2align	4, 0x90
.LBB1_161:                              # %vector.body.epil.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 589 49                # bzip2.c:589:49
	movdqu	-16(%rsi,%rbp), %xmm0
	movdqu	(%rsi,%rbp), %xmm1
	.loc	4 589 47                # bzip2.c:589:47
	movdqa	%xmm0, -16(%rdi,%rbp)
	movdqa	%xmm1, (%rdi,%rbp)
	.loc	4 589 33                # bzip2.c:589:33
	addq	$32, %rbp
	cmpq	%rbp, %rdx
	jne	.LBB1_161
.Ltmp402:
.LBB1_162:                              # %middle.block.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 33                  # bzip2.c:0:33
	cmpq	%rbx, %rcx
	.loc	4 589 49                # bzip2.c:589:49
	je	.LBB1_164
.Ltmp403:
	.p2align	4, 0x90
.LBB1_163:                              # %for.body.i70
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:unusedTmpV <- $rax
	#DEBUG_VALUE: uncompressStream:unusedTmp <- $rax
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:i <- $rcx
	movzbl	(%rax,%rcx), %edx
	.loc	4 589 47                # bzip2.c:589:47
	movb	%dl, 64(%rsp,%rcx)
.Ltmp404:
	#DEBUG_VALUE: uncompressStream:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	4 589 33                # bzip2.c:589:33
	addq	$1, %rcx
	.loc	4 589 21                # bzip2.c:589:21
	cmpq	%rbx, %rcx
.Ltmp405:
	.loc	4 589 7                 # bzip2.c:589:7
	jl	.LBB1_163
.Ltmp406:
.LBB1_164:                              # %for.end.i71
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	4 591 7 is_stmt 1       # bzip2.c:591:7
	leaq	12(%rsp), %rdi
	movq	%r15, %rsi
	callq	BZ2_bzReadClose
.Ltmp407:
	#DEBUG_VALUE: uncompressStream:bzerr <- undef
	.loc	4 592 17                # bzip2.c:592:17
	cmpl	$0, 12(%rsp)
.Ltmp408:
	.loc	4 592 11 is_stmt 0      # bzip2.c:592:11
	jne	.LBB1_237
.Ltmp409:
# %bb.165:                              # %if.end41.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 594 19 is_stmt 1      # bzip2.c:594:19
	testl	%ebx, %ebx
	.loc	4 594 24 is_stmt 0      # bzip2.c:594:24
	je	.LBB1_167
.Ltmp410:
# %bb.166:                              # %if.end48.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_deref] undef
	#DEBUG_VALUE: uncompressStream:streamNo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_bzReadOpen:f <- 1
	#DEBUG_VALUE: BZ2_bzReadOpen:verbosity <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:small <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:bzerror <- undef
	.loc	5 1170 4 is_stmt 1      # bzlib.c:1170:4
	movl	$0, 12(%rsp)
.Ltmp411:
	.loc	5 1176 40               # bzlib.c:1176:40
	cmpl	$5001, %ebx             # imm = 0x1389
	.loc	5 1176 24 is_stmt 0     # bzlib.c:1176:24
	jb	.LBB1_171
	jmp	.LBB1_56
.Ltmp412:
.LBB1_167:                              # %land.lhs.true44.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: myfeof:f <- 1
	#DEBUG_VALUE: spec_getc:fd <- 1
	#DEBUG_VALUE: spec_getc:rc <- 0
	.loc	1 213 21 is_stmt 1      # spec.c:213:21
	movl	spec_fd+32(%rip), %eax
	.loc	1 213 25 is_stmt 0      # spec.c:213:25
	cmpl	spec_fd+28(%rip), %eax
.Ltmp413:
	.loc	1 213 9                 # spec.c:213:9
	jge	.LBB1_187
.Ltmp414:
# %bb.168:                              # %spec_getc.exit.i79
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 217 22 is_stmt 1      # spec.c:217:22
	movq	spec_fd+40(%rip), %rcx
	.loc	1 217 41 is_stmt 0      # spec.c:217:41
	leal	1(%rax), %edx
	movl	%edx, spec_fd+32(%rip)
.Ltmp415:
	#DEBUG_VALUE: spec_ungetc:rc <- 0
	#DEBUG_VALUE: spec_ungetc:fd <- 1
	.loc	1 228 25 is_stmt 1      # spec.c:228:25
	testl	%eax, %eax
.Ltmp416:
	.loc	1 228 9 is_stmt 0       # spec.c:228:9
	js	.LBB1_196
.Ltmp417:
# %bb.169:                              # %if.end11.i.i88
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:nUnused <- $ebx
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 0                   # spec.c:0:0
	movslq	%eax, %rdx
	.loc	1 217 10 is_stmt 1      # spec.c:217:10
	movb	(%rcx,%rdx), %bl
.Ltmp418:
	#DEBUG_VALUE: spec_ungetc:ch <- $bl
	.loc	1 232 25                # spec.c:232:25
	movl	%eax, spec_fd+32(%rip)
	.loc	1 232 44 is_stmt 0      # spec.c:232:44
	cmpb	%bl, (%rcx,%rdx)
.Ltmp419:
	.loc	1 232 9                 # spec.c:232:9
	jne	.LBB1_197
.Ltmp420:
# %bb.170:                              # %if.end48.i.thread
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_deref] undef
	#DEBUG_VALUE: uncompressStream:streamNo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_bzReadOpen:f <- 1
	#DEBUG_VALUE: BZ2_bzReadOpen:verbosity <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:small <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- 0
	#DEBUG_VALUE: BZ2_bzReadOpen:bzerror <- undef
	.loc	5 1170 4 is_stmt 1      # bzlib.c:1170:4
	movl	$0, 12(%rsp)
	xorl	%ebx, %ebx
.Ltmp421:
.LBB1_171:                              # %if.end29.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1182 10               # bzlib.c:1182:10
	movl	$5104, %edi             # imm = 0x13F0
	callq	malloc
.Ltmp422:
	.loc	5 1183 12               # bzlib.c:1183:12
	testq	%rax, %rax
.Ltmp423:
	.loc	5 1183 8 is_stmt 0      # bzlib.c:1183:8
	je	.LBB1_183
.Ltmp424:
# %bb.172:                              # %if.end39.i19.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	movq	%rax, %r15
.Ltmp425:
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	.loc	5 1186 4 is_stmt 1      # bzlib.c:1186:4
	movl	$0, 12(%rsp)
.Ltmp426:
	.loc	5 1186 4 is_stmt 0      # bzlib.c:1186:4
	movl	$0, 5096(%rax)
.Ltmp427:
	.loc	5 1188 23 is_stmt 1     # bzlib.c:1188:23
	movb	$0, 5100(%rax)
	.loc	5 1189 23               # bzlib.c:1189:23
	movl	$1, (%rax)
	.loc	5 1190 23               # bzlib.c:1190:23
	movl	$0, 5004(%rax)
	.loc	5 1191 23               # bzlib.c:1191:23
	movb	$0, 5008(%rax)
	.loc	5 1192 14               # bzlib.c:1192:14
	leaq	5072(%rax), %rax
	pxor	%xmm0, %xmm0
	.loc	5 1192 23 is_stmt 0     # bzlib.c:1192:23
	movdqu	%xmm0, 5072(%r15)
	movq	$0, 5088(%r15)
	.loc	5 1196 19 is_stmt 1     # bzlib.c:1196:19
	testl	%ebx, %ebx
	.loc	5 1196 4 is_stmt 0      # bzlib.c:1196:4
	jle	.LBB1_116
.Ltmp428:
# %bb.173:                              # %while.body.lr.ph.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 64] $rsp
	cmpl	$1, %ebx
	jne	.LBB1_175
.Ltmp429:
# %bb.174:                              #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 64] $rsp
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 4                   # bzlib.c:0:4
	leaq	64(%rsp), %rcx
	xorl	%esi, %esi
	jmp	.LBB1_178
.Ltmp430:
.LBB1_175:                              # %while.body.lr.ph.new.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 64] $rsp
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1196 4                # bzlib.c:1196:4
	movl	%ebx, %edx
	andl	$1, %edx
	movl	%edx, %edi
	subl	%ebx, %edi
	xorl	%esi, %esi
	leaq	64(%rsp), %rcx
.Ltmp431:
	.p2align	4, 0x90
.LBB1_176:                              # %while.body.i.i
                                        #   Parent Loop BB1_57 Depth=1
                                        #     Parent Loop BB1_118 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 64] $rsp
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- undef
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- $rcx
	.loc	5 1197 29 is_stmt 1     # bzlib.c:1197:29
	movzbl	(%rcx), %ebx
	.loc	5 1197 7 is_stmt 0      # bzlib.c:1197:7
	movslq	%esi, %rsi
	.loc	5 1197 27               # bzlib.c:1197:27
	movb	%bl, 4(%r15,%rsi)
	.loc	5 1197 59               # bzlib.c:1197:59
	movslq	5004(%r15), %rsi
	leal	1(%rsi), %ebp
	movl	%ebp, 5004(%r15)
.Ltmp432:
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	5 1197 29               # bzlib.c:1197:29
	movzbl	1(%rcx), %ebx
	.loc	5 1197 27               # bzlib.c:1197:27
	movb	%bl, 5(%r15,%rsi)
	.loc	5 1197 59               # bzlib.c:1197:59
	movslq	5004(%r15), %rsi
	addq	$1, %rsi
	movl	%esi, 5004(%r15)
	.loc	5 1198 28 is_stmt 1     # bzlib.c:1198:28
	addq	$2, %rcx
.Ltmp433:
	#DEBUG_VALUE: BZ2_bzReadOpen:nUnused <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- $rcx
	.loc	5 1196 4                # bzlib.c:1196:4
	addl	$2, %edi
	jne	.LBB1_176
.Ltmp434:
# %bb.177:                              # %if.end10.i.unr-lcssa.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:unused <- $rcx
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	testl	%edx, %edx
	je	.LBB1_179
.Ltmp435:
.LBB1_178:                              # %while.body.epil.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1197 29               # bzlib.c:1197:29
	movb	(%rcx), %cl
	.loc	5 1197 27 is_stmt 0     # bzlib.c:1197:27
	movb	%cl, 4(%r15,%rsi)
	.loc	5 1197 59               # bzlib.c:1197:59
	addl	$1, 5004(%r15)
.Ltmp436:
.LBB1_179:                              # %if.end10.i.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 562 14 is_stmt 1      # bzlib.c:562:14
	movq	(%rax), %rcx
.Ltmp437:
	#DEBUG_VALUE: BZ2_bzDecompressInit:small <- 0
	#DEBUG_VALUE: BZ2_bzDecompressInit:verbosity <- 0
	.loc	5 562 22 is_stmt 0      # bzlib.c:562:22
	testq	%rcx, %rcx
.Ltmp438:
	.loc	5 562 8                 # bzlib.c:562:8
	je	.LBB1_116
.Ltmp439:
# %bb.180:                              # %if.end14.i.i.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 563 21 is_stmt 1      # bzlib.c:563:21
	cmpq	$0, 5080(%r15)
.Ltmp440:
	.loc	5 563 8 is_stmt 0       # bzlib.c:563:8
	je	.LBB1_117
.Ltmp441:
.LBB1_181:                              # %if.end18.i.i32.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 565 8 is_stmt 1       # bzlib.c:565:8
	movq	5088(%r15), %rdi
	movl	$64144, %esi            # imm = 0xFA90
	movl	$1, %edx
	callq	*%rcx
.Ltmp442:
	#DEBUG_VALUE: BZ2_bzDecompressInit:s <- $rax
	.loc	5 566 10                # bzlib.c:566:10
	testq	%rax, %rax
.Ltmp443:
	.loc	5 566 8 is_stmt 0       # bzlib.c:566:8
	je	.LBB1_184
.Ltmp444:
# %bb.182:                              # %BZ2_bzReadOpen.exit51.i
                                        #   in Loop: Header=BB1_118 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompressInit:s <- $rax
	#DEBUG_VALUE: BZ2_bzReadOpen:bzf <- $r15
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 0 0                   # bzlib.c:0:0
	leaq	5016(%r15), %rcx
.Ltmp445:
	#DEBUG_VALUE: BZ2_bzDecompressInit:strm <- $rcx
	.loc	5 567 29 is_stmt 1      # bzlib.c:567:29
	movq	%rcx, (%rax)
	.loc	5 568 29                # bzlib.c:568:29
	movq	%rax, 5064(%r15)
	.loc	5 569 29                # bzlib.c:569:29
	movl	$10, 8(%rax)
	.loc	5 571 29                # bzlib.c:571:29
	movq	$0, 32(%rax)
	.loc	5 572 29                # bzlib.c:572:29
	movl	$0, 3188(%rax)
	.loc	5 573 29                # bzlib.c:573:29
	movq	$0, 5028(%r15)
	.loc	5 575 29                # bzlib.c:575:29
	movq	$0, 5052(%r15)
	.loc	5 577 29                # bzlib.c:577:29
	movb	$0, 44(%rax)
	.loc	5 581 29                # bzlib.c:581:29
	movq	$0, 48(%rax)
	pxor	%xmm0, %xmm0
	.loc	5 579 29                # bzlib.c:579:29
	movdqu	%xmm0, 3152(%rax)
	movq	$0, 3168(%rax)
.Ltmp446:
	#DEBUG_VALUE: BZ2_bzReadOpen:ret <- -3
	.loc	5 1206 30               # bzlib.c:1206:30
	movl	5004(%r15), %eax
.Ltmp447:
	.loc	5 1206 23 is_stmt 0     # bzlib.c:1206:23
	movl	%eax, 5024(%r15)
	.loc	5 1207 30 is_stmt 1     # bzlib.c:1207:30
	movq	%r15, %rax
	addq	$4, %rax
	.loc	5 1207 23 is_stmt 0     # bzlib.c:1207:23
	movq	%rax, 5016(%r15)
	.loc	5 1209 23 is_stmt 1     # bzlib.c:1209:23
	movb	$1, 5100(%r15)
.Ltmp448:
	#DEBUG_VALUE: uncompressStream:bzerr <- undef
	.loc	4 573 32                # bzip2.c:573:32
	cmpl	$0, 12(%rsp)
	.loc	4 573 23 is_stmt 0      # bzip2.c:573:23
	je	.LBB1_118
	jmp	.LBB1_186
.Ltmp449:
	.p2align	4, 0x90
.LBB1_183:                              # %if.then31.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 0                   # bzip2.c:0:0
	movl	$-3, 12(%rsp)
	jmp	.LBB1_185
.Ltmp450:
	.p2align	4, 0x90
.LBB1_184:                              # %if.then55.i.i
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzReadOpen:ret <- -3
	movl	$-3, 12(%rsp)
	movq	%r15, %rdi
	callq	free
.Ltmp451:
.LBB1_185:                              # %errhandler.i95
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	xorl	%r15d, %r15d
.Ltmp452:
.LBB1_186:                              # %errhandler.i95
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	.loc	4 632 4 is_stmt 1       # bzip2.c:632:4
	leaq	60(%rsp), %rdi
	movq	%r15, %rsi
	callq	BZ2_bzReadClose
	.loc	4 633 12                # bzip2.c:633:12
	movl	12(%rsp), %eax
.Ltmp453:
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	.loc	4 633 4 is_stmt 0       # bzip2.c:633:4
	cmpl	$-5, %eax
	jne	.LBB1_203
.Ltmp454:
.LBB1_187:                              # %if.end68
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 355 2 is_stmt 1       # spec.c:355:2
	movl	spec_fd+4(%rip), %esi
	movl	$.L.str.30, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp455:
	#DEBUG_VALUE: main:i <- 0
	.loc	1 0 2 is_stmt 0         # spec.c:0:2
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp456:
	.loc	1 144 20 is_stmt 1      # spec.c:144:20
	testl	%esi, %esi
	movq	48(%rsp), %rbp          # 8-byte Reload
.Ltmp457:
	.loc	1 367 2                 # spec.c:367:2
	jle	.LBB1_191
.Ltmp458:
# %bb.188:                              # %for.body74.lr.ph
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 2 is_stmt 0         # spec.c:0:2
	movq	spec_fd+16(%rip), %rax
	movq	32(%rsp), %rcx          # 8-byte Reload
	xorl	%edx, %edx
.Ltmp459:
	.p2align	4, 0x90
.LBB1_189:                              # %for.body74
                                        #   Parent Loop BB1_57 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: main:i <- undef
	.loc	1 368 10 is_stmt 1      # spec.c:368:10
	movzbl	(%rcx), %ebx
	.loc	1 368 31 is_stmt 0      # spec.c:368:31
	movl	%edx, %edi
.Ltmp460:
	#DEBUG_VALUE: main:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 368 28                # spec.c:368:28
	cmpb	(%rax,%rdi), %bl
.Ltmp461:
	.loc	1 368 10                # spec.c:368:10
	jne	.LBB1_199
.Ltmp462:
# %bb.190:                              # %for.cond69
                                        #   in Loop: Header=BB1_189 Depth=2
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: main:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	1 367 30 is_stmt 1      # spec.c:367:30
	addq	$1027, %rdx             # imm = 0x403
	addq	$1, %rcx
	cmpq	%rbp, %rdx
.Ltmp463:
	.loc	1 367 2 is_stmt 0       # spec.c:367:2
	jl	.LBB1_189
.Ltmp464:
.LBB1_191:                              # %if.end95
                                        #   in Loop: Header=BB1_57 Depth=1
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 374 2 is_stmt 1       # spec.c:374:2
	movl	$.Lstr.40, %edi
	callq	puts
.Ltmp465:
	#DEBUG_VALUE: spec_reset:fd <- 1
	.loc	1 244 24                # spec.c:244:24
	movq	spec_fd+40(%rip), %rdi
	.loc	1 244 44 is_stmt 0      # spec.c:244:44
	movslq	spec_fd+28(%rip), %rdx
	.loc	1 244 5                 # spec.c:244:5
	xorl	%esi, %esi
	callq	memset
	.loc	1 245 39 is_stmt 1      # spec.c:245:39
	movq	$0, spec_fd+28(%rip)
.Ltmp466:
	#DEBUG_VALUE: spec_rewind:fd <- 0
	.loc	1 240 21                # spec.c:240:21
	movl	$0, spec_fd+8(%rip)
	movl	44(%rsp), %ebp          # 4-byte Reload
.Ltmp467:
	.loc	1 329 37                # spec.c:329:37
	addl	$2, %ebp
.Ltmp468:
	#DEBUG_VALUE: main:level <- $ebp
	.loc	1 329 25 is_stmt 0      # spec.c:329:25
	cmpl	$10, %ebp
.Ltmp469:
	.loc	1 329 5                 # spec.c:329:5
	jb	.LBB1_57
.Ltmp470:
# %bb.192:                              # %for.end99
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 378 5 is_stmt 1       # spec.c:378:5
	movl	$.L.str.33, %edi
	movq	16(%rsp), %rsi          # 8-byte Reload
                                        # kill: def $esi killed $esi killed $rsi
	xorl	%eax, %eax
	callq	printf
	.loc	1 380 5                 # spec.c:380:5
	xorl	%eax, %eax
	addq	$10072, %rsp            # imm = 0x2758
.Ltmp471:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp472:
	.cfi_def_cfa_offset 8
	retq
.LBB1_193:
	.cfi_def_cfa_offset 10128
.Ltmp473:
	#DEBUG_VALUE: main:input_size <- $ecx
	#DEBUG_VALUE: main:argc <- $ebx
	#DEBUG_VALUE: main:input_name <- $r14
	#DEBUG_VALUE: main:argv <- $rbp
	.loc	1 0 0 is_stmt 0         # spec.c:0:0
	movl	%ecx, %eax
	jmp	.LBB1_4
.Ltmp474:
.LBB1_194:                              # %if.then2.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movq	stderr(%rip), %rdi
	movl	$.L.str.21, %esi
	movl	%ebx, %edx
	jmp	.LBB1_202
.Ltmp475:
.LBB1_195:                              # %if.then2.i.i.i43
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movq	stderr(%rip), %rdi
	movl	$.L.str.9, %esi
	jmp	.LBB1_201
.Ltmp476:
.LBB1_196:                              # %if.then6.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movq	stderr(%rip), %rdi
	movl	$.L.str.16, %esi
	jmp	.LBB1_202
.Ltmp477:
.LBB1_197:                              # %if.then22.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movq	stderr(%rip), %rcx
	movl	$.L.str.17, %edi
	movl	$71, %esi
	movl	$1, %edx
	callq	fwrite
	xorl	%edi, %edi
	callq	exit
.Ltmp478:
.LBB1_198:                              # %errhandler.i.thread140
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	movl	$-1, 5096(%r13)
	movl	$-1, %r12d
	jmp	.LBB1_209
.Ltmp479:
.LBB1_199:                              # %if.then84
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 369 3 is_stmt 1       # spec.c:369:3
	movl	$.L.str.31, %edi
                                        # kill: def $esi killed $esi killed $rsi
	xorl	%eax, %eax
	callq	printf
	.loc	1 370 3                 # spec.c:370:3
	xorl	%edi, %edi
	callq	exit
.Ltmp480:
.LBB1_200:                              # %if.then2.i4.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 189 10                # spec.c:189:10
	movq	stderr(%rip), %rdi
	.loc	1 189 2 is_stmt 0       # spec.c:189:2
	movl	$.L.str.13, %esi
.Ltmp481:
.LBB1_201:                              # %if.then2.i.i.i43
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzRead:buf <- [DW_OP_plus_uconst 5072] $rsp
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
                                        # kill: def $edx killed $edx killed $rdx
.LBB1_202:                              # %if.then2.i.i.i43
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 0                   # spec.c:0:0
	xorl	%eax, %eax
	callq	fprintf
	xorl	%edi, %edi
	callq	exit
.Ltmp482:
.LBB1_203:                              # %errhandler.i95
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	addl	$9, %eax
.Ltmp483:
	cmpl	$6, %eax
	ja	.LBB1_234
.Ltmp484:
# %bb.204:                              # %errhandler.i95
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	jmpq	*.LJTI1_1(,%rax,8)
.Ltmp485:
.LBB1_205:                              # %sw.bb93.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 644 10 is_stmt 1      # bzip2.c:644:10
	callq	compressedStreamEOF
.Ltmp486:
.LBB1_206:                              # %BZ2_bzWriteClose64.exit106.i.thread853.loopexit
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompress:s <- $rbx
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 10 is_stmt 0        # bzip2.c:0:10
	movl	$-1, %r12d
.Ltmp487:
.LBB1_207:                              # %BZ2_bzWriteClose64.exit106.i.thread853
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzerr <- 0
	.loc	5 1119 15 is_stmt 1     # bzlib.c:1119:15
	movl	%r12d, 5096(%r13)
.Ltmp488:
.LBB1_208:                              # %if.end6.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	.loc	5 1103 9                # bzlib.c:1103:9
	cmpb	$0, 5008(%r13)
.Ltmp489:
	.loc	5 1103 8 is_stmt 0      # bzlib.c:1103:8
	jne	.LBB1_210
.Ltmp490:
.LBB1_209:                              # %if.then7.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1104 9 is_stmt 1      # bzlib.c:1104:9
	movl	$-1, 5096(%r13)
.Ltmp491:
	.loc	4 524 4                 # bzip2.c:524:4
	cmpl	$-3, %r12d
	jne	.LBB1_220
	jmp	.LBB1_232
.Ltmp492:
.LBB1_210:                              # %if.end15.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1148 4                # bzlib.c:1148:4
	movl	$0, 5096(%r13)
.Ltmp493:
	.loc	5 529 14                # bzlib.c:529:14
	movq	5064(%r13), %rbx
.Ltmp494:
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	.loc	5 530 10                # bzlib.c:530:10
	testq	%rbx, %rbx
.Ltmp495:
	.loc	5 530 8 is_stmt 0       # bzlib.c:530:8
	je	.LBB1_219
.Ltmp496:
# %bb.211:                              # %if.end3.i163.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	5 0 8                   # bzlib.c:0:8
	movq	24(%rsp), %rax          # 8-byte Reload
.Ltmp497:
	.loc	5 531 16 is_stmt 1      # bzlib.c:531:16
	cmpq	%rax, (%rbx)
.Ltmp498:
	.loc	5 531 8 is_stmt 0       # bzlib.c:531:8
	jne	.LBB1_219
.Ltmp499:
# %bb.212:                              # %if.end7.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 533 11 is_stmt 1      # bzlib.c:533:11
	movq	24(%rbx), %rsi
	.loc	5 533 16 is_stmt 0      # bzlib.c:533:16
	testq	%rsi, %rsi
.Ltmp500:
	.loc	5 533 8                 # bzlib.c:533:8
	je	.LBB1_214
.Ltmp501:
# %bb.213:                              # %if.then9.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 533 25                # bzlib.c:533:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp502:
.LBB1_214:                              # %if.end11.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 534 11 is_stmt 1      # bzlib.c:534:11
	movq	32(%rbx), %rsi
	.loc	5 534 16 is_stmt 0      # bzlib.c:534:16
	testq	%rsi, %rsi
.Ltmp503:
	.loc	5 534 8                 # bzlib.c:534:8
	je	.LBB1_216
.Ltmp504:
# %bb.215:                              # %if.then13.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 534 25                # bzlib.c:534:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp505:
.LBB1_216:                              # %if.end17.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 535 11 is_stmt 1      # bzlib.c:535:11
	movq	40(%rbx), %rsi
	.loc	5 535 16 is_stmt 0      # bzlib.c:535:16
	testq	%rsi, %rsi
.Ltmp506:
	.loc	5 535 8                 # bzlib.c:535:8
	je	.LBB1_218
.Ltmp507:
# %bb.217:                              # %if.then19.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 535 25                # bzlib.c:535:25
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp508:
.LBB1_218:                              # %if.end23.i.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressEnd:s <- $rbx
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 536 4 is_stmt 1       # bzlib.c:536:4
	movq	5064(%r13), %rsi
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp509:
.LBB1_219:                              # %BZ2_bzCompressEnd.exit.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzerr <- $r12d
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1150 4                # bzlib.c:1150:4
	movq	%r13, %rdi
	callq	free
.Ltmp510:
	.loc	4 524 4                 # bzip2.c:524:4
	cmpl	$-3, %r12d
	je	.LBB1_232
.Ltmp511:
.LBB1_220:                              # %BZ2_bzWriteClose64.exit.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	cmpl	$-6, %r12d
	je	.LBB1_223
.Ltmp512:
# %bb.221:                              # %BZ2_bzWriteClose64.exit.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	cmpl	$-9, %r12d
	jne	.LBB1_224
.Ltmp513:
.LBB1_222:                              # %sw.bb.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 0 is_stmt 0         # spec.c:0:0
	callq	configError
.Ltmp514:
.LBB1_223:                              # %errhandler_io.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	callq	ioError
.Ltmp515:
.LBB1_224:                              # %sw.default.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 533 10 is_stmt 1      # bzip2.c:533:10
	movl	$.L.str.3.14, %edi
	callq	panic
.Ltmp516:
.LBB1_225:                              # %if.then59.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 239 28                # bzlib.c:239:28
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp517:
.LBB1_226:                              # %if.end63.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 240 14                # bzlib.c:240:14
	movq	32(%rbx), %rsi
	.loc	5 240 19 is_stmt 0      # bzlib.c:240:19
	testq	%rsi, %rsi
.Ltmp518:
	.loc	5 240 11                # bzlib.c:240:11
	je	.LBB1_228
.Ltmp519:
# %bb.227:                              # %if.then67.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 240 28                # bzlib.c:240:28
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp520:
.LBB1_228:                              # %if.end71.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 241 14 is_stmt 1      # bzlib.c:241:14
	movq	40(%rbx), %rsi
	.loc	5 241 19 is_stmt 0      # bzlib.c:241:19
	testq	%rsi, %rsi
.Ltmp521:
	.loc	5 241 11                # bzlib.c:241:11
	je	.LBB1_230
.Ltmp522:
# %bb.229:                              # %if.then75.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 241 28                # bzlib.c:241:28
	movq	5088(%r13), %rdi
	callq	*5080(%r13)
.Ltmp523:
.LBB1_230:                              # %if.then82.i.i.i
	#DEBUG_VALUE: BZ2_bzCompressInit:strm <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzCompressInit:s <- $rbx
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: BZ2_bzCompressInit:blockSize100k <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 242 28 is_stmt 1      # bzlib.c:242:28
	movq	5088(%r13), %rdi
	movq	%rbx, %rsi
	callq	*5080(%r13)
.Ltmp524:
.LBB1_231:                              # %if.then50.i.i
	#DEBUG_VALUE: BZ2_bzWriteOpen:bzf <- $r13
	#DEBUG_VALUE: compressStream:bzf <- $r13
	#DEBUG_VALUE: BZ2_bzWriteOpen:blockSize100k <- $ebp
	#DEBUG_VALUE: spec_compress:lev <- $ebp
	#DEBUG_VALUE: main:level <- $ebp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzWriteOpen:ret <- 0
	.loc	5 1022 25               # bzlib.c:1022:25
	movq	%r13, %rdi
	callq	free
.Ltmp525:
.LBB1_232:                              # %sw.bb49.i
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 0 0 is_stmt 0         # spec.c:0:0
	callq	outOfMemory
.Ltmp526:
.LBB1_233:                              # %sw.bb91.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 640 10 is_stmt 1      # bzip2.c:640:10
	callq	crcError
.Ltmp527:
.LBB1_234:                              # %sw.default.i98
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr_dummy <- [DW_OP_plus_uconst 60, DW_OP_deref] $rsp
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 663 10                # bzip2.c:663:10
	movl	$.L.str.8.26, %edi
	callq	panic
.Ltmp528:
.LBB1_235:                              # %if.then.i.i57
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	5 1301 9                # bzlib.c:1301:9
	movl	$-2, 12(%rsp)
.Ltmp529:
	.loc	4 0 0 is_stmt 0         # bzip2.c:0:0
	movl	$.L.str.5.23, %edi
	callq	panic
.Ltmp530:
.LBB1_236:                              # %if.then9.i.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- $eax
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzerr <- [DW_OP_deref] undef
	#DEBUG_VALUE: BZ2_bzReadGetUnused:bzerror <- undef
	.loc	5 1303 9 is_stmt 1      # bzlib.c:1303:9
	movl	$-1, 12(%rsp)
.Ltmp531:
	.loc	5 1303 9 is_stmt 0      # bzlib.c:1303:9
	movl	$-1, 5096(%r15)
.Ltmp532:
.LBB1_237:                              # %if.then31.i
	#DEBUG_VALUE: main:level <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: uncompressStream:bzf <- $r15
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	4 0 0                   # bzip2.c:0:0
	movl	$.L.str.5.23, %edi
	callq	panic
.Ltmp533:
.LBB1_238:                              # %if.then16.i6
	#DEBUG_VALUE: spec_load:rc <- $eax
	#DEBUG_VALUE: spec_load:i <- $ebx
	#DEBUG_VALUE: spec_load:fd <- $ebp
	.loc	1 148 14 is_stmt 1      # spec.c:148:14
	movq	stderr(%rip), %rbx
.Ltmp534:
	.loc	1 148 72 is_stmt 0      # spec.c:148:72
	callq	__errno_location
.Ltmp535:
	movl	(%rax), %edi
	.loc	1 148 63                # spec.c:148:63
	callq	strerror
	.loc	1 148 6                 # spec.c:148:6
	movl	$.L.str.6, %esi
.Ltmp536:
.LBB1_239:                              # %if.then.i
	.loc	1 0 0                   # spec.c:0:0
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movq	%rax, %rcx
	xorl	%eax, %eax
	callq	fprintf
	xorl	%edi, %edi
	callq	exit
.Ltmp537:
.LBB1_240:                              # %if.then16.i
	#DEBUG_VALUE: limit <- $ebx
	.loc	1 93 6 is_stmt 1        # spec.c:93:6
	movl	$.Lstr, %edi
	jmp	.LBB1_243
.Ltmp538:
.LBB1_241:                              # %if.then.i
	.loc	1 140 10                # spec.c:140:10
	movq	stderr(%rip), %rbx
	.loc	1 140 65 is_stmt 0      # spec.c:140:65
	callq	__errno_location
	movl	(%rax), %edi
	.loc	1 140 56                # spec.c:140:56
	callq	strerror
	.loc	1 140 2                 # spec.c:140:2
	movl	$.L.str.5, %esi
	jmp	.LBB1_239
.Ltmp539:
.LBB1_242:                              # %if.then28
	#DEBUG_VALUE: main:validate_array <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	1 312 2 is_stmt 1       # spec.c:312:2
	movl	$.Lstr.42, %edi
.Ltmp540:
.LBB1_243:                              # %if.then16.i
	.loc	1 0 0 is_stmt 0         # spec.c:0:0
	callq	puts
	xorl	%edi, %edi
	callq	exit
.Ltmp541:
.Lfunc_end1:
	.size	main, .Lfunc_end1-main
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI1_0:
	.quad	.LBB1_206
	.quad	.LBB1_102
	.quad	.LBB1_206
	.quad	.LBB1_105
.LJTI1_1:
	.quad	.LBB1_222
	.quad	.LBB1_234
	.quad	.LBB1_205
	.quad	.LBB1_223
	.quad	.LBB1_234
	.quad	.LBB1_233
	.quad	.LBB1_232
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function fallbackSort
	.type	fallbackSort,@function
fallbackSort:                           # @fallbackSort
.Lfunc_begin2:
	.loc	3 264 0 is_stmt 1       # blocksort.c:264:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$3016, %rsp             # imm = 0xBC8
	.cfi_def_cfa_offset 3072
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: fallbackSort:fmap <- $rdi
	#DEBUG_VALUE: fallbackSort:eclass <- $rsi
	#DEBUG_VALUE: fallbackSort:bhtab <- $rdx
	#DEBUG_VALUE: fallbackSort:nblock <- $ecx
	#DEBUG_VALUE: fallbackSort:verb <- $r8d
.Ltmp542:
	#DEBUG_VALUE: fallbackSort:eclass8 <- $rsi
	#DEBUG_VALUE: fallbackQSort3:fmap <- $rdi
	#DEBUG_VALUE: fallbackQSort3:eclass <- $rsi
	#DEBUG_VALUE: fallbackSimpleSort:fmap <- $rdi
	#DEBUG_VALUE: fallbackSimpleSort:eclass <- $rsi
	movl	%r8d, %r12d
                                        # kill: def $ecx killed $ecx def $rcx
.Ltmp543:
	movq	%rdx, %r13
	movq	%rsi, 8(%rsp)           # 8-byte Spill
.Ltmp544:
	#DEBUG_VALUE: fallbackSimpleSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rdi, %r14
.Ltmp545:
	#DEBUG_VALUE: fallbackSimpleSort:fmap <- $r14
	#DEBUG_VALUE: fallbackQSort3:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:nblock <- $ecx
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	.loc	3 276 13 prologue_end   # blocksort.c:276:13
	cmpl	$4, %r8d
	movq	%rcx, 16(%rsp)          # 8-byte Spill
.Ltmp546:
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	.loc	3 276 8 is_stmt 0       # blocksort.c:276:8
	jge	.LBB2_150
.Ltmp547:
.LBB2_1:                                # %if.end
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%ecx, %eax
.Ltmp548:
	#DEBUG_VALUE: fallbackSort:i <- 0
	movq	%rax, 24(%rsp)          # 8-byte Spill
	leaq	144(%rsp), %rdi
	xorl	%r15d, %r15d
.Ltmp549:
	.loc	3 278 41 is_stmt 1      # blocksort.c:278:41
	movl	$1028, %edx             # imm = 0x404
	xorl	%esi, %esi
	callq	memset
.Ltmp550:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 18                # blocksort.c:279:18
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp551:
	.loc	3 279 4 is_stmt 0       # blocksort.c:279:4
	jle	.LBB2_10
.Ltmp552:
# %bb.2:                                # %for.body4.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 4                   # blocksort.c:0:4
	movq	24(%rsp), %rdx          # 8-byte Reload
.Ltmp553:
	.loc	3 279 38                # blocksort.c:279:38
	leaq	-1(%rdx), %rcx
	movl	%edx, %eax
	andl	$3, %eax
	cmpq	$3, %rcx
	jae	.LBB2_4
.Ltmp554:
# %bb.3:
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 38                  # blocksort.c:0:38
	xorl	%ecx, %ecx
	movq	8(%rsp), %rdi           # 8-byte Reload
	.loc	3 279 4                 # blocksort.c:279:4
	testq	%rax, %rax
	jne	.LBB2_7
	jmp	.LBB2_9
.Ltmp555:
.LBB2_4:                                # %for.body4.preheader.new
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 279 38                # blocksort.c:279:38
	subq	%rax, %rdx
	xorl	%ecx, %ecx
	movq	8(%rsp), %rdi           # 8-byte Reload
.Ltmp556:
	.p2align	4, 0x90
.LBB2_5:                                # %for.body4
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	movzbl	(%rdi,%rcx), %esi
	.loc	3 279 49                # blocksort.c:279:49
	addl	$1, 144(%rsp,%rsi,4)
.Ltmp557:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 38                # blocksort.c:279:38
	movzbl	1(%rdi,%rcx), %esi
	.loc	3 279 49                # blocksort.c:279:49
	addl	$1, 144(%rsp,%rsi,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 38                # blocksort.c:279:38
	movzbl	2(%rdi,%rcx), %esi
	.loc	3 279 49                # blocksort.c:279:49
	addl	$1, 144(%rsp,%rsi,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 38                # blocksort.c:279:38
	movzbl	3(%rdi,%rcx), %esi
	.loc	3 279 49                # blocksort.c:279:49
	addl	$1, 144(%rsp,%rsi,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 29                # blocksort.c:279:29
	addq	$4, %rcx
.Ltmp558:
	.loc	3 279 4                 # blocksort.c:279:4
	cmpq	%rcx, %rdx
	jne	.LBB2_5
.Ltmp559:
# %bb.6:                                # %for.cond13.preheader.loopexit.unr-lcssa
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	testq	%rax, %rax
	je	.LBB2_9
.Ltmp560:
.LBB2_7:                                # %for.body4.epil.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 279 38                # blocksort.c:279:38
	addq	%rdi, %rcx
	xorl	%edx, %edx
.Ltmp561:
	.p2align	4, 0x90
.LBB2_8:                                # %for.body4.epil
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- undef
	movzbl	(%rcx,%rdx), %esi
	.loc	3 279 49                # blocksort.c:279:49
	addl	$1, 144(%rsp,%rsi,4)
.Ltmp562:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 279 4                 # blocksort.c:279:4
	addq	$1, %rdx
	cmpq	%rdx, %rax
	jne	.LBB2_8
.Ltmp563:
.LBB2_9:                                # %for.cond13.preheader.loopexit
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 281 44 is_stmt 1      # blocksort.c:281:44
	movl	144(%rsp), %r15d
.Ltmp564:
.LBB2_10:                               # %for.cond13.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- 0
	.loc	3 0 44 is_stmt 0        # blocksort.c:0:44
	leaq	1984(%rsp), %rdi
	leaq	144(%rsp), %rsi
.Ltmp565:
	.loc	3 280 45 is_stmt 1      # blocksort.c:280:45
	movl	$1024, %edx             # imm = 0x400
	callq	memcpy
	xorl	%eax, %eax
.Ltmp566:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: fallbackSort:i <- undef
	.p2align	4, 0x90
.LBB2_11:                               # %for.body25
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- undef
	.loc	3 281 41                # blocksort.c:281:41
	addl	148(%rsp,%rax,4), %r15d
	movl	%r15d, 148(%rsp,%rax,4)
.Ltmp567:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	152(%rsp,%rax,4), %r15d
	movl	%r15d, 152(%rsp,%rax,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	156(%rsp,%rax,4), %r15d
	movl	%r15d, 156(%rsp,%rax,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	160(%rsp,%rax,4), %r15d
	movl	%r15d, 160(%rsp,%rax,4)
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 281 18 is_stmt 0      # blocksort.c:281:18
	addq	$4, %rax
	cmpq	$256, %rax              # imm = 0x100
.Ltmp568:
	.loc	3 281 4                 # blocksort.c:281:4
	jne	.LBB2_11
.Ltmp569:
# %bb.12:                               # %for.cond33.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- 0
	.loc	3 0 4                   # blocksort.c:0:4
	movq	16(%rsp), %r10          # 8-byte Reload
.Ltmp570:
	.loc	3 279 18 is_stmt 1      # blocksort.c:279:18
	testl	%r10d, %r10d
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp571:
	.loc	3 283 4                 # blocksort.c:283:4
	jle	.LBB2_19
.Ltmp572:
# %bb.13:                               # %for.body35.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 284 11                # blocksort.c:284:11
	movl	%r9d, %ecx
	andl	$1, %ecx
	cmpl	$1, %r10d
	jne	.LBB2_15
.Ltmp573:
# %bb.14:
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 11 is_stmt 0        # blocksort.c:0:11
	xorl	%eax, %eax
.Ltmp574:
	#DEBUG_VALUE: fallbackSort:i <- $rax
	.loc	3 283 4 is_stmt 1       # blocksort.c:283:4
	testq	%rcx, %rcx
	jne	.LBB2_18
	jmp	.LBB2_19
.Ltmp575:
.LBB2_15:                               # %for.body35.preheader.new
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 284 11                # blocksort.c:284:11
	movq	%r9, %rdx
	subq	%rcx, %rdx
	xorl	%eax, %eax
.Ltmp576:
	.p2align	4, 0x90
.LBB2_16:                               # %for.body35
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rax
	movzbl	(%r15,%rax), %esi
.Ltmp577:
	#DEBUG_VALUE: fallbackSort:j <- $rsi
	.loc	3 285 11                # blocksort.c:285:11
	movslq	144(%rsp,%rsi,4), %rdi
	.loc	3 285 19 is_stmt 0      # blocksort.c:285:19
	leaq	-1(%rdi), %rbp
.Ltmp578:
	#DEBUG_VALUE: fallbackSort:k <- $ebp
	.loc	3 286 15 is_stmt 1      # blocksort.c:286:15
	movl	%ebp, 144(%rsp,%rsi,4)
	.loc	3 287 15                # blocksort.c:287:15
	movl	%eax, -4(%r14,%rdi,4)
.Ltmp579:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 284 11                # blocksort.c:284:11
	movzbl	1(%r15,%rax), %esi
.Ltmp580:
	#DEBUG_VALUE: fallbackSort:j <- $rsi
	.loc	3 285 11                # blocksort.c:285:11
	movslq	144(%rsp,%rsi,4), %rdi
	.loc	3 285 19 is_stmt 0      # blocksort.c:285:19
	leaq	-1(%rdi), %rbp
.Ltmp581:
	#DEBUG_VALUE: fallbackSort:k <- $ebp
	.loc	3 286 15 is_stmt 1      # blocksort.c:286:15
	movl	%ebp, 144(%rsp,%rsi,4)
	.loc	3 287 15                # blocksort.c:287:15
	leal	1(%rax), %esi
.Ltmp582:
	movl	%esi, -4(%r14,%rdi,4)
.Ltmp583:
	.loc	3 283 29                # blocksort.c:283:29
	addq	$2, %rax
.Ltmp584:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 283 4 is_stmt 0       # blocksort.c:283:4
	cmpq	%rax, %rdx
	jne	.LBB2_16
.Ltmp585:
# %bb.17:                               # %for.end47.loopexit.unr-lcssa
	#DEBUG_VALUE: fallbackSort:k <- $ebp
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rax
	testq	%rcx, %rcx
	je	.LBB2_19
.Ltmp586:
.LBB2_18:                               # %for.body35.epil
	#DEBUG_VALUE: fallbackSort:i <- $rax
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 284 11 is_stmt 1      # blocksort.c:284:11
	movzbl	(%r15,%rax), %ecx
.Ltmp587:
	#DEBUG_VALUE: fallbackSort:j <- $rcx
	.loc	3 285 11                # blocksort.c:285:11
	movslq	144(%rsp,%rcx,4), %rdx
	.loc	3 285 19 is_stmt 0      # blocksort.c:285:19
	leaq	-1(%rdx), %rsi
.Ltmp588:
	#DEBUG_VALUE: fallbackSort:k <- $esi
	.loc	3 286 15 is_stmt 1      # blocksort.c:286:15
	movl	%esi, 144(%rsp,%rcx,4)
	.loc	3 287 15                # blocksort.c:287:15
	movl	%eax, -4(%r14,%rdx,4)
.Ltmp589:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB2_19:                               # %for.end47
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 290 25                # blocksort.c:290:25
	movl	%r10d, %eax
	sarl	$31, %eax
	shrl	$27, %eax
	addl	%r10d, %eax
	sarl	$5, %eax
.Ltmp590:
	#DEBUG_VALUE: fallbackSort:nBhtab <- $eax
	#DEBUG_VALUE: fallbackSort:i <- 0
	.loc	3 291 18                # blocksort.c:291:18
	addl	$2, %eax
.Ltmp591:
	.loc	3 291 4 is_stmt 0       # blocksort.c:291:4
	jle	.LBB2_21
.Ltmp592:
# %bb.20:                               # %for.body52.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 291 33                # blocksort.c:291:33
	movl	%eax, %edx
	shlq	$2, %rdx
	.loc	3 291 42                # blocksort.c:291:42
	movq	%r13, %rdi
	xorl	%esi, %esi
	callq	memset
	movq	16(%rsp), %r10          # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp593:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: fallbackSort:i <- undef
.LBB2_21:                               # %for.body61.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 42                  # blocksort.c:0:42
	xorl	%eax, %eax
.Ltmp594:
	.p2align	4, 0x90
.LBB2_22:                               # %for.body61
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rax
	.loc	3 292 30 is_stmt 1      # blocksort.c:292:30
	movl	144(%rsp,%rax,4), %ecx
	movl	$1, %edx
	shll	%cl, %edx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	orl	%edx, (%r13,%rcx,4)
.Ltmp595:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	movl	148(%rsp,%rax,4), %ecx
	movl	$1, %edx
	shll	%cl, %edx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	orl	%edx, (%r13,%rcx,4)
	.loc	3 292 26 is_stmt 0      # blocksort.c:292:26
	addq	$2, %rax
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 292 18                # blocksort.c:292:18
	cmpq	$256, %rax              # imm = 0x100
.Ltmp596:
	.loc	3 292 4                 # blocksort.c:292:4
	jne	.LBB2_22
.Ltmp597:
# %bb.23:                               # %for.body74.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 302 7 is_stmt 1       # blocksort.c:302:7
	leal	1(%r10), %eax
	xorl	%edx, %edx
.Ltmp598:
	.p2align	4, 0x90
.LBB2_24:                               # %for.body74
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- undef
	leal	(%r10,%rdx), %ecx
	movl	$1, %esi
	shll	%cl, %esi
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	orl	%esi, (%r13,%rcx,4)
	.loc	3 303 7                 # blocksort.c:303:7
	leal	(%rax,%rdx), %ecx
	movl	$-2, %esi
	roll	%cl, %esi
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	andl	%esi, (%r13,%rcx,4)
.Ltmp599:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 301 18                # blocksort.c:301:18
	addl	$2, %edx
	cmpl	$64, %edx
.Ltmp600:
	.loc	3 301 4 is_stmt 0       # blocksort.c:301:4
	jne	.LBB2_24
.Ltmp601:
# %bb.25:                               # %while.cond.preheader
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 310 11 is_stmt 1      # blocksort.c:310:11
	leaq	4(%r14), %rax
	movq	%rax, 120(%rsp)         # 8-byte Spill
	leaq	8(%r14), %rax
	movq	%rax, 136(%rsp)         # 8-byte Spill
	leaq	16(%r14), %rax
	movq	%rax, 112(%rsp)         # 8-byte Spill
	leaq	20(%r14), %rax
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movl	$1, %r8d
	movl	%r12d, 100(%rsp)        # 4-byte Spill
.Ltmp602:
	.p2align	4, 0x90
.LBB2_26:                               # %while.cond
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_29 Depth 2
                                        #     Child Loop BB2_114 Depth 2
                                        #       Child Loop BB2_115 Depth 3
                                        #       Child Loop BB2_118 Depth 3
                                        #       Child Loop BB2_119 Depth 3
                                        #       Child Loop BB2_122 Depth 3
                                        #       Child Loop BB2_126 Depth 3
                                        #       Child Loop BB2_127 Depth 3
                                        #       Child Loop BB2_33 Depth 3
                                        #         Child Loop BB2_34 Depth 4
                                        #           Child Loop BB2_40 Depth 5
                                        #             Child Loop BB2_43 Depth 6
                                        #           Child Loop BB2_48 Depth 5
                                        #             Child Loop BB2_50 Depth 6
                                        #         Child Loop BB2_70 Depth 4
                                        #           Child Loop BB2_72 Depth 5
                                        #             Child Loop BB2_73 Depth 6
                                        #         Child Loop BB2_63 Depth 4
                                        #           Child Loop BB2_64 Depth 5
                                        #         Child Loop BB2_87 Depth 4
                                        #         Child Loop BB2_91 Depth 4
                                        #         Child Loop BB2_99 Depth 4
                                        #         Child Loop BB2_103 Depth 4
                                        #       Child Loop BB2_111 Depth 3
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	.loc	3 276 13                # blocksort.c:276:13
	cmpl	$4, %r12d
.Ltmp603:
	.loc	3 310 11                # blocksort.c:310:11
	jge	.LBB2_132
.Ltmp604:
# %bb.27:                               # %if.end103
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- 0
	#DEBUG_VALUE: fallbackSort:j <- 0
	.loc	3 279 18                # blocksort.c:279:18
	testl	%r10d, %r10d
.Ltmp605:
	.loc	3 314 7                 # blocksort.c:314:7
	jle	.LBB2_30
.Ltmp606:
.LBB2_28:                               # %for.body107.preheader
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	xorl	%eax, %eax
	xorl	%ecx, %ecx
.Ltmp607:
	.p2align	4, 0x90
.LBB2_29:                               # %for.body107
                                        #   Parent Loop BB2_26 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rax
	#DEBUG_VALUE: fallbackSort:j <- $ecx
	.loc	3 315 14 is_stmt 1      # blocksort.c:315:14
	movq	%rax, %rdx
	shrq	$3, %rdx
	andl	$536870908, %edx        # imm = 0x1FFFFFFC
	movl	(%r13,%rdx), %edx
	btl	%eax, %edx
.Ltmp608:
	.loc	3 315 14 is_stmt 0      # blocksort.c:315:14
	cmovbl	%eax, %ecx
.Ltmp609:
	#DEBUG_VALUE: fallbackSort:j <- $ecx
	.loc	3 316 14 is_stmt 1      # blocksort.c:316:14
	movl	(%r14,%rax,4), %edx
	.loc	3 316 22 is_stmt 0      # blocksort.c:316:22
	subl	%r8d, %edx
.Ltmp610:
	#DEBUG_VALUE: fallbackSort:k <- $edx
	.loc	3 316 31                # blocksort.c:316:31
	movl	%edx, %esi
	sarl	$31, %esi
	andl	%r9d, %esi
	addl	%edx, %esi
.Ltmp611:
	#DEBUG_VALUE: fallbackSort:k <- $esi
	.loc	3 317 10 is_stmt 1      # blocksort.c:317:10
	movslq	%esi, %rdx
	.loc	3 317 20 is_stmt 0      # blocksort.c:317:20
	movl	%ecx, (%r15,%rdx,4)
.Ltmp612:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 314 32 is_stmt 1      # blocksort.c:314:32
	addq	$1, %rax
	.loc	3 314 21 is_stmt 0      # blocksort.c:314:21
	cmpq	%rax, %r9
.Ltmp613:
	.loc	3 314 7                 # blocksort.c:314:7
	jne	.LBB2_29
.Ltmp614:
.LBB2_30:                               # %while.cond129.preheader
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 7                   # blocksort.c:0:7
	xorl	%eax, %eax
	movq	%rax, 80(%rsp)          # 8-byte Spill
	movl	$-1, %r11d
.Ltmp615:
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	jmp	.LBB2_114
.Ltmp616:
	.p2align	4, 0x90
.LBB2_31:                               # %if.end226
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leal	-1(%rdx), %r11d
.Ltmp617:
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	.loc	3 342 16 is_stmt 1      # blocksort.c:342:16
	cmpl	%eax, %edx
.Ltmp618:
	.loc	3 342 14 is_stmt 0      # blocksort.c:342:14
	jle	.LBB2_114
.Ltmp619:
# %bb.32:                               # %if.then229
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 14                  # blocksort.c:0:14
	movl	%r8d, 108(%rsp)         # 4-byte Spill
	.loc	3 331 16 is_stmt 1      # blocksort.c:331:16
	leal	-1(%rax), %edi
.Ltmp620:
	#DEBUG_VALUE: fallbackSort:i <- $edi
	.loc	3 0 16 is_stmt 0        # blocksort.c:0:16
	movl	$1, 4(%rsp)             # 4-byte Folded Spill
	movl	$1, %ecx
	subl	%eax, %ecx
	movq	80(%rsp), %rsi          # 8-byte Reload
.Ltmp621:
	.loc	3 343 28 is_stmt 1      # blocksort.c:343:28
	addl	%ecx, %esi
	.loc	3 343 22 is_stmt 0      # blocksort.c:343:22
	leal	(%r11,%rsi), %esi
	addl	$1, %esi
.Ltmp622:
	#DEBUG_VALUE: fallbackSort:nNotDone <- $esi
	.loc	3 0 22                  # blocksort.c:0:22
	movq	%rsi, 80(%rsp)          # 8-byte Spill
	movl	%edi, 104(%rsp)         # 4-byte Spill
.Ltmp623:
	#DEBUG_VALUE: fallbackQSort3:sp <- 0
	#DEBUG_VALUE: fallbackQSort3:r <- 0
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	.loc	3 154 4 is_stmt 1       # blocksort.c:154:4
	movl	%edi, 1584(%rsp)
	movl	%r11d, 1184(%rsp)
.Ltmp624:
	#DEBUG_VALUE: fallbackQSort3:sp <- 1
	.loc	3 0 4 is_stmt 0         # blocksort.c:0:4
	movl	$0, 68(%rsp)            # 4-byte Folded Spill
	movq	%r11, 88(%rsp)          # 8-byte Spill
	jmp	.LBB2_33
.Ltmp625:
.LBB2_86:                               # %vector.ph722
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 213 37 is_stmt 1      # blocksort.c:213:37
	addl	$1, %ebp
	andl	$7, %ebp
	movq	%rbp, 56(%rsp)          # 8-byte Spill
	subq	%rbp, %r15
	leaq	(%r15,%r8), %rdi
	movq	112(%rsp), %rbx         # 8-byte Reload
	leaq	(%rbx,%r11,4), %rcx
	leaq	(%rbx,%r8,4), %rbx
	xorl	%ebp, %ebp
.Ltmp626:
	.p2align	4, 0x90
.LBB2_87:                               # %vector.body702
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movups	-16(%rbx,%rbp,4), %xmm0
	movups	(%rbx,%rbp,4), %xmm1
	movups	-16(%rcx,%rbp,4), %xmm2
	movups	(%rcx,%rbp,4), %xmm3
	movups	%xmm2, -16(%rbx,%rbp,4)
	movups	%xmm3, (%rbx,%rbp,4)
	movups	%xmm0, -16(%rcx,%rbp,4)
	movups	%xmm1, (%rcx,%rbp,4)
	addq	$8, %rbp
	cmpq	%rbp, %r15
	jne	.LBB2_87
.Ltmp627:
# %bb.88:                               # %middle.block703
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37 is_stmt 0        # blocksort.c:0:37
	cmpl	$0, 56(%rsp)            # 4-byte Folded Reload
	.loc	3 213 37                # blocksort.c:213:37
	je	.LBB2_92
.Ltmp628:
# %bb.89:                               #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	addq	%r15, %r11
	subl	%r15d, %esi
.Ltmp629:
	jmp	.LBB2_90
.Ltmp630:
.LBB2_98:                               # %vector.ph
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	addl	$1, %r11d
	andl	$7, %r11d
	subq	%r11, %r9
	leaq	(%r9,%rbp), %rsi
	movq	128(%rsp), %rcx         # 8-byte Reload
	leaq	(%rcx,%r15,4), %rcx
	movq	112(%rsp), %rbx         # 8-byte Reload
	leaq	(%rbx,%rbp,4), %rbx
	xorl	%ebp, %ebp
.Ltmp631:
	.p2align	4, 0x90
.LBB2_99:                               # %vector.body
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 214 37 is_stmt 1      # blocksort.c:214:37
	movups	-16(%rbx,%rbp,4), %xmm0
	movups	(%rbx,%rbp,4), %xmm1
	movups	-16(%rcx,%rbp,4), %xmm2
	movups	(%rcx,%rbp,4), %xmm3
	movups	%xmm2, -16(%rbx,%rbp,4)
	movups	%xmm3, (%rbx,%rbp,4)
	movups	%xmm0, -16(%rcx,%rbp,4)
	movups	%xmm1, (%rcx,%rbp,4)
	addq	$8, %rbp
	cmpq	%rbp, %r9
	jne	.LBB2_99
.Ltmp632:
# %bb.100:                              # %middle.block
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37 is_stmt 0        # blocksort.c:0:37
	testl	%r11d, %r11d
	je	.LBB2_104
.Ltmp633:
# %bb.101:                              #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	addq	%r9, %r15
	subl	%r9d, %edi
.Ltmp634:
	jmp	.LBB2_102
.Ltmp635:
	.p2align	4, 0x90
.LBB2_33:                               # %while.body.lr.ph.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB2_34 Depth 4
                                        #           Child Loop BB2_40 Depth 5
                                        #             Child Loop BB2_43 Depth 6
                                        #           Child Loop BB2_48 Depth 5
                                        #             Child Loop BB2_50 Depth 6
                                        #         Child Loop BB2_70 Depth 4
                                        #           Child Loop BB2_72 Depth 5
                                        #             Child Loop BB2_73 Depth 6
                                        #         Child Loop BB2_63 Depth 4
                                        #           Child Loop BB2_64 Depth 5
                                        #         Child Loop BB2_87 Depth 4
                                        #         Child Loop BB2_91 Depth 4
                                        #         Child Loop BB2_99 Depth 4
                                        #         Child Loop BB2_103 Depth 4
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 156 4 is_stmt 1       # blocksort.c:156:4
	movslq	4(%rsp), %r12           # 4-byte Folded Reload
.Ltmp636:
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	.p2align	4, 0x90
.LBB2_34:                               # %while.body.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB2_40 Depth 5
                                        #             Child Loop BB2_43 Depth 6
                                        #           Child Loop BB2_48 Depth 5
                                        #             Child Loop BB2_50 Depth 6
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	.loc	3 158 7                 # blocksort.c:158:7
	cmpl	$100, 4(%rsp)           # 4-byte Folded Reload
.Ltmp637:
	.loc	3 158 7 is_stmt 0       # blocksort.c:158:7
	jge	.LBB2_152
.Ltmp638:
# %bb.35:                               # %if.end.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 160 7 is_stmt 1       # blocksort.c:160:7
	leaq	-1(%r12), %rcx
	movq	%rcx, 56(%rsp)          # 8-byte Spill
	movl	1580(%rsp,%r12,4), %ebp
.Ltmp639:
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackSimpleSort:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: yyp1 <- $ebp
	movslq	%ebp, %r8
	movl	1180(%rsp,%r12,4), %r10d
.Ltmp640:
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	.loc	3 161 14                # blocksort.c:161:14
	movl	%r10d, %ecx
	subl	%r8d, %ecx
	.loc	3 161 19 is_stmt 0      # blocksort.c:161:19
	cmpl	$9, %ecx
.Ltmp641:
	.loc	3 161 11                # blocksort.c:161:11
	jg	.LBB2_56
.Ltmp642:
# %bb.36:                               # %if.then9.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackSimpleSort:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 87 11 is_stmt 1       # blocksort.c:87:11
	cmpl	%ebp, %r10d
.Ltmp643:
	.loc	3 87 8 is_stmt 0        # blocksort.c:87:8
	je	.LBB2_55
.Ltmp644:
# %bb.37:                               # %if.end.i.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackSimpleSort:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 8                   # blocksort.c:0:8
	movq	%rbp, 40(%rsp)          # 8-byte Spill
	movslq	%r10d, %rdi
.Ltmp645:
	.loc	3 89 16 is_stmt 1       # blocksort.c:89:16
	cmpl	$4, %ecx
.Ltmp646:
	.loc	3 89 8 is_stmt 0        # blocksort.c:89:8
	jl	.LBB2_46
.Ltmp647:
# %bb.38:                               # %if.then2.i.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackSimpleSort:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 90 19 is_stmt 1       # blocksort.c:90:19
	leal	-4(%r10), %ecx
.Ltmp648:
	#DEBUG_VALUE: fallbackSimpleSort:i <- $ecx
	.loc	3 90 25 is_stmt 0       # blocksort.c:90:25
	cmpl	40(%rsp), %ecx          # 4-byte Folded Reload
.Ltmp649:
	.loc	3 90 7                  # blocksort.c:90:7
	jl	.LBB2_46
.Ltmp650:
# %bb.39:                               # %for.body.preheader.i.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackSimpleSort:i <- $ecx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackSimpleSort:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 91 16 is_stmt 1       # blocksort.c:91:16
	movslq	%ecx, %rbp
.Ltmp651:
	.loc	3 0 16 is_stmt 0        # blocksort.c:0:16
	movl	%r10d, %ecx
.Ltmp652:
	.p2align	4, 0x90
.LBB2_40:                               # %for.body.i.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_34 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB2_43 Depth 6
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $rbp
	.loc	3 91 16                 # blocksort.c:91:16
	movslq	(%r14,%rbp,4), %r12
.Ltmp653:
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	.loc	3 0 0                   # blocksort.c:0:0
	leaq	4(%rbp), %rsi
.Ltmp654:
	.loc	3 93 27 is_stmt 1       # blocksort.c:93:27
	cmpq	%rdi, %rsi
	.loc	3 93 33 is_stmt 0       # blocksort.c:93:33
	jle	.LBB2_42
.Ltmp655:
# %bb.41:                               #   in Loop: Header=BB2_40 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 33                  # blocksort.c:0:33
	movl	%ebp, %esi
	jmp	.LBB2_45
.Ltmp656:
	.p2align	4, 0x90
.LBB2_42:                               # %land.rhs.preheader.i.i
                                        #   in Loop: Header=BB2_40 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	(%r15,%r12,4), %r9d
.Ltmp657:
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $r9d
	.loc	3 91 16 is_stmt 1       # blocksort.c:91:16
	movslq	%ecx, %r15
	movl	%ebp, %esi
.Ltmp658:
	.p2align	4, 0x90
.LBB2_43:                               # %land.rhs.i.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_34 Depth=4
                                        #           Parent Loop BB2_40 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $r15
	.loc	3 93 52                 # blocksort.c:93:52
	movl	(%r14,%r15,4), %ebx
	movq	8(%rsp), %r11           # 8-byte Reload
.Ltmp659:
	.loc	3 93 43 is_stmt 0       # blocksort.c:93:43
	cmpl	(%r11,%rbx,4), %r9d
.Ltmp660:
	.loc	3 93 10                 # blocksort.c:93:10
	jbe	.LBB2_45
.Ltmp661:
# %bb.44:                               # %for.body14.i.i
                                        #   in Loop: Header=BB2_43 Depth=6
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $r15
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 94 13 is_stmt 1       # blocksort.c:94:13
	movslq	%esi, %rsi
	.loc	3 94 23 is_stmt 0       # blocksort.c:94:23
	movl	%ebx, (%r14,%rsi,4)
.Ltmp662:
	.loc	3 0 0                   # blocksort.c:0:0
	addq	$4, %r15
.Ltmp663:
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	.loc	3 93 27 is_stmt 1       # blocksort.c:93:27
	addl	$4, %esi
	cmpq	%rdi, %r15
	.loc	3 93 33 is_stmt 0       # blocksort.c:93:33
	jle	.LBB2_43
.Ltmp664:
.LBB2_45:                               # %for.end.i.i
                                        #   in Loop: Header=BB2_40 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r12d
	#DEBUG_VALUE: fallbackSimpleSort:i <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 95 10 is_stmt 1       # blocksort.c:95:10
	movslq	%esi, %rsi
	.loc	3 95 20 is_stmt 0       # blocksort.c:95:20
	movl	%r12d, (%r14,%rsi,4)
.Ltmp665:
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 90 7 is_stmt 1        # blocksort.c:90:7
	addl	$-1, %ecx
.Ltmp666:
	.loc	3 90 25 is_stmt 0       # blocksort.c:90:25
	cmpq	%r8, %rbp
	.loc	3 90 33                 # blocksort.c:90:33
	leaq	-1(%rbp), %rbp
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp667:
	.loc	3 90 7                  # blocksort.c:90:7
	jg	.LBB2_40
.Ltmp668:
.LBB2_46:                               # %if.end26.i.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 99 22 is_stmt 1       # blocksort.c:99:22
	cmpl	40(%rsp), %r10d         # 4-byte Folded Reload
	movq	88(%rsp), %r11          # 8-byte Reload
.Ltmp669:
	.loc	3 99 4 is_stmt 0        # blocksort.c:99:4
	jle	.LBB2_55
.Ltmp670:
# %bb.47:                               # %for.body30.preheader.i.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 4                   # blocksort.c:0:4
	movq	%rdi, %rcx
.Ltmp671:
	.p2align	4, 0x90
.LBB2_48:                               # %for.body30.i.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_34 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB2_50 Depth 6
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSimpleSort:j <- $ecx
	leaq	-1(%rcx), %rbx
.Ltmp672:
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	.loc	3 100 13 is_stmt 1      # blocksort.c:100:13
	movslq	-4(%r14,%rcx,4), %r9
.Ltmp673:
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	.loc	3 104 13                # blocksort.c:104:13
	movl	%ebx, %ebp
.Ltmp674:
	.loc	3 102 24                # blocksort.c:102:24
	cmpl	%r10d, %ecx
	.loc	3 102 30 is_stmt 0      # blocksort.c:102:30
	jg	.LBB2_54
.Ltmp675:
# %bb.49:                               # %land.rhs38.i.i.preheader
                                        #   in Loop: Header=BB2_48 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackSimpleSort:j <- $ecx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 30                  # blocksort.c:0:30
	movl	(%r15,%r9,4), %esi
.Ltmp676:
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $esi
	.p2align	4, 0x90
.LBB2_50:                               # %land.rhs38.i.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_34 Depth=4
                                        #           Parent Loop BB2_48 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $esi
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackSimpleSort:j <- $ecx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSimpleSort:j <- $rcx
	.loc	3 102 49                # blocksort.c:102:49
	movl	(%r14,%rcx,4), %ebp
	.loc	3 102 40                # blocksort.c:102:40
	cmpl	(%r15,%rbp,4), %esi
.Ltmp677:
	.loc	3 102 7                 # blocksort.c:102:7
	jbe	.LBB2_52
.Ltmp678:
# %bb.51:                               # %for.body45.i.i
                                        #   in Loop: Header=BB2_50 Depth=6
	#DEBUG_VALUE: fallbackSimpleSort:j <- $rcx
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $esi
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 103 20 is_stmt 1      # blocksort.c:103:20
	movl	%ebp, -4(%r14,%rcx,4)
.Ltmp679:
	#DEBUG_VALUE: fallbackSimpleSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 102 60                # blocksort.c:102:60
	leaq	1(%rcx), %rbp
	.loc	3 102 24 is_stmt 0      # blocksort.c:102:24
	cmpq	%rdi, %rcx
	movq	%rbp, %rcx
	.loc	3 102 30                # blocksort.c:102:30
	jl	.LBB2_50
	jmp	.LBB2_53
.Ltmp680:
	.p2align	4, 0x90
.LBB2_52:                               # %for.end52.loopexit.split.loop.exit.i.i
                                        #   in Loop: Header=BB2_48 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:j <- $rcx
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $esi
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 30                  # blocksort.c:0:30
	movl	%ecx, %ebp
.Ltmp681:
.LBB2_53:                               # %for.end52.loopexit.i.i
                                        #   in Loop: Header=BB2_48 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:ec_tmp <- $esi
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 104 13 is_stmt 1      # blocksort.c:104:13
	addl	$-1, %ebp
.Ltmp682:
.LBB2_54:                               # %for.end52.i.i
                                        #   in Loop: Header=BB2_48 Depth=5
	#DEBUG_VALUE: fallbackSimpleSort:tmp <- $r9d
	#DEBUG_VALUE: fallbackSimpleSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackSimpleSort:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 104 7 is_stmt 0       # blocksort.c:104:7
	movslq	%ebp, %rcx
	.loc	3 104 17                # blocksort.c:104:17
	movl	%r9d, (%r14,%rcx,4)
	movq	%rbx, %rcx
.Ltmp683:
	.loc	3 99 22 is_stmt 1       # blocksort.c:99:22
	cmpq	%r8, %rbx
.Ltmp684:
	.loc	3 99 4 is_stmt 0        # blocksort.c:99:4
	jg	.LBB2_48
.Ltmp685:
.LBB2_55:                               # %fallbackSimpleSort.exit.i
                                        #   in Loop: Header=BB2_34 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 0 4                   # blocksort.c:0:4
	movq	56(%rsp), %r12          # 8-byte Reload
	.loc	3 156 14 is_stmt 1      # blocksort.c:156:14
	testq	%r12, %r12
	.loc	3 156 4 is_stmt 0       # blocksort.c:156:4
	jg	.LBB2_34
	jmp	.LBB2_109
.Ltmp686:
	.p2align	4, 0x90
.LBB2_56:                               # %if.end10.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 4                   # blocksort.c:0:4
	movl	68(%rsp), %esi          # 4-byte Reload
.Ltmp687:
	.loc	3 173 15 is_stmt 1      # blocksort.c:173:15
	imull	$7621, %esi, %esi       # imm = 0x1DC5
	.loc	3 173 23 is_stmt 0      # blocksort.c:173:23
	addl	$1, %esi
	.loc	3 173 28                # blocksort.c:173:28
	andl	$32767, %esi            # imm = 0x7FFF
.Ltmp688:
	#DEBUG_VALUE: fallbackQSort3:r <- $esi
	.loc	3 174 14 is_stmt 1      # blocksort.c:174:14
	imull	$43691, %esi, %ecx      # imm = 0xAAAB
	shrl	$17, %ecx
	leal	(%rcx,%rcx,2), %ecx
	movl	%esi, 68(%rsp)          # 4-byte Spill
.Ltmp689:
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	subl	%ecx, %esi
	movl	%ebp, %ecx
	.loc	3 175 11                # blocksort.c:175:11
	testw	%si, %si
	je	.LBB2_60
.Ltmp690:
# %bb.57:                               # %if.end10.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movzwl	%si, %ecx
.Ltmp691:
	#DEBUG_VALUE: fallbackQSort3:r3 <- $ecx
	.loc	3 175 11                # blocksort.c:175:11
	cmpl	$1, %ecx
	jne	.LBB2_59
.Ltmp692:
# %bb.58:                               # %if.then19.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:r3 <- $ecx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 176 41 is_stmt 1      # blocksort.c:176:41
	leal	(%r10,%rbp), %ecx
.Ltmp693:
	.loc	3 176 45 is_stmt 0      # blocksort.c:176:45
	sarl	%ecx
	jmp	.LBB2_60
.Ltmp694:
.LBB2_59:                               # %if.else25.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:r3 <- $ecx
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 45                  # blocksort.c:0:45
	movl	%r10d, %ecx
.Ltmp695:
.LBB2_60:                               # %if.end31.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r12d
	movslq	%ecx, %rcx
	movl	(%r14,%rcx,4), %ecx
.Ltmp696:
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_deref] undef
	movl	(%r15,%rcx,4), %ecx
.Ltmp697:
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	movl	%ecx, 4(%rsp)           # 4-byte Spill
.Ltmp698:
	.loc	3 180 19 is_stmt 1      # blocksort.c:180:19
	movl	%r10d, %ecx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	.loc	3 179 19                # blocksort.c:179:19
	movl	%ebp, %r9d
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%r10d, %r15d
	movl	%ebp, %edi
	movq	%rbp, 40(%rsp)          # 8-byte Spill
.Ltmp699:
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	.loc	3 184 22 is_stmt 1      # blocksort.c:184:22
	cmpl	%r15d, %edi
.Ltmp700:
	.loc	3 184 17 is_stmt 0      # blocksort.c:184:17
	jg	.LBB2_70
.Ltmp701:
.LBB2_62:                               # %if.end38.lr.ph.preheader.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movslq	%r15d, %rsi
	movslq	%r9d, %r9
.Ltmp702:
.LBB2_63:                               # %if.end38.lr.ph.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB2_64 Depth 5
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movslq	%edi, %rcx
.Ltmp703:
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9
	#DEBUG_VALUE: fallbackQSort3:unLo <- undef
	.p2align	4, 0x90
.LBB2_64:                               # %if.end38.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_63 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unLo <- $rcx
	.loc	3 185 31 is_stmt 1      # blocksort.c:185:31
	movl	(%r14,%rcx,4), %ebx
	movq	8(%rsp), %rdi           # 8-byte Reload
	.loc	3 185 24 is_stmt 0      # blocksort.c:185:24
	movl	(%rdi,%rbx,4), %edi
.Ltmp704:
	#DEBUG_VALUE: fallbackQSort3:n <- $edi
	.loc	3 186 19 is_stmt 1      # blocksort.c:186:19
	subl	4(%rsp), %edi           # 4-byte Folded Reload
.Ltmp705:
	.loc	3 186 17 is_stmt 0      # blocksort.c:186:17
	je	.LBB2_67
.Ltmp706:
# %bb.65:                               # %if.end56.i
                                        #   in Loop: Header=BB2_64 Depth=5
	#DEBUG_VALUE: fallbackQSort3:unLo <- $rcx
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 191 19 is_stmt 1      # blocksort.c:191:19
	testl	%edi, %edi
.Ltmp707:
	.loc	3 191 17 is_stmt 0      # blocksort.c:191:17
	jg	.LBB2_69
.Ltmp708:
# %bb.66:                               # %if.end59.i
                                        #   in Loop: Header=BB2_64 Depth=5
	#DEBUG_VALUE: fallbackQSort3:unLo <- $rcx
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unLo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 184 22 is_stmt 1      # blocksort.c:184:22
	cmpq	%rsi, %rcx
.Ltmp709:
	.loc	3 192 17                # blocksort.c:192:17
	leaq	1(%rcx), %rcx
	.loc	3 184 17                # blocksort.c:184:17
	jl	.LBB2_64
	jmp	.LBB2_69
.Ltmp710:
	.p2align	4, 0x90
.LBB2_67:                               # %if.then45.i
                                        #   in Loop: Header=BB2_63 Depth=4
	#DEBUG_VALUE: fallbackQSort3:unLo <- $rcx
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zztmp <- $ebx
	.loc	3 187 16                # blocksort.c:187:16
	movl	(%r14,%r9,4), %edi
	movl	%edi, (%r14,%rcx,4)
	movl	%ebx, (%r14,%r9,4)
.Ltmp711:
	.loc	3 188 20                # blocksort.c:188:20
	addq	$1, %r9
.Ltmp712:
	#DEBUG_VALUE: fallbackQSort3:ltLo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 0 20 is_stmt 0        # blocksort.c:0:20
	leal	1(%rcx), %edi
.Ltmp713:
	.loc	3 184 22 is_stmt 1      # blocksort.c:184:22
	cmpl	%ecx, %r15d
.Ltmp714:
	.loc	3 184 17 is_stmt 0      # blocksort.c:184:17
	jg	.LBB2_63
.Ltmp715:
# %bb.68:                               # %while.end.loopexit418.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unLo <- $rcx
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 195 22 is_stmt 1      # blocksort.c:195:22
	addl	$1, %ecx
.Ltmp716:
	.p2align	4, 0x90
.LBB2_69:                               # %while.end.loopexit.split.loop.exit519.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%ecx, %edi
	jmp	.LBB2_70
.Ltmp717:
	.p2align	4, 0x90
.LBB2_61:                               # %if.end92.i
                                        #   in Loop: Header=BB2_70 Depth=4
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- undef
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $ebp
	movq	%rbp, 48(%rsp)          # 8-byte Spill
.Ltmp718:
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	.loc	3 206 10 is_stmt 1      # blocksort.c:206:10
	movl	(%r14,%rcx,4), %ebx
.Ltmp719:
	#DEBUG_VALUE: zztmp <- $ebx
	movl	%edi, (%r14,%rcx,4)
	movl	%ebx, -4(%r14,%rsi,4)
	movq	32(%rsp), %rdi          # 8-byte Reload
.Ltmp720:
	.loc	3 206 45 is_stmt 0      # blocksort.c:206:45
	addl	$1, %edi
.Ltmp721:
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	.loc	3 182 7 is_stmt 1       # blocksort.c:182:7
	addl	$-1, %r9d
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%r9d, %r15d
	movq	72(%rsp), %r9           # 8-byte Reload
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
.Ltmp722:
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	.loc	3 184 22 is_stmt 1      # blocksort.c:184:22
	cmpl	%r15d, %edi
.Ltmp723:
	.loc	3 184 17 is_stmt 0      # blocksort.c:184:17
	jle	.LBB2_62
.Ltmp724:
.LBB2_70:                               # %while.end.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB2_72 Depth 5
                                        #             Child Loop BB2_73 Depth 6
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: yyp1 <- $edi
	.loc	3 0 17                  # blocksort.c:0:17
	movq	%r9, 72(%rsp)           # 8-byte Spill
.Ltmp725:
	.loc	3 195 22 is_stmt 1      # blocksort.c:195:22
	cmpl	%r15d, %edi
	movq	%rdi, 32(%rsp)          # 8-byte Spill
.Ltmp726:
	.loc	3 195 17 is_stmt 0      # blocksort.c:195:17
	jg	.LBB2_78
.Ltmp727:
# %bb.71:                               # %if.end65.lr.ph.preheader.i
                                        #   in Loop: Header=BB2_70 Depth=4
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movslq	%edi, %rcx
	movq	48(%rsp), %rbp          # 8-byte Reload
.Ltmp728:
	movslq	%ebp, %rbp
.Ltmp729:
.LBB2_72:                               # %if.end65.lr.ph.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_70 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB2_73 Depth 6
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	movslq	%r15d, %rsi
	addq	$1, %rsi
	movl	%r15d, %r9d
.Ltmp730:
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	.loc	3 0 17                  # blocksort.c:0:17
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp731:
	.p2align	4, 0x90
.LBB2_73:                               # %if.end65.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        #         Parent Loop BB2_70 Depth=4
                                        #           Parent Loop BB2_72 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- undef
	.loc	3 196 31 is_stmt 1      # blocksort.c:196:31
	movl	-4(%r14,%rsi,4), %edi
.Ltmp732:
	#DEBUG_VALUE: zztmp <- $edi
	.loc	3 196 24 is_stmt 0      # blocksort.c:196:24
	movl	(%r15,%rdi,4), %ebx
.Ltmp733:
	#DEBUG_VALUE: fallbackQSort3:n <- $ebx
	.loc	3 197 19 is_stmt 1      # blocksort.c:197:19
	subl	4(%rsp), %ebx           # 4-byte Folded Reload
.Ltmp734:
	.loc	3 197 17 is_stmt 0      # blocksort.c:197:17
	je	.LBB2_76
.Ltmp735:
# %bb.74:                               # %if.end84.i
                                        #   in Loop: Header=BB2_73 Depth=6
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 202 19 is_stmt 1      # blocksort.c:202:19
	testl	%ebx, %ebx
.Ltmp736:
	.loc	3 202 17 is_stmt 0      # blocksort.c:202:17
	js	.LBB2_61
.Ltmp737:
# %bb.75:                               # %if.end87.i
                                        #   in Loop: Header=BB2_73 Depth=6
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 195 22 is_stmt 1      # blocksort.c:195:22
	addl	$-1, %r9d
	addq	$-1, %rsi
	cmpq	%rcx, %rsi
.Ltmp738:
	.loc	3 195 17 is_stmt 0      # blocksort.c:195:17
	jg	.LBB2_73
	jmp	.LBB2_79
.Ltmp739:
	.p2align	4, 0x90
.LBB2_76:                               # %if.then72.i
                                        #   in Loop: Header=BB2_72 Depth=5
	#DEBUG_VALUE: zztmp <- $edi
	#DEBUG_VALUE: fallbackQSort3:gtHi <- $rbp
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- undef
	.loc	3 198 16 is_stmt 1      # blocksort.c:198:16
	movl	(%r14,%rbp,4), %ebx
	movl	%ebx, -4(%r14,%rsi,4)
	movl	%edi, (%r14,%rbp,4)
.Ltmp740:
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 199 20                # blocksort.c:199:20
	addq	$-1, %rbp
.Ltmp741:
	.loc	3 195 22                # blocksort.c:195:22
	leal	-1(%r9), %r15d
	cmpl	%r9d, 32(%rsp)          # 4-byte Folded Reload
.Ltmp742:
	.loc	3 195 17 is_stmt 0      # blocksort.c:195:17
	jl	.LBB2_72
.Ltmp743:
# %bb.77:                               # %while.end104.loopexit417.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 211 16 is_stmt 1      # blocksort.c:211:16
	addl	$-1, %r9d
	movq	8(%rsp), %r15           # 8-byte Reload
	jmp	.LBB2_79
.Ltmp744:
.LBB2_78:                               #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: yyp1 <- $edi
	#DEBUG_VALUE: fallbackQSort3:gtHi <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r15d
	#DEBUG_VALUE: fallbackQSort3:ltLo <- $r9d
	#DEBUG_VALUE: fallbackQSort3:unLo <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:lo <- $ebp
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%r15d, %r9d
.Ltmp745:
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp746:
	movq	48(%rsp), %rbp          # 8-byte Reload
.Ltmp747:
	.p2align	4, 0x90
.LBB2_79:                               # %while.end104.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	movq	72(%rsp), %rdi          # 8-byte Reload
.Ltmp748:
	.loc	3 211 16                # blocksort.c:211:16
	cmpl	%edi, %ebp
.Ltmp749:
	.loc	3 211 11                # blocksort.c:211:11
	jl	.LBB2_108
.Ltmp750:
# %bb.80:                               # %if.end107.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 11                  # blocksort.c:0:11
	movq	%rbp, 48(%rsp)          # 8-byte Spill
	.loc	3 213 11 is_stmt 1      # blocksort.c:213:11
	movl	%edi, %ecx
	subl	40(%rsp), %ecx          # 4-byte Folded Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
                                        # kill: def $esi killed $esi killed $rsi
	subl	%edi, %esi
	cmpl	%esi, %ecx
	cmovlel	%ecx, %esi
.Ltmp751:
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	.loc	3 213 37 is_stmt 0      # blocksort.c:213:37
	testl	%esi, %esi
	jle	.LBB2_92
.Ltmp752:
# %bb.81:                               # %while.body116.preheader.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	movq	32(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, %rbp
.Ltmp753:
	.loc	3 213 37                # blocksort.c:213:37
	notl	%ecx
	movq	72(%rsp), %rdi          # 8-byte Reload
	addl	%edi, %ecx
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	notl	%edi
	addl	40(%rsp), %edi          # 4-byte Folded Reload
	cmpl	%edi, %ecx
	cmovgel	%ecx, %edi
	leal	(%rdi,%rbp), %ecx
	addl	$1, %ecx
	movslq	%ecx, %r11
.Ltmp754:
	movl	$-2, %ebp
	subl	%edi, %ebp
	leaq	1(%rbp), %r15
	cmpq	$8, %r15
	jb	.LBB2_82
.Ltmp755:
# %bb.83:                               # %vector.memcheck721
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	(%r14,%r8,4), %rcx
	leaq	(%r11,%rbp), %rdi
	movq	120(%rsp), %rbx         # 8-byte Reload
	leaq	(%rbx,%rdi,4), %rdi
	cmpq	%rdi, %rcx
	jae	.LBB2_86
.Ltmp756:
# %bb.84:                               # %vector.memcheck721
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	(%r8,%rbp), %rcx
	leaq	(%rbx,%rcx,4), %rcx
	leaq	(%r14,%r11,4), %rdi
	cmpq	%rcx, %rdi
	jae	.LBB2_86
.Ltmp757:
.LBB2_82:                               #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $esi
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	movq	%r8, %rdi
.Ltmp758:
.LBB2_90:                               # %while.body116.i.preheader
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%r14, %rcx
.Ltmp759:
	.p2align	4, 0x90
.LBB2_91:                               # %while.body116.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: yyp1 <- undef
	#DEBUG_VALUE: yyn <- $esi
	#DEBUG_VALUE: yyp2 <- undef
	.loc	3 213 37                # blocksort.c:213:37
	movl	(%rcx,%rdi,4), %ebp
.Ltmp760:
	#DEBUG_VALUE: zztmp <- $ebp
	movl	(%rcx,%r11,4), %ebx
	movl	%ebx, (%rcx,%rdi,4)
	movl	%ebp, (%rcx,%r11,4)
.Ltmp761:
	#DEBUG_VALUE: yyp1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 213 37                # blocksort.c:213:37
	addq	$4, %rcx
	addl	$-1, %esi
.Ltmp762:
	jg	.LBB2_91
.Ltmp763:
.LBB2_92:                               # %while.end129.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 214 11 is_stmt 1      # blocksort.c:214:11
	movl	%r10d, %edi
	movq	48(%rsp), %rsi          # 8-byte Reload
	subl	%esi, %edi
	movl	%esi, %r8d
	subl	%r9d, %r8d
	cmpl	%r8d, %edi
	cmovgl	%r8d, %edi
.Ltmp764:
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	.loc	3 214 37 is_stmt 0      # blocksort.c:214:37
	testl	%edi, %edi
	jle	.LBB2_104
.Ltmp765:
# %bb.93:                               # %while.body146.preheader.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:unHi <- $r9d
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%r10d, %ecx
	notl	%ecx
	addl	%esi, %ecx
	notl	%esi
	addl	%esi, %r9d
.Ltmp766:
	cmpl	%r9d, %ecx
	cmovgel	%ecx, %r9d
	leal	1(%r10,%r9), %ecx
	movslq	%ecx, %r15
	movslq	32(%rsp), %rbp          # 4-byte Folded Reload
	movl	$-2, %r11d
	subl	%r9d, %r11d
	leaq	1(%r11), %r9
	cmpq	$8, %r9
	jb	.LBB2_94
.Ltmp767:
# %bb.95:                               # %vector.memcheck
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	(%r14,%rbp,4), %rcx
	leaq	(%r15,%r11), %rsi
	movq	136(%rsp), %rbx         # 8-byte Reload
	leaq	(%rbx,%rsi,4), %rsi
	cmpq	%rsi, %rcx
	jae	.LBB2_98
.Ltmp768:
# %bb.96:                               # %vector.memcheck
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	(%r11,%rbp), %rcx
	movq	120(%rsp), %rsi         # 8-byte Reload
	leaq	(%rsi,%rcx,4), %rcx
	leaq	(%rsi,%r15,4), %rsi
	cmpq	%rcx, %rsi
	jae	.LBB2_98
.Ltmp769:
.LBB2_94:                               #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $edi
	#DEBUG_VALUE: yyn <- $edi
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rbp, %rsi
.Ltmp770:
.LBB2_102:                              # %while.body146.i.preheader
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%r14, %rcx
.Ltmp771:
	.p2align	4, 0x90
.LBB2_103:                              # %while.body146.i
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        #       Parent Loop BB2_33 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: yyp1 <- undef
	#DEBUG_VALUE: yyn <- $edi
	.loc	3 214 37                # blocksort.c:214:37
	movl	(%rcx,%rsi,4), %ebp
.Ltmp772:
	#DEBUG_VALUE: zztmp <- $ebp
	movl	4(%rcx,%r15,4), %ebx
	movl	%ebx, (%rcx,%rsi,4)
.Ltmp773:
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	movl	%ebp, 4(%rcx,%r15,4)
.Ltmp774:
	#DEBUG_VALUE: yyp1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 214 37                # blocksort.c:214:37
	addq	$4, %rcx
	addl	$-1, %edi
.Ltmp775:
	jg	.LBB2_103
.Ltmp776:
.LBB2_104:                              # %while.end159.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	movq	72(%rsp), %rbx          # 8-byte Reload
	.loc	3 216 28 is_stmt 1      # blocksort.c:216:28
	notl	%ebx
	movq	40(%rsp), %rbp          # 8-byte Reload
	.loc	3 216 14 is_stmt 0      # blocksort.c:216:14
	addl	%ebp, %ebx
	.loc	3 216 28                # blocksort.c:216:28
	addl	32(%rsp), %ebx          # 4-byte Folded Reload
.Ltmp777:
	#DEBUG_VALUE: fallbackQSort3:n <- $ebx
	.loc	3 217 14 is_stmt 1      # blocksort.c:217:14
	movl	%r10d, %ecx
	subl	%r8d, %ecx
	.loc	3 217 30 is_stmt 0      # blocksort.c:217:30
	addl	$1, %ecx
.Ltmp778:
	#DEBUG_VALUE: fallbackQSort3:m <- $ecx
	.loc	3 219 13 is_stmt 1      # blocksort.c:219:13
	movl	%ebx, %esi
	subl	%ebp, %esi
	.loc	3 219 23 is_stmt 0      # blocksort.c:219:23
	movl	%r10d, %edi
	subl	%ecx, %edi
	.loc	3 219 18                # blocksort.c:219:18
	cmpl	%edi, %esi
.Ltmp779:
	.loc	3 219 11                # blocksort.c:219:11
	jle	.LBB2_106
.Ltmp780:
# %bb.105:                              # %if.then169.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $ecx
	#DEBUG_VALUE: fallbackQSort3:n <- $ebx
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 220 10 is_stmt 1      # blocksort.c:220:10
	movl	%ebx, 1180(%rsp,%r12,4)
	jmp	.LBB2_107
.Ltmp781:
.LBB2_106:                              # %if.else180.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:m <- $ecx
	#DEBUG_VALUE: fallbackQSort3:n <- $ebx
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:hi <- $r10d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 223 10                # blocksort.c:223:10
	movl	%ecx, 1580(%rsp,%r12,4)
	movl	%ebp, %ecx
.Ltmp782:
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movl	%ebx, %r10d
.Ltmp783:
.LBB2_107:                              # %if.end191.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:n <- $ebx
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12d
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	88(%rsp), %r11          # 8-byte Reload
	movslq	%r12d, %rsi
	movl	%ecx, 1584(%rsp,%rsi,4)
	movl	%r10d, 1184(%rsp,%rsi,4)
	leal	1(%r12), %ecx
.Ltmp784:
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_plus_uconst 56] [$rsp+0]
	movq	%rcx, 56(%rsp)          # 8-byte Spill
.Ltmp785:
.LBB2_108:                              # %while.cond.outer.backedge.i
                                        #   in Loop: Header=BB2_33 Depth=3
	#DEBUG_VALUE: fallbackQSort3:med <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:sp <- [DW_OP_plus_uconst 56] [$rsp+0]
	movq	56(%rsp), %rcx          # 8-byte Reload
.Ltmp786:
	#DEBUG_VALUE: fallbackQSort3:sp <- $ecx
	movl	%ecx, %esi
	movl	%ecx, 4(%rsp)           # 4-byte Spill
	.loc	3 156 14 is_stmt 1      # blocksort.c:156:14
	testl	%ecx, %ecx
	.loc	3 156 4 is_stmt 0       # blocksort.c:156:4
	jg	.LBB2_33
.Ltmp787:
.LBB2_109:                              # %fallbackQSort3.exit
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:cc <- -1
	.loc	3 348 27 is_stmt 1      # blocksort.c:348:27
	cmpl	%edx, %eax
	movq	24(%rsp), %r9           # 8-byte Reload
	movq	16(%rsp), %r10          # 8-byte Reload
	movl	100(%rsp), %r12d        # 4-byte Reload
	movl	108(%rsp), %r8d         # 4-byte Reload
.Ltmp788:
	.loc	3 348 13 is_stmt 0      # blocksort.c:348:13
	jg	.LBB2_114
.Ltmp789:
# %bb.110:                              # %for.body236.preheader
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 349 29 is_stmt 1      # blocksort.c:349:29
	movslq	104(%rsp), %rcx         # 4-byte Folded Reload
	movslq	%edx, %rax
	movl	$-1, %edx
.Ltmp790:
	.p2align	4, 0x90
.LBB2_111:                              # %for.body236
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	#DEBUG_VALUE: fallbackSort:cc <- $edx
	movl	(%r14,%rcx,4), %esi
	.loc	3 349 22 is_stmt 0      # blocksort.c:349:22
	movl	(%r15,%rsi,4), %esi
.Ltmp791:
	#DEBUG_VALUE: fallbackSort:cc1 <- $esi
	#DEBUG_VALUE: fallbackSort:cc <- $esi
	.loc	3 350 23 is_stmt 1      # blocksort.c:350:23
	cmpl	%esi, %edx
.Ltmp792:
	.loc	3 350 20 is_stmt 0      # blocksort.c:350:20
	je	.LBB2_113
.Ltmp793:
# %bb.112:                              # %if.then243
                                        #   in Loop: Header=BB2_111 Depth=3
	#DEBUG_VALUE: fallbackSort:cc <- $esi
	#DEBUG_VALUE: fallbackSort:cc1 <- $esi
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 350 33                # blocksort.c:350:33
	movl	$1, %edx
	shll	%cl, %edx
	movl	%ecx, %edi
	sarl	$5, %edi
	movslq	%edi, %rdi
	orl	%edx, (%r13,%rdi,4)
.Ltmp794:
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%esi, %edx
.Ltmp795:
.LBB2_113:                              # %for.inc251
                                        #   in Loop: Header=BB2_111 Depth=3
	#DEBUG_VALUE: fallbackSort:cc <- $esi
	#DEBUG_VALUE: fallbackSort:cc1 <- $esi
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: fallbackSort:cc <- $edx
	.loc	3 348 34 is_stmt 1      # blocksort.c:348:34
	addq	$1, %rcx
	.loc	3 348 27 is_stmt 0      # blocksort.c:348:27
	cmpq	%rax, %rcx
	jl	.LBB2_111
.Ltmp796:
	.p2align	4, 0x90
.LBB2_114:                              # %while.cond129
                                        #   Parent Loop BB2_26 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB2_115 Depth 3
                                        #       Child Loop BB2_118 Depth 3
                                        #       Child Loop BB2_119 Depth 3
                                        #       Child Loop BB2_122 Depth 3
                                        #       Child Loop BB2_126 Depth 3
                                        #       Child Loop BB2_127 Depth 3
                                        #       Child Loop BB2_33 Depth 3
                                        #         Child Loop BB2_34 Depth 4
                                        #           Child Loop BB2_40 Depth 5
                                        #             Child Loop BB2_43 Depth 6
                                        #           Child Loop BB2_48 Depth 5
                                        #             Child Loop BB2_50 Depth 6
                                        #         Child Loop BB2_70 Depth 4
                                        #           Child Loop BB2_72 Depth 5
                                        #             Child Loop BB2_73 Depth 6
                                        #         Child Loop BB2_63 Depth 4
                                        #           Child Loop BB2_64 Depth 5
                                        #         Child Loop BB2_87 Depth 4
                                        #         Child Loop BB2_91 Depth 4
                                        #         Child Loop BB2_99 Depth 4
                                        #         Child Loop BB2_103 Depth 4
                                        #       Child Loop BB2_111 Depth 3
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 326 10 is_stmt 1      # blocksort.c:326:10
	leal	-31(%r11), %ecx
.Ltmp797:
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r11d
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movl	%r11d, %eax
.Ltmp798:
	.p2align	4, 0x90
.LBB2_115:                              # %while.cond132
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r11d
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%eax, %esi
	movl	%ecx, %edx
	leal	1(%rsi), %eax
.Ltmp799:
	#DEBUG_VALUE: fallbackSort:k <- $eax
	.loc	3 326 17                # blocksort.c:326:17
	movl	%eax, %ebp
	sarl	$5, %ebp
	movl	%eax, %ecx
	andl	$31, %ecx
	movl	$1, %edi
	shll	%cl, %edi
	movslq	%ebp, %rbp
	andl	(%r13,%rbp,4), %edi
	.loc	3 326 29                # blocksort.c:326:29
	testl	%ecx, %ecx
	je	.LBB2_117
.Ltmp800:
# %bb.116:                              # %while.cond132
                                        #   in Loop: Header=BB2_115 Depth=3
	#DEBUG_VALUE: fallbackSort:k <- $eax
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leal	1(%rdx), %ecx
	testl	%edi, %edi
	jne	.LBB2_115
.Ltmp801:
.LBB2_117:                              # %while.end
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:k <- $eax
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 326 17                # blocksort.c:326:17
	testl	%edi, %edi
	.loc	3 327 14 is_stmt 1      # blocksort.c:327:14
	je	.LBB2_120
.Ltmp802:
	.p2align	4, 0x90
.LBB2_118:                              # %while.cond152
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:k <- $eax
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%esi, %eax
.Ltmp803:
	#DEBUG_VALUE: fallbackSort:k <- undef
	.loc	3 328 20 is_stmt 1      # blocksort.c:328:20
	addl	$32, %edx
	movl	%edx, %ecx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	.loc	3 328 13 is_stmt 0      # blocksort.c:328:13
	leal	32(%rax), %esi
.Ltmp804:
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 32, DW_OP_stack_value] undef
	.loc	3 328 31                # blocksort.c:328:31
	cmpl	$-1, (%r13,%rcx,4)
	.loc	3 328 13                # blocksort.c:328:13
	je	.LBB2_118
.Ltmp805:
	.p2align	4, 0x90
.LBB2_119:                              # %while.cond161
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- undef
	.loc	3 329 20 is_stmt 1      # blocksort.c:329:20
	addl	$1, %eax
	movl	%eax, %ecx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	movl	(%r13,%rcx,4), %ecx
.Ltmp806:
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 329 13 is_stmt 0      # blocksort.c:329:13
	btl	%eax, %ecx
	jb	.LBB2_119
.Ltmp807:
.LBB2_120:                              # %if.end172
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $eax
	.loc	3 332 16 is_stmt 1      # blocksort.c:332:16
	cmpl	%r10d, %eax
.Ltmp808:
	.loc	3 332 14 is_stmt 0      # blocksort.c:332:14
	jg	.LBB2_129
.Ltmp809:
# %bb.121:                              # %while.cond178.preheader
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:k <- $eax
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 333 18 is_stmt 1      # blocksort.c:333:18
	leal	-32(%rax), %ecx
	leal	-1(%rax), %ebx
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%eax, %edx
.Ltmp810:
	.p2align	4, 0x90
.LBB2_122:                              # %while.cond178
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:k <- $eax
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%ecx, %esi
	movl	%ebx, %edi
.Ltmp811:
	#DEBUG_VALUE: fallbackSort:k <- $edx
	.loc	3 333 18                # blocksort.c:333:18
	movl	%edx, %ecx
	sarl	$5, %ecx
	movslq	%ecx, %rbx
	movl	%edx, %ecx
	andl	$31, %ecx
	movl	$1, %ebp
	shll	%cl, %ebp
	andl	(%r13,%rbx,4), %ebp
	.loc	3 333 51                # blocksort.c:333:51
	addl	$1, %edx
.Ltmp812:
	#DEBUG_VALUE: fallbackSort:k <- $edx
	.loc	3 333 30                # blocksort.c:333:30
	testl	%ecx, %ecx
	je	.LBB2_124
.Ltmp813:
# %bb.123:                              # %while.cond178
                                        #   in Loop: Header=BB2_122 Depth=3
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	leal	1(%rsi), %ecx
	leal	1(%rdi), %ebx
	testl	%ebp, %ebp
	je	.LBB2_122
.Ltmp814:
.LBB2_124:                              # %while.end192
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 334 15 is_stmt 1      # blocksort.c:334:15
	testl	%ebp, %ebp
.Ltmp815:
	.loc	3 334 14 is_stmt 0      # blocksort.c:334:14
	je	.LBB2_126
.Ltmp816:
# %bb.125:                              #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 14                  # blocksort.c:0:14
	addl	$-1, %edx
.Ltmp817:
	#DEBUG_VALUE: fallbackSort:k <- $edx
	.loc	3 339 16 is_stmt 1      # blocksort.c:339:16
	cmpl	%r10d, %edx
	jle	.LBB2_31
	jmp	.LBB2_129
.Ltmp818:
	.p2align	4, 0x90
.LBB2_126:                              # %while.cond201
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%edi, %edx
.Ltmp819:
	#DEBUG_VALUE: fallbackSort:k <- undef
	.loc	3 335 20 is_stmt 1      # blocksort.c:335:20
	addl	$32, %esi
	movl	%esi, %ecx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	.loc	3 335 13 is_stmt 0      # blocksort.c:335:13
	leal	32(%rdx), %edi
.Ltmp820:
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 32, DW_OP_stack_value] undef
	.loc	3 335 31                # blocksort.c:335:31
	cmpl	$0, (%r13,%rcx,4)
	.loc	3 335 13                # blocksort.c:335:13
	je	.LBB2_126
.Ltmp821:
	.p2align	4, 0x90
.LBB2_127:                              # %while.cond210
                                        #   Parent Loop BB2_26 Depth=1
                                        #     Parent Loop BB2_114 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- undef
	.loc	3 336 21 is_stmt 1      # blocksort.c:336:21
	addl	$1, %edx
	movl	%edx, %ecx
	sarl	$5, %ecx
	movslq	%ecx, %rcx
	movl	(%r13,%rcx,4), %ecx
.Ltmp822:
	#DEBUG_VALUE: fallbackSort:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 336 20 is_stmt 0      # blocksort.c:336:20
	btl	%edx, %ecx
	.loc	3 336 13                # blocksort.c:336:13
	jae	.LBB2_127
.Ltmp823:
# %bb.128:                              # %if.end221
                                        #   in Loop: Header=BB2_114 Depth=2
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	.loc	3 339 16 is_stmt 1      # blocksort.c:339:16
	cmpl	%r10d, %edx
.Ltmp824:
	.loc	3 339 14 is_stmt 0      # blocksort.c:339:14
	jle	.LBB2_31
.Ltmp825:
.LBB2_129:                              # %while.end255
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 276 13 is_stmt 1      # blocksort.c:276:13
	cmpl	$4, %r12d
.Ltmp826:
	.loc	3 355 11                # blocksort.c:355:11
	jge	.LBB2_133
.Ltmp827:
.LBB2_130:                              # %if.end260
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 358 9                 # blocksort.c:358:9
	addl	%r8d, %r8d
.Ltmp828:
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	.loc	3 359 13                # blocksort.c:359:13
	cmpl	%r10d, %r8d
	.loc	3 359 22 is_stmt 0      # blocksort.c:359:22
	jg	.LBB2_134
.Ltmp829:
# %bb.131:                              # %if.end260
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	cmpl	$0, 80(%rsp)            # 4-byte Folded Reload
	jne	.LBB2_26
	jmp	.LBB2_134
.Ltmp830:
.LBB2_132:                              # %if.then101
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 311 10 is_stmt 1      # blocksort.c:311:10
	movq	stderr(%rip), %rdi
	movl	$.L.str.3, %esi
	movl	%r8d, %edx
	xorl	%eax, %eax
	movl	%r8d, %ebx
.Ltmp831:
	#DEBUG_VALUE: fallbackSort:H <- $ebx
	callq	fprintf
	movl	%ebx, %r8d
	movq	16(%rsp), %r10          # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp832:
	#DEBUG_VALUE: fallbackSort:i <- 0
	#DEBUG_VALUE: fallbackSort:j <- 0
	.loc	3 279 18                # blocksort.c:279:18
	testl	%r10d, %r10d
.Ltmp833:
	.loc	3 314 7                 # blocksort.c:314:7
	jg	.LBB2_28
	jmp	.LBB2_30
.Ltmp834:
.LBB2_133:                              # %if.then258
                                        #   in Loop: Header=BB2_26 Depth=1
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 356 10                # blocksort.c:356:10
	movq	stderr(%rip), %rdi
	movl	$.L.str.4, %esi
	movq	80(%rsp), %rdx          # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx
	xorl	%eax, %eax
	movl	%r8d, %ebx
	callq	fprintf
.Ltmp835:
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movl	%ebx, %r8d
	movq	16(%rsp), %r10          # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
	jmp	.LBB2_130
.Ltmp836:
.LBB2_134:                              # %while.end268
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 276 13 is_stmt 1      # blocksort.c:276:13
	cmpl	$4, %r12d
.Ltmp837:
	.loc	3 367 8                 # blocksort.c:367:8
	jge	.LBB2_151
.Ltmp838:
# %bb.135:                              # %if.end273
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- 0
	#DEBUG_VALUE: fallbackSort:j <- 0
	.loc	3 279 18                # blocksort.c:279:18
	testl	%r10d, %r10d
.Ltmp839:
	.loc	3 370 4                 # blocksort.c:370:4
	jle	.LBB2_149
.Ltmp840:
.LBB2_136:                              # %while.cond278.preheader.preheader
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 371 14                # blocksort.c:371:14
	movl	%r9d, %r8d
	andl	$1, %r8d
	cmpl	$1, %r10d
	jne	.LBB2_138
.Ltmp841:
# %bb.137:
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	xorl	%r10d, %r10d
	xorl	%eax, %eax
.Ltmp842:
	#DEBUG_VALUE: fallbackSort:i <- $r10
	.loc	3 371 14                # blocksort.c:371:14
	testq	%r8, %r8
	jne	.LBB2_145
	jmp	.LBB2_148
.Ltmp843:
.LBB2_138:                              # %while.cond278.preheader.preheader.new
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	subq	%r8, %r9
	movq	%r9, %r11
	xorl	%r10d, %r10d
	movabsq	$-4294967296, %r9       # imm = 0xFFFFFFFF00000000
	movabsq	$4294967296, %rdi       # imm = 0x100000000
	xorl	%eax, %eax
.Ltmp844:
	.p2align	4, 0x90
.LBB2_139:                              # %while.cond278.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_140 Depth 2
                                        #     Child Loop BB2_142 Depth 2
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $r10
	movslq	%eax, %rsi
	leaq	(%rsp,%rsi,4), %rbp
	addq	$1984, %rbp             # imm = 0x7C0
	shlq	$32, %rsi
	addq	%r9, %rsi
	movl	%eax, %ecx
	addb	$-1, %cl
.Ltmp845:
	.p2align	4, 0x90
.LBB2_140:                              # %while.cond278
                                        #   Parent Loop BB2_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: fallbackSort:i <- $r10
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%eax, %edx
.Ltmp846:
	#DEBUG_VALUE: fallbackSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: fallbackSort:j <- undef
	.loc	3 371 7                 # blocksort.c:371:7
	addq	%rdi, %rsi
	.loc	3 371 14                # blocksort.c:371:14
	movl	(%rbp), %ebx
	.loc	3 371 7                 # blocksort.c:371:7
	addb	$1, %cl
	addq	$4, %rbp
	leal	1(%rdx), %eax
	.loc	3 371 26                # blocksort.c:371:26
	testl	%ebx, %ebx
	.loc	3 371 7                 # blocksort.c:371:7
	je	.LBB2_140
.Ltmp847:
# %bb.141:                              # %while.end285
                                        #   in Loop: Header=BB2_139 Depth=1
	#DEBUG_VALUE: fallbackSort:i <- $r10
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:j <- undef
	.loc	3 372 18 is_stmt 1      # blocksort.c:372:18
	addl	$-1, %ebx
	movl	%ebx, -4(%rbp)
	.loc	3 373 15                # blocksort.c:373:15
	movl	(%r14,%r10,4), %eax
	.loc	3 373 24 is_stmt 0      # blocksort.c:373:24
	movb	%cl, (%r15,%rax)
.Ltmp848:
	.loc	3 370 29 is_stmt 1      # blocksort.c:370:29
	movq	%r10, %rcx
	orq	$1, %rcx
.Ltmp849:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	.loc	3 371 14                # blocksort.c:371:14
	movslq	%edx, %rax
	addq	$-1, %rax
.Ltmp850:
	.p2align	4, 0x90
.LBB2_142:                              # %while.cond278.1
                                        #   Parent Loop BB2_139 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movq	%rax, %rdx
	#DEBUG_VALUE: fallbackSort:j <- undef
.Ltmp851:
	.loc	3 371 14                # blocksort.c:371:14
	movl	1988(%rsp,%rax,4), %esi
.Ltmp852:
	#DEBUG_VALUE: fallbackSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 371 7                 # blocksort.c:371:7
	leaq	1(%rax), %rax
	.loc	3 371 26                # blocksort.c:371:26
	testl	%esi, %esi
	.loc	3 371 7                 # blocksort.c:371:7
	je	.LBB2_142
.Ltmp853:
# %bb.143:                              # %while.end285.1
                                        #   in Loop: Header=BB2_139 Depth=1
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $rcx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:j <- undef
	.loc	3 372 18 is_stmt 1      # blocksort.c:372:18
	addl	$-1, %esi
	movl	%esi, 1988(%rsp,%rdx,4)
	.loc	3 373 15                # blocksort.c:373:15
	movl	(%r14,%rcx,4), %ecx
.Ltmp854:
	.loc	3 373 24 is_stmt 0      # blocksort.c:373:24
	movb	%al, (%r15,%rcx)
.Ltmp855:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 370 29 is_stmt 1      # blocksort.c:370:29
	addq	$2, %r10
.Ltmp856:
	.loc	3 370 4 is_stmt 0       # blocksort.c:370:4
	addq	$-2, %r11
	jne	.LBB2_139
.Ltmp857:
# %bb.144:                              # %for.end295.unr-lcssa
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- $r10
	.loc	3 371 14 is_stmt 1      # blocksort.c:371:14
	testq	%r8, %r8
	je	.LBB2_148
.Ltmp858:
.LBB2_145:                              # %while.cond278.preheader.epil
	#DEBUG_VALUE: fallbackSort:i <- $r10
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	cltq
	addq	$-1, %rax
.Ltmp859:
	.p2align	4, 0x90
.LBB2_146:                              # %while.cond278.epil
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: fallbackSort:i <- $r10
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movq	%rax, %rcx
	#DEBUG_VALUE: fallbackSort:j <- undef
.Ltmp860:
	.loc	3 371 14                # blocksort.c:371:14
	movl	1988(%rsp,%rax,4), %edx
.Ltmp861:
	#DEBUG_VALUE: fallbackSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 371 7                 # blocksort.c:371:7
	leaq	1(%rax), %rax
	.loc	3 371 26                # blocksort.c:371:26
	testl	%edx, %edx
	.loc	3 371 7                 # blocksort.c:371:7
	je	.LBB2_146
.Ltmp862:
# %bb.147:                              # %while.end285.epil
	#DEBUG_VALUE: fallbackSort:i <- $r10
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:j <- undef
	.loc	3 372 18 is_stmt 1      # blocksort.c:372:18
	addl	$-1, %edx
	movl	%edx, 1988(%rsp,%rcx,4)
	.loc	3 373 15                # blocksort.c:373:15
	movl	(%r14,%r10,4), %ecx
	.loc	3 373 24 is_stmt 0      # blocksort.c:373:24
	movb	%al, (%r15,%rcx)
.Ltmp863:
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB2_148:                              # %for.end295
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:j <- $eax
	.loc	3 375 4 is_stmt 1       # blocksort.c:375:4
	cmpl	$256, %eax              # imm = 0x100
.Ltmp864:
	.loc	3 375 4 is_stmt 0       # blocksort.c:375:4
	jge	.LBB2_153
.Ltmp865:
.LBB2_149:                              # %if.end299
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 376 1 is_stmt 1       # blocksort.c:376:1
	addq	$3016, %rsp             # imm = 0xBC8
.Ltmp866:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp867:
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp868:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp869:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB2_150:                              # %if.then
	.cfi_def_cfa_offset 3072
.Ltmp870:
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 277 7                 # blocksort.c:277:7
	movq	stderr(%rip), %rcx
	movl	$.L.str.2, %edi
	movl	$27, %esi
	movl	$1, %edx
	callq	fwrite
	movq	16(%rsp), %rcx          # 8-byte Reload
	jmp	.LBB2_1
.Ltmp871:
.LBB2_151:                              # %if.then271
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:H <- $r8d
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 368 7                 # blocksort.c:368:7
	movq	stderr(%rip), %rcx
	movl	$.L.str.5.3, %edi
	movl	$33, %esi
	movl	$1, %edx
	callq	fwrite
.Ltmp872:
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	movq	16(%rsp), %r10          # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp873:
	#DEBUG_VALUE: fallbackSort:i <- 0
	#DEBUG_VALUE: fallbackSort:j <- 0
	.loc	3 279 18 is_stmt 1      # blocksort.c:279:18
	testl	%r10d, %r10d
.Ltmp874:
	.loc	3 370 4                 # blocksort.c:370:4
	jg	.LBB2_136
	jmp	.LBB2_149
.Ltmp875:
.LBB2_152:                              # %if.then.i
	#DEBUG_VALUE: fallbackQSort3:sp <- $r12
	#DEBUG_VALUE: fallbackQSort3:r <- [DW_OP_plus_uconst 68] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:i <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackQSort3:loSt <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:r <- $r11d
	#DEBUG_VALUE: fallbackQSort3:hiSt <- $r11d
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:k <- $edx
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 158 7                 # blocksort.c:158:7
	movl	$1004, %edi             # imm = 0x3EC
	callq	BZ2_bz__AssertH__fail
.Ltmp876:
.LBB2_153:                              # %if.then298
	#DEBUG_VALUE: fallbackSort:j <- $eax
	#DEBUG_VALUE: fallbackSort:nNotDone <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:nblock <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:fmap <- $r14
	#DEBUG_VALUE: fallbackSort:eclass <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: fallbackSort:bhtab <- $r13
	#DEBUG_VALUE: fallbackSort:verb <- $r12d
	#DEBUG_VALUE: fallbackSort:eclass8 <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 375 4                 # blocksort.c:375:4
	movl	$1005, %edi             # imm = 0x3ED
	callq	BZ2_bz__AssertH__fail
.Ltmp877:
.Lfunc_end2:
	.size	fallbackSort, .Lfunc_end2-fallbackSort
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function mainGtU
	.type	mainGtU,@function
mainGtU:                                # @mainGtU
.Lfunc_begin3:
	.loc	3 400 0                 # blocksort.c:400:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:budget <- $r9
                                        # kill: def $r8d killed $r8d def $r8
.Ltmp878:
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 407 9 prologue_end    # blocksort.c:407:9
	movl	%edi, %r10d
.Ltmp879:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	.loc	3 407 25 is_stmt 0      # blocksort.c:407:25
	movl	%esi, %eax
	movb	(%rdx,%rax), %al
.Ltmp880:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 408 11 is_stmt 1      # blocksort.c:408:11
	cmpb	%al, (%rdx,%r10)
.Ltmp881:
	.loc	3 408 8 is_stmt 0       # blocksort.c:408:8
	jne	.LBB3_1
.Ltmp882:
# %bb.2:                                # %if.end
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 409 6 is_stmt 1       # blocksort.c:409:6
	leal	1(%rdi), %r10d
.Ltmp883:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 409 12 is_stmt 0      # blocksort.c:409:12
	leal	1(%rsi), %eax
.Ltmp884:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 411 25 is_stmt 1      # blocksort.c:411:25
	movb	(%rdx,%rax), %al
.Ltmp885:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 412 11                # blocksort.c:412:11
	cmpb	%al, (%rdx,%r10)
.Ltmp886:
	.loc	3 412 8 is_stmt 0       # blocksort.c:412:8
	jne	.LBB3_3
.Ltmp887:
# %bb.4:                                # %if.end25
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 413 6 is_stmt 1       # blocksort.c:413:6
	leal	2(%rdi), %r10d
.Ltmp888:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 413 12 is_stmt 0      # blocksort.c:413:12
	leal	2(%rsi), %eax
.Ltmp889:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 415 25 is_stmt 1      # blocksort.c:415:25
	movb	(%rdx,%rax), %al
.Ltmp890:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 416 11                # blocksort.c:416:11
	cmpb	%al, (%rdx,%r10)
.Ltmp891:
	.loc	3 416 8 is_stmt 0       # blocksort.c:416:8
	jne	.LBB3_5
.Ltmp892:
# %bb.6:                                # %if.end42
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 417 6 is_stmt 1       # blocksort.c:417:6
	leal	3(%rdi), %r10d
.Ltmp893:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 417 12 is_stmt 0      # blocksort.c:417:12
	leal	3(%rsi), %eax
.Ltmp894:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 419 25 is_stmt 1      # blocksort.c:419:25
	movb	(%rdx,%rax), %al
.Ltmp895:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 420 11                # blocksort.c:420:11
	cmpb	%al, (%rdx,%r10)
.Ltmp896:
	.loc	3 420 8 is_stmt 0       # blocksort.c:420:8
	jne	.LBB3_7
.Ltmp897:
# %bb.8:                                # %if.end59
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 421 6 is_stmt 1       # blocksort.c:421:6
	leal	4(%rdi), %r10d
.Ltmp898:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 421 12 is_stmt 0      # blocksort.c:421:12
	leal	4(%rsi), %eax
.Ltmp899:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 423 25 is_stmt 1      # blocksort.c:423:25
	movb	(%rdx,%rax), %al
.Ltmp900:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 424 11                # blocksort.c:424:11
	cmpb	%al, (%rdx,%r10)
.Ltmp901:
	.loc	3 424 8 is_stmt 0       # blocksort.c:424:8
	jne	.LBB3_9
.Ltmp902:
# %bb.10:                               # %if.end76
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 425 6 is_stmt 1       # blocksort.c:425:6
	leal	5(%rdi), %r10d
.Ltmp903:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 425 12 is_stmt 0      # blocksort.c:425:12
	leal	5(%rsi), %eax
.Ltmp904:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 427 25 is_stmt 1      # blocksort.c:427:25
	movb	(%rdx,%rax), %al
.Ltmp905:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 428 11                # blocksort.c:428:11
	cmpb	%al, (%rdx,%r10)
.Ltmp906:
	.loc	3 428 8 is_stmt 0       # blocksort.c:428:8
	jne	.LBB3_11
.Ltmp907:
# %bb.12:                               # %if.end93
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 429 6 is_stmt 1       # blocksort.c:429:6
	leal	6(%rdi), %r10d
.Ltmp908:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 429 12 is_stmt 0      # blocksort.c:429:12
	leal	6(%rsi), %eax
.Ltmp909:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 431 25 is_stmt 1      # blocksort.c:431:25
	movb	(%rdx,%rax), %al
.Ltmp910:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 432 11                # blocksort.c:432:11
	cmpb	%al, (%rdx,%r10)
.Ltmp911:
	.loc	3 432 8 is_stmt 0       # blocksort.c:432:8
	jne	.LBB3_13
.Ltmp912:
# %bb.14:                               # %if.end110
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 433 6 is_stmt 1       # blocksort.c:433:6
	leal	7(%rdi), %r10d
.Ltmp913:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 433 12 is_stmt 0      # blocksort.c:433:12
	leal	7(%rsi), %eax
.Ltmp914:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 435 25 is_stmt 1      # blocksort.c:435:25
	movb	(%rdx,%rax), %al
.Ltmp915:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 436 11                # blocksort.c:436:11
	cmpb	%al, (%rdx,%r10)
.Ltmp916:
	.loc	3 436 8 is_stmt 0       # blocksort.c:436:8
	jne	.LBB3_15
.Ltmp917:
# %bb.16:                               # %if.end127
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 437 6 is_stmt 1       # blocksort.c:437:6
	leal	8(%rdi), %r10d
.Ltmp918:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 437 12 is_stmt 0      # blocksort.c:437:12
	leal	8(%rsi), %eax
.Ltmp919:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 439 25 is_stmt 1      # blocksort.c:439:25
	movb	(%rdx,%rax), %al
.Ltmp920:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 440 11                # blocksort.c:440:11
	cmpb	%al, (%rdx,%r10)
.Ltmp921:
	.loc	3 440 8 is_stmt 0       # blocksort.c:440:8
	jne	.LBB3_17
.Ltmp922:
# %bb.18:                               # %if.end144
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 441 6 is_stmt 1       # blocksort.c:441:6
	leal	9(%rdi), %r10d
.Ltmp923:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 441 12 is_stmt 0      # blocksort.c:441:12
	leal	9(%rsi), %eax
.Ltmp924:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 443 25 is_stmt 1      # blocksort.c:443:25
	movb	(%rdx,%rax), %al
.Ltmp925:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 444 11                # blocksort.c:444:11
	cmpb	%al, (%rdx,%r10)
.Ltmp926:
	.loc	3 444 8 is_stmt 0       # blocksort.c:444:8
	jne	.LBB3_19
.Ltmp927:
# %bb.20:                               # %if.end161
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 445 6 is_stmt 1       # blocksort.c:445:6
	leal	10(%rdi), %r10d
.Ltmp928:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 445 12 is_stmt 0      # blocksort.c:445:12
	leal	10(%rsi), %eax
.Ltmp929:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 447 25 is_stmt 1      # blocksort.c:447:25
	movb	(%rdx,%rax), %al
.Ltmp930:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 448 11                # blocksort.c:448:11
	cmpb	%al, (%rdx,%r10)
.Ltmp931:
	.loc	3 448 8 is_stmt 0       # blocksort.c:448:8
	jne	.LBB3_21
.Ltmp932:
# %bb.22:                               # %if.end178
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 449 6 is_stmt 1       # blocksort.c:449:6
	leal	11(%rdi), %r10d
.Ltmp933:
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	.loc	3 449 12 is_stmt 0      # blocksort.c:449:12
	leal	11(%rsi), %eax
.Ltmp934:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 451 25 is_stmt 1      # blocksort.c:451:25
	movb	(%rdx,%rax), %al
.Ltmp935:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 452 11                # blocksort.c:452:11
	cmpb	%al, (%rdx,%r10)
.Ltmp936:
	.loc	3 452 8 is_stmt 0       # blocksort.c:452:8
	jne	.LBB3_23
.Ltmp937:
# %bb.24:                               # %if.end195
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 453 6 is_stmt 1       # blocksort.c:453:6
	addl	$12, %edi
.Ltmp938:
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 453 12 is_stmt 0      # blocksort.c:453:12
	addl	$12, %esi
.Ltmp939:
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	.loc	3 455 15 is_stmt 1      # blocksort.c:455:15
	leal	8(%r8), %r10d
.Ltmp940:
	#DEBUG_VALUE: mainGtU:k <- $r10d
.LBB3_25:                               # %do.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:k <- $r10d
	.loc	3 459 12                # blocksort.c:459:12
	movl	%edi, %edi
.Ltmp941:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	.loc	3 459 28 is_stmt 0      # blocksort.c:459:28
	movl	%esi, %esi
.Ltmp942:
	movzbl	(%rdx,%rsi), %eax
.Ltmp943:
	#DEBUG_VALUE: mainGtU:c2 <- $al
	.loc	3 460 14 is_stmt 1      # blocksort.c:460:14
	cmpb	%al, (%rdx,%rdi)
.Ltmp944:
	.loc	3 460 11 is_stmt 0      # blocksort.c:460:11
	jne	.LBB3_26
.Ltmp945:
# %bb.27:                               # %if.end212
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 461 31 is_stmt 1      # blocksort.c:461:31
	movzwl	(%rcx,%rsi,2), %eax
.Ltmp946:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 462 14                # blocksort.c:462:14
	cmpw	%ax, (%rcx,%rdi,2)
.Ltmp947:
	.loc	3 462 11 is_stmt 0      # blocksort.c:462:11
	jne	.LBB3_28
.Ltmp948:
# %bb.29:                               # %if.end227
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 463 9 is_stmt 1       # blocksort.c:463:9
	leal	1(%rdi), %r11d
.Ltmp949:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 463 15 is_stmt 0      # blocksort.c:463:15
	leal	1(%rsi), %eax
.Ltmp950:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 465 28 is_stmt 1      # blocksort.c:465:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp951:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 466 14                # blocksort.c:466:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp952:
	.loc	3 466 11 is_stmt 0      # blocksort.c:466:11
	jne	.LBB3_30
.Ltmp953:
# %bb.31:                               # %if.end244
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 467 31 is_stmt 1      # blocksort.c:467:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp954:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 468 14                # blocksort.c:468:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp955:
	.loc	3 468 11 is_stmt 0      # blocksort.c:468:11
	jne	.LBB3_32
.Ltmp956:
# %bb.33:                               # %if.end259
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 469 9 is_stmt 1       # blocksort.c:469:9
	leal	2(%rdi), %r11d
.Ltmp957:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 469 15 is_stmt 0      # blocksort.c:469:15
	leal	2(%rsi), %eax
.Ltmp958:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 471 28 is_stmt 1      # blocksort.c:471:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp959:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 472 14                # blocksort.c:472:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp960:
	.loc	3 472 11 is_stmt 0      # blocksort.c:472:11
	jne	.LBB3_34
.Ltmp961:
# %bb.35:                               # %if.end276
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 473 31 is_stmt 1      # blocksort.c:473:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp962:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 474 14                # blocksort.c:474:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp963:
	.loc	3 474 11 is_stmt 0      # blocksort.c:474:11
	jne	.LBB3_36
.Ltmp964:
# %bb.37:                               # %if.end291
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 475 9 is_stmt 1       # blocksort.c:475:9
	leal	3(%rdi), %r11d
.Ltmp965:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 475 15 is_stmt 0      # blocksort.c:475:15
	leal	3(%rsi), %eax
.Ltmp966:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 477 28 is_stmt 1      # blocksort.c:477:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp967:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 478 14                # blocksort.c:478:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp968:
	.loc	3 478 11 is_stmt 0      # blocksort.c:478:11
	jne	.LBB3_38
.Ltmp969:
# %bb.39:                               # %if.end308
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 479 31 is_stmt 1      # blocksort.c:479:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp970:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 480 14                # blocksort.c:480:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp971:
	.loc	3 480 11 is_stmt 0      # blocksort.c:480:11
	jne	.LBB3_40
.Ltmp972:
# %bb.41:                               # %if.end323
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 481 9 is_stmt 1       # blocksort.c:481:9
	leal	4(%rdi), %r11d
.Ltmp973:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 481 15 is_stmt 0      # blocksort.c:481:15
	leal	4(%rsi), %eax
.Ltmp974:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 483 28 is_stmt 1      # blocksort.c:483:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp975:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 484 14                # blocksort.c:484:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp976:
	.loc	3 484 11 is_stmt 0      # blocksort.c:484:11
	jne	.LBB3_42
.Ltmp977:
# %bb.43:                               # %if.end340
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 485 31 is_stmt 1      # blocksort.c:485:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp978:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 486 14                # blocksort.c:486:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp979:
	.loc	3 486 11 is_stmt 0      # blocksort.c:486:11
	jne	.LBB3_44
.Ltmp980:
# %bb.45:                               # %if.end355
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 487 9 is_stmt 1       # blocksort.c:487:9
	leal	5(%rdi), %r11d
.Ltmp981:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 487 15 is_stmt 0      # blocksort.c:487:15
	leal	5(%rsi), %eax
.Ltmp982:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 489 28 is_stmt 1      # blocksort.c:489:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp983:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 490 14                # blocksort.c:490:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp984:
	.loc	3 490 11 is_stmt 0      # blocksort.c:490:11
	jne	.LBB3_46
.Ltmp985:
# %bb.47:                               # %if.end372
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 491 31 is_stmt 1      # blocksort.c:491:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp986:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 492 14                # blocksort.c:492:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp987:
	.loc	3 492 11 is_stmt 0      # blocksort.c:492:11
	jne	.LBB3_48
.Ltmp988:
# %bb.49:                               # %if.end387
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 493 9 is_stmt 1       # blocksort.c:493:9
	leal	6(%rdi), %r11d
.Ltmp989:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 493 15 is_stmt 0      # blocksort.c:493:15
	leal	6(%rsi), %eax
.Ltmp990:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 495 28 is_stmt 1      # blocksort.c:495:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp991:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 496 14                # blocksort.c:496:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp992:
	.loc	3 496 11 is_stmt 0      # blocksort.c:496:11
	jne	.LBB3_50
.Ltmp993:
# %bb.51:                               # %if.end404
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 497 31 is_stmt 1      # blocksort.c:497:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp994:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 498 14                # blocksort.c:498:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp995:
	.loc	3 498 11 is_stmt 0      # blocksort.c:498:11
	jne	.LBB3_52
.Ltmp996:
# %bb.53:                               # %if.end419
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 499 9 is_stmt 1       # blocksort.c:499:9
	leal	7(%rdi), %r11d
.Ltmp997:
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	.loc	3 499 15 is_stmt 0      # blocksort.c:499:15
	leal	7(%rsi), %eax
.Ltmp998:
	#DEBUG_VALUE: mainGtU:c1 <- undef
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	.loc	3 501 28 is_stmt 1      # blocksort.c:501:28
	movzbl	(%rdx,%rax), %ebx
.Ltmp999:
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	.loc	3 502 14                # blocksort.c:502:14
	cmpb	%bl, (%rdx,%r11)
.Ltmp1000:
	.loc	3 502 11 is_stmt 0      # blocksort.c:502:11
	jne	.LBB3_54
.Ltmp1001:
# %bb.55:                               # %if.end436
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:s1 <- undef
	.loc	3 503 31 is_stmt 1      # blocksort.c:503:31
	movzwl	(%rcx,%rax,2), %eax
.Ltmp1002:
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	.loc	3 504 14                # blocksort.c:504:14
	cmpw	%ax, (%rcx,%r11,2)
.Ltmp1003:
	.loc	3 504 11 is_stmt 0      # blocksort.c:504:11
	jne	.LBB3_56
.Ltmp1004:
# %bb.57:                               # %if.end451
                                        #   in Loop: Header=BB3_25 Depth=1
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 505 9 is_stmt 1       # blocksort.c:505:9
	addl	$8, %edi
.Ltmp1005:
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 505 15 is_stmt 0      # blocksort.c:505:15
	addl	$8, %esi
.Ltmp1006:
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	.loc	3 0 15                  # blocksort.c:0:15
	xorl	%eax, %eax
.Ltmp1007:
	.loc	3 507 14 is_stmt 1      # blocksort.c:507:14
	cmpl	%r8d, %edi
.Ltmp1008:
	.loc	3 507 11 is_stmt 0      # blocksort.c:507:11
	movl	%r8d, %ebx
.Ltmp1009:
	cmovbl	%eax, %ebx
	subl	%ebx, %edi
.Ltmp1010:
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 508 14 is_stmt 1      # blocksort.c:508:14
	cmpl	%r8d, %esi
.Ltmp1011:
	.loc	3 508 11 is_stmt 0      # blocksort.c:508:11
	movl	%r8d, %ebx
	cmovbl	%eax, %ebx
	subl	%ebx, %esi
.Ltmp1012:
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	.loc	3 511 16 is_stmt 1      # blocksort.c:511:16
	addl	$-1, (%r9)
.Ltmp1013:
	.loc	3 513 16                # blocksort.c:513:16
	addl	$-8, %r10d
.Ltmp1014:
	.loc	3 512 4                 # blocksort.c:512:4
	jns	.LBB3_25
.Ltmp1015:
# %bb.58:                               # %cleanup
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1016:
.LBB3_1:                                # %if.then
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	#DEBUG_VALUE: mainGtU:i2 <- $esi
	#DEBUG_VALUE: mainGtU:i1 <- $edi
	.loc	3 408 29                # blocksort.c:408:29
	seta	%al
.Ltmp1017:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1018:
.LBB3_3:                                # %if.then19
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 412 29                # blocksort.c:412:29
	seta	%al
.Ltmp1019:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1020:
.LBB3_5:                                # %if.then36
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 416 29                # blocksort.c:416:29
	seta	%al
.Ltmp1021:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1022:
.LBB3_7:                                # %if.then53
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 420 29                # blocksort.c:420:29
	seta	%al
.Ltmp1023:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1024:
.LBB3_9:                                # %if.then70
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 424 29                # blocksort.c:424:29
	seta	%al
.Ltmp1025:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1026:
.LBB3_11:                               # %if.then87
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 428 29                # blocksort.c:428:29
	seta	%al
.Ltmp1027:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1028:
.LBB3_13:                               # %if.then104
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 432 29                # blocksort.c:432:29
	seta	%al
.Ltmp1029:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1030:
.LBB3_15:                               # %if.then121
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 436 29                # blocksort.c:436:29
	seta	%al
.Ltmp1031:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1032:
.LBB3_17:                               # %if.then138
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 440 29                # blocksort.c:440:29
	seta	%al
.Ltmp1033:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1034:
.LBB3_19:                               # %if.then155
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 444 29                # blocksort.c:444:29
	seta	%al
.Ltmp1035:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1036:
.LBB3_21:                               # %if.then172
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 448 29                # blocksort.c:448:29
	seta	%al
.Ltmp1037:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1038:
.LBB3_23:                               # %if.then189
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:i1 <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 452 29                # blocksort.c:452:29
	seta	%al
.Ltmp1039:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1040:
.LBB3_26:                               # %if.then206
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:c2 <- $al
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 460 32                # blocksort.c:460:32
	seta	%al
.Ltmp1041:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1042:
.LBB3_28:                               # %if.then221
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 462 32                # blocksort.c:462:32
	seta	%al
.Ltmp1043:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1044:
.LBB3_30:                               # %if.then238
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 466 32                # blocksort.c:466:32
	seta	%al
.Ltmp1045:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1046:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1047:
.LBB3_32:                               # %if.then253
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 468 32                # blocksort.c:468:32
	seta	%al
.Ltmp1048:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1049:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1050:
.LBB3_34:                               # %if.then270
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 472 32                # blocksort.c:472:32
	seta	%al
.Ltmp1051:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1052:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1053:
.LBB3_36:                               # %if.then285
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 474 32                # blocksort.c:474:32
	seta	%al
.Ltmp1054:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1055:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1056:
.LBB3_38:                               # %if.then302
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 478 32                # blocksort.c:478:32
	seta	%al
.Ltmp1057:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1058:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1059:
.LBB3_40:                               # %if.then317
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 480 32                # blocksort.c:480:32
	seta	%al
.Ltmp1060:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1061:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1062:
.LBB3_42:                               # %if.then334
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 484 32                # blocksort.c:484:32
	seta	%al
.Ltmp1063:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1064:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1065:
.LBB3_44:                               # %if.then349
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 486 32                # blocksort.c:486:32
	seta	%al
.Ltmp1066:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1067:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1068:
.LBB3_46:                               # %if.then366
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 490 32                # blocksort.c:490:32
	seta	%al
.Ltmp1069:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1070:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1071:
.LBB3_48:                               # %if.then381
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 492 32                # blocksort.c:492:32
	seta	%al
.Ltmp1072:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1073:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1074:
.LBB3_50:                               # %if.then398
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 496 32                # blocksort.c:496:32
	seta	%al
.Ltmp1075:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1076:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1077:
.LBB3_52:                               # %if.then413
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 498 32                # blocksort.c:498:32
	seta	%al
.Ltmp1078:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1079:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1080:
.LBB3_54:                               # %if.then430
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:i2 <- $eax
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 502 32                # blocksort.c:502:32
	seta	%al
.Ltmp1081:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1082:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1083:
.LBB3_56:                               # %if.then445
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mainGtU:c2 <- $bl
	#DEBUG_VALUE: mainGtU:i1 <- $r11d
	#DEBUG_VALUE: mainGtU:s2 <- $ax
	#DEBUG_VALUE: mainGtU:k <- $r10d
	#DEBUG_VALUE: mainGtU:budget <- $r9
	#DEBUG_VALUE: mainGtU:nblock <- $r8d
	#DEBUG_VALUE: mainGtU:quadrant <- $rcx
	#DEBUG_VALUE: mainGtU:block <- $rdx
	.loc	3 504 32                # blocksort.c:504:32
	seta	%al
.Ltmp1084:
                                        # kill: def $al killed $al killed $eax
	.loc	3 516 1                 # blocksort.c:516:1
	popq	%rbx
.Ltmp1085:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1086:
.Lfunc_end3:
	.size	mainGtU, .Lfunc_end3-mainGtU
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function configError
	.type	configError,@function
configError:                            # @configError
.Lfunc_begin4:
	.loc	4 1027 0                # bzip2.c:1027:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1087:
	.loc	4 1028 14 prologue_end  # bzip2.c:1028:14
	movq	stderr(%rip), %rcx
	.loc	4 1028 4 is_stmt 0      # bzip2.c:1028:4
	movl	$.L.str.17.18, %edi
	movl	$235, %esi
	movl	$1, %edx
	callq	fwrite
.Ltmp1088:
	#DEBUG_VALUE: setExit:v <- undef
	.loc	4 1035 4 is_stmt 1      # bzip2.c:1035:4
	xorl	%edi, %edi
	callq	exit
.Ltmp1089:
.Lfunc_end4:
	.size	configError, .Lfunc_end4-configError
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function outOfMemory
	.type	outOfMemory,@function
outOfMemory:                            # @outOfMemory
.Lfunc_begin5:
	.loc	4 1015 0                # bzip2.c:1015:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1090:
	.loc	4 1016 14 prologue_end  # bzip2.c:1016:14
	movq	stderr(%rip), %rdi
	.loc	4 1016 4 is_stmt 0      # bzip2.c:1016:4
	movl	$.L.str.16.17, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	callq	fprintf
	.loc	4 1020 4 is_stmt 1      # bzip2.c:1020:4
	callq	cleanUpAndFail
.Ltmp1091:
.Lfunc_end5:
	.size	outOfMemory, .Lfunc_end5-outOfMemory
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function ioError
	.type	ioError,@function
ioError:                                # @ioError
.Lfunc_begin6:
	.loc	4 930 0                 # bzip2.c:930:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1092:
	.loc	4 931 14 prologue_end   # bzip2.c:931:14
	movq	stderr(%rip), %rdi
	.loc	4 931 4 is_stmt 0       # bzip2.c:931:4
	movl	$.L.str.15.16, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	callq	fprintf
	.loc	4 935 4 is_stmt 1       # bzip2.c:935:4
	xorl	%edi, %edi
	callq	perror
	.loc	4 937 4                 # bzip2.c:937:4
	callq	cleanUpAndFail
.Ltmp1093:
.Lfunc_end6:
	.size	ioError, .Lfunc_end6-ioError
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function panic
	.type	panic,@function
panic:                                  # @panic
.Lfunc_begin7:
	.loc	4 880 0                 # bzip2.c:880:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: panic:s <- $rdi
	movq	%rdi, %rcx
.Ltmp1094:
	#DEBUG_VALUE: panic:s <- $rcx
	.loc	4 881 14 prologue_end   # bzip2.c:881:14
	movq	stderr(%rip), %rdi
	.loc	4 881 4 is_stmt 0       # bzip2.c:881:4
	movl	$.L.str.10, %esi
	xorl	%edx, %edx
	#DEBUG_VALUE: panic:s <- $rcx
	xorl	%eax, %eax
	callq	fprintf
.Ltmp1095:
	.loc	4 893 4 is_stmt 1       # bzip2.c:893:4
	callq	cleanUpAndFail
.Ltmp1096:
.Lfunc_end7:
	.size	panic, .Lfunc_end7-panic
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function cleanUpAndFail
	.type	cleanUpAndFail,@function
cleanUpAndFail:                         # @cleanUpAndFail
.Lfunc_begin8:
	.loc	4 819 0                 # bzip2.c:819:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: cleanUpAndFail:ec <- undef
.Ltmp1097:
	#DEBUG_VALUE: setExit:v <- undef
	.loc	4 873 4 prologue_end    # bzip2.c:873:4
	xorl	%edi, %edi
	callq	exit
.Ltmp1098:
.Lfunc_end8:
	.size	cleanUpAndFail, .Lfunc_end8-cleanUpAndFail
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function crcError
	.type	crcError,@function
crcError:                               # @crcError
.Lfunc_begin9:
	.loc	4 900 0                 # bzip2.c:900:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1099:
	.loc	4 901 14 prologue_end   # bzip2.c:901:14
	movq	stderr(%rip), %rdi
	.loc	4 901 4 is_stmt 0       # bzip2.c:901:4
	movl	$.L.str.12.29, %esi
	xorl	%edx, %edx
	xorl	%eax, %eax
	callq	fprintf
	.loc	4 906 4 is_stmt 1       # bzip2.c:906:4
	callq	cleanUpAndFail
.Ltmp1100:
.Lfunc_end9:
	.size	crcError, .Lfunc_end9-crcError
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function compressedStreamEOF
	.type	compressedStreamEOF,@function
compressedStreamEOF:                    # @compressedStreamEOF
.Lfunc_begin10:
	.loc	4 913 0                 # bzip2.c:913:0
	.cfi_startproc
# %bb.0:                                # %if.end
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1101:
	.loc	4 923 3 prologue_end    # bzip2.c:923:3
	callq	cleanUpAndFail
.Ltmp1102:
.Lfunc_end10:
	.size	compressedStreamEOF, .Lfunc_end10-compressedStreamEOF
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function BZ2_bz__AssertH__fail
	.type	BZ2_bz__AssertH__fail,@function
BZ2_bz__AssertH__fail:                  # @BZ2_bz__AssertH__fail
.Lfunc_begin11:
	.loc	5 88 0                  # bzlib.c:88:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	#DEBUG_VALUE: BZ2_bz__AssertH__fail:errcode <- $edi
	movl	%edi, %ebx
.Ltmp1103:
	#DEBUG_VALUE: BZ2_bz__AssertH__fail:errcode <- $ebx
	.loc	5 89 12 prologue_end    # bzlib.c:89:12
	movq	stderr(%rip), %rdi
	.loc	5 89 4 is_stmt 0        # bzlib.c:89:4
	movl	$.L.str.32, %esi
	movl	$.L.str.5.33, %ecx
	movl	%ebx, %edx
	xorl	%eax, %eax
	callq	fprintf
.Ltmp1104:
	.loc	5 109 16 is_stmt 1      # bzlib.c:109:16
	cmpl	$1007, %ebx             # imm = 0x3EF
.Ltmp1105:
	.loc	5 109 8 is_stmt 0       # bzlib.c:109:8
	jne	.LBB11_2
.Ltmp1106:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: BZ2_bz__AssertH__fail:errcode <- $ebx
	.loc	5 110 12 is_stmt 1      # bzlib.c:110:12
	movq	stderr(%rip), %rcx
	.loc	5 110 4 is_stmt 0       # bzlib.c:110:4
	movl	$.L.str.1.34, %edi
	movl	$1056, %esi             # imm = 0x420
	movl	$1, %edx
	callq	fwrite
.Ltmp1107:
.LBB11_2:                               # %if.end
	#DEBUG_VALUE: BZ2_bz__AssertH__fail:errcode <- $ebx
	.loc	5 140 4 is_stmt 1       # bzlib.c:140:4
	xorl	%edi, %edi
	callq	exit
.Ltmp1108:
.Lfunc_end11:
	.size	BZ2_bz__AssertH__fail, .Lfunc_end11-BZ2_bz__AssertH__fail
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function default_bzalloc
	.type	default_bzalloc,@function
default_bzalloc:                        # @default_bzalloc
.Lfunc_begin12:
	.loc	5 160 0                 # bzlib.c:160:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: default_bzalloc:opaque <- $rdi
	#DEBUG_VALUE: default_bzalloc:items <- $esi
	#DEBUG_VALUE: default_bzalloc:items <- $esi
	#DEBUG_VALUE: default_bzalloc:size <- $edx
	#DEBUG_VALUE: default_bzalloc:size <- $edx
	.loc	5 161 29 prologue_end   # bzlib.c:161:29
	imull	%edx, %esi
.Ltmp1109:
	.loc	5 161 23 is_stmt 0      # bzlib.c:161:23
	movslq	%esi, %rdi
.Ltmp1110:
	.loc	5 161 14                # bzlib.c:161:14
	jmp	malloc                  # TAILCALL
.Ltmp1111:
.Lfunc_end12:
	.size	default_bzalloc, .Lfunc_end12-default_bzalloc
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function default_bzfree
	.type	default_bzfree,@function
default_bzfree:                         # @default_bzfree
.Lfunc_begin13:
	.loc	5 167 0 is_stmt 1       # bzlib.c:167:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: default_bzfree:opaque <- $rdi
	#DEBUG_VALUE: default_bzfree:addr <- $rsi
	#DEBUG_VALUE: default_bzfree:addr <- $rsi
	.loc	5 168 13 prologue_end   # bzlib.c:168:13
	testq	%rsi, %rsi
.Ltmp1112:
	.loc	5 168 8 is_stmt 0       # bzlib.c:168:8
	je	.LBB13_1
# %bb.2:                                # %if.then
	#DEBUG_VALUE: default_bzfree:addr <- $rsi
	#DEBUG_VALUE: default_bzfree:opaque <- $rdi
.Ltmp1113:
	.loc	5 168 22                # bzlib.c:168:22
	movq	%rsi, %rdi
	jmp	free                    # TAILCALL
.Ltmp1114:
.LBB13_1:                               # %if.end
	#DEBUG_VALUE: default_bzfree:addr <- $rsi
	#DEBUG_VALUE: default_bzfree:opaque <- $rdi
	.loc	5 169 1 is_stmt 1       # bzlib.c:169:1
	retq
.Ltmp1115:
.Lfunc_end13:
	.size	default_bzfree, .Lfunc_end13-default_bzfree
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function BZ2_bzDecompress
.LCPI14_0:
	.byte	0                       # 0x0
	.byte	1                       # 0x1
	.byte	2                       # 0x2
	.byte	3                       # 0x3
	.byte	4                       # 0x4
	.byte	5                       # 0x5
	.byte	6                       # 0x6
	.byte	7                       # 0x7
	.byte	8                       # 0x8
	.byte	9                       # 0x9
	.byte	10                      # 0xa
	.byte	11                      # 0xb
	.byte	12                      # 0xc
	.byte	13                      # 0xd
	.byte	14                      # 0xe
	.byte	15                      # 0xf
.LCPI14_1:
	.zero	16,16
.LCPI14_2:
	.zero	16,32
.LCPI14_3:
	.zero	16,48
.LCPI14_4:
	.zero	16,64
.LCPI14_5:
	.zero	16,80
.LCPI14_6:
	.zero	16,96
.LCPI14_7:
	.zero	16,112
.LCPI14_8:
	.zero	16,128
.LCPI14_9:
	.long	32                      # 0x20
	.long	32                      # 0x20
	.long	32                      # 0x20
	.long	32                      # 0x20
.LCPI14_10:
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
.LCPI14_11:
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.text
	.p2align	4, 0x90
	.type	BZ2_bzDecompress,@function
BZ2_bzDecompress:                       # @BZ2_bzDecompress
.Lfunc_begin14:
	.loc	5 865 0                 # bzlib.c:865:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$280, %rsp              # imm = 0x118
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	movl	$-2, %eax
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
.Ltmp1116:
	.loc	5 868 13 prologue_end   # bzlib.c:868:13
	testq	%rdi, %rdi
.Ltmp1117:
	.loc	5 868 8 is_stmt 0       # bzlib.c:868:8
	je	.LBB14_843
.Ltmp1118:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 869 14 is_stmt 1      # bzlib.c:869:14
	movq	48(%rdi), %r15
.Ltmp1119:
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	#DEBUG_VALUE: unRLE_obuf_to_output_FAST:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:s <- $r15
	#DEBUG_VALUE: makeMaps_d:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:cftab <- [DW_OP_plus_uconst 1096, DW_OP_stack_value] $r15
	.loc	5 870 10                # bzlib.c:870:10
	testq	%r15, %r15
.Ltmp1120:
	.loc	5 870 8 is_stmt 0       # bzlib.c:870:8
	je	.LBB14_843
.Ltmp1121:
# %bb.2:                                # %if.end3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 871 16 is_stmt 1      # bzlib.c:871:16
	cmpq	%rdi, (%r15)
.Ltmp1122:
	.loc	5 871 8 is_stmt 0       # bzlib.c:871:8
	jne	.LBB14_843
.Ltmp1123:
# %bb.3:                                # %while.cond.preheader
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 8                   # bzlib.c:0:8
	leaq	8(%r15), %r12
.Ltmp1124:
	.loc	5 874 14 is_stmt 1      # bzlib.c:874:14
	movl	8(%r15), %ecx
	leaq	64036(%r15), %r13
	leaq	36(%r15), %r9
	leaq	32(%r15), %r14
	leaq	3196(%r15), %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	leaq	68(%r15), %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	43892(%r15), %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	43888(%r15), %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	leaq	45436(%r15), %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	leaq	7880(%r15), %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	pxor	%xmm8, %xmm8
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movq	%r14, 192(%rsp)         # 8-byte Spill
.Ltmp1125:
	.p2align	4, 0x90
.LBB14_4:                               # %while.cond
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB14_109 Depth 2
                                        #       Child Loop BB14_113 Depth 3
                                        #       Child Loop BB14_122 Depth 3
                                        #       Child Loop BB14_134 Depth 3
                                        #       Child Loop BB14_143 Depth 3
                                        #       Child Loop BB14_150 Depth 3
                                        #     Child Loop BB14_29 Depth 2
                                        #       Child Loop BB14_51 Depth 3
                                        #         Child Loop BB14_55 Depth 4
                                        #         Child Loop BB14_62 Depth 4
                                        #         Child Loop BB14_32 Depth 4
                                        #         Child Loop BB14_39 Depth 4
                                        #         Child Loop BB14_44 Depth 4
                                        #     Child Loop BB14_86 Depth 2
                                        #     Child Loop BB14_163 Depth 2
                                        #       Child Loop BB14_166 Depth 3
                                        #     Child Loop BB14_16 Depth 2
                                        #     Child Loop BB14_74 Depth 2
                                        #     Child Loop BB14_210 Depth 2
                                        #     Child Loop BB14_218 Depth 2
                                        #     Child Loop BB14_289 Depth 2
                                        #     Child Loop BB14_300 Depth 2
                                        #     Child Loop BB14_308 Depth 2
                                        #     Child Loop BB14_316 Depth 2
                                        #     Child Loop BB14_324 Depth 2
                                        #     Child Loop BB14_332 Depth 2
                                        #     Child Loop BB14_342 Depth 2
                                        #     Child Loop BB14_350 Depth 2
                                        #     Child Loop BB14_358 Depth 2
                                        #     Child Loop BB14_366 Depth 2
                                        #     Child Loop BB14_374 Depth 2
                                        #     Child Loop BB14_382 Depth 2
                                        #     Child Loop BB14_390 Depth 2
                                        #     Child Loop BB14_398 Depth 2
                                        #     Child Loop BB14_546 Depth 2
                                        #     Child Loop BB14_556 Depth 2
                                        #     Child Loop BB14_247 Depth 2
                                        #     Child Loop BB14_504 Depth 2
                                        #     Child Loop BB14_507 Depth 2
                                        #     Child Loop BB14_270 Depth 2
                                        #     Child Loop BB14_273 Depth 2
                                        #       Child Loop BB14_276 Depth 3
                                        #       Child Loop BB14_278 Depth 3
                                        #     Child Loop BB14_589 Depth 2
                                        #       Child Loop BB14_594 Depth 3
                                        #       Child Loop BB14_596 Depth 3
                                        #       Child Loop BB14_599 Depth 3
                                        #         Child Loop BB14_600 Depth 4
                                        #       Child Loop BB14_613 Depth 3
                                        #       Child Loop BB14_618 Depth 3
                                        #       Child Loop BB14_625 Depth 3
                                        #       Child Loop BB14_631 Depth 3
                                        #     Child Loop BB14_637 Depth 2
                                        #     Child Loop BB14_642 Depth 2
                                        #     Child Loop BB14_722 Depth 2
                                        #     Child Loop BB14_754 Depth 2
                                        #     Child Loop BB14_758 Depth 2
                                        #     Child Loop BB14_713 Depth 2
                                        #     Child Loop BB14_789 Depth 2
                                        #     Child Loop BB14_719 Depth 2
                                        #     Child Loop BB14_761 Depth 2
                                        #     Child Loop BB14_772 Depth 2
                                        #     Child Loop BB14_525 Depth 2
                                        #     Child Loop BB14_814 Depth 2
                                        #     Child Loop BB14_833 Depth 2
                                        #     Child Loop BB14_837 Depth 2
                                        #     Child Loop BB14_517 Depth 2
                                        #     Child Loop BB14_691 Depth 2
                                        #     Child Loop BB14_693 Depth 2
                                        #     Child Loop BB14_696 Depth 2
                                        #     Child Loop BB14_728 Depth 2
                                        #     Child Loop BB14_734 Depth 2
                                        #     Child Loop BB14_740 Depth 2
                                        #     Child Loop BB14_783 Depth 2
                                        #     Child Loop BB14_798 Depth 2
                                        #     Child Loop BB14_678 Depth 2
                                        #     Child Loop BB14_582 Depth 2
                                        #     Child Loop BB14_657 Depth 2
                                        #     Child Loop BB14_665 Depth 2
                                        #     Child Loop BB14_256 Depth 2
                                        #       Child Loop BB14_259 Depth 3
                                        #     Child Loop BB14_569 Depth 2
                                        #     Child Loop BB14_537 Depth 2
                                        #     Child Loop BB14_409 Depth 2
                                        #     Child Loop BB14_417 Depth 2
                                        #     Child Loop BB14_425 Depth 2
                                        #     Child Loop BB14_433 Depth 2
                                        #     Child Loop BB14_441 Depth 2
                                        #     Child Loop BB14_450 Depth 2
                                        #     Child Loop BB14_458 Depth 2
                                        #     Child Loop BB14_466 Depth 2
                                        #     Child Loop BB14_474 Depth 2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 874 11 is_stmt 0      # bzlib.c:874:11
	cmpl	$1, %ecx
	je	.LBB14_842
.Ltmp1126:
# %bb.5:                                # %while.cond
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	cmpl	$2, %ecx
	je	.LBB14_11
.Ltmp1127:
# %bb.6:                                # %if.end47
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 11                  # bzlib.c:0:11
	cmpl	$10, %ecx
	.loc	5 897 11 is_stmt 1      # bzlib.c:897:11
	jl	.LBB14_4
.Ltmp1128:
# %bb.7:                                # %if.then50
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.file	12 "/home/readm/fast-cfi/401.bzip2/decompress.c"
	.loc	12 151 25               # decompress.c:151:25
	movq	(%r15), %rbp
.Ltmp1129:
	#DEBUG_VALUE: BZ2_decompress:strm <- $rbp
	.loc	12 179 8                # decompress.c:179:8
	jne	.LBB14_190
.Ltmp1130:
# %bb.8:                                # %if.end.i15.thread
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:strm <- $rbp
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	12 182 27               # decompress.c:182:27
	movdqu	%xmm8, 92(%r13)
	movdqu	%xmm8, 80(%r13)
	movdqu	%xmm8, 64(%r13)
	movdqu	%xmm8, 48(%r13)
	movdqu	%xmm8, 32(%r13)
	movdqu	%xmm8, 16(%r13)
	movdqu	%xmm8, (%r13)
	xorl	%eax, %eax
.Ltmp1131:
	#DEBUG_VALUE: BZ2_decompress:retVal <- 0
	.loc	12 0 27 is_stmt 0       # decompress.c:0:27
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	$0, 24(%rsp)            # 4-byte Folded Spill
	movl	$0, 136(%rsp)           # 4-byte Folded Spill
	movl	$0, 92(%rsp)            # 4-byte Folded Spill
	xorl	%ebx, %ebx
	movl	$0, 56(%rsp)            # 4-byte Folded Spill
	movl	$0, 28(%rsp)            # 4-byte Folded Spill
	xorl	%eax, %eax
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movl	$0, 80(%rsp)            # 4-byte Folded Spill
	xorl	%r10d, %r10d
	xorl	%r11d, %r11d
	xorl	%eax, %eax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, 104(%rsp)         # 8-byte Spill
	xorl	%r8d, %r8d
	xorl	%eax, %eax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	movl	$0, 212(%rsp)           # 4-byte Folded Spill
	movl	$0, 16(%rsp)            # 4-byte Folded Spill
	xorl	%eax, %eax
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	$0, 124(%rsp)           # 4-byte Folded Spill
	xorl	%eax, %eax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movl	$0, 64(%rsp)            # 4-byte Folded Spill
	xorl	%eax, %eax
	movq	%rax, 160(%rsp)         # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, 152(%rsp)         # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, 144(%rsp)         # 8-byte Spill
.Ltmp1132:
.LBB14_9:                               # %sw.bb.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7 is_stmt 1      # decompress.c:237:7
	movl	$10, (%r12)
.Ltmp1133:
	.loc	12 237 7 is_stmt 0      # decompress.c:237:7
	movl	(%r9), %ecx
	cmpl	$8, %ecx
.Ltmp1134:
	.loc	12 237 7                # decompress.c:237:7
	jl	.LBB14_15
.Ltmp1135:
# %bb.10:                               # %sw.bb.if.then29_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	movl	(%r14), %edx
	jmp	.LBB14_20
.Ltmp1136:
.LBB14_11:                              # %if.then14
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 876 14 is_stmt 1      # bzlib.c:876:14
	cmpb	$0, 44(%r15)
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movb	20(%r15), %al
	movq	%r12, 216(%rsp)         # 8-byte Spill
	movq	%r13, 176(%rsp)         # 8-byte Spill
	movq	%r9, 184(%rsp)          # 8-byte Spill
.Ltmp1137:
	.loc	5 876 14                # bzlib.c:876:14
	je	.LBB14_23
.Ltmp1138:
# %bb.12:                               # %if.then15
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 0                   # bzlib.c:0:0
	movq	(%r15), %r11
	movl	32(%r11), %ebx
.Ltmp1139:
	testb	%al, %al
.Ltmp1140:
	.loc	5 766 8 is_stmt 1       # bzlib.c:766:8
	je	.LBB14_27
.Ltmp1141:
# %bb.13:                               # %while.cond.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	testl	%ebx, %ebx
.Ltmp1142:
	.loc	5 771 17 is_stmt 1      # bzlib.c:771:17
	je	.LBB14_184
.Ltmp1143:
# %bb.14:                               # %if.end.lr.ph.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 772 20                # bzlib.c:772:20
	movl	16(%r15), %r12d
	movq	%r11, (%rsp)            # 8-byte Spill
	jmp	.LBB14_109
.Ltmp1144:
.LBB14_15:                              # %if.end33.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	movl	8(%rbp), %eax
.Ltmp1145:
	.loc	12 237 7 is_stmt 0      # decompress.c:237:7
	addl	$-1, %eax
.Ltmp1146:
	.p2align	4, 0x90
.LBB14_16:                              # %if.end33.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	cmpl	$-1, %eax
.Ltmp1147:
	.loc	12 237 7                # decompress.c:237:7
	je	.LBB14_26
.Ltmp1148:
# %bb.17:                               # %if.end38.i
                                        #   in Loop: Header=BB14_16 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %esi
	shll	$8, %esi
	movq	(%rbp), %rdi
	movzbl	(%rdi), %edx
	orl	%esi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rdi
	movq	%rdi, (%rbp)
	movl	%eax, 8(%rbp)
	addl	$1, 12(%rbp)
	jne	.LBB14_19
.Ltmp1149:
# %bb.18:                               # %if.then53.i
                                        #   in Loop: Header=BB14_16 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	addl	$1, 16(%rbp)
.Ltmp1150:
.LBB14_19:                              # %if.end56.i
                                        #   in Loop: Header=BB14_16 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	addl	$-1, %eax
	cmpl	$7, %ecx
.Ltmp1151:
	.loc	12 237 7                # decompress.c:237:7
	jle	.LBB14_16
.Ltmp1152:
.LBB14_20:                              # %if.then29.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 237 7                # decompress.c:237:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1153:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-5, %eax
.Ltmp1154:
	.loc	12 238 14 is_stmt 1     # decompress.c:238:14
	cmpb	$66, %dl
.Ltmp1155:
	.loc	12 238 11 is_stmt 0     # decompress.c:238:11
	jne	.LBB14_828
.Ltmp1156:
.LBB14_21:                              # %sw.bb62.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7 is_stmt 1      # decompress.c:240:7
	movl	$11, (%r12)
.Ltmp1157:
	.loc	12 240 7 is_stmt 0      # decompress.c:240:7
	cmpl	$8, %ecx
.Ltmp1158:
	.loc	12 240 7                # decompress.c:240:7
	jl	.LBB14_73
.Ltmp1159:
# %bb.22:                               # %sw.bb62.if.then69_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	movl	(%r14), %edx
	jmp	.LBB14_78
.Ltmp1160:
.LBB14_23:                              # %if.else
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 0                   # bzlib.c:0:0
	testb	%al, %al
.Ltmp1161:
	.loc	5 597 8 is_stmt 1       # bzlib.c:597:8
	je	.LBB14_79
.Ltmp1162:
# %bb.24:                               # %while.cond.preheader.i112
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 602 20                # bzlib.c:602:20
	movq	(%r15), %r8
	.loc	5 602 36 is_stmt 0      # bzlib.c:602:36
	cmpl	$0, 32(%r8)
.Ltmp1163:
	.loc	5 602 17                # bzlib.c:602:17
	je	.LBB14_184
.Ltmp1164:
# %bb.25:                               # %if.end.lr.ph.lr.ph.i123
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 603 20 is_stmt 1      # bzlib.c:603:20
	movl	16(%r15), %r14d
	jmp	.LBB14_86
.Ltmp1165:
.LBB14_27:                              # %while.cond339.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	testl	%ebx, %ebx
.Ltmp1166:
	.loc	5 820 17 is_stmt 1      # bzlib.c:820:17
	je	.LBB14_184
.Ltmp1167:
# %bb.28:                               # %if.end348.lr.ph.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 821 20                # bzlib.c:821:20
	movl	16(%r15), %r8d
.Ltmp1168:
.LBB14_29:                              # %if.end348.i.outer
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_51 Depth 3
                                        #         Child Loop BB14_55 Depth 4
                                        #         Child Loop BB14_62 Depth 4
                                        #         Child Loop BB14_32 Depth 4
                                        #         Child Loop BB14_39 Depth 4
                                        #         Child Loop BB14_44 Depth 4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 20 is_stmt 0        # bzlib.c:0:20
	movq	%r11, (%rsp)            # 8-byte Spill
	movl	%ebx, 16(%rsp)          # 4-byte Spill
	jmp	.LBB14_51
.Ltmp1169:
.LBB14_30:                              # %if.end481.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 847 14 is_stmt 1      # bzlib.c:847:14
	movzbl	%dl, %eax
	.loc	5 847 17 is_stmt 0      # bzlib.c:847:17
	cmpl	%r14d, %eax
	movl	16(%rsp), %ebx          # 4-byte Reload
.Ltmp1170:
	.loc	5 847 14                # bzlib.c:847:14
	jne	.LBB14_49
.Ltmp1171:
# %bb.31:                               # %if.end489.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 849 27 is_stmt 1      # bzlib.c:849:27
	movl	$3, 16(%r15)
	xorl	%edx, %edx
.Ltmp1172:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27 is_stmt 0        # bzlib.c:0:27
	movl	$256, %eax              # imm = 0x100
.Ltmp1173:
	.p2align	4, 0x90
.LBB14_32:                              # %do.body.i849.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        #       Parent Loop BB14_51 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdx,%rax), %ecx
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%ecx
.Ltmp1174:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%ecx, %rbx
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ebp, 1096(%r15,%rbx,4)
	jg	.LBB14_34
.Ltmp1175:
# %bb.33:                               # %do.body.i849.i
                                        #   in Loop: Header=BB14_32 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%ecx, %edx
.Ltmp1176:
	jmp	.LBB14_35
.Ltmp1177:
.LBB14_34:                              #   in Loop: Header=BB14_32 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ecx, %eax
.Ltmp1178:
.LBB14_35:                              # %do.body.i849.i
                                        #   in Loop: Header=BB14_32 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%eax, %ecx
.Ltmp1179:
	subl	%edx, %ecx
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %ecx
.Ltmp1180:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_32
.Ltmp1181:
# %bb.36:                               # %BZ2_indexIntoF.exit850.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 850 10                # bzlib.c:850:10
	movzwl	(%r10,%rbp,2), %ebx
	movl	%ebp, %eax
	shrq	%rax
	movzbl	(%r12,%rax), %eax
	shlb	$2, %r11b
	andb	$4, %r11b
	movl	%r11d, %ecx
	shrq	%cl, %rax
	andq	$15, %rax
	shlq	$16, %rax
	orq	%rbx, %rax
	movl	%eax, 60(%r15)
	.loc	5 850 42 is_stmt 0      # bzlib.c:850:42
	leal	3(%r9), %ecx
	movl	%ecx, 1092(%r15)
	movl	$3, %r8d
.Ltmp1182:
	.loc	5 851 29 is_stmt 1      # bzlib.c:851:29
	cmpl	%edi, %esi
.Ltmp1183:
	.loc	5 851 14 is_stmt 0      # bzlib.c:851:14
	je	.LBB14_67
.Ltmp1184:
# %bb.37:                               # %if.end523.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 852 14 is_stmt 1      # bzlib.c:852:14
	movzbl	%dl, %ecx
	.loc	5 852 17 is_stmt 0      # bzlib.c:852:17
	cmpl	%r14d, %ecx
	movq	(%rsp), %r11            # 8-byte Reload
.Ltmp1185:
	.loc	5 852 14                # bzlib.c:852:14
	jne	.LBB14_50
.Ltmp1186:
# %bb.38:                               # %do.body.i836.i.preheader
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	xorl	%edx, %edx
.Ltmp1187:
	movl	$256, %ecx              # imm = 0x100
.Ltmp1188:
.LBB14_39:                              # %do.body.i836.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        #       Parent Loop BB14_51 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdx,%rcx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp1189:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rdi
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%eax, 1096(%r15,%rdi,4)
	jg	.LBB14_41
.Ltmp1190:
# %bb.40:                               # %do.body.i836.i
                                        #   in Loop: Header=BB14_39 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %edx
.Ltmp1191:
	jmp	.LBB14_42
.Ltmp1192:
.LBB14_41:                              #   in Loop: Header=BB14_39 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %ecx
.Ltmp1193:
.LBB14_42:                              # %do.body.i836.i
                                        #   in Loop: Header=BB14_39 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%ecx, %esi
.Ltmp1194:
	subl	%edx, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1195:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_39
.Ltmp1196:
# %bb.43:                               # %BZ2_indexIntoF.exit837.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 854 10                # bzlib.c:854:10
	movl	%eax, %ecx
	shrq	%rcx
	movzbl	(%r12,%rcx), %edi
	shlb	$2, %bl
	andb	$4, %bl
	movl	%ebx, %ecx
	shrq	%cl, %rdi
	movzwl	(%r10,%rax,2), %ecx
	andq	$15, %rdi
	shlq	$16, %rdi
	orq	%rcx, %rdi
.Ltmp1197:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edi
	movl	%edi, 60(%r15)
	.loc	5 854 42 is_stmt 0      # bzlib.c:854:42
	leal	4(%r9), %eax
	movl	%eax, 1092(%r15)
	.loc	5 855 30 is_stmt 1      # bzlib.c:855:30
	movzbl	%dl, %r8d
	.loc	5 855 41 is_stmt 0      # bzlib.c:855:41
	addl	$4, %r8d
	.loc	5 855 27                # bzlib.c:855:27
	movl	%r8d, 16(%r15)
	xorl	%eax, %eax
.Ltmp1198:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27                  # bzlib.c:0:27
	movl	$256, %edx              # imm = 0x100
	movl	16(%rsp), %ebx          # 4-byte Reload
.Ltmp1199:
.LBB14_44:                              # %do.body.i823.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        #       Parent Loop BB14_51 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rax,%rdx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp1200:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rbp
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%edi, 1096(%r15,%rbp,4)
	jg	.LBB14_46
.Ltmp1201:
# %bb.45:                               # %do.body.i823.i
                                        #   in Loop: Header=BB14_44 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %eax
.Ltmp1202:
	jmp	.LBB14_47
.Ltmp1203:
.LBB14_46:                              #   in Loop: Header=BB14_44 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %edx
.Ltmp1204:
.LBB14_47:                              # %do.body.i823.i
                                        #   in Loop: Header=BB14_44 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%edx, %esi
.Ltmp1205:
	subl	%eax, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1206:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_44
.Ltmp1207:
# %bb.48:                               # %BZ2_indexIntoF.exit824.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 856 10                # bzlib.c:856:10
	movl	%eax, 64(%r15)
	movl	%edi, %eax
	shrq	%rax
	movzbl	(%r12,%rax), %eax
	shlb	$2, %cl
	andb	$4, %cl
                                        # kill: def $cl killed $cl killed $rcx
	shrl	%cl, %eax
	movzwl	(%r10,%rdi,2), %ecx
	andl	$15, %eax
	shll	$16, %eax
	orl	%ecx, %eax
	movl	%eax, 60(%r15)
	.loc	5 856 45 is_stmt 0      # bzlib.c:856:45
	addl	$5, %r9d
	movl	%r9d, 1092(%r15)
	jmp	.LBB14_69
.Ltmp1208:
.LBB14_49:                              # %if.then486.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 847 35 is_stmt 1      # bzlib.c:847:35
	movl	%eax, 64(%r15)
	movq	(%rsp), %r11            # 8-byte Reload
	jmp	.LBB14_69
.Ltmp1209:
.LBB14_50:                              # %if.then528.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 852 35                # bzlib.c:852:35
	movl	%ecx, 64(%r15)
	movl	16(%rsp), %ebx          # 4-byte Reload
	jmp	.LBB14_69
.Ltmp1210:
.LBB14_51:                              # %if.end348.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB14_55 Depth 4
                                        #         Child Loop BB14_62 Depth 4
                                        #         Child Loop BB14_32 Depth 4
                                        #         Child Loop BB14_39 Depth 4
                                        #         Child Loop BB14_44 Depth 4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 821 34                # bzlib.c:821:34
	testl	%r8d, %r8d
.Ltmp1211:
	.loc	5 821 17 is_stmt 0      # bzlib.c:821:17
	jne	.LBB14_70
.Ltmp1212:
# %bb.52:                               # %while.end388.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 832 17 is_stmt 1      # bzlib.c:832:17
	movl	1092(%r15), %r9d
	.loc	5 832 35 is_stmt 0      # bzlib.c:832:35
	movl	64080(%r15), %edi
.Ltmp1213:
	.loc	5 832 46                # bzlib.c:832:46
	leal	1(%rdi), %eax
	.loc	5 832 29                # bzlib.c:832:29
	cmpl	%eax, %r9d
.Ltmp1214:
	.loc	5 832 14                # bzlib.c:832:14
	je	.LBB14_184
.Ltmp1215:
# %bb.53:                               # %if.end395.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 835 14 is_stmt 1      # bzlib.c:835:14
	jg	.LBB14_846
.Ltmp1216:
# %bb.54:                               # %if.end402.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 838 27                # bzlib.c:838:27
	movl	$1, 16(%r15)
	.loc	5 840 10                # bzlib.c:840:10
	movl	60(%r15), %ecx
	.loc	5 839 31                # bzlib.c:839:31
	movl	64(%r15), %r14d
	.loc	5 839 26 is_stmt 0      # bzlib.c:839:26
	movb	%r14b, 12(%r15)
.Ltmp1217:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- undef
	.loc	5 0 26                  # bzlib.c:0:26
	xorl	%edx, %edx
.Ltmp1218:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	movl	$256, %eax              # imm = 0x100
.Ltmp1219:
	.p2align	4, 0x90
.LBB14_55:                              # %do.body.i875.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        #       Parent Loop BB14_51 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdx,%rax), %ebp
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%ebp
.Ltmp1220:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ebp
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%ebp, %rsi
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ecx, 1096(%r15,%rsi,4)
	jg	.LBB14_57
.Ltmp1221:
# %bb.56:                               # %do.body.i875.i
                                        #   in Loop: Header=BB14_55 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ebp
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%ebp, %edx
.Ltmp1222:
	jmp	.LBB14_58
.Ltmp1223:
	.p2align	4, 0x90
.LBB14_57:                              #   in Loop: Header=BB14_55 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ebp
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ebp, %eax
.Ltmp1224:
.LBB14_58:                              # %do.body.i875.i
                                        #   in Loop: Header=BB14_55 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ebp
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%eax, %esi
	subl	%edx, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1225:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_55
.Ltmp1226:
# %bb.59:                               # %BZ2_indexIntoF.exit876.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 840 10                # bzlib.c:840:10
	movq	3160(%r15), %r10
	movq	3168(%r15), %r12
	movzwl	(%r10,%rcx,2), %eax
	movq	%rcx, %rsi
	shrq	%rsi
	movzbl	(%r12,%rsi), %ebp
	shlb	$2, %cl
	andb	$4, %cl
                                        # kill: def $cl killed $cl killed $rcx
	shrq	%cl, %rbp
	andq	$15, %rbp
	shlq	$16, %rbp
	orq	%rax, %rbp
.Ltmp1227:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $ebp
	movl	%ebp, 60(%r15)
	.loc	5 840 42 is_stmt 0      # bzlib.c:840:42
	leal	1(%r9), %r13d
	movl	%r13d, 1092(%r15)
	movl	$1, %r8d
.Ltmp1228:
	.loc	5 841 29 is_stmt 1      # bzlib.c:841:29
	cmpl	%edi, %r9d
.Ltmp1229:
	.loc	5 841 14 is_stmt 0      # bzlib.c:841:14
	je	.LBB14_69
.Ltmp1230:
# %bb.60:                               # %if.end439.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 842 14 is_stmt 1      # bzlib.c:842:14
	movzbl	%dl, %ecx
	.loc	5 842 17 is_stmt 0      # bzlib.c:842:17
	cmpl	%r14d, %ecx
.Ltmp1231:
	.loc	5 842 14                # bzlib.c:842:14
	jne	.LBB14_68
.Ltmp1232:
# %bb.61:                               # %if.end447.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 844 27 is_stmt 1      # bzlib.c:844:27
	movl	$2, 16(%r15)
	xorl	%edx, %edx
.Ltmp1233:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27 is_stmt 0        # bzlib.c:0:27
	movl	$256, %ecx              # imm = 0x100
.Ltmp1234:
	.p2align	4, 0x90
.LBB14_62:                              # %do.body.i862.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_29 Depth=2
                                        #       Parent Loop BB14_51 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdx,%rcx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp1235:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rbx
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ebp, 1096(%r15,%rbx,4)
	jg	.LBB14_64
.Ltmp1236:
# %bb.63:                               # %do.body.i862.i
                                        #   in Loop: Header=BB14_62 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %edx
.Ltmp1237:
	jmp	.LBB14_65
.Ltmp1238:
	.p2align	4, 0x90
.LBB14_64:                              #   in Loop: Header=BB14_62 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %ecx
.Ltmp1239:
.LBB14_65:                              # %do.body.i862.i
                                        #   in Loop: Header=BB14_62 Depth=4
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%ecx, %esi
.Ltmp1240:
	subl	%edx, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1241:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_62
.Ltmp1242:
# %bb.66:                               # %BZ2_indexIntoF.exit863.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 845 10                # bzlib.c:845:10
	movzwl	(%r10,%rbp,2), %r11d
	movl	%ebp, %ecx
	shrq	%rcx
	movzbl	(%r12,%rcx), %ebp
	shlb	$2, %al
	andb	$4, %al
	movl	%eax, %ecx
	shrq	%cl, %rbp
	andq	$15, %rbp
	shlq	$16, %rbp
	orq	%r11, %rbp
.Ltmp1243:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $ebp
	movl	%ebp, 60(%r15)
	.loc	5 845 42 is_stmt 0      # bzlib.c:845:42
	leal	2(%r9), %esi
	movl	%esi, 1092(%r15)
	movl	$2, %r8d
.Ltmp1244:
	.loc	5 846 29 is_stmt 1      # bzlib.c:846:29
	cmpl	%edi, %r13d
.Ltmp1245:
	.loc	5 846 14 is_stmt 0      # bzlib.c:846:14
	jne	.LBB14_30
.Ltmp1246:
.LBB14_67:                              #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	movq	(%rsp), %r11            # 8-byte Reload
	movl	16(%rsp), %ebx          # 4-byte Reload
	jmp	.LBB14_69
.Ltmp1247:
.LBB14_68:                              # %if.then444.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: unRLE_obuf_to_output_SMALL:k1 <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 842 35 is_stmt 1      # bzlib.c:842:35
	movl	%ecx, 64(%r15)
.Ltmp1248:
.LBB14_69:                              # %while.cond339.backedge.i
                                        #   in Loop: Header=BB14_51 Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 820 36                # bzlib.c:820:36
	testl	%ebx, %ebx
	jne	.LBB14_51
	jmp	.LBB14_184
.Ltmp1249:
.LBB14_70:                              # %if.end353.i
                                        #   in Loop: Header=BB14_29 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 822 51                # bzlib.c:822:51
	movb	12(%r15), %al
	.loc	5 822 34 is_stmt 0      # bzlib.c:822:34
	movq	24(%r11), %rcx
	.loc	5 822 46                # bzlib.c:822:46
	movb	%al, (%rcx)
.Ltmp1250:
	.loc	5 823 13 is_stmt 1      # bzlib.c:823:13
	movl	3184(%r15), %eax
	movl	%eax, %ecx
	shll	$8, %ecx
	shrl	$24, %eax
	movzbl	12(%r15), %edx
	xorl	%eax, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %ecx
	movl	%ecx, 3184(%r15)
.Ltmp1251:
	.loc	5 824 29                # bzlib.c:824:29
	movl	16(%r15), %r8d
	addl	$-1, %r8d
	movl	%r8d, 16(%r15)
	.loc	5 825 16                # bzlib.c:825:16
	movq	(%r15), %r11
	.loc	5 825 30 is_stmt 0      # bzlib.c:825:30
	addq	$1, 24(%r11)
	.loc	5 826 31 is_stmt 1      # bzlib.c:826:31
	movl	32(%r11), %ebx
	addl	$-1, %ebx
	movl	%ebx, 32(%r11)
	.loc	5 827 36                # bzlib.c:827:36
	addl	$1, 36(%r11)
	.loc	5 828 17                # bzlib.c:828:17
	jne	.LBB14_72
.Ltmp1252:
# %bb.71:                               # %if.then383.i
                                        #   in Loop: Header=BB14_29 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 828 70 is_stmt 0      # bzlib.c:828:70
	addl	$1, 40(%r11)
.Ltmp1253:
.LBB14_72:                              # %if.end387.i
                                        #   in Loop: Header=BB14_29 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 820 36 is_stmt 1      # bzlib.c:820:36
	testl	%ebx, %ebx
	jne	.LBB14_29
	jmp	.LBB14_184
.Ltmp1254:
.LBB14_73:                              # %if.end79.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	movl	8(%rbp), %eax
.Ltmp1255:
	.loc	12 240 7 is_stmt 0      # decompress.c:240:7
	addl	$-1, %eax
.Ltmp1256:
	.p2align	4, 0x90
.LBB14_74:                              # %if.end79.i26
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	cmpl	$-1, %eax
.Ltmp1257:
	.loc	12 240 7                # decompress.c:240:7
	je	.LBB14_26
.Ltmp1258:
# %bb.75:                               # %if.end85.i
                                        #   in Loop: Header=BB14_74 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %esi
	shll	$8, %esi
	movq	(%rbp), %rdi
	movzbl	(%rdi), %edx
	orl	%esi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rdi
	movq	%rdi, (%rbp)
	movl	%eax, 8(%rbp)
	addl	$1, 12(%rbp)
	jne	.LBB14_77
.Ltmp1259:
# %bb.76:                               # %if.then108.i
                                        #   in Loop: Header=BB14_74 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	addl	$1, 16(%rbp)
.Ltmp1260:
.LBB14_77:                              # %if.end112.i
                                        #   in Loop: Header=BB14_74 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	addl	$-1, %eax
	cmpl	$7, %ecx
.Ltmp1261:
	.loc	12 240 7                # decompress.c:240:7
	jle	.LBB14_74
.Ltmp1262:
.LBB14_78:                              # %if.then69.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7                # decompress.c:240:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1263:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-5, %eax
.Ltmp1264:
	.loc	12 241 14 is_stmt 1     # decompress.c:241:14
	cmpb	$90, %dl
.Ltmp1265:
	.loc	12 241 11 is_stmt 0     # decompress.c:241:11
	je	.LBB14_207
	jmp	.LBB14_828
.Ltmp1266:
.LBB14_79:                              # %if.else.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 649 47 is_stmt 1      # bzlib.c:649:47
	movl	3184(%r15), %r11d
.Ltmp1267:
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	.loc	5 650 47                # bzlib.c:650:47
	movb	12(%r15), %r8b
.Ltmp1268:
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	.loc	5 651 47                # bzlib.c:651:47
	movl	16(%r15), %edx
.Ltmp1269:
	#DEBUG_VALUE: c_state_out_len <- $edx
	.loc	5 652 47                # bzlib.c:652:47
	movl	1092(%r15), %r13d
.Ltmp1270:
	#DEBUG_VALUE: c_nblock_used <- $r13d
	.loc	5 653 47                # bzlib.c:653:47
	movl	64(%r15), %r10d
.Ltmp1271:
	#DEBUG_VALUE: c_k0 <- $r10d
	.loc	5 654 47                # bzlib.c:654:47
	movq	3152(%r15), %rbx
.Ltmp1272:
	#DEBUG_VALUE: c_tt <- $rbx
	.loc	5 655 47                # bzlib.c:655:47
	movl	60(%r15), %r9d
.Ltmp1273:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 656 47                # bzlib.c:656:47
	movq	(%r15), %rax
	.loc	5 656 53 is_stmt 0      # bzlib.c:656:53
	movq	24(%rax), %rcx
.Ltmp1274:
	#DEBUG_VALUE: cs_next_out <- $rcx
	.loc	5 657 53 is_stmt 1      # bzlib.c:657:53
	movl	32(%rax), %eax
.Ltmp1275:
	#DEBUG_VALUE: avail_out_INIT <- $eax
	#DEBUG_VALUE: cs_avail_out <- $eax
	.loc	5 661 41                # bzlib.c:661:41
	movl	64080(%r15), %r14d
	.loc	5 661 52 is_stmt 0      # bzlib.c:661:52
	addl	$1, %r14d
.Ltmp1276:
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	.loc	5 0 52                  # bzlib.c:0:52
	movl	%eax, 56(%rsp)          # 4-byte Spill
.Ltmp1277:
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: cs_avail_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	movl	%eax, %ebp
	movq	%rbx, 16(%rsp)          # 8-byte Spill
	jmp	.LBB14_163
.Ltmp1278:
.LBB14_81:                              # %if.then138.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 631 35 is_stmt 1      # bzlib.c:631:35
	movl	%eax, 64(%r15)
	jmp	.LBB14_107
.Ltmp1279:
.LBB14_82:                              # %if.end6.i144
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 604 51                # bzlib.c:604:51
	movzbl	12(%r15), %eax
	.loc	5 604 34 is_stmt 0      # bzlib.c:604:34
	movq	24(%r8), %rcx
	.loc	5 604 46                # bzlib.c:604:46
	movb	%al, (%rcx)
.Ltmp1280:
	.loc	5 605 13 is_stmt 1      # bzlib.c:605:13
	movl	3184(%r15), %eax
	movl	%eax, %ecx
	shll	$8, %ecx
	shrl	$24, %eax
	movzbl	12(%r15), %edx
	xorl	%eax, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %ecx
	movl	%ecx, 3184(%r15)
.Ltmp1281:
	.loc	5 606 29                # bzlib.c:606:29
	movl	16(%r15), %r14d
	addl	$-1, %r14d
	movl	%r14d, 16(%r15)
	.loc	5 607 16                # bzlib.c:607:16
	movq	(%r15), %r8
	.loc	5 607 30 is_stmt 0      # bzlib.c:607:30
	addq	$1, 24(%r8)
	.loc	5 608 31 is_stmt 1      # bzlib.c:608:31
	movl	32(%r8), %eax
	addl	$-1, %eax
	movl	%eax, 32(%r8)
	.loc	5 609 36                # bzlib.c:609:36
	addl	$1, 36(%r8)
	.loc	5 610 17                # bzlib.c:610:17
	jne	.LBB14_84
.Ltmp1282:
# %bb.83:                               # %if.then23.i147
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 610 70 is_stmt 0      # bzlib.c:610:70
	addl	$1, 40(%r8)
.Ltmp1283:
.LBB14_84:                              # %if.end26.i149
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 602 36 is_stmt 1      # bzlib.c:602:36
	testl	%eax, %eax
	jne	.LBB14_86
	jmp	.LBB14_184
.Ltmp1284:
.LBB14_85:                              # %if.then192.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 637 35                # bzlib.c:637:35
	movl	%esi, 64(%r15)
	jmp	.LBB14_107
.Ltmp1285:
.LBB14_86:                              # %if.end.i127
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 603 34                # bzlib.c:603:34
	testl	%r14d, %r14d
.Ltmp1286:
	.loc	5 603 17 is_stmt 0      # bzlib.c:603:17
	jne	.LBB14_82
.Ltmp1287:
# %bb.87:                               # %while.end.i152
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 614 17 is_stmt 1      # bzlib.c:614:17
	movl	1092(%r15), %ecx
	.loc	5 614 35 is_stmt 0      # bzlib.c:614:35
	movl	64080(%r15), %ebx
	.loc	5 614 46                # bzlib.c:614:46
	leal	1(%rbx), %eax
	.loc	5 614 29                # bzlib.c:614:29
	cmpl	%eax, %ecx
.Ltmp1288:
	.loc	5 614 14                # bzlib.c:614:14
	je	.LBB14_184
.Ltmp1289:
# %bb.88:                               # %if.end30.i154
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 617 14 is_stmt 1      # bzlib.c:617:14
	jg	.LBB14_846
.Ltmp1290:
# %bb.89:                               # %if.end37.i157
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 620 27                # bzlib.c:620:27
	movl	$1, 16(%r15)
	.loc	5 621 31                # bzlib.c:621:31
	movl	64(%r15), %r11d
	.loc	5 621 26 is_stmt 0      # bzlib.c:621:26
	movb	%r11b, 12(%r15)
	.loc	5 622 10 is_stmt 1      # bzlib.c:622:10
	movq	3152(%r15), %r10
.Ltmp1291:
	.loc	5 622 27 is_stmt 0      # bzlib.c:622:27
	movl	24(%r15), %edx
.Ltmp1292:
	.loc	5 622 10                # bzlib.c:622:10
	movl	60(%r15), %eax
	movl	(%r10,%rax,4), %ebp
	movq	%rbp, %rsi
	shrq	$8, %rsi
	movl	%esi, 60(%r15)
.Ltmp1293:
	.loc	5 622 27                # bzlib.c:622:27
	testl	%edx, %edx
.Ltmp1294:
	.loc	5 622 27                # bzlib.c:622:27
	jne	.LBB14_91
.Ltmp1295:
# %bb.90:                               # %if.then50.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 622 27                # bzlib.c:622:27
	movslq	28(%r15), %rax
	movl	BZ2_rNums(,%rax,4), %edx
	movl	%edx, 24(%r15)
	leal	1(%rax), %eax
.Ltmp1296:
	.loc	5 622 27                # bzlib.c:622:27
	cmpl	$512, %eax              # imm = 0x200
.Ltmp1297:
	.loc	5 622 27                # bzlib.c:622:27
	movl	$0, %edi
.Ltmp1298:
	cmovel	%edi, %eax
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%eax, 28(%r15)
.Ltmp1299:
.LBB14_91:                              # %if.end62.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 622 27                # bzlib.c:622:27
	addl	$-1, %edx
	movl	%edx, 24(%r15)
	.loc	5 623 44 is_stmt 1      # bzlib.c:623:44
	leal	1(%rcx), %eax
	movl	%eax, 1092(%r15)
	movl	$1, %r14d
.Ltmp1300:
	.loc	5 624 29                # bzlib.c:624:29
	cmpl	%ebx, %ecx
.Ltmp1301:
	.loc	5 624 14 is_stmt 0      # bzlib.c:624:14
	je	.LBB14_107
.Ltmp1302:
# %bb.92:                               # %if.end79.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 623 16 is_stmt 1      # bzlib.c:623:16
	xorl	%edi, %edi
	cmpl	$1, %edx
	sete	%dil
.Ltmp1303:
	.loc	5 625 14                # bzlib.c:625:14
	movzbl	%bpl, %ebp
	xorl	%edi, %ebp
	.loc	5 625 17 is_stmt 0      # bzlib.c:625:17
	cmpl	%r11d, %ebp
.Ltmp1304:
	.loc	5 625 14                # bzlib.c:625:14
	jne	.LBB14_106
.Ltmp1305:
# %bb.93:                               # %if.end87.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 627 27 is_stmt 1      # bzlib.c:627:27
	movl	$2, 16(%r15)
	.loc	5 628 10                # bzlib.c:628:10
	movl	(%r10,%rsi,4), %r12d
	movq	%r12, %rsi
	shrq	$8, %rsi
	movl	%esi, 60(%r15)
.Ltmp1306:
	.loc	5 628 27 is_stmt 0      # bzlib.c:628:27
	testl	%edx, %edx
.Ltmp1307:
	.loc	5 628 27                # bzlib.c:628:27
	jne	.LBB14_95
.Ltmp1308:
# %bb.94:                               # %if.then102.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 628 27                # bzlib.c:628:27
	movslq	28(%r15), %rdi
	movl	BZ2_rNums(,%rdi,4), %edx
	movl	%edx, 24(%r15)
	leal	1(%rdi), %edi
.Ltmp1309:
	.loc	5 628 27                # bzlib.c:628:27
	cmpl	$512, %edi              # imm = 0x200
.Ltmp1310:
	.loc	5 628 27                # bzlib.c:628:27
	movl	$0, %ebp
	cmovel	%ebp, %edi
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%edi, 28(%r15)
.Ltmp1311:
.LBB14_95:                              # %if.end115.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 628 27                # bzlib.c:628:27
	addl	$-1, %edx
	movl	%edx, 24(%r15)
	.loc	5 629 44 is_stmt 1      # bzlib.c:629:44
	leal	2(%rcx), %r9d
	movl	%r9d, 1092(%r15)
	movl	$2, %r14d
.Ltmp1312:
	.loc	5 630 29                # bzlib.c:630:29
	cmpl	%ebx, %eax
.Ltmp1313:
	.loc	5 630 14 is_stmt 0      # bzlib.c:630:14
	je	.LBB14_107
.Ltmp1314:
# %bb.96:                               # %if.end133.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 629 16 is_stmt 1      # bzlib.c:629:16
	xorl	%edi, %edi
	cmpl	$1, %edx
	sete	%dil
.Ltmp1315:
	.loc	5 631 14                # bzlib.c:631:14
	movzbl	%r12b, %eax
	xorl	%edi, %eax
	.loc	5 631 17 is_stmt 0      # bzlib.c:631:17
	cmpl	%r11d, %eax
.Ltmp1316:
	.loc	5 631 14                # bzlib.c:631:14
	jne	.LBB14_81
.Ltmp1317:
# %bb.97:                               # %if.end141.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 633 27 is_stmt 1      # bzlib.c:633:27
	movl	$3, 16(%r15)
	.loc	5 634 10                # bzlib.c:634:10
	movl	(%r10,%rsi,4), %esi
	movq	%rsi, %rax
	shrq	$8, %rax
	movl	%eax, 60(%r15)
.Ltmp1318:
	.loc	5 634 27 is_stmt 0      # bzlib.c:634:27
	testl	%edx, %edx
.Ltmp1319:
	.loc	5 634 27                # bzlib.c:634:27
	jne	.LBB14_99
.Ltmp1320:
# %bb.98:                               # %if.then156.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 634 27                # bzlib.c:634:27
	movslq	28(%r15), %rdi
	movl	BZ2_rNums(,%rdi,4), %edx
	movl	%edx, 24(%r15)
	leal	1(%rdi), %edi
.Ltmp1321:
	.loc	5 634 27                # bzlib.c:634:27
	cmpl	$512, %edi              # imm = 0x200
.Ltmp1322:
	.loc	5 634 27                # bzlib.c:634:27
	movl	$0, %ebp
	cmovel	%ebp, %edi
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%edi, 28(%r15)
.Ltmp1323:
.LBB14_99:                              # %if.end169.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 634 27                # bzlib.c:634:27
	addl	$-1, %edx
	movl	%edx, 24(%r15)
	.loc	5 635 44 is_stmt 1      # bzlib.c:635:44
	leal	3(%rcx), %edi
	movl	%edi, 1092(%r15)
	movl	$3, %r14d
.Ltmp1324:
	.loc	5 636 29                # bzlib.c:636:29
	cmpl	%ebx, %r9d
.Ltmp1325:
	.loc	5 636 14 is_stmt 0      # bzlib.c:636:14
	je	.LBB14_107
.Ltmp1326:
# %bb.100:                              # %if.end187.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 635 16 is_stmt 1      # bzlib.c:635:16
	xorl	%edi, %edi
	cmpl	$1, %edx
	sete	%dil
.Ltmp1327:
	.loc	5 637 14                # bzlib.c:637:14
	movzbl	%sil, %esi
	xorl	%edi, %esi
	.loc	5 637 17 is_stmt 0      # bzlib.c:637:17
	cmpl	%r11d, %esi
.Ltmp1328:
	.loc	5 637 14                # bzlib.c:637:14
	jne	.LBB14_85
.Ltmp1329:
# %bb.101:                              # %if.end195.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 639 10 is_stmt 1      # bzlib.c:639:10
	movl	(%r10,%rax,4), %esi
	movq	%rsi, %rax
	shrq	$8, %rax
	movl	%eax, 60(%r15)
.Ltmp1330:
	.loc	5 639 27 is_stmt 0      # bzlib.c:639:27
	testl	%edx, %edx
.Ltmp1331:
	.loc	5 639 27                # bzlib.c:639:27
	jne	.LBB14_103
.Ltmp1332:
# %bb.102:                              # %if.then209.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 639 27                # bzlib.c:639:27
	movslq	28(%r15), %rdi
	movl	BZ2_rNums(,%rdi,4), %edx
	movl	%edx, 24(%r15)
	leal	1(%rdi), %edi
.Ltmp1333:
	.loc	5 639 27                # bzlib.c:639:27
	cmpl	$512, %edi              # imm = 0x200
.Ltmp1334:
	.loc	5 639 27                # bzlib.c:639:27
	movl	$0, %ebp
	cmovel	%ebp, %edi
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%edi, 28(%r15)
.Ltmp1335:
.LBB14_103:                             # %if.end222.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 642 30 is_stmt 1      # bzlib.c:642:30
	leal	-1(%rdx), %edi
.Ltmp1336:
	.loc	5 639 27                # bzlib.c:639:27
	movl	%edi, 24(%r15)
	.loc	5 640 16                # bzlib.c:640:16
	xorl	%ebp, %ebp
	cmpl	$1, %edi
	sete	%bpl
	.loc	5 640 44 is_stmt 0      # bzlib.c:640:44
	leal	4(%rcx), %edi
	movl	%edi, 1092(%r15)
	.loc	5 641 30 is_stmt 1      # bzlib.c:641:30
	movzbl	%sil, %r14d
	xorl	%ebp, %r14d
	.loc	5 641 41 is_stmt 0      # bzlib.c:641:41
	addl	$4, %r14d
	.loc	5 641 27                # bzlib.c:641:27
	movl	%r14d, 16(%r15)
	.loc	5 642 10 is_stmt 1      # bzlib.c:642:10
	movl	(%r10,%rax,4), %esi
	movzbl	%sil, %eax
	shrl	$8, %esi
	movl	%eax, 64(%r15)
	movl	%esi, 60(%r15)
.Ltmp1337:
	.loc	5 642 30 is_stmt 0      # bzlib.c:642:30
	addl	$-1, %edx
.Ltmp1338:
	.loc	5 642 30                # bzlib.c:642:30
	jne	.LBB14_105
.Ltmp1339:
# %bb.104:                              # %if.then252.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 642 30                # bzlib.c:642:30
	movslq	28(%r15), %rsi
	movl	BZ2_rNums(,%rsi,4), %edx
	movl	%edx, 24(%r15)
	leal	1(%rsi), %esi
.Ltmp1340:
	.loc	5 642 30                # bzlib.c:642:30
	cmpl	$512, %esi              # imm = 0x200
.Ltmp1341:
	.loc	5 642 30                # bzlib.c:642:30
	movl	$0, %edi
	cmovel	%edi, %esi
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%esi, 28(%r15)
.Ltmp1342:
.LBB14_105:                             # %if.end265.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 642 30                # bzlib.c:642:30
	addl	$-1, %edx
	movl	%edx, 24(%r15)
	.loc	5 643 19 is_stmt 1      # bzlib.c:643:19
	xorl	%esi, %esi
	cmpl	$1, %edx
	sete	%sil
	.loc	5 643 16 is_stmt 0      # bzlib.c:643:16
	xorl	%esi, %eax
	movl	%eax, 64(%r15)
	.loc	5 643 47                # bzlib.c:643:47
	addl	$5, %ecx
	movl	%ecx, 1092(%r15)
	jmp	.LBB14_107
.Ltmp1343:
.LBB14_106:                             # %if.then84.i
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 625 35 is_stmt 1      # bzlib.c:625:35
	movl	%ebp, 64(%r15)
.Ltmp1344:
.LBB14_107:                             # %while.cond.backedge.i162
                                        #   in Loop: Header=BB14_86 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 602 36                # bzlib.c:602:36
	cmpl	$0, 32(%r8)
	jne	.LBB14_86
	jmp	.LBB14_184
.Ltmp1345:
.LBB14_108:                             # %if.end.i.outer
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 36 is_stmt 0        # bzlib.c:0:36
	movq	%r11, (%rsp)            # 8-byte Spill
.Ltmp1346:
	.p2align	4, 0x90
.LBB14_109:                             # %if.end.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_113 Depth 3
                                        #       Child Loop BB14_122 Depth 3
                                        #       Child Loop BB14_134 Depth 3
                                        #       Child Loop BB14_143 Depth 3
                                        #       Child Loop BB14_150 Depth 3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 772 34 is_stmt 1      # bzlib.c:772:34
	testl	%r12d, %r12d
.Ltmp1347:
	.loc	5 772 17 is_stmt 0      # bzlib.c:772:17
	jne	.LBB14_158
.Ltmp1348:
# %bb.110:                              # %while.end.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 783 17 is_stmt 1      # bzlib.c:783:17
	movl	1092(%r15), %r13d
	.loc	5 783 35 is_stmt 0      # bzlib.c:783:35
	movl	64080(%r15), %r8d
	.loc	5 783 46                # bzlib.c:783:46
	leal	1(%r8), %eax
	.loc	5 783 29                # bzlib.c:783:29
	cmpl	%eax, %r13d
.Ltmp1349:
	.loc	5 783 14                # bzlib.c:783:14
	je	.LBB14_184
.Ltmp1350:
# %bb.111:                              # %if.end30.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 786 14 is_stmt 1      # bzlib.c:786:14
	jg	.LBB14_846
.Ltmp1351:
# %bb.112:                              # %if.end37.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 789 27                # bzlib.c:789:27
	movl	$1, 16(%r15)
	.loc	5 791 10                # bzlib.c:791:10
	movl	60(%r15), %ecx
	.loc	5 790 31                # bzlib.c:790:31
	movl	64(%r15), %r14d
	.loc	5 790 26 is_stmt 0      # bzlib.c:790:26
	movb	%r14b, 12(%r15)
.Ltmp1352:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- undef
	.loc	5 0 26                  # bzlib.c:0:26
	xorl	%edi, %edi
.Ltmp1353:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	movl	$256, %eax              # imm = 0x100
.Ltmp1354:
	.p2align	4, 0x90
.LBB14_113:                             # %do.body.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_109 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdi,%rax), %edx
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%edx
.Ltmp1355:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edx
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%edx, %rsi
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ecx, 1096(%r15,%rsi,4)
	jg	.LBB14_115
.Ltmp1356:
# %bb.114:                              # %do.body.i.i
                                        #   in Loop: Header=BB14_113 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%edx, %edi
.Ltmp1357:
	jmp	.LBB14_116
.Ltmp1358:
	.p2align	4, 0x90
.LBB14_115:                             #   in Loop: Header=BB14_113 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%edx, %eax
.Ltmp1359:
.LBB14_116:                             # %do.body.i.i
                                        #   in Loop: Header=BB14_113 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%eax, %edx
.Ltmp1360:
	subl	%edi, %edx
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %edx
.Ltmp1361:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_113
.Ltmp1362:
# %bb.117:                              # %BZ2_indexIntoF.exit.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 791 10                # bzlib.c:791:10
	movq	3160(%r15), %r10
	movzwl	(%r10,%rcx,2), %eax
	movq	3168(%r15), %rbx
	movq	%rcx, %rdx
	shrq	%rdx
	movzbl	(%rbx,%rdx), %edx
	shlb	$2, %cl
	andb	$4, %cl
                                        # kill: def $cl killed $cl killed $rcx
	shrq	%cl, %rdx
	andq	$15, %rdx
	shlq	$16, %rdx
	orq	%rax, %rdx
.Ltmp1363:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edx
	movl	%edx, 60(%r15)
.Ltmp1364:
	.loc	5 791 28 is_stmt 0      # bzlib.c:791:28
	movl	24(%r15), %ebp
	testl	%ebp, %ebp
.Ltmp1365:
	.loc	5 791 28                # bzlib.c:791:28
	jne	.LBB14_119
.Ltmp1366:
# %bb.118:                              # %if.then59.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 791 28                # bzlib.c:791:28
	movslq	28(%r15), %rcx
	movl	BZ2_rNums(,%rcx,4), %ebp
	movl	%ebp, 24(%r15)
	leal	1(%rcx), %ecx
.Ltmp1367:
	.loc	5 791 28                # bzlib.c:791:28
	cmpl	$512, %ecx              # imm = 0x200
.Ltmp1368:
	.loc	5 791 28                # bzlib.c:791:28
	movl	$0, %esi
	cmovel	%esi, %ecx
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%ecx, 28(%r15)
.Ltmp1369:
.LBB14_119:                             # %if.end71.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 791 28                # bzlib.c:791:28
	addl	$-1, %ebp
	movl	%ebp, 24(%r15)
	.loc	5 792 44 is_stmt 1      # bzlib.c:792:44
	leal	1(%r13), %r9d
	movl	%r9d, 1092(%r15)
	movl	$1, %r12d
.Ltmp1370:
	.loc	5 793 29                # bzlib.c:793:29
	cmpl	%r8d, %r13d
.Ltmp1371:
	.loc	5 793 14 is_stmt 0      # bzlib.c:793:14
	je	.LBB14_131
.Ltmp1372:
# %bb.120:                              # %if.end88.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 792 16 is_stmt 1      # bzlib.c:792:16
	xorl	%esi, %esi
	cmpl	$1, %ebp
	sete	%sil
.Ltmp1373:
	.loc	5 794 14                # bzlib.c:794:14
	movzbl	%dil, %ecx
	xorl	%esi, %ecx
	.loc	5 794 17 is_stmt 0      # bzlib.c:794:17
	cmpl	%r14d, %ecx
.Ltmp1374:
	.loc	5 794 14                # bzlib.c:794:14
	jne	.LBB14_130
.Ltmp1375:
# %bb.121:                              # %if.end96.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	movq	%rbx, 16(%rsp)          # 8-byte Spill
	.loc	5 796 27 is_stmt 1      # bzlib.c:796:27
	movl	$2, 16(%r15)
	xorl	%edi, %edi
.Ltmp1376:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27 is_stmt 0        # bzlib.c:0:27
	movl	$256, %ecx              # imm = 0x100
.Ltmp1377:
	.p2align	4, 0x90
.LBB14_122:                             # %do.body.i927.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_109 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdi,%rcx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp1378:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rbx
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%edx, 1096(%r15,%rbx,4)
	jg	.LBB14_124
.Ltmp1379:
# %bb.123:                              # %do.body.i927.i
                                        #   in Loop: Header=BB14_122 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %edi
.Ltmp1380:
	jmp	.LBB14_125
.Ltmp1381:
	.p2align	4, 0x90
.LBB14_124:                             #   in Loop: Header=BB14_122 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %ecx
.Ltmp1382:
.LBB14_125:                             # %do.body.i927.i
                                        #   in Loop: Header=BB14_122 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%ecx, %esi
.Ltmp1383:
	subl	%edi, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1384:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_122
.Ltmp1385:
# %bb.126:                              # %BZ2_indexIntoF.exit928.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 797 10                # bzlib.c:797:10
	movzwl	(%r10,%rdx,2), %r11d
	movl	%edx, %ecx
	shrq	%rcx
	movq	16(%rsp), %rdx          # 8-byte Reload
	movzbl	(%rdx,%rcx), %edx
	shlb	$2, %al
	andb	$4, %al
	movl	%eax, %ecx
	shrq	%cl, %rdx
	andq	$15, %rdx
	shlq	$16, %rdx
	orq	%r11, %rdx
.Ltmp1386:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $edx
	movl	%edx, 60(%r15)
.Ltmp1387:
	.loc	5 797 28 is_stmt 0      # bzlib.c:797:28
	testl	%ebp, %ebp
.Ltmp1388:
	.loc	5 797 28                # bzlib.c:797:28
	jne	.LBB14_128
.Ltmp1389:
# %bb.127:                              # %if.then125.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 797 28                # bzlib.c:797:28
	movslq	28(%r15), %rax
	movl	BZ2_rNums(,%rax,4), %ebp
	movl	%ebp, 24(%r15)
	leal	1(%rax), %eax
.Ltmp1390:
	.loc	5 797 28                # bzlib.c:797:28
	cmpl	$512, %eax              # imm = 0x200
.Ltmp1391:
	.loc	5 797 28                # bzlib.c:797:28
	movl	$0, %ecx
	cmovel	%ecx, %eax
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%eax, 28(%r15)
.Ltmp1392:
.LBB14_128:                             # %if.end138.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 797 28                # bzlib.c:797:28
	addl	$-1, %ebp
	movl	%ebp, 24(%r15)
	.loc	5 798 44 is_stmt 1      # bzlib.c:798:44
	leal	2(%r13), %eax
	movl	%eax, 1092(%r15)
	movl	$2, %r12d
.Ltmp1393:
	.loc	5 799 29                # bzlib.c:799:29
	cmpl	%r8d, %r9d
.Ltmp1394:
	.loc	5 799 14 is_stmt 0      # bzlib.c:799:14
	jne	.LBB14_132
.Ltmp1395:
# %bb.129:                              #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	movq	(%rsp), %r11            # 8-byte Reload
.Ltmp1396:
	.loc	5 771 36 is_stmt 1      # bzlib.c:771:36
	cmpl	$0, 32(%r11)
.Ltmp1397:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_109
	jmp	.LBB14_184
.Ltmp1398:
.LBB14_130:                             # %if.then93.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 794 35 is_stmt 1      # bzlib.c:794:35
	movl	%ecx, 64(%r15)
.Ltmp1399:
.LBB14_131:                             # %while.cond.backedge.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 771 36                # bzlib.c:771:36
	cmpl	$0, 32(%r11)
.Ltmp1400:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_109
	jmp	.LBB14_184
.Ltmp1401:
.LBB14_132:                             # %if.end156.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 798 16 is_stmt 1      # bzlib.c:798:16
	xorl	%esi, %esi
	cmpl	$1, %ebp
	sete	%sil
.Ltmp1402:
	.loc	5 800 14                # bzlib.c:800:14
	movzbl	%dil, %ecx
	xorl	%esi, %ecx
	.loc	5 800 17 is_stmt 0      # bzlib.c:800:17
	cmpl	%r14d, %ecx
.Ltmp1403:
	.loc	5 800 14                # bzlib.c:800:14
	jne	.LBB14_157
.Ltmp1404:
# %bb.133:                              # %if.end164.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 802 27 is_stmt 1      # bzlib.c:802:27
	movl	$3, 16(%r15)
	xorl	%edi, %edi
.Ltmp1405:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27 is_stmt 0        # bzlib.c:0:27
	movl	$256, %ecx              # imm = 0x100
.Ltmp1406:
	.p2align	4, 0x90
.LBB14_134:                             # %do.body.i914.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_109 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdi,%rcx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp1407:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rbx
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%edx, 1096(%r15,%rbx,4)
	jg	.LBB14_136
.Ltmp1408:
# %bb.135:                              # %do.body.i914.i
                                        #   in Loop: Header=BB14_134 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %edi
.Ltmp1409:
	jmp	.LBB14_137
.Ltmp1410:
	.p2align	4, 0x90
.LBB14_136:                             #   in Loop: Header=BB14_134 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %ecx
.Ltmp1411:
.LBB14_137:                             # %do.body.i914.i
                                        #   in Loop: Header=BB14_134 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%ecx, %esi
.Ltmp1412:
	subl	%edi, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp1413:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_134
.Ltmp1414:
# %bb.138:                              # %BZ2_indexIntoF.exit915.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 803 10                # bzlib.c:803:10
	movzwl	(%r10,%rdx,2), %ebx
	movl	%edx, %ecx
	shrq	%rcx
	movq	16(%rsp), %rdx          # 8-byte Reload
	movzbl	(%rdx,%rcx), %edx
	shlb	$2, %r11b
	andb	$4, %r11b
	movl	%r11d, %ecx
	shrq	%cl, %rdx
	andq	$15, %rdx
	shlq	$16, %rdx
	orq	%rbx, %rdx
	movl	%edx, 60(%r15)
.Ltmp1415:
	.loc	5 803 28 is_stmt 0      # bzlib.c:803:28
	testl	%ebp, %ebp
.Ltmp1416:
	.loc	5 803 28                # bzlib.c:803:28
	jne	.LBB14_140
.Ltmp1417:
# %bb.139:                              # %if.then193.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 803 28                # bzlib.c:803:28
	movslq	28(%r15), %rcx
	movl	BZ2_rNums(,%rcx,4), %ebp
	movl	%ebp, 24(%r15)
	leal	1(%rcx), %ecx
.Ltmp1418:
	.loc	5 803 28                # bzlib.c:803:28
	cmpl	$512, %ecx              # imm = 0x200
.Ltmp1419:
	.loc	5 803 28                # bzlib.c:803:28
	movl	$0, %esi
	cmovel	%esi, %ecx
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%ecx, 28(%r15)
.Ltmp1420:
.LBB14_140:                             # %if.end206.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 803 28                # bzlib.c:803:28
	addl	$-1, %ebp
	movl	%ebp, 24(%r15)
	.loc	5 804 44 is_stmt 1      # bzlib.c:804:44
	leal	3(%r13), %ecx
	movl	%ecx, 1092(%r15)
	movl	$3, %r12d
.Ltmp1421:
	.loc	5 805 29                # bzlib.c:805:29
	cmpl	%r8d, %eax
	movq	(%rsp), %r11            # 8-byte Reload
.Ltmp1422:
	.loc	5 805 14 is_stmt 0      # bzlib.c:805:14
	je	.LBB14_131
.Ltmp1423:
# %bb.141:                              # %if.end224.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 804 16 is_stmt 1      # bzlib.c:804:16
	xorl	%ecx, %ecx
	cmpl	$1, %ebp
	sete	%cl
.Ltmp1424:
	.loc	5 806 14                # bzlib.c:806:14
	movzbl	%dil, %eax
	xorl	%ecx, %eax
	.loc	5 806 17 is_stmt 0      # bzlib.c:806:17
	cmpl	%r14d, %eax
.Ltmp1425:
	.loc	5 806 14                # bzlib.c:806:14
	jne	.LBB14_161
.Ltmp1426:
# %bb.142:                              # %do.body.i901.i.preheader
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	xorl	%edi, %edi
	movl	$256, %eax              # imm = 0x100
.Ltmp1427:
.LBB14_143:                             # %do.body.i901.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_109 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdi,%rax), %ecx
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%ecx
.Ltmp1428:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%ecx, %rsi
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%edx, 1096(%r15,%rsi,4)
	jg	.LBB14_145
.Ltmp1429:
# %bb.144:                              # %do.body.i901.i
                                        #   in Loop: Header=BB14_143 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%ecx, %edi
.Ltmp1430:
	jmp	.LBB14_146
.Ltmp1431:
.LBB14_145:                             #   in Loop: Header=BB14_143 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ecx, %eax
.Ltmp1432:
.LBB14_146:                             # %do.body.i901.i
                                        #   in Loop: Header=BB14_143 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edi
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%eax, %ecx
.Ltmp1433:
	subl	%edi, %ecx
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %ecx
.Ltmp1434:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_143
.Ltmp1435:
# %bb.147:                              # %BZ2_indexIntoF.exit902.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 808 10                # bzlib.c:808:10
	movzwl	(%r10,%rdx,2), %esi
	movl	%edx, %eax
	shrq	%rax
	movq	16(%rsp), %rcx          # 8-byte Reload
	movzbl	(%rcx,%rax), %eax
	shlb	$2, %bl
	andb	$4, %bl
	movl	%ebx, %ecx
	shrq	%cl, %rax
	andq	$15, %rax
	shlq	$16, %rax
	orq	%rsi, %rax
.Ltmp1436:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $eax
	movl	%eax, 60(%r15)
.Ltmp1437:
	.loc	5 808 28 is_stmt 0      # bzlib.c:808:28
	testl	%ebp, %ebp
.Ltmp1438:
	.loc	5 808 28                # bzlib.c:808:28
	jne	.LBB14_149
.Ltmp1439:
# %bb.148:                              # %if.then260.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 808 28                # bzlib.c:808:28
	movslq	28(%r15), %rcx
	movl	BZ2_rNums(,%rcx,4), %ebp
	movl	%ebp, 24(%r15)
	leal	1(%rcx), %ecx
.Ltmp1440:
	.loc	5 808 28                # bzlib.c:808:28
	cmpl	$512, %ecx              # imm = 0x200
.Ltmp1441:
	.loc	5 808 28                # bzlib.c:808:28
	movl	$0, %edx
	cmovel	%edx, %ecx
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%ecx, 28(%r15)
.Ltmp1442:
.LBB14_149:                             # %if.end273.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 808 28                # bzlib.c:808:28
	addl	$-1, %ebp
	movl	%ebp, 24(%r15)
	.loc	5 809 16 is_stmt 1      # bzlib.c:809:16
	xorl	%ecx, %ecx
	cmpl	$1, %ebp
	sete	%cl
	.loc	5 809 44 is_stmt 0      # bzlib.c:809:44
	leal	4(%r13), %edx
	movl	%edx, 1092(%r15)
	.loc	5 810 30 is_stmt 1      # bzlib.c:810:30
	movzbl	%dil, %r12d
	xorl	%ecx, %r12d
	.loc	5 810 41 is_stmt 0      # bzlib.c:810:41
	addl	$4, %r12d
	.loc	5 810 27                # bzlib.c:810:27
	movl	%r12d, 16(%r15)
	xorl	%edx, %edx
.Ltmp1443:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	5 0 27                  # bzlib.c:0:27
	movl	$256, %ecx              # imm = 0x100
.Ltmp1444:
.LBB14_150:                             # %do.body.i888.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_109 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rdx,%rcx), %edi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%edi
.Ltmp1445:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%edi, %rbx
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%eax, 1096(%r15,%rbx,4)
	jg	.LBB14_152
.Ltmp1446:
# %bb.151:                              # %do.body.i888.i
                                        #   in Loop: Header=BB14_150 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%edi, %edx
.Ltmp1447:
	jmp	.LBB14_153
.Ltmp1448:
.LBB14_152:                             #   in Loop: Header=BB14_150 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%edi, %ecx
.Ltmp1449:
.LBB14_153:                             # %do.body.i888.i
                                        #   in Loop: Header=BB14_150 Depth=3
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $edi
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $ecx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%ecx, %edi
.Ltmp1450:
	subl	%edx, %edi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %edi
.Ltmp1451:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_150
.Ltmp1452:
# %bb.154:                              # %BZ2_indexIntoF.exit889.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 811 10                # bzlib.c:811:10
	movl	%edx, 64(%r15)
	movzwl	(%r10,%rax,2), %edi
	movl	%eax, %eax
	shrq	%rax
	movq	16(%rsp), %rcx          # 8-byte Reload
	movzbl	(%rcx,%rax), %eax
	shlb	$2, %sil
	andb	$4, %sil
	movl	%esi, %ecx
	shrl	%cl, %eax
	andl	$15, %eax
	shll	$16, %eax
	orl	%edi, %eax
	movl	%eax, 60(%r15)
.Ltmp1453:
	.loc	5 811 31 is_stmt 0      # bzlib.c:811:31
	testl	%ebp, %ebp
.Ltmp1454:
	.loc	5 811 31                # bzlib.c:811:31
	jne	.LBB14_156
.Ltmp1455:
# %bb.155:                              # %if.then315.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 811 31                # bzlib.c:811:31
	movslq	28(%r15), %rax
	movl	BZ2_rNums(,%rax,4), %ebp
	movl	%ebp, 24(%r15)
	leal	1(%rax), %eax
.Ltmp1456:
	.loc	5 811 31                # bzlib.c:811:31
	cmpl	$512, %eax              # imm = 0x200
.Ltmp1457:
	.loc	5 811 31                # bzlib.c:811:31
	movl	$0, %ecx
	cmovel	%ecx, %eax
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%eax, 28(%r15)
.Ltmp1458:
.LBB14_156:                             # %if.end328.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 811 31                # bzlib.c:811:31
	addl	$-1, %ebp
	movl	%ebp, 24(%r15)
	.loc	5 812 19 is_stmt 1      # bzlib.c:812:19
	xorl	%eax, %eax
	cmpl	$1, %ebp
	sete	%al
	.loc	5 812 16 is_stmt 0      # bzlib.c:812:16
	xorl	%eax, %edx
	movl	%edx, 64(%r15)
	.loc	5 812 47                # bzlib.c:812:47
	addl	$5, %r13d
	movl	%r13d, 1092(%r15)
.Ltmp1459:
	.loc	5 771 36 is_stmt 1      # bzlib.c:771:36
	cmpl	$0, 32(%r11)
.Ltmp1460:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_109
	jmp	.LBB14_184
.Ltmp1461:
.LBB14_157:                             # %if.then161.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 800 35 is_stmt 1      # bzlib.c:800:35
	movl	%ecx, 64(%r15)
	movq	(%rsp), %r11            # 8-byte Reload
.Ltmp1462:
	.loc	5 771 36                # bzlib.c:771:36
	cmpl	$0, 32(%r11)
.Ltmp1463:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_109
	jmp	.LBB14_184
.Ltmp1464:
.LBB14_158:                             # %if.end6.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 773 51 is_stmt 1      # bzlib.c:773:51
	movb	12(%r15), %al
	.loc	5 773 34 is_stmt 0      # bzlib.c:773:34
	movq	24(%r11), %rcx
	.loc	5 773 46                # bzlib.c:773:46
	movb	%al, (%rcx)
.Ltmp1465:
	.loc	5 774 13 is_stmt 1      # bzlib.c:774:13
	movl	3184(%r15), %eax
	movl	%eax, %ecx
	shll	$8, %ecx
	shrl	$24, %eax
	movzbl	12(%r15), %edx
	xorl	%eax, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %ecx
	movl	%ecx, 3184(%r15)
.Ltmp1466:
	.loc	5 775 29                # bzlib.c:775:29
	movl	16(%r15), %r12d
	addl	$-1, %r12d
	movl	%r12d, 16(%r15)
	.loc	5 776 16                # bzlib.c:776:16
	movq	(%r15), %r11
	.loc	5 776 30 is_stmt 0      # bzlib.c:776:30
	addq	$1, 24(%r11)
	.loc	5 777 31 is_stmt 1      # bzlib.c:777:31
	movl	32(%r11), %eax
	addl	$-1, %eax
	movl	%eax, 32(%r11)
	.loc	5 778 36                # bzlib.c:778:36
	addl	$1, 36(%r11)
	.loc	5 779 17                # bzlib.c:779:17
	jne	.LBB14_160
.Ltmp1467:
# %bb.159:                              # %if.then23.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 779 70 is_stmt 0      # bzlib.c:779:70
	addl	$1, 40(%r11)
.Ltmp1468:
.LBB14_160:                             # %if.end26.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 771 36 is_stmt 1      # bzlib.c:771:36
	testl	%eax, %eax
.Ltmp1469:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_108
	jmp	.LBB14_184
.Ltmp1470:
.LBB14_161:                             # %if.then229.i
                                        #   in Loop: Header=BB14_109 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 806 35 is_stmt 1      # bzlib.c:806:35
	movl	%eax, 64(%r15)
.Ltmp1471:
	.loc	5 771 36                # bzlib.c:771:36
	cmpl	$0, 32(%r11)
.Ltmp1472:
	.loc	5 771 17 is_stmt 0      # bzlib.c:771:17
	jne	.LBB14_109
	jmp	.LBB14_184
.Ltmp1473:
.LBB14_162:                             # %if.end385.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: unRLE_obuf_to_output_FAST:k1 <- $eax
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_tPos <- $eax
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 714 10 is_stmt 1      # bzlib.c:714:10
	movl	(%rbx,%r9,4), %eax
.Ltmp1474:
	#DEBUG_VALUE: c_tPos <- $eax
	.loc	5 715 29                # bzlib.c:715:29
	movzbl	%al, %edx
	.loc	5 716 10                # bzlib.c:716:10
	shrq	$6, %rax
.Ltmp1475:
	.loc	5 714 10                # bzlib.c:714:10
	andl	$67108860, %eax         # imm = 0x3FFFFFC
.Ltmp1476:
	#DEBUG_VALUE: c_tPos <- undef
	.loc	5 715 40                # bzlib.c:715:40
	addl	$4, %edx
.Ltmp1477:
	#DEBUG_VALUE: c_state_out_len <- $edx
	.loc	5 716 10                # bzlib.c:716:10
	movl	(%rbx,%rax), %r9d
.Ltmp1478:
	#DEBUG_VALUE: c_tPos <- $r9d
	movzbl	%r9b, %r10d
.Ltmp1479:
	#DEBUG_VALUE: c_k0 <- $r10d
	shrl	$8, %r9d
.Ltmp1480:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 716 44 is_stmt 0      # bzlib.c:716:44
	addl	$5, %esi
.Ltmp1481:
	#DEBUG_VALUE: c_nblock_used <- $esi
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%esi, %r13d
.Ltmp1482:
.LBB14_163:                             # %while.cond289.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_166 Depth 3
	#DEBUG_VALUE: cs_avail_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_len <- $edx
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_state_out_len <- $edx
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: cs_avail_out <- $ebp
	.loc	5 667 30 is_stmt 1      # bzlib.c:667:30
	testl	%edx, %edx
.Ltmp1483:
	.loc	5 667 14 is_stmt 0      # bzlib.c:667:14
	jle	.LBB14_168
.Ltmp1484:
# %bb.164:                              # %while.cond294.preheader.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_len <- $edx
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 14                  # bzlib.c:0:14
	movl	%edx, (%rsp)            # 4-byte Spill
.Ltmp1485:
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	.loc	5 669 33 is_stmt 1      # bzlib.c:669:33
	testl	%ebp, %ebp
.Ltmp1486:
	.loc	5 669 20 is_stmt 0      # bzlib.c:669:20
	je	.LBB14_512
.Ltmp1487:
# %bb.165:                              # %if.end299.lr.ph.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 0 20                  # bzlib.c:0:20
	movl	%ebp, %eax
	movzbl	%r8b, %ebp
.Ltmp1488:
	movl	%eax, %r12d
	.loc	5 669 20                # bzlib.c:669:20
	movl	%eax, %eax
	movl	(%rsp), %edi            # 4-byte Reload
.Ltmp1489:
	addq	$-1, %rdi
	xorl	%esi, %esi
.Ltmp1490:
	.p2align	4, 0x90
.LBB14_166:                             # %if.end299.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_163 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_len <- undef
	#DEBUG_VALUE: cs_next_out <- undef
	#DEBUG_VALUE: cs_avail_out <- undef
	.loc	5 670 36 is_stmt 1      # bzlib.c:670:36
	cmpl	%esi, %edi
.Ltmp1491:
	.loc	5 670 20 is_stmt 0      # bzlib.c:670:20
	je	.LBB14_169
.Ltmp1492:
# %bb.167:                              # %if.end303.i
                                        #   in Loop: Header=BB14_166 Depth=3
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 671 43 is_stmt 1      # bzlib.c:671:43
	movb	%bpl, (%rcx,%rsi)
.Ltmp1493:
	.loc	5 672 16                # bzlib.c:672:16
	movl	%r11d, %edx
	shll	$8, %edx
	shrl	$24, %r11d
.Ltmp1494:
	movl	%r11d, %ebx
.Ltmp1495:
	xorl	%ebp, %ebx
	movl	%edx, %r11d
	xorl	BZ2_crc32Table(,%rbx,4), %r11d
.Ltmp1496:
	#DEBUG_VALUE: c_state_out_len <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: cs_next_out <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: cs_avail_out <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	.loc	5 669 33                # bzlib.c:669:33
	addq	$1, %rsi
	cmpl	%esi, %eax
.Ltmp1497:
	.loc	5 669 20 is_stmt 0      # bzlib.c:669:20
	jne	.LBB14_166
	jmp	.LBB14_180
.Ltmp1498:
.LBB14_168:                             #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_len <- $edx
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 650 21 is_stmt 1      # bzlib.c:650:21
	movl	%r8d, %r12d
	.loc	5 652 21                # bzlib.c:652:21
	movl	%r13d, %esi
	.loc	5 653 21                # bzlib.c:653:21
	movl	%r10d, %r8d
.Ltmp1499:
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: c_nblock_used <- $esi
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_nblock_used <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $esi
	.loc	5 689 28                # bzlib.c:689:28
	cmpl	%r14d, %esi
.Ltmp1500:
	.loc	5 689 14 is_stmt 0      # bzlib.c:689:14
	jle	.LBB14_172
	jmp	.LBB14_846
.Ltmp1501:
.LBB14_169:                             # %s_state_out_len_eq_one.i.loopexit
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	movl	%r12d, %ebp
.Ltmp1502:
	.loc	5 679 33 is_stmt 1      # bzlib.c:679:33
	subl	%esi, %ebp
	addq	%rsi, %rcx
	movq	16(%rsp), %rbx          # 8-byte Reload
.Ltmp1503:
.LBB14_170:                             # %s_state_out_len_eq_one.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: cs_avail_out <- $ebp
	testl	%ebp, %ebp
.Ltmp1504:
	.loc	5 679 20 is_stmt 0      # bzlib.c:679:20
	je	.LBB14_282
.Ltmp1505:
# %bb.171:                              # %if.end318.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 682 43 is_stmt 1      # bzlib.c:682:43
	movb	%r8b, (%rcx)
.Ltmp1506:
	.loc	5 683 16                # bzlib.c:683:16
	movl	%r11d, %eax
	shll	$8, %eax
	shrl	$24, %r11d
.Ltmp1507:
	movzbl	%r8b, %edx
	xorl	%r11d, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %eax
.Ltmp1508:
	#DEBUG_VALUE: c_calculatedBlockCRC <- $eax
	.loc	5 684 27                # bzlib.c:684:27
	addq	$1, %rcx
.Ltmp1509:
	#DEBUG_VALUE: cs_next_out <- $rcx
	.loc	5 685 28                # bzlib.c:685:28
	addl	$-1, %ebp
.Ltmp1510:
	#DEBUG_VALUE: cs_avail_out <- $ebp
	.loc	5 650 21                # bzlib.c:650:21
	movl	%r8d, %r12d
	.loc	5 652 21                # bzlib.c:652:21
	movl	%r13d, %esi
	.loc	5 653 21                # bzlib.c:653:21
	movl	%r10d, %r8d
.Ltmp1511:
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	%eax, %r11d
.Ltmp1512:
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: c_nblock_used <- $esi
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_nblock_used <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $esi
	.loc	5 689 28 is_stmt 1      # bzlib.c:689:28
	cmpl	%r14d, %esi
.Ltmp1513:
	.loc	5 689 14 is_stmt 0      # bzlib.c:689:14
	jg	.LBB14_846
.Ltmp1514:
.LBB14_172:                             # %if.end332.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_nblock_used <- $esi
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 693 28 is_stmt 1      # bzlib.c:693:28
	cmpl	%r14d, %esi
.Ltmp1515:
	.loc	5 693 14 is_stmt 0      # bzlib.c:693:14
	je	.LBB14_283
.Ltmp1516:
# %bb.173:                              # %if.end336.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_nblock_used <- $esi
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	.loc	5 697 10 is_stmt 1      # bzlib.c:697:10
	movl	%r9d, %eax
	movl	(%rbx,%rax,4), %r9d
.Ltmp1517:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 698 14                # bzlib.c:698:14
	movzbl	%r9b, %r10d
.Ltmp1518:
	.loc	5 697 10                # bzlib.c:697:10
	shrq	$8, %r9
.Ltmp1519:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 697 42 is_stmt 0      # bzlib.c:697:42
	leal	1(%rsi), %r13d
.Ltmp1520:
	#DEBUG_VALUE: c_nblock_used <- $r13d
	.loc	5 698 17 is_stmt 1      # bzlib.c:698:17
	cmpl	%r8d, %r10d
.Ltmp1521:
	.loc	5 698 14 is_stmt 0      # bzlib.c:698:14
	jne	.LBB14_170
.Ltmp1522:
# %bb.174:                              # %if.end349.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 701 28 is_stmt 1      # bzlib.c:701:28
	cmpl	%r14d, %r13d
.Ltmp1523:
	.loc	5 701 14 is_stmt 0      # bzlib.c:701:14
	jne	.LBB14_176
.Ltmp1524:
# %bb.175:                              #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 0                   # bzlib.c:0:0
	movl	%r14d, %r13d
.Ltmp1525:
	movl	%r8d, %r10d
	jmp	.LBB14_170
.Ltmp1526:
.LBB14_176:                             # %if.end353.i166
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_state_out_len <- 2
	.loc	5 705 10 is_stmt 1      # bzlib.c:705:10
	movl	(%rbx,%r9,4), %eax
	movq	%rax, %r9
.Ltmp1527:
	shrq	$8, %r9
.Ltmp1528:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 705 42 is_stmt 0      # bzlib.c:705:42
	leal	2(%rsi), %edi
.Ltmp1529:
	#DEBUG_VALUE: c_nblock_used <- $edi
	.loc	5 0 42                  # bzlib.c:0:42
	movl	$2, %edx
.Ltmp1530:
	movl	%r14d, %r13d
	movl	%r8d, %r10d
.Ltmp1531:
	.loc	5 706 28 is_stmt 1      # bzlib.c:706:28
	cmpl	%r14d, %edi
.Ltmp1532:
	.loc	5 706 14 is_stmt 0      # bzlib.c:706:14
	je	.LBB14_163
.Ltmp1533:
# %bb.177:                              # %if.end363.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_nblock_used <- $edi
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_tPos <- $eax
	#DEBUG_VALUE: unRLE_obuf_to_output_FAST:k1 <- $eax
	.loc	5 707 14 is_stmt 1      # bzlib.c:707:14
	movzbl	%al, %r10d
.Ltmp1534:
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	%edi, %r13d
.Ltmp1535:
	#DEBUG_VALUE: c_nblock_used <- $r13d
	.loc	5 707 17                # bzlib.c:707:17
	cmpl	%r8d, %r10d
.Ltmp1536:
	.loc	5 707 14                # bzlib.c:707:14
	jne	.LBB14_163
.Ltmp1537:
# %bb.178:                              # %if.end369.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: unRLE_obuf_to_output_FAST:k1 <- $eax
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_tPos <- $eax
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_state_out_len <- 3
	.loc	5 710 10 is_stmt 1      # bzlib.c:710:10
	movl	(%rbx,%r9,4), %eax
.Ltmp1538:
	movq	%rax, %r9
	shrq	$8, %r9
.Ltmp1539:
	#DEBUG_VALUE: c_tPos <- $r9d
	.loc	5 710 42 is_stmt 0      # bzlib.c:710:42
	leal	3(%rsi), %edi
.Ltmp1540:
	#DEBUG_VALUE: c_nblock_used <- $edi
	.loc	5 0 42                  # bzlib.c:0:42
	movl	$3, %edx
.Ltmp1541:
	movl	%r14d, %r13d
	movl	%r8d, %r10d
.Ltmp1542:
	.loc	5 711 28 is_stmt 1      # bzlib.c:711:28
	cmpl	%r14d, %edi
.Ltmp1543:
	.loc	5 711 14 is_stmt 0      # bzlib.c:711:14
	je	.LBB14_163
.Ltmp1544:
# %bb.179:                              # %if.end379.i
                                        #   in Loop: Header=BB14_163 Depth=2
	#DEBUG_VALUE: c_nblock_used <- $edi
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_tPos <- $eax
	#DEBUG_VALUE: unRLE_obuf_to_output_FAST:k1 <- $eax
	.loc	5 712 14 is_stmt 1      # bzlib.c:712:14
	movzbl	%al, %r10d
.Ltmp1545:
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	%edi, %r13d
.Ltmp1546:
	#DEBUG_VALUE: c_nblock_used <- $r13d
	.loc	5 712 17                # bzlib.c:712:17
	cmpl	%r8d, %r10d
.Ltmp1547:
	.loc	5 712 14                # bzlib.c:712:14
	jne	.LBB14_163
	jmp	.LBB14_162
.Ltmp1548:
.LBB14_180:                             # %return_notr.i.loopexit
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 720 31 is_stmt 1      # bzlib.c:720:31
	addq	%rsi, %rcx
	subl	%esi, (%rsp)            # 4-byte Folded Spill
	.loc	5 650 21                # bzlib.c:650:21
	movl	%r8d, %r12d
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	xorl	%ebp, %ebp
	movq	16(%rsp), %rbx          # 8-byte Reload
.Ltmp1549:
.LBB14_181:                             # %return_notr.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: total_out_lo32_old <- undef
	.loc	5 720 31 is_stmt 1      # bzlib.c:720:31
	movq	(%r15), %rax
	movl	56(%rsp), %edx          # 4-byte Reload
	.loc	5 721 50                # bzlib.c:721:50
	subl	%ebp, %edx
	.loc	5 721 31 is_stmt 0      # bzlib.c:721:31
	addl	%edx, 36(%rax)
	.loc	5 722 11 is_stmt 1      # bzlib.c:722:11
	jae	.LBB14_183
.Ltmp1550:
# %bb.182:                              # %if.then410.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 723 33                # bzlib.c:723:33
	addl	$1, 40(%rax)
.Ltmp1551:
.LBB14_183:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 726 29                # bzlib.c:726:29
	movl	%r11d, 3184(%r15)
	.loc	5 727 29                # bzlib.c:727:29
	movb	%r12b, 12(%r15)
	movl	(%rsp), %edx            # 4-byte Reload
	.loc	5 728 29                # bzlib.c:728:29
	movl	%edx, 16(%r15)
	.loc	5 729 29                # bzlib.c:729:29
	movl	%r13d, 1092(%r15)
	.loc	5 730 29                # bzlib.c:730:29
	movl	%r10d, 64(%r15)
	.loc	5 731 29                # bzlib.c:731:29
	movq	%rbx, 3152(%r15)
	.loc	5 732 29                # bzlib.c:732:29
	movl	%r9d, 60(%r15)
	.loc	5 733 29                # bzlib.c:733:29
	movq	%rcx, 24(%rax)
	.loc	5 734 29                # bzlib.c:734:29
	movl	%ebp, 32(%rax)
.Ltmp1552:
.LBB14_184:                             # %if.end20
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 880 35                # bzlib.c:880:35
	movl	64080(%r15), %ecx
	.loc	5 880 46 is_stmt 0      # bzlib.c:880:46
	addl	$1, %ecx
	xorl	%eax, %eax
	.loc	5 880 29                # bzlib.c:880:29
	cmpl	%ecx, 1092(%r15)
	.loc	5 880 49                # bzlib.c:880:49
	jne	.LBB14_843
.Ltmp1553:
# %bb.185:                              # %land.lhs.true
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 880 69                # bzlib.c:880:69
	cmpl	$0, 16(%r15)
	movq	216(%rsp), %r12         # 8-byte Reload
	movq	176(%rsp), %r13         # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r14         # 8-byte Reload
.Ltmp1554:
	.loc	5 880 14                # bzlib.c:880:14
	jne	.LBB14_843
.Ltmp1555:
# %bb.186:                              # %if.then23
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 881 13 is_stmt 1      # bzlib.c:881:13
	movl	3184(%r15), %ecx
	notl	%ecx
	movl	%ecx, 3184(%r15)
.Ltmp1556:
	.loc	5 882 20                # bzlib.c:882:20
	movl	52(%r15), %eax
	.loc	5 882 30 is_stmt 0      # bzlib.c:882:30
	cmpl	$3, %eax
.Ltmp1557:
	.loc	5 882 17                # bzlib.c:882:17
	jge	.LBB14_193
.Ltmp1558:
# %bb.187:                              # %if.end29
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 885 30 is_stmt 1      # bzlib.c:885:30
	cmpl	$2, %eax
.Ltmp1559:
	.loc	5 885 17 is_stmt 0      # bzlib.c:885:17
	jge	.LBB14_194
.Ltmp1560:
.LBB14_188:                             # %if.end34
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 886 20 is_stmt 1      # bzlib.c:886:20
	movl	3184(%r15), %eax
	.loc	5 886 39 is_stmt 0      # bzlib.c:886:39
	cmpl	3176(%r15), %eax
.Ltmp1561:
	.loc	5 886 17                # bzlib.c:886:17
	jne	.LBB14_846
.Ltmp1562:
# %bb.189:                              # %if.then50.thread
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 889 22 is_stmt 1      # bzlib.c:889:22
	movl	3188(%r15), %ecx
	.loc	5 889 50 is_stmt 0      # bzlib.c:889:50
	roll	%ecx
	.loc	5 891 38 is_stmt 1      # bzlib.c:891:38
	xorl	%eax, %ecx
	movl	%ecx, 3188(%r15)
	.loc	5 892 22                # bzlib.c:892:22
	movl	$14, 8(%r15)
.Ltmp1563:
	.loc	12 151 25               # decompress.c:151:25
	movq	(%r15), %rbp
	movl	$14, %ecx
.Ltmp1564:
.LBB14_190:                             # %if.end.i15
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:retVal <- 0
	.loc	12 235 4                # decompress.c:235:4
	addl	$-10, %ecx
	cmpl	$40, %ecx
	ja	.LBB14_852
.Ltmp1565:
# %bb.191:                              # %if.end.i15
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 4 is_stmt 0        # decompress.c:0:4
	movl	64036(%r15), %eax
.Ltmp1566:
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	64040(%r15), %eax
.Ltmp1567:
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	movl	%eax, 24(%rsp)          # 4-byte Spill
	movl	64044(%r15), %eax
.Ltmp1568:
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	movl	%eax, 136(%rsp)         # 4-byte Spill
	movl	64048(%r15), %eax
.Ltmp1569:
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	movl	%eax, 92(%rsp)          # 4-byte Spill
	movl	64052(%r15), %ebx
.Ltmp1570:
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	movl	64056(%r15), %eax
.Ltmp1571:
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	movl	%eax, 56(%rsp)          # 4-byte Spill
	movl	64060(%r15), %eax
.Ltmp1572:
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	movl	%eax, 28(%rsp)          # 4-byte Spill
	movl	64064(%r15), %eax
.Ltmp1573:
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movl	64068(%r15), %eax
.Ltmp1574:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	movl	%eax, 80(%rsp)          # 4-byte Spill
	movl	64072(%r15), %r10d
.Ltmp1575:
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	movl	64076(%r15), %r11d
.Ltmp1576:
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	movl	64080(%r15), %eax
.Ltmp1577:
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	movq	%rax, 48(%rsp)          # 8-byte Spill
	movl	64084(%r15), %eax
.Ltmp1578:
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	movq	%rax, 104(%rsp)         # 8-byte Spill
	movl	64088(%r15), %r8d
.Ltmp1579:
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	movl	64092(%r15), %eax
.Ltmp1580:
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	movq	%rax, 168(%rsp)         # 8-byte Spill
	movl	64096(%r15), %eax
.Ltmp1581:
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	movl	%eax, 212(%rsp)         # 4-byte Spill
	movl	64100(%r15), %eax
.Ltmp1582:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	movl	%eax, 16(%rsp)          # 4-byte Spill
	movl	64104(%r15), %eax
.Ltmp1583:
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	64108(%r15), %eax
.Ltmp1584:
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	movl	%eax, 124(%rsp)         # 4-byte Spill
	movl	64112(%r15), %eax
.Ltmp1585:
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movl	64116(%r15), %eax
.Ltmp1586:
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%eax, 64(%rsp)          # 4-byte Spill
	movq	64120(%r15), %rax
.Ltmp1587:
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	movq	%rax, 160(%rsp)         # 8-byte Spill
	movq	64128(%r15), %rax
.Ltmp1588:
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movq	64136(%r15), %rax
.Ltmp1589:
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	movq	%rax, 144(%rsp)         # 8-byte Spill
	jmpq	*.LJTI14_0(,%rcx,8)
.Ltmp1590:
.LBB14_192:                             # %if.end.sw.bb62_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 240 7 is_stmt 1      # decompress.c:240:7
	movl	(%r9), %ecx
	jmp	.LBB14_21
.Ltmp1591:
.LBB14_193:                             # %if.then26
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 883 16                # bzlib.c:883:16
	movq	stderr(%rip), %rdi
	movl	3176(%r15), %edx
	movl	$.L.str.2.35, %esi
	xorl	%eax, %eax
	movq	%r9, %rbx
	callq	fprintf
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	pxor	%xmm8, %xmm8
	movq	%rbx, %r9
.Ltmp1592:
	.loc	5 885 20                # bzlib.c:885:20
	movl	52(%r15), %eax
	.loc	5 885 30 is_stmt 0      # bzlib.c:885:30
	cmpl	$2, %eax
.Ltmp1593:
	.loc	5 885 17                # bzlib.c:885:17
	jl	.LBB14_188
.Ltmp1594:
.LBB14_194:                             # %if.then32
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 885 36                # bzlib.c:885:36
	movq	stderr(%rip), %rsi
	movl	$93, %edi
	movq	%r9, %rbx
	callq	fputc
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	pxor	%xmm8, %xmm8
	movq	%rbx, %r9
	jmp	.LBB14_188
.Ltmp1595:
.LBB14_195:                             # %if.end.sw.bb3114_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7 is_stmt 1      # decompress.c:610:7
	movl	(%r9), %ecx
	jmp	.LBB14_430
.Ltmp1596:
.LBB14_196:                             # %if.end.sw.bb3228_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	movl	(%r9), %ecx
	jmp	.LBB14_447
.Ltmp1597:
.LBB14_197:                             # %if.end.sw.bb394_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	movl	(%r9), %ecx
	jmp	.LBB14_305
.Ltmp1598:
.LBB14_198:                             # %if.end.sw.bb1312_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	movl	(%r9), %ecx
.Ltmp1599:
.LBB14_199:                             # %sw.bb1312.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	.loc	12 329 7 is_stmt 0      # decompress.c:329:7
	movl	$31, (%r12)
.Ltmp1600:
	.loc	12 329 7                # decompress.c:329:7
	cmpl	$15, %ecx
.Ltmp1601:
	.loc	12 329 7                # decompress.c:329:7
	jl	.LBB14_246
.Ltmp1602:
# %bb.200:                              # %sw.bb1312.if.then1319_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	movl	(%r14), %esi
	jmp	.LBB14_251
.Ltmp1603:
.LBB14_201:                             # %if.end.sw.bb3057_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7 is_stmt 1      # decompress.c:608:7
	movl	(%r9), %ecx
	jmp	.LBB14_422
.Ltmp1604:
.LBB14_202:                             # %if.end.sw.bb3171_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	movl	(%r9), %ecx
	jmp	.LBB14_438
.Ltmp1605:
.LBB14_203:                             # %if.end.sw.bb176_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	movl	(%r9), %ecx
	jmp	.LBB14_215
.Ltmp1606:
.LBB14_204:                             # %if.end.sw.bb3000_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	movl	(%r9), %ecx
	jmp	.LBB14_414
.Ltmp1607:
.LBB14_205:                             # %if.end.sw.bb3399_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	movl	(%r9), %ecx
	jmp	.LBB14_471
.Ltmp1608:
.LBB14_206:                             # %if.end.sw.bb119_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	movl	(%r9), %ecx
.Ltmp1609:
.LBB14_207:                             # %sw.bb119.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7 is_stmt 0      # decompress.c:243:7
	movl	$12, (%r12)
.Ltmp1610:
	.loc	12 243 7                # decompress.c:243:7
	cmpl	$8, %ecx
.Ltmp1611:
	.loc	12 243 7                # decompress.c:243:7
	jl	.LBB14_209
.Ltmp1612:
# %bb.208:                              # %sw.bb119.if.then126_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	movl	(%r14), %edx
	jmp	.LBB14_214
.Ltmp1613:
.LBB14_209:                             # %if.end136.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	movl	8(%rbp), %eax
.Ltmp1614:
	.loc	12 243 7                # decompress.c:243:7
	addl	$-1, %eax
.Ltmp1615:
.LBB14_210:                             # %if.end136.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	cmpl	$-1, %eax
.Ltmp1616:
	.loc	12 243 7                # decompress.c:243:7
	je	.LBB14_26
.Ltmp1617:
# %bb.211:                              # %if.end142.i
                                        #   in Loop: Header=BB14_210 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %esi
	shll	$8, %esi
	movq	(%rbp), %rdi
	movzbl	(%rdi), %edx
	orl	%esi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rdi
	movq	%rdi, (%rbp)
	movl	%eax, 8(%rbp)
	addl	$1, 12(%rbp)
	jne	.LBB14_213
.Ltmp1618:
# %bb.212:                              # %if.then165.i
                                        #   in Loop: Header=BB14_210 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	addl	$1, 16(%rbp)
.Ltmp1619:
.LBB14_213:                             # %if.end169.i27
                                        #   in Loop: Header=BB14_210 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	addl	$-1, %eax
	cmpl	$7, %ecx
.Ltmp1620:
	.loc	12 243 7                # decompress.c:243:7
	jle	.LBB14_210
.Ltmp1621:
.LBB14_214:                             # %if.then126.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 243 7                # decompress.c:243:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1622:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-5, %eax
.Ltmp1623:
	.loc	12 244 14 is_stmt 1     # decompress.c:244:14
	cmpb	$104, %dl
.Ltmp1624:
	.loc	12 244 11 is_stmt 0     # decompress.c:244:11
	jne	.LBB14_828
.Ltmp1625:
.LBB14_215:                             # %sw.bb176.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7 is_stmt 1      # decompress.c:246:7
	movl	$13, (%r12)
.Ltmp1626:
	.loc	12 246 7 is_stmt 0      # decompress.c:246:7
	cmpl	$8, %ecx
.Ltmp1627:
	.loc	12 246 7                # decompress.c:246:7
	jl	.LBB14_217
.Ltmp1628:
# %bb.216:                              # %sw.bb176.if.then183_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	movl	(%r14), %edx
	jmp	.LBB14_222
.Ltmp1629:
.LBB14_217:                             # %if.end192.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	movl	8(%rbp), %eax
.Ltmp1630:
	.loc	12 246 7                # decompress.c:246:7
	addl	$-1, %eax
.Ltmp1631:
.LBB14_218:                             # %if.end192.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	cmpl	$-1, %eax
.Ltmp1632:
	.loc	12 246 7                # decompress.c:246:7
	je	.LBB14_26
.Ltmp1633:
# %bb.219:                              # %if.end198.i
                                        #   in Loop: Header=BB14_218 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %esi
	shll	$8, %esi
	movq	(%rbp), %rdi
	movzbl	(%rdi), %edx
	orl	%esi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rdi
	movq	%rdi, (%rbp)
	movl	%eax, 8(%rbp)
	addl	$1, 12(%rbp)
	jne	.LBB14_221
.Ltmp1634:
# %bb.220:                              # %if.then221.i
                                        #   in Loop: Header=BB14_218 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	addl	$1, 16(%rbp)
.Ltmp1635:
.LBB14_221:                             # %if.end225.i
                                        #   in Loop: Header=BB14_218 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	addl	$-1, %eax
	cmpl	$7, %ecx
.Ltmp1636:
	.loc	12 246 7                # decompress.c:246:7
	jle	.LBB14_218
.Ltmp1637:
.LBB14_222:                             # %if.then183.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 246 7                # decompress.c:246:7
	addl	$-8, %ecx
	shrl	%cl, %edx
	movzbl	%dl, %edx
.Ltmp1638:
	#DEBUG_VALUE: v <- $edx
	movl	%ecx, 36(%r15)
	movl	%edx, 40(%r15)
.Ltmp1639:
	.loc	12 247 45 is_stmt 1     # decompress.c:247:45
	leal	-49(%rdx), %ecx
	movl	$-5, %eax
	cmpl	$8, %ecx
	ja	.LBB14_828
.Ltmp1640:
# %bb.223:                              # %if.end234.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 45 is_stmt 0       # decompress.c:0:45
	movl	%r11d, 12(%rsp)         # 4-byte Spill
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%r8, 72(%rsp)           # 8-byte Spill
	movq	%r10, 96(%rsp)          # 8-byte Spill
	movq	%r9, %rbx
	.loc	12 249 24 is_stmt 1     # decompress.c:249:24
	addl	$-48, %edx
	movl	%edx, 40(%r15)
.Ltmp1641:
	.loc	12 251 11               # decompress.c:251:11
	cmpb	$0, 44(%r15)
	.loc	12 0 0 is_stmt 0        # decompress.c:0:0
	movq	56(%rbp), %rax
	movq	72(%rbp), %rdi
.Ltmp1642:
	.loc	12 251 11               # decompress.c:251:11
	je	.LBB14_284
.Ltmp1643:
# %bb.224:                              # %if.then237.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 252 20 is_stmt 1     # decompress.c:252:20
	imull	$200000, %edx, %esi     # imm = 0x30D40
	movl	$1, %edx
	callq	*%rax
	.loc	12 252 18 is_stmt 0     # decompress.c:252:18
	movq	%rax, 3160(%r15)
	.loc	12 253 20 is_stmt 1     # decompress.c:253:20
	movq	72(%rbp), %rdi
	imull	$100000, 40(%r15), %esi # imm = 0x186A0
	sarl	%esi
	movl	$1, %edx
	callq	*56(%rbp)
	movq	%rax, %rcx
	.loc	12 253 18 is_stmt 0     # decompress.c:253:18
	movq	%rax, 3168(%r15)
	movl	$-3, %eax
.Ltmp1644:
	.loc	12 256 40 is_stmt 1     # decompress.c:256:40
	testq	%rcx, %rcx
	.loc	12 256 30 is_stmt 0     # decompress.c:256:30
	je	.LBB14_510
.Ltmp1645:
# %bb.225:                              # %if.then237.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	movq	3160(%r15), %rcx
	.loc	12 256 30               # decompress.c:256:30
	testq	%rcx, %rcx
	movq	%rbx, %r9
	pxor	%xmm8, %xmm8
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %rbx          # 8-byte Reload
	movl	12(%rsp), %r11d         # 4-byte Reload
	jne	.LBB14_286
	jmp	.LBB14_828
.Ltmp1646:
.LBB14_227:                             # %if.end.sw.bb337_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7 is_stmt 1      # decompress.c:266:7
	movl	(%r9), %ecx
	jmp	.LBB14_295
.Ltmp1647:
.LBB14_228:                             # %if.end.sw.bb451_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	movl	(%r9), %ecx
	jmp	.LBB14_313
.Ltmp1648:
.LBB14_229:                             # %if.end.sw.bb508_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	movl	(%r9), %ecx
	jmp	.LBB14_321
.Ltmp1649:
.LBB14_230:                             # %if.end.sw.bb686_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	movl	(%r9), %ecx
	jmp	.LBB14_347
.Ltmp1650:
.LBB14_231:                             # %if.end.sw.bb743_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	movl	(%r9), %ecx
	jmp	.LBB14_355
.Ltmp1651:
.LBB14_232:                             # %if.end.sw.bb909_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	movl	(%r9), %ecx
	jmp	.LBB14_379
.Ltmp1652:
.LBB14_233:                             # %if.end.sw.bb966_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	movl	(%r9), %ecx
	jmp	.LBB14_387
.Ltmp1653:
.LBB14_234:                             # %if.end.sw.bb2063_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	movl	(%r9), %edx
	jmp	.LBB14_515
.Ltmp1654:
.LBB14_235:                             # %if.end.sw.bb2479_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	movl	(%r9), %edx
	jmp	.LBB14_523
.Ltmp1655:
.LBB14_236:                             # %if.end.sw.bb2943_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	movl	(%r9), %ecx
	jmp	.LBB14_297
.Ltmp1656:
.LBB14_237:                             # %if.end.sw.bb565_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	movl	(%r9), %ecx
	jmp	.LBB14_329
.Ltmp1657:
.LBB14_238:                             # %if.end.sw.bb800_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	movl	(%r9), %ecx
	jmp	.LBB14_363
.Ltmp1658:
.LBB14_239:                             # %if.end.sw.bb857_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	movl	(%r9), %ecx
	jmp	.LBB14_371
.Ltmp1659:
.LBB14_240:                             # %if.end.sw.bb1023_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	movl	(%r9), %ecx
	jmp	.LBB14_395
.Ltmp1660:
.LBB14_241:                             # %if.end.sw.bb1606_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	movl	(%r9), %eax
	jmp	.LBB14_662
.Ltmp1661:
.LBB14_242:                             # %if.end.sw.bb1870_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	movl	(%r9), %edx
	jmp	.LBB14_676
.Ltmp1662:
.LBB14_243:                             # %if.end.sw.bb3285_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	movl	(%r9), %ecx
	jmp	.LBB14_455
.Ltmp1663:
.LBB14_244:                             # %if.end.sw.bb3342_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zt <- [DW_OP_plus_uconst 212] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	movl	(%r9), %ecx
	jmp	.LBB14_463
.Ltmp1664:
.LBB14_246:                             # %if.end1328.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	movq	(%r15), %rax
	movl	8(%rax), %edx
.Ltmp1665:
	.loc	12 329 7 is_stmt 0      # decompress.c:329:7
	addl	$-1, %edx
.Ltmp1666:
.LBB14_247:                             # %if.end1328.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	cmpl	$-1, %edx
.Ltmp1667:
	.loc	12 329 7                # decompress.c:329:7
	je	.LBB14_26
.Ltmp1668:
# %bb.248:                              # %if.end1334.i
                                        #   in Loop: Header=BB14_247 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %esi
	shll	$8, %esi
	movq	(%rax), %rdi
	movzbl	(%rdi), %ebp
	orl	%esi, %ebp
	movl	%ebp, %esi
	movl	%ebp, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rdi
	movq	%rdi, (%rax)
	movl	%edx, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_250
.Ltmp1669:
# %bb.249:                              # %if.then1357.i
                                        #   in Loop: Header=BB14_247 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	addl	$1, 16(%rax)
.Ltmp1670:
.LBB14_250:                             # %if.end1361.i
                                        #   in Loop: Header=BB14_247 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	addl	$-1, %edx
	cmpl	$14, %ecx
.Ltmp1671:
	.loc	12 329 7                # decompress.c:329:7
	jle	.LBB14_247
.Ltmp1672:
.LBB14_251:                             # %if.then1319.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 329 7                # decompress.c:329:7
	addl	$-15, %ecx
	shrl	%cl, %esi
.Ltmp1673:
	#DEBUG_VALUE: v <- $esi
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- $esi
	movl	%ecx, (%r9)
.Ltmp1674:
	.loc	12 330 22 is_stmt 1     # decompress.c:330:22
	andl	$32767, %esi            # imm = 0x7FFF
.Ltmp1675:
	.loc	12 0 22 is_stmt 0       # decompress.c:0:22
	movl	%esi, 12(%rsp)          # 4-byte Spill
.Ltmp1676:
	.loc	12 330 11               # decompress.c:330:11
	je	.LBB14_494
.Ltmp1677:
# %bb.252:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	xorl	%eax, %eax
.Ltmp1678:
.LBB14_253:                             # %for.cond1367.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 12] [$rsp+0]
	movq	%rax, (%rsp)            # 8-byte Spill
.Ltmp1679:
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 331 21 is_stmt 1     # decompress.c:331:21
	cmpl	12(%rsp), %eax          # 4-byte Folded Reload
.Ltmp1680:
	.loc	12 331 7 is_stmt 0      # decompress.c:331:7
	jge	.LBB14_267
.Ltmp1681:
# %bb.254:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	movl	12(%rsp), %eax          # 4-byte Reload
	movl	%eax, 56(%rsp)          # 4-byte Spill
	movl	$0, 24(%rsp)            # 4-byte Folded Spill
.Ltmp1682:
.LBB14_255:                             # %sw.bb1373.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	movl	24(%rsp), %ecx          # 4-byte Reload
.Ltmp1683:
.LBB14_256:                             # %sw.bb1373.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_259 Depth 3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	movl	%ecx, 24(%rsp)          # 4-byte Spill
.Ltmp1684:
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 334 13 is_stmt 1     # decompress.c:334:13
	movl	$32, (%r12)
.Ltmp1685:
	.loc	12 334 13 is_stmt 0     # decompress.c:334:13
	movl	(%r9), %eax
	testl	%eax, %eax
.Ltmp1686:
	.loc	12 334 13               # decompress.c:334:13
	jle	.LBB14_258
.Ltmp1687:
# %bb.257:                              # %sw.bb1373.if.then1380_crit_edge.i
                                        #   in Loop: Header=BB14_256 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	movl	(%r14), %esi
	jmp	.LBB14_263
.Ltmp1688:
.LBB14_258:                             # %if.end1390.lr.ph.i
                                        #   in Loop: Header=BB14_256 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	movq	(%r15), %rcx
	movl	8(%rcx), %edx
.Ltmp1689:
	.loc	12 334 13               # decompress.c:334:13
	addl	$-1, %edx
.Ltmp1690:
.LBB14_259:                             # %if.end1390.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_256 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	cmpl	$-1, %edx
.Ltmp1691:
	.loc	12 334 13               # decompress.c:334:13
	je	.LBB14_26
.Ltmp1692:
# %bb.260:                              # %if.end1396.i
                                        #   in Loop: Header=BB14_259 Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %eax
	movl	%eax, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%edx, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_262
.Ltmp1693:
# %bb.261:                              # %if.then1419.i
                                        #   in Loop: Header=BB14_259 Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	addl	$1, 16(%rcx)
.Ltmp1694:
.LBB14_262:                             # %if.end1423.i
                                        #   in Loop: Header=BB14_259 Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	addl	$-1, %edx
	testl	%eax, %eax
.Ltmp1695:
	.loc	12 334 13               # decompress.c:334:13
	jle	.LBB14_259
.Ltmp1696:
.LBB14_263:                             # %if.then1380.i
                                        #   in Loop: Header=BB14_256 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 334 13               # decompress.c:334:13
	addl	$-1, %eax
	movl	%eax, (%r9)
.Ltmp1697:
	.loc	12 335 20 is_stmt 1     # decompress.c:335:20
	btl	%eax, %esi
.Ltmp1698:
	.loc	12 335 17 is_stmt 0     # decompress.c:335:17
	jae	.LBB14_513
.Ltmp1699:
# %bb.264:                              # %if.end1429.i
                                        #   in Loop: Header=BB14_256 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 17                 # decompress.c:0:17
	movl	24(%rsp), %ecx          # 4-byte Reload
	.loc	12 336 14 is_stmt 1     # decompress.c:336:14
	addl	$1, %ecx
.Ltmp1700:
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	.loc	12 0 14 is_stmt 0       # decompress.c:0:14
	movl	$-4, %eax
.Ltmp1701:
	.loc	12 337 19 is_stmt 1     # decompress.c:337:19
	cmpl	%ebx, %ecx
.Ltmp1702:
	.loc	12 337 17 is_stmt 0     # decompress.c:337:17
	jl	.LBB14_256
.Ltmp1703:
# %bb.265:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 17                 # decompress.c:0:17
	movl	%ecx, 24(%rsp)          # 4-byte Spill
.Ltmp1704:
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	jmp	.LBB14_828
.Ltmp1705:
.LBB14_267:                             # %for.end1441.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: v <- 0
	.loc	12 345 24 is_stmt 1     # decompress.c:345:24
	testl	%ebx, %ebx
.Ltmp1706:
	.loc	12 345 10 is_stmt 0     # decompress.c:345:10
	jle	.LBB14_271
.Ltmp1707:
# %bb.268:                              # %for.body1447.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 345 40               # decompress.c:345:40
	cmpl	$31, %ebx
	ja	.LBB14_500
.Ltmp1708:
# %bb.269:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 40                 # decompress.c:0:40
	xorl	%eax, %eax
.Ltmp1709:
.LBB14_270:                             # %for.body1447.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: v <- $al
	.loc	12 345 40               # decompress.c:345:40
	movzbl	%al, %eax
.Ltmp1710:
	.loc	12 345 47               # decompress.c:345:47
	movb	%al, 34(%rsp,%rax)
	.loc	12 345 36               # decompress.c:345:36
	addb	$1, %al
.Ltmp1711:
	#DEBUG_VALUE: v <- $al
	.loc	12 345 22               # decompress.c:345:22
	movzbl	%al, %ecx
	.loc	12 345 24               # decompress.c:345:24
	cmpl	%ecx, %ebx
.Ltmp1712:
	.loc	12 345 10               # decompress.c:345:10
	jg	.LBB14_270
.Ltmp1713:
.LBB14_271:                             # %for.cond1453.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 0 10                 # decompress.c:0:10
	xorl	%eax, %eax
.Ltmp1714:
	movl	$0, %ecx
	movq	%rcx, (%rsp)            # 8-byte Spill
	movl	12(%rsp), %ecx          # 4-byte Reload
.Ltmp1715:
	.loc	12 347 24 is_stmt 1     # decompress.c:347:24
	testl	%ecx, %ecx
.Ltmp1716:
	.loc	12 347 10 is_stmt 0     # decompress.c:347:10
	jle	.LBB14_281
.Ltmp1717:
# %bb.272:                              # %for.body1456.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movq	%r8, 72(%rsp)           # 8-byte Spill
	movl	%ecx, %edi
	xorl	%ecx, %ecx
.Ltmp1718:
.LBB14_273:                             # %for.body1456.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_276 Depth 3
                                        #       Child Loop BB14_278 Depth 3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	.loc	12 348 17 is_stmt 1     # decompress.c:348:17
	movzbl	25886(%r15,%rcx), %edx
.Ltmp1719:
	#DEBUG_VALUE: v <- undef
	.loc	12 349 19               # decompress.c:349:19
	movb	34(%rsp,%rdx), %r8b
.Ltmp1720:
	#DEBUG_VALUE: tmp <- $r8b
	.loc	12 348 17               # decompress.c:348:17
	testq	%rdx, %rdx
	.loc	12 350 13               # decompress.c:350:13
	je	.LBB14_279
.Ltmp1721:
# %bb.274:                              # %while.body1466.preheader.i
                                        #   in Loop: Header=BB14_273 Depth=2
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13 is_stmt 0       # decompress.c:0:13
	movq	%rbx, %rbp
.Ltmp1722:
	.loc	12 350 43               # decompress.c:350:43
	leal	-1(%rdx), %esi
	movl	%edx, %eax
	andb	$3, %al
	je	.LBB14_277
.Ltmp1723:
# %bb.275:                              # %while.body1466.prol.i.preheader
                                        #   in Loop: Header=BB14_273 Depth=2
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	negb	%al
.Ltmp1724:
	.p2align	4, 0x90
.LBB14_276:                             # %while.body1466.prol.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_273 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: v <- $rdx
	.loc	12 350 38               # decompress.c:350:38
	movzbl	33(%rsp,%rdx), %ebx
.Ltmp1725:
	.loc	12 350 36               # decompress.c:350:36
	movb	%bl, 34(%rsp,%rdx)
	.loc	12 350 43               # decompress.c:350:43
	leaq	-1(%rdx), %rdx
.Ltmp1726:
	.loc	12 350 13               # decompress.c:350:13
	incb	%al
	jne	.LBB14_276
.Ltmp1727:
.LBB14_277:                             # %while.body1466.prol.loopexit.i
                                        #   in Loop: Header=BB14_273 Depth=2
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 350 43               # decompress.c:350:43
	cmpb	$3, %sil
	movq	%rbp, %rbx
	jb	.LBB14_279
.Ltmp1728:
	.p2align	4, 0x90
.LBB14_278:                             # %while.body1466.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_273 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: v <- $rdx
	.loc	12 350 38               # decompress.c:350:38
	movl	30(%rsp,%rdx), %eax
	.loc	12 350 36               # decompress.c:350:36
	movl	%eax, 31(%rsp,%rdx)
	.loc	12 350 43               # decompress.c:350:43
	leaq	-4(%rdx), %rdx
.Ltmp1729:
	.loc	12 350 22               # decompress.c:350:22
	testb	%dl, %dl
	.loc	12 350 13               # decompress.c:350:13
	jne	.LBB14_278
.Ltmp1730:
.LBB14_279:                             # %while.end1474.i
                                        #   in Loop: Header=BB14_273 Depth=2
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 351 20 is_stmt 1     # decompress.c:351:20
	movb	%r8b, 34(%rsp)
	.loc	12 352 28               # decompress.c:352:28
	movb	%r8b, 7884(%r15,%rcx)
.Ltmp1731:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 347 39               # decompress.c:347:39
	addq	$1, %rcx
	.loc	12 347 24 is_stmt 0     # decompress.c:347:24
	cmpq	%rdi, %rcx
.Ltmp1732:
	.loc	12 347 10               # decompress.c:347:10
	jne	.LBB14_273
.Ltmp1733:
# %bb.280:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: tmp <- $r8b
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movl	12(%rsp), %eax          # 4-byte Reload
                                        # kill: def $eax killed $eax def $rax
	movq	%rax, (%rsp)            # 8-byte Spill
	movq	72(%rsp), %r8           # 8-byte Reload
.Ltmp1734:
	xorl	%eax, %eax
.Ltmp1735:
.LBB14_281:                             # %for.end1480.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- 0
	movq	168(%rsp), %rcx         # 8-byte Reload
	jmp	.LBB14_577
.Ltmp1736:
.LBB14_282:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	xorl	%ebp, %ebp
.Ltmp1737:
	movl	$1, (%rsp)              # 4-byte Folded Spill
.Ltmp1738:
	.loc	5 650 21 is_stmt 1      # bzlib.c:650:21
	movl	%r8d, %r12d
	jmp	.LBB14_181
.Ltmp1739:
.LBB14_283:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: c_k0 <- $r8d
	#DEBUG_VALUE: c_state_out_ch <- $r12b
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: c_nblock_used <- $esi
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 21 is_stmt 0        # bzlib.c:0:21
	movl	$0, (%rsp)              # 4-byte Folded Spill
	.loc	5 652 21 is_stmt 1      # bzlib.c:652:21
	movl	%r14d, %r13d
.Ltmp1740:
	#DEBUG_VALUE: s_save_nblockPP <- $r13d
	.loc	5 653 21                # bzlib.c:653:21
	movl	%r8d, %r10d
	jmp	.LBB14_181
.Ltmp1741:
.LBB14_284:                             # %if.else.i31
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 258 19               # decompress.c:258:19
	imull	$400000, %edx, %esi     # imm = 0x61A80
	movl	$1, %edx
	callq	*%rax
	.loc	12 258 17 is_stmt 0     # decompress.c:258:17
	movq	%rax, 3152(%r15)
.Ltmp1742:
	.loc	12 259 20 is_stmt 1     # decompress.c:259:20
	testq	%rax, %rax
.Ltmp1743:
	.loc	12 259 14 is_stmt 0     # decompress.c:259:14
	je	.LBB14_509
.Ltmp1744:
# %bb.285:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 14                 # decompress.c:0:14
	movq	%rbx, %r9
	pxor	%xmm8, %xmm8
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %rbx          # 8-byte Reload
	movl	12(%rsp), %r11d         # 4-byte Reload
.Ltmp1745:
.LBB14_286:                             # %sw.bb275.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7 is_stmt 1      # decompress.c:262:7
	movl	$14, (%r12)
.Ltmp1746:
	.loc	12 262 7 is_stmt 0      # decompress.c:262:7
	movl	(%r9), %ecx
	cmpl	$8, %ecx
.Ltmp1747:
	.loc	12 262 7                # decompress.c:262:7
	jl	.LBB14_288
.Ltmp1748:
# %bb.287:                              # %sw.bb275.if.then282_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	movl	(%r14), %edx
	jmp	.LBB14_293
.Ltmp1749:
.LBB14_288:                             # %if.end292.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1750:
	.loc	12 262 7                # decompress.c:262:7
	addl	$-1, %esi
.Ltmp1751:
.LBB14_289:                             # %if.end292.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	cmpl	$-1, %esi
.Ltmp1752:
	.loc	12 262 7                # decompress.c:262:7
	je	.LBB14_26
.Ltmp1753:
# %bb.290:                              # %if.end298.i
                                        #   in Loop: Header=BB14_289 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_292
.Ltmp1754:
# %bb.291:                              # %if.then321.i
                                        #   in Loop: Header=BB14_289 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	addl	$1, 16(%rax)
.Ltmp1755:
.LBB14_292:                             # %if.end325.i
                                        #   in Loop: Header=BB14_289 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1756:
	.loc	12 262 7                # decompress.c:262:7
	jle	.LBB14_289
.Ltmp1757:
.LBB14_293:                             # %if.then282.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 262 7                # decompress.c:262:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1758:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
.Ltmp1759:
	.loc	12 264 11 is_stmt 1     # decompress.c:264:11
	cmpb	$23, %dl
	je	.LBB14_297
.Ltmp1760:
# %bb.294:                              # %if.then282.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 11 is_stmt 0       # decompress.c:0:11
	movl	$-4, %eax
	.loc	12 264 11               # decompress.c:264:11
	cmpb	$49, %dl
	jne	.LBB14_828
.Ltmp1761:
.LBB14_295:                             # %sw.bb337.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7 is_stmt 1      # decompress.c:266:7
	movl	$15, (%r12)
.Ltmp1762:
	.loc	12 266 7 is_stmt 0      # decompress.c:266:7
	cmpl	$8, %ecx
.Ltmp1763:
	.loc	12 266 7                # decompress.c:266:7
	jl	.LBB14_299
.Ltmp1764:
# %bb.296:                              # %sw.bb337.if.then344_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7                # decompress.c:266:7
	movl	(%r14), %edx
	jmp	.LBB14_304
.Ltmp1765:
.LBB14_297:                             # %sw.bb2943.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7 is_stmt 1      # decompress.c:604:7
	movl	$42, (%r12)
.Ltmp1766:
	.loc	12 604 7 is_stmt 0      # decompress.c:604:7
	cmpl	$8, %ecx
.Ltmp1767:
	.loc	12 604 7                # decompress.c:604:7
	jl	.LBB14_408
.Ltmp1768:
# %bb.298:                              # %sw.bb2943.if.then2950_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	movl	(%r14), %edx
	jmp	.LBB14_413
.Ltmp1769:
.LBB14_299:                             # %if.end354.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7 is_stmt 1      # decompress.c:266:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1770:
	.loc	12 266 7 is_stmt 0      # decompress.c:266:7
	addl	$-1, %esi
.Ltmp1771:
.LBB14_300:                             # %if.end354.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7                # decompress.c:266:7
	cmpl	$-1, %esi
.Ltmp1772:
	.loc	12 266 7                # decompress.c:266:7
	je	.LBB14_26
.Ltmp1773:
# %bb.301:                              # %if.end360.i
                                        #   in Loop: Header=BB14_300 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_303
.Ltmp1774:
# %bb.302:                              # %if.then383.i39
                                        #   in Loop: Header=BB14_300 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7                # decompress.c:266:7
	addl	$1, 16(%rax)
.Ltmp1775:
.LBB14_303:                             # %if.end387.i40
                                        #   in Loop: Header=BB14_300 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7                # decompress.c:266:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1776:
	.loc	12 266 7                # decompress.c:266:7
	jle	.LBB14_300
.Ltmp1777:
.LBB14_304:                             # %if.then344.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 266 7                # decompress.c:266:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1778:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1779:
	.loc	12 267 14 is_stmt 1     # decompress.c:267:14
	cmpb	$65, %dl
.Ltmp1780:
	.loc	12 267 11 is_stmt 0     # decompress.c:267:11
	jne	.LBB14_828
.Ltmp1781:
.LBB14_305:                             # %sw.bb394.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7 is_stmt 1      # decompress.c:268:7
	movl	$16, (%r12)
.Ltmp1782:
	.loc	12 268 7 is_stmt 0      # decompress.c:268:7
	cmpl	$8, %ecx
.Ltmp1783:
	.loc	12 268 7                # decompress.c:268:7
	jl	.LBB14_307
.Ltmp1784:
# %bb.306:                              # %sw.bb394.if.then401_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	movl	(%r14), %edx
	jmp	.LBB14_312
.Ltmp1785:
.LBB14_307:                             # %if.end411.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1786:
	.loc	12 268 7                # decompress.c:268:7
	addl	$-1, %esi
.Ltmp1787:
.LBB14_308:                             # %if.end411.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	cmpl	$-1, %esi
.Ltmp1788:
	.loc	12 268 7                # decompress.c:268:7
	je	.LBB14_26
.Ltmp1789:
# %bb.309:                              # %if.end417.i
                                        #   in Loop: Header=BB14_308 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_311
.Ltmp1790:
# %bb.310:                              # %if.then440.i
                                        #   in Loop: Header=BB14_308 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	addl	$1, 16(%rax)
.Ltmp1791:
.LBB14_311:                             # %if.end444.i
                                        #   in Loop: Header=BB14_308 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1792:
	.loc	12 268 7                # decompress.c:268:7
	jle	.LBB14_308
.Ltmp1793:
.LBB14_312:                             # %if.then401.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 268 7                # decompress.c:268:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1794:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1795:
	.loc	12 269 14 is_stmt 1     # decompress.c:269:14
	cmpb	$89, %dl
.Ltmp1796:
	.loc	12 269 11 is_stmt 0     # decompress.c:269:11
	jne	.LBB14_828
.Ltmp1797:
.LBB14_313:                             # %sw.bb451.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7 is_stmt 1      # decompress.c:270:7
	movl	$17, (%r12)
.Ltmp1798:
	.loc	12 270 7 is_stmt 0      # decompress.c:270:7
	cmpl	$8, %ecx
.Ltmp1799:
	.loc	12 270 7                # decompress.c:270:7
	jl	.LBB14_315
.Ltmp1800:
# %bb.314:                              # %sw.bb451.if.then458_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	movl	(%r14), %edx
	jmp	.LBB14_320
.Ltmp1801:
.LBB14_315:                             # %if.end468.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1802:
	.loc	12 270 7                # decompress.c:270:7
	addl	$-1, %esi
.Ltmp1803:
.LBB14_316:                             # %if.end468.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	cmpl	$-1, %esi
.Ltmp1804:
	.loc	12 270 7                # decompress.c:270:7
	je	.LBB14_26
.Ltmp1805:
# %bb.317:                              # %if.end474.i
                                        #   in Loop: Header=BB14_316 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_319
.Ltmp1806:
# %bb.318:                              # %if.then497.i
                                        #   in Loop: Header=BB14_316 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	addl	$1, 16(%rax)
.Ltmp1807:
.LBB14_319:                             # %if.end501.i
                                        #   in Loop: Header=BB14_316 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1808:
	.loc	12 270 7                # decompress.c:270:7
	jle	.LBB14_316
.Ltmp1809:
.LBB14_320:                             # %if.then458.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 270 7                # decompress.c:270:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1810:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1811:
	.loc	12 271 14 is_stmt 1     # decompress.c:271:14
	cmpb	$38, %dl
.Ltmp1812:
	.loc	12 271 11 is_stmt 0     # decompress.c:271:11
	jne	.LBB14_828
.Ltmp1813:
.LBB14_321:                             # %sw.bb508.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7 is_stmt 1      # decompress.c:272:7
	movl	$18, (%r12)
.Ltmp1814:
	.loc	12 272 7 is_stmt 0      # decompress.c:272:7
	cmpl	$8, %ecx
.Ltmp1815:
	.loc	12 272 7                # decompress.c:272:7
	jl	.LBB14_323
.Ltmp1816:
# %bb.322:                              # %sw.bb508.if.then515_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	movl	(%r14), %edx
	jmp	.LBB14_328
.Ltmp1817:
.LBB14_323:                             # %if.end525.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1818:
	.loc	12 272 7                # decompress.c:272:7
	addl	$-1, %esi
.Ltmp1819:
.LBB14_324:                             # %if.end525.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	cmpl	$-1, %esi
.Ltmp1820:
	.loc	12 272 7                # decompress.c:272:7
	je	.LBB14_26
.Ltmp1821:
# %bb.325:                              # %if.end531.i
                                        #   in Loop: Header=BB14_324 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_327
.Ltmp1822:
# %bb.326:                              # %if.then554.i
                                        #   in Loop: Header=BB14_324 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	addl	$1, 16(%rax)
.Ltmp1823:
.LBB14_327:                             # %if.end558.i
                                        #   in Loop: Header=BB14_324 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1824:
	.loc	12 272 7                # decompress.c:272:7
	jle	.LBB14_324
.Ltmp1825:
.LBB14_328:                             # %if.then515.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 272 7                # decompress.c:272:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1826:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1827:
	.loc	12 273 14 is_stmt 1     # decompress.c:273:14
	cmpb	$83, %dl
.Ltmp1828:
	.loc	12 273 11 is_stmt 0     # decompress.c:273:11
	jne	.LBB14_828
.Ltmp1829:
.LBB14_329:                             # %sw.bb565.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7 is_stmt 1      # decompress.c:274:7
	movl	$19, (%r12)
.Ltmp1830:
	.loc	12 274 7 is_stmt 0      # decompress.c:274:7
	cmpl	$8, %ecx
.Ltmp1831:
	.loc	12 274 7                # decompress.c:274:7
	jl	.LBB14_331
.Ltmp1832:
# %bb.330:                              # %sw.bb565.if.then572_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	movl	(%r14), %edx
	jmp	.LBB14_336
.Ltmp1833:
.LBB14_331:                             # %if.end582.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1834:
	.loc	12 274 7                # decompress.c:274:7
	addl	$-1, %esi
.Ltmp1835:
.LBB14_332:                             # %if.end582.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	cmpl	$-1, %esi
.Ltmp1836:
	.loc	12 274 7                # decompress.c:274:7
	je	.LBB14_26
.Ltmp1837:
# %bb.333:                              # %if.end588.i
                                        #   in Loop: Header=BB14_332 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_335
.Ltmp1838:
# %bb.334:                              # %if.then611.i
                                        #   in Loop: Header=BB14_332 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	addl	$1, 16(%rax)
.Ltmp1839:
.LBB14_335:                             # %if.end615.i
                                        #   in Loop: Header=BB14_332 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1840:
	.loc	12 274 7                # decompress.c:274:7
	jle	.LBB14_332
.Ltmp1841:
.LBB14_336:                             # %if.then572.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 274 7                # decompress.c:274:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1842:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1843:
	.loc	12 275 14 is_stmt 1     # decompress.c:275:14
	cmpb	$89, %dl
.Ltmp1844:
	.loc	12 275 11 is_stmt 0     # decompress.c:275:11
	jne	.LBB14_828
.Ltmp1845:
# %bb.337:                              # %if.end621.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 277 21 is_stmt 1     # decompress.c:277:21
	movl	48(%r15), %edx
.Ltmp1846:
	.loc	12 278 14               # decompress.c:278:14
	movl	52(%r15), %eax
.Ltmp1847:
	.loc	12 277 21               # decompress.c:277:21
	addl	$1, %edx
	movl	%edx, 48(%r15)
.Ltmp1848:
	.loc	12 278 24               # decompress.c:278:24
	cmpl	$2, %eax
.Ltmp1849:
	.loc	12 278 11 is_stmt 0     # decompress.c:278:11
	jge	.LBB14_514
.Ltmp1850:
.LBB14_338:                             # %if.end628.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 281 25 is_stmt 1     # decompress.c:281:25
	movl	$0, 3176(%r15)
.Ltmp1851:
.LBB14_339:                             # %sw.bb629.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	movl	$20, (%r12)
.Ltmp1852:
	.loc	12 282 7 is_stmt 0      # decompress.c:282:7
	movl	(%r9), %ecx
	cmpl	$8, %ecx
.Ltmp1853:
	.loc	12 282 7                # decompress.c:282:7
	jl	.LBB14_341
.Ltmp1854:
# %bb.340:                              # %sw.bb629.if.then636_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	movl	(%r14), %eax
	jmp	.LBB14_346
.Ltmp1855:
.LBB14_341:                             # %if.end646.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1856:
	.loc	12 282 7                # decompress.c:282:7
	addl	$-1, %esi
.Ltmp1857:
.LBB14_342:                             # %if.end646.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	cmpl	$-1, %esi
.Ltmp1858:
	.loc	12 282 7                # decompress.c:282:7
	je	.LBB14_26
.Ltmp1859:
# %bb.343:                              # %if.end652.i
                                        #   in Loop: Header=BB14_342 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_345
.Ltmp1860:
# %bb.344:                              # %if.then675.i
                                        #   in Loop: Header=BB14_342 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	addl	$1, 16(%rdx)
.Ltmp1861:
.LBB14_345:                             # %if.end679.i
                                        #   in Loop: Header=BB14_342 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1862:
	.loc	12 282 7                # decompress.c:282:7
	jle	.LBB14_342
.Ltmp1863:
.LBB14_346:                             # %if.then636.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 282 7                # decompress.c:282:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1864:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1865:
	.loc	12 283 31 is_stmt 1     # decompress.c:283:31
	movl	3176(%r15), %edx
	.loc	12 283 46 is_stmt 0     # decompress.c:283:46
	shll	$8, %edx
	.loc	12 283 55               # decompress.c:283:55
	movzbl	%al, %eax
.Ltmp1866:
	.loc	12 283 52               # decompress.c:283:52
	orl	%edx, %eax
	.loc	12 283 25               # decompress.c:283:25
	movl	%eax, 3176(%r15)
.Ltmp1867:
.LBB14_347:                             # %sw.bb686.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7 is_stmt 1      # decompress.c:284:7
	movl	$21, (%r12)
.Ltmp1868:
	.loc	12 284 7 is_stmt 0      # decompress.c:284:7
	cmpl	$8, %ecx
.Ltmp1869:
	.loc	12 284 7                # decompress.c:284:7
	jl	.LBB14_349
.Ltmp1870:
# %bb.348:                              # %sw.bb686.if.then693_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	movl	(%r14), %eax
	jmp	.LBB14_354
.Ltmp1871:
.LBB14_349:                             # %if.end703.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1872:
	.loc	12 284 7                # decompress.c:284:7
	addl	$-1, %esi
.Ltmp1873:
.LBB14_350:                             # %if.end703.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	cmpl	$-1, %esi
.Ltmp1874:
	.loc	12 284 7                # decompress.c:284:7
	je	.LBB14_26
.Ltmp1875:
# %bb.351:                              # %if.end709.i
                                        #   in Loop: Header=BB14_350 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_353
.Ltmp1876:
# %bb.352:                              # %if.then732.i
                                        #   in Loop: Header=BB14_350 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	addl	$1, 16(%rdx)
.Ltmp1877:
.LBB14_353:                             # %if.end736.i
                                        #   in Loop: Header=BB14_350 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1878:
	.loc	12 284 7                # decompress.c:284:7
	jle	.LBB14_350
.Ltmp1879:
.LBB14_354:                             # %if.then693.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 284 7                # decompress.c:284:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1880:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1881:
	.loc	12 285 31 is_stmt 1     # decompress.c:285:31
	movl	3176(%r15), %edx
	.loc	12 285 46 is_stmt 0     # decompress.c:285:46
	shll	$8, %edx
	.loc	12 285 55               # decompress.c:285:55
	movzbl	%al, %eax
.Ltmp1882:
	.loc	12 285 52               # decompress.c:285:52
	orl	%edx, %eax
	.loc	12 285 25               # decompress.c:285:25
	movl	%eax, 3176(%r15)
.Ltmp1883:
.LBB14_355:                             # %sw.bb743.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7 is_stmt 1      # decompress.c:286:7
	movl	$22, (%r12)
.Ltmp1884:
	.loc	12 286 7 is_stmt 0      # decompress.c:286:7
	cmpl	$8, %ecx
.Ltmp1885:
	.loc	12 286 7                # decompress.c:286:7
	jl	.LBB14_357
.Ltmp1886:
# %bb.356:                              # %sw.bb743.if.then750_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	movl	(%r14), %eax
	jmp	.LBB14_362
.Ltmp1887:
.LBB14_357:                             # %if.end760.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1888:
	.loc	12 286 7                # decompress.c:286:7
	addl	$-1, %esi
.Ltmp1889:
.LBB14_358:                             # %if.end760.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	cmpl	$-1, %esi
.Ltmp1890:
	.loc	12 286 7                # decompress.c:286:7
	je	.LBB14_26
.Ltmp1891:
# %bb.359:                              # %if.end766.i
                                        #   in Loop: Header=BB14_358 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_361
.Ltmp1892:
# %bb.360:                              # %if.then789.i
                                        #   in Loop: Header=BB14_358 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	addl	$1, 16(%rdx)
.Ltmp1893:
.LBB14_361:                             # %if.end793.i
                                        #   in Loop: Header=BB14_358 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1894:
	.loc	12 286 7                # decompress.c:286:7
	jle	.LBB14_358
.Ltmp1895:
.LBB14_362:                             # %if.then750.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 286 7                # decompress.c:286:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1896:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1897:
	.loc	12 287 31 is_stmt 1     # decompress.c:287:31
	movl	3176(%r15), %edx
	.loc	12 287 46 is_stmt 0     # decompress.c:287:46
	shll	$8, %edx
	.loc	12 287 55               # decompress.c:287:55
	movzbl	%al, %eax
.Ltmp1898:
	.loc	12 287 52               # decompress.c:287:52
	orl	%edx, %eax
	.loc	12 287 25               # decompress.c:287:25
	movl	%eax, 3176(%r15)
.Ltmp1899:
.LBB14_363:                             # %sw.bb800.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7 is_stmt 1      # decompress.c:288:7
	movl	$23, (%r12)
.Ltmp1900:
	.loc	12 288 7 is_stmt 0      # decompress.c:288:7
	cmpl	$8, %ecx
.Ltmp1901:
	.loc	12 288 7                # decompress.c:288:7
	jl	.LBB14_365
.Ltmp1902:
# %bb.364:                              # %sw.bb800.if.then807_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	movl	(%r14), %eax
	jmp	.LBB14_370
.Ltmp1903:
.LBB14_365:                             # %if.end817.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1904:
	.loc	12 288 7                # decompress.c:288:7
	addl	$-1, %esi
.Ltmp1905:
.LBB14_366:                             # %if.end817.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	cmpl	$-1, %esi
.Ltmp1906:
	.loc	12 288 7                # decompress.c:288:7
	je	.LBB14_26
.Ltmp1907:
# %bb.367:                              # %if.end823.i
                                        #   in Loop: Header=BB14_366 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_369
.Ltmp1908:
# %bb.368:                              # %if.then846.i
                                        #   in Loop: Header=BB14_366 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	addl	$1, 16(%rdx)
.Ltmp1909:
.LBB14_369:                             # %if.end850.i
                                        #   in Loop: Header=BB14_366 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1910:
	.loc	12 288 7                # decompress.c:288:7
	jle	.LBB14_366
.Ltmp1911:
.LBB14_370:                             # %if.then807.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 288 7                # decompress.c:288:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1912:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1913:
	.loc	12 289 31 is_stmt 1     # decompress.c:289:31
	movl	3176(%r15), %edx
	.loc	12 289 46 is_stmt 0     # decompress.c:289:46
	shll	$8, %edx
	.loc	12 289 55               # decompress.c:289:55
	movzbl	%al, %eax
.Ltmp1914:
	.loc	12 289 52               # decompress.c:289:52
	orl	%edx, %eax
	.loc	12 289 25               # decompress.c:289:25
	movl	%eax, 3176(%r15)
.Ltmp1915:
.LBB14_371:                             # %sw.bb857.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7 is_stmt 1      # decompress.c:291:7
	movl	$24, (%r12)
.Ltmp1916:
	.loc	12 291 7 is_stmt 0      # decompress.c:291:7
	testl	%ecx, %ecx
.Ltmp1917:
	.loc	12 291 7                # decompress.c:291:7
	jle	.LBB14_373
.Ltmp1918:
# %bb.372:                              # %sw.bb857.if.then864_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	movl	(%r14), %edx
	jmp	.LBB14_378
.Ltmp1919:
.LBB14_373:                             # %if.end874.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1920:
	.loc	12 291 7                # decompress.c:291:7
	addl	$-1, %esi
.Ltmp1921:
.LBB14_374:                             # %if.end874.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	cmpl	$-1, %esi
.Ltmp1922:
	.loc	12 291 7                # decompress.c:291:7
	je	.LBB14_26
.Ltmp1923:
# %bb.375:                              # %if.end880.i
                                        #   in Loop: Header=BB14_374 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_377
.Ltmp1924:
# %bb.376:                              # %if.then903.i
                                        #   in Loop: Header=BB14_374 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	addl	$1, 16(%rax)
.Ltmp1925:
.LBB14_377:                             # %if.end907.i
                                        #   in Loop: Header=BB14_374 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	addl	$-1, %esi
	testl	%ecx, %ecx
.Ltmp1926:
	.loc	12 291 7                # decompress.c:291:7
	jle	.LBB14_374
.Ltmp1927:
.LBB14_378:                             # %if.then864.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 291 7                # decompress.c:291:7
	addl	$-1, %ecx
	shrl	%cl, %edx
.Ltmp1928:
	#DEBUG_VALUE: v <- [DW_OP_constu 1, DW_OP_and, DW_OP_stack_value] $edx
	movl	%ecx, 36(%r15)
	andb	$1, %dl
.Ltmp1929:
	movb	%dl, 20(%r15)
.Ltmp1930:
	.loc	12 293 18 is_stmt 1     # decompress.c:293:18
	movl	$0, 56(%r15)
.Ltmp1931:
.LBB14_379:                             # %sw.bb909.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	movl	$25, (%r12)
.Ltmp1932:
	.loc	12 294 7 is_stmt 0      # decompress.c:294:7
	cmpl	$8, %ecx
.Ltmp1933:
	.loc	12 294 7                # decompress.c:294:7
	jl	.LBB14_381
.Ltmp1934:
# %bb.380:                              # %sw.bb909.if.then916_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	movl	(%r14), %eax
	jmp	.LBB14_386
.Ltmp1935:
.LBB14_381:                             # %if.end926.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1936:
	.loc	12 294 7                # decompress.c:294:7
	addl	$-1, %esi
.Ltmp1937:
.LBB14_382:                             # %if.end926.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	cmpl	$-1, %esi
.Ltmp1938:
	.loc	12 294 7                # decompress.c:294:7
	je	.LBB14_26
.Ltmp1939:
# %bb.383:                              # %if.end932.i
                                        #   in Loop: Header=BB14_382 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_385
.Ltmp1940:
# %bb.384:                              # %if.then955.i
                                        #   in Loop: Header=BB14_382 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	addl	$1, 16(%rdx)
.Ltmp1941:
.LBB14_385:                             # %if.end959.i
                                        #   in Loop: Header=BB14_382 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1942:
	.loc	12 294 7                # decompress.c:294:7
	jle	.LBB14_382
.Ltmp1943:
.LBB14_386:                             # %if.then916.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 294 7                # decompress.c:294:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1944:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1945:
	.loc	12 295 24 is_stmt 1     # decompress.c:295:24
	movl	56(%r15), %edx
	.loc	12 295 32 is_stmt 0     # decompress.c:295:32
	shll	$8, %edx
	.loc	12 295 41               # decompress.c:295:41
	movzbl	%al, %eax
.Ltmp1946:
	.loc	12 295 38               # decompress.c:295:38
	orl	%edx, %eax
	.loc	12 295 18               # decompress.c:295:18
	movl	%eax, 56(%r15)
.Ltmp1947:
.LBB14_387:                             # %sw.bb966.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7 is_stmt 1      # decompress.c:296:7
	movl	$26, (%r12)
.Ltmp1948:
	.loc	12 296 7 is_stmt 0      # decompress.c:296:7
	cmpl	$8, %ecx
.Ltmp1949:
	.loc	12 296 7                # decompress.c:296:7
	jl	.LBB14_389
.Ltmp1950:
# %bb.388:                              # %sw.bb966.if.then973_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	movl	(%r14), %eax
	jmp	.LBB14_394
.Ltmp1951:
.LBB14_389:                             # %if.end983.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1952:
	.loc	12 296 7                # decompress.c:296:7
	addl	$-1, %esi
.Ltmp1953:
.LBB14_390:                             # %if.end983.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	cmpl	$-1, %esi
.Ltmp1954:
	.loc	12 296 7                # decompress.c:296:7
	je	.LBB14_26
.Ltmp1955:
# %bb.391:                              # %if.end989.i
                                        #   in Loop: Header=BB14_390 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_393
.Ltmp1956:
# %bb.392:                              # %if.then1012.i
                                        #   in Loop: Header=BB14_390 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	addl	$1, 16(%rdx)
.Ltmp1957:
.LBB14_393:                             # %if.end1016.i
                                        #   in Loop: Header=BB14_390 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1958:
	.loc	12 296 7                # decompress.c:296:7
	jle	.LBB14_390
.Ltmp1959:
.LBB14_394:                             # %if.then973.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 296 7                # decompress.c:296:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1960:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1961:
	.loc	12 297 24 is_stmt 1     # decompress.c:297:24
	movl	56(%r15), %edx
	.loc	12 297 32 is_stmt 0     # decompress.c:297:32
	shll	$8, %edx
	.loc	12 297 41               # decompress.c:297:41
	movzbl	%al, %eax
.Ltmp1962:
	.loc	12 297 38               # decompress.c:297:38
	orl	%edx, %eax
	.loc	12 297 18               # decompress.c:297:18
	movl	%eax, 56(%r15)
.Ltmp1963:
.LBB14_395:                             # %sw.bb1023.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7 is_stmt 1      # decompress.c:298:7
	movl	$27, (%r12)
.Ltmp1964:
	.loc	12 298 7 is_stmt 0      # decompress.c:298:7
	cmpl	$8, %ecx
.Ltmp1965:
	.loc	12 298 7                # decompress.c:298:7
	jl	.LBB14_397
.Ltmp1966:
# %bb.396:                              # %sw.bb1023.if.then1030_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	movl	(%r14), %eax
	jmp	.LBB14_402
.Ltmp1967:
.LBB14_397:                             # %if.end1040.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp1968:
	.loc	12 298 7                # decompress.c:298:7
	addl	$-1, %esi
.Ltmp1969:
.LBB14_398:                             # %if.end1040.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	cmpl	$-1, %esi
.Ltmp1970:
	.loc	12 298 7                # decompress.c:298:7
	je	.LBB14_26
.Ltmp1971:
# %bb.399:                              # %if.end1046.i
                                        #   in Loop: Header=BB14_398 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_401
.Ltmp1972:
# %bb.400:                              # %if.then1069.i
                                        #   in Loop: Header=BB14_398 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	addl	$1, 16(%rdx)
.Ltmp1973:
.LBB14_401:                             # %if.end1073.i
                                        #   in Loop: Header=BB14_398 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1974:
	.loc	12 298 7                # decompress.c:298:7
	jle	.LBB14_398
.Ltmp1975:
.LBB14_402:                             # %if.then1030.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 298 7                # decompress.c:298:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp1976:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp1977:
	.loc	12 299 24 is_stmt 1     # decompress.c:299:24
	movl	56(%r15), %ecx
	.loc	12 299 32 is_stmt 0     # decompress.c:299:32
	shll	$8, %ecx
	.loc	12 299 41               # decompress.c:299:41
	movzbl	%al, %edx
.Ltmp1978:
	.loc	12 301 22 is_stmt 1     # decompress.c:301:22
	orl	%ecx, %edx
.Ltmp1979:
	.loc	12 299 18               # decompress.c:299:18
	movl	%edx, 56(%r15)
	movl	$-4, %eax
.Ltmp1980:
	.loc	12 301 11               # decompress.c:301:11
	js	.LBB14_828
.Ltmp1981:
# %bb.403:                              # %if.end1084.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 303 35               # decompress.c:303:35
	imull	$100000, 40(%r15), %esi # imm = 0x186A0
	.loc	12 303 27 is_stmt 0     # decompress.c:303:27
	orl	$10, %esi
	xorl	%ecx, %ecx
	.loc	12 303 22               # decompress.c:303:22
	cmpl	%esi, %edx
.Ltmp1982:
	.loc	12 303 11               # decompress.c:303:11
	jg	.LBB14_828
	jmp	.LBB14_531
.Ltmp1983:
.LBB14_408:                             # %if.end2960.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7 is_stmt 1      # decompress.c:604:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp1984:
	.loc	12 604 7 is_stmt 0      # decompress.c:604:7
	addl	$-1, %esi
.Ltmp1985:
.LBB14_409:                             # %if.end2960.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	cmpl	$-1, %esi
.Ltmp1986:
	.loc	12 604 7                # decompress.c:604:7
	je	.LBB14_26
.Ltmp1987:
# %bb.410:                              # %if.end2966.i
                                        #   in Loop: Header=BB14_409 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_412
.Ltmp1988:
# %bb.411:                              # %if.then2989.i
                                        #   in Loop: Header=BB14_409 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	addl	$1, 16(%rax)
.Ltmp1989:
.LBB14_412:                             # %if.end2993.i
                                        #   in Loop: Header=BB14_409 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp1990:
	.loc	12 604 7                # decompress.c:604:7
	jle	.LBB14_409
.Ltmp1991:
.LBB14_413:                             # %if.then2950.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 604 7                # decompress.c:604:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp1992:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp1993:
	.loc	12 605 14 is_stmt 1     # decompress.c:605:14
	cmpb	$114, %dl
.Ltmp1994:
	.loc	12 605 11 is_stmt 0     # decompress.c:605:11
	jne	.LBB14_828
.Ltmp1995:
.LBB14_414:                             # %sw.bb3000.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7 is_stmt 1      # decompress.c:606:7
	movl	$43, (%r12)
.Ltmp1996:
	.loc	12 606 7 is_stmt 0      # decompress.c:606:7
	cmpl	$8, %ecx
.Ltmp1997:
	.loc	12 606 7                # decompress.c:606:7
	jl	.LBB14_416
.Ltmp1998:
# %bb.415:                              # %sw.bb3000.if.then3007_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	movl	(%r14), %edx
	jmp	.LBB14_421
.Ltmp1999:
.LBB14_416:                             # %if.end3017.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp2000:
	.loc	12 606 7                # decompress.c:606:7
	addl	$-1, %esi
.Ltmp2001:
.LBB14_417:                             # %if.end3017.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	cmpl	$-1, %esi
.Ltmp2002:
	.loc	12 606 7                # decompress.c:606:7
	je	.LBB14_26
.Ltmp2003:
# %bb.418:                              # %if.end3023.i
                                        #   in Loop: Header=BB14_417 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_420
.Ltmp2004:
# %bb.419:                              # %if.then3046.i
                                        #   in Loop: Header=BB14_417 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	addl	$1, 16(%rax)
.Ltmp2005:
.LBB14_420:                             # %if.end3050.i
                                        #   in Loop: Header=BB14_417 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2006:
	.loc	12 606 7                # decompress.c:606:7
	jle	.LBB14_417
.Ltmp2007:
.LBB14_421:                             # %if.then3007.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 606 7                # decompress.c:606:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp2008:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp2009:
	.loc	12 607 14 is_stmt 1     # decompress.c:607:14
	cmpb	$69, %dl
.Ltmp2010:
	.loc	12 607 11 is_stmt 0     # decompress.c:607:11
	jne	.LBB14_828
.Ltmp2011:
.LBB14_422:                             # %sw.bb3057.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7 is_stmt 1      # decompress.c:608:7
	movl	$44, (%r12)
.Ltmp2012:
	.loc	12 608 7 is_stmt 0      # decompress.c:608:7
	cmpl	$8, %ecx
.Ltmp2013:
	.loc	12 608 7                # decompress.c:608:7
	jl	.LBB14_424
.Ltmp2014:
# %bb.423:                              # %sw.bb3057.if.then3064_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	movl	(%r14), %edx
	jmp	.LBB14_429
.Ltmp2015:
.LBB14_424:                             # %if.end3074.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp2016:
	.loc	12 608 7                # decompress.c:608:7
	addl	$-1, %esi
.Ltmp2017:
.LBB14_425:                             # %if.end3074.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	cmpl	$-1, %esi
.Ltmp2018:
	.loc	12 608 7                # decompress.c:608:7
	je	.LBB14_26
.Ltmp2019:
# %bb.426:                              # %if.end3080.i
                                        #   in Loop: Header=BB14_425 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_428
.Ltmp2020:
# %bb.427:                              # %if.then3103.i
                                        #   in Loop: Header=BB14_425 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	addl	$1, 16(%rax)
.Ltmp2021:
.LBB14_428:                             # %if.end3107.i
                                        #   in Loop: Header=BB14_425 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2022:
	.loc	12 608 7                # decompress.c:608:7
	jle	.LBB14_425
.Ltmp2023:
.LBB14_429:                             # %if.then3064.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 608 7                # decompress.c:608:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp2024:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp2025:
	.loc	12 609 14 is_stmt 1     # decompress.c:609:14
	cmpb	$56, %dl
.Ltmp2026:
	.loc	12 609 11 is_stmt 0     # decompress.c:609:11
	jne	.LBB14_828
.Ltmp2027:
.LBB14_430:                             # %sw.bb3114.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7 is_stmt 1      # decompress.c:610:7
	movl	$45, (%r12)
.Ltmp2028:
	.loc	12 610 7 is_stmt 0      # decompress.c:610:7
	cmpl	$8, %ecx
.Ltmp2029:
	.loc	12 610 7                # decompress.c:610:7
	jl	.LBB14_432
.Ltmp2030:
# %bb.431:                              # %sw.bb3114.if.then3121_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	movl	(%r14), %edx
	jmp	.LBB14_437
.Ltmp2031:
.LBB14_432:                             # %if.end3131.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp2032:
	.loc	12 610 7                # decompress.c:610:7
	addl	$-1, %esi
.Ltmp2033:
.LBB14_433:                             # %if.end3131.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	cmpl	$-1, %esi
.Ltmp2034:
	.loc	12 610 7                # decompress.c:610:7
	je	.LBB14_26
.Ltmp2035:
# %bb.434:                              # %if.end3137.i
                                        #   in Loop: Header=BB14_433 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_436
.Ltmp2036:
# %bb.435:                              # %if.then3160.i
                                        #   in Loop: Header=BB14_433 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	addl	$1, 16(%rax)
.Ltmp2037:
.LBB14_436:                             # %if.end3164.i
                                        #   in Loop: Header=BB14_433 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2038:
	.loc	12 610 7                # decompress.c:610:7
	jle	.LBB14_433
.Ltmp2039:
.LBB14_437:                             # %if.then3121.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 610 7                # decompress.c:610:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp2040:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp2041:
	.loc	12 611 14 is_stmt 1     # decompress.c:611:14
	cmpb	$80, %dl
.Ltmp2042:
	.loc	12 611 11 is_stmt 0     # decompress.c:611:11
	jne	.LBB14_828
.Ltmp2043:
.LBB14_438:                             # %sw.bb3171.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7 is_stmt 1      # decompress.c:612:7
	movl	$46, (%r12)
.Ltmp2044:
	.loc	12 612 7 is_stmt 0      # decompress.c:612:7
	cmpl	$8, %ecx
.Ltmp2045:
	.loc	12 612 7                # decompress.c:612:7
	jl	.LBB14_440
.Ltmp2046:
# %bb.439:                              # %sw.bb3171.if.then3178_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	movl	(%r14), %edx
	jmp	.LBB14_445
.Ltmp2047:
.LBB14_440:                             # %if.end3188.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	movq	(%r15), %rax
	movl	8(%rax), %esi
.Ltmp2048:
	.loc	12 612 7                # decompress.c:612:7
	addl	$-1, %esi
.Ltmp2049:
.LBB14_441:                             # %if.end3188.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	cmpl	$-1, %esi
.Ltmp2050:
	.loc	12 612 7                # decompress.c:612:7
	je	.LBB14_26
.Ltmp2051:
# %bb.442:                              # %if.end3194.i
                                        #   in Loop: Header=BB14_441 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %edx
	orl	%edi, %edx
	movl	%edx, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%esi, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_444
.Ltmp2052:
# %bb.443:                              # %if.then3217.i
                                        #   in Loop: Header=BB14_441 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	addl	$1, 16(%rax)
.Ltmp2053:
.LBB14_444:                             # %if.end3221.i
                                        #   in Loop: Header=BB14_441 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2054:
	.loc	12 612 7                # decompress.c:612:7
	jle	.LBB14_441
.Ltmp2055:
.LBB14_445:                             # %if.then3178.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 612 7                # decompress.c:612:7
	addl	$-8, %ecx
	shrl	%cl, %edx
.Ltmp2056:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $edx
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	movl	%ecx, (%r9)
	movl	$-4, %eax
.Ltmp2057:
	.loc	12 613 14 is_stmt 1     # decompress.c:613:14
	cmpb	$-112, %dl
.Ltmp2058:
	.loc	12 613 11 is_stmt 0     # decompress.c:613:11
	jne	.LBB14_828
.Ltmp2059:
# %bb.446:                              # %if.end3227.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $edx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 615 28 is_stmt 1     # decompress.c:615:28
	movl	$0, 3180(%r15)
.Ltmp2060:
.LBB14_447:                             # %sw.bb3228.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	movl	$47, (%r12)
.Ltmp2061:
	.loc	12 616 7 is_stmt 0      # decompress.c:616:7
	cmpl	$8, %ecx
.Ltmp2062:
	.loc	12 616 7                # decompress.c:616:7
	jl	.LBB14_449
.Ltmp2063:
# %bb.448:                              # %sw.bb3228.if.then3235_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	movl	(%r14), %eax
	jmp	.LBB14_454
.Ltmp2064:
.LBB14_449:                             # %if.end3245.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp2065:
	.loc	12 616 7                # decompress.c:616:7
	addl	$-1, %esi
.Ltmp2066:
.LBB14_450:                             # %if.end3245.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	cmpl	$-1, %esi
.Ltmp2067:
	.loc	12 616 7                # decompress.c:616:7
	je	.LBB14_26
.Ltmp2068:
# %bb.451:                              # %if.end3251.i
                                        #   in Loop: Header=BB14_450 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_453
.Ltmp2069:
# %bb.452:                              # %if.then3274.i
                                        #   in Loop: Header=BB14_450 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	addl	$1, 16(%rdx)
.Ltmp2070:
.LBB14_453:                             # %if.end3278.i
                                        #   in Loop: Header=BB14_450 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2071:
	.loc	12 616 7                # decompress.c:616:7
	jle	.LBB14_450
.Ltmp2072:
.LBB14_454:                             # %if.then3235.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 616 7                # decompress.c:616:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp2073:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp2074:
	.loc	12 617 34 is_stmt 1     # decompress.c:617:34
	movl	3180(%r15), %edx
	.loc	12 617 52 is_stmt 0     # decompress.c:617:52
	shll	$8, %edx
	.loc	12 617 61               # decompress.c:617:61
	movzbl	%al, %eax
.Ltmp2075:
	.loc	12 617 58               # decompress.c:617:58
	orl	%edx, %eax
	.loc	12 617 28               # decompress.c:617:28
	movl	%eax, 3180(%r15)
.Ltmp2076:
.LBB14_455:                             # %sw.bb3285.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7 is_stmt 1      # decompress.c:618:7
	movl	$48, (%r12)
.Ltmp2077:
	.loc	12 618 7 is_stmt 0      # decompress.c:618:7
	cmpl	$8, %ecx
.Ltmp2078:
	.loc	12 618 7                # decompress.c:618:7
	jl	.LBB14_457
.Ltmp2079:
# %bb.456:                              # %sw.bb3285.if.then3292_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	movl	(%r14), %eax
	jmp	.LBB14_462
.Ltmp2080:
.LBB14_457:                             # %if.end3302.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp2081:
	.loc	12 618 7                # decompress.c:618:7
	addl	$-1, %esi
.Ltmp2082:
.LBB14_458:                             # %if.end3302.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	cmpl	$-1, %esi
.Ltmp2083:
	.loc	12 618 7                # decompress.c:618:7
	je	.LBB14_26
.Ltmp2084:
# %bb.459:                              # %if.end3308.i
                                        #   in Loop: Header=BB14_458 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_461
.Ltmp2085:
# %bb.460:                              # %if.then3331.i
                                        #   in Loop: Header=BB14_458 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	addl	$1, 16(%rdx)
.Ltmp2086:
.LBB14_461:                             # %if.end3335.i
                                        #   in Loop: Header=BB14_458 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2087:
	.loc	12 618 7                # decompress.c:618:7
	jle	.LBB14_458
.Ltmp2088:
.LBB14_462:                             # %if.then3292.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 618 7                # decompress.c:618:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp2089:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp2090:
	.loc	12 619 34 is_stmt 1     # decompress.c:619:34
	movl	3180(%r15), %edx
	.loc	12 619 52 is_stmt 0     # decompress.c:619:52
	shll	$8, %edx
	.loc	12 619 61               # decompress.c:619:61
	movzbl	%al, %eax
.Ltmp2091:
	.loc	12 619 58               # decompress.c:619:58
	orl	%edx, %eax
	.loc	12 619 28               # decompress.c:619:28
	movl	%eax, 3180(%r15)
.Ltmp2092:
.LBB14_463:                             # %sw.bb3342.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7 is_stmt 1      # decompress.c:620:7
	movl	$49, (%r12)
.Ltmp2093:
	.loc	12 620 7 is_stmt 0      # decompress.c:620:7
	cmpl	$8, %ecx
.Ltmp2094:
	.loc	12 620 7                # decompress.c:620:7
	jl	.LBB14_465
.Ltmp2095:
# %bb.464:                              # %sw.bb3342.if.then3349_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	movl	(%r14), %eax
	jmp	.LBB14_470
.Ltmp2096:
.LBB14_465:                             # %if.end3359.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp2097:
	.loc	12 620 7                # decompress.c:620:7
	addl	$-1, %esi
.Ltmp2098:
.LBB14_466:                             # %if.end3359.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	cmpl	$-1, %esi
.Ltmp2099:
	.loc	12 620 7                # decompress.c:620:7
	je	.LBB14_26
.Ltmp2100:
# %bb.467:                              # %if.end3365.i
                                        #   in Loop: Header=BB14_466 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_469
.Ltmp2101:
# %bb.468:                              # %if.then3388.i
                                        #   in Loop: Header=BB14_466 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	addl	$1, 16(%rdx)
.Ltmp2102:
.LBB14_469:                             # %if.end3392.i
                                        #   in Loop: Header=BB14_466 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2103:
	.loc	12 620 7                # decompress.c:620:7
	jle	.LBB14_466
.Ltmp2104:
.LBB14_470:                             # %if.then3349.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 620 7                # decompress.c:620:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp2105:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp2106:
	.loc	12 621 34 is_stmt 1     # decompress.c:621:34
	movl	3180(%r15), %edx
	.loc	12 621 52 is_stmt 0     # decompress.c:621:52
	shll	$8, %edx
	.loc	12 621 61               # decompress.c:621:61
	movzbl	%al, %eax
.Ltmp2107:
	.loc	12 621 58               # decompress.c:621:58
	orl	%edx, %eax
	.loc	12 621 28               # decompress.c:621:28
	movl	%eax, 3180(%r15)
.Ltmp2108:
.LBB14_471:                             # %sw.bb3399.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7 is_stmt 1      # decompress.c:622:7
	movl	$50, (%r12)
.Ltmp2109:
	.loc	12 622 7 is_stmt 0      # decompress.c:622:7
	cmpl	$8, %ecx
.Ltmp2110:
	.loc	12 622 7                # decompress.c:622:7
	jl	.LBB14_473
.Ltmp2111:
# %bb.472:                              # %sw.bb3399.if.then3406_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	movl	(%r14), %eax
	jmp	.LBB14_478
.Ltmp2112:
.LBB14_473:                             # %if.end3416.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp2113:
	.loc	12 622 7                # decompress.c:622:7
	addl	$-1, %esi
.Ltmp2114:
.LBB14_474:                             # %if.end3416.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	cmpl	$-1, %esi
.Ltmp2115:
	.loc	12 622 7                # decompress.c:622:7
	je	.LBB14_26
.Ltmp2116:
# %bb.475:                              # %if.end3422.i
                                        #   in Loop: Header=BB14_474 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_477
.Ltmp2117:
# %bb.476:                              # %if.then3445.i
                                        #   in Loop: Header=BB14_474 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	addl	$1, 16(%rdx)
.Ltmp2118:
.LBB14_477:                             # %if.end3449.i
                                        #   in Loop: Header=BB14_474 Depth=2
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	addl	$-1, %esi
	cmpl	$7, %ecx
.Ltmp2119:
	.loc	12 622 7                # decompress.c:622:7
	jle	.LBB14_474
.Ltmp2120:
.LBB14_478:                             # %if.then3406.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 622 7                # decompress.c:622:7
	addl	$-8, %ecx
	shrl	%cl, %eax
.Ltmp2121:
	#DEBUG_VALUE: v <- [DW_OP_constu 255, DW_OP_and, DW_OP_stack_value] $eax
	movl	%ecx, 36(%r15)
.Ltmp2122:
	.loc	12 623 34 is_stmt 1     # decompress.c:623:34
	movl	3180(%r15), %ecx
	.loc	12 623 52 is_stmt 0     # decompress.c:623:52
	shll	$8, %ecx
	.loc	12 623 61               # decompress.c:623:61
	movzbl	%al, %eax
.Ltmp2123:
	.loc	12 623 58               # decompress.c:623:58
	orl	%ecx, %eax
	.loc	12 623 28               # decompress.c:623:28
	movl	%eax, 3180(%r15)
	.loc	12 625 16 is_stmt 1     # decompress.c:625:16
	movl	$1, 8(%r15)
.Ltmp2124:
	#DEBUG_VALUE: BZ2_decompress:retVal <- 4
	.loc	12 0 16 is_stmt 0       # decompress.c:0:16
	movl	$4, %eax
	jmp	.LBB14_828
.Ltmp2125:
.LBB14_494:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$0, 56(%rsp)            # 4-byte Folded Spill
	movl	$-4, %eax
	jmp	.LBB14_828
.Ltmp2126:
.LBB14_500:                             # %vector.scevcheck.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 345 40 is_stmt 1     # decompress.c:345:40
	leal	-1(%rbx), %ecx
	xorl	%eax, %eax
	cmpb	$-1, %cl
	je	.LBB14_270
.Ltmp2127:
# %bb.501:                              # %vector.scevcheck.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	$255, %ecx
	ja	.LBB14_270
.Ltmp2128:
# %bb.502:                              # %vector.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ebx, %eax
	andl	$-32, %eax
	leal	-32(%rax), %edi
	movl	%edi, %esi
	shrl	$5, %esi
	addl	$1, %esi
	movl	%esi, %ecx
	andl	$3, %ecx
	xorl	%edx, %edx
	movdqa	%xmm9, %xmm0
	cmpl	$96, %edi
	jb	.LBB14_505
.Ltmp2129:
# %bb.503:                              # %vector.ph.new.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$1, %edx
	subl	%esi, %edx
	leal	(%rcx,%rdx), %esi
	addl	$-1, %esi
	xorl	%edx, %edx
	movdqa	%xmm9, %xmm0
.Ltmp2130:
.LBB14_504:                             # %vector.body.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 40 is_stmt 0       # decompress.c:0:40
	movdqa	%xmm0, %xmm1
	paddb	%xmm10, %xmm1
	.loc	12 345 40               # decompress.c:345:40
	movl	%edx, %edi
	andl	$128, %edi
	.loc	12 345 47               # decompress.c:345:47
	movdqu	%xmm0, 34(%rsp,%rdi)
	movdqu	%xmm1, 50(%rsp,%rdi)
	movdqa	%xmm0, %xmm1
	paddb	%xmm11, %xmm1
	movdqa	%xmm0, %xmm2
	paddb	%xmm12, %xmm2
	movdqu	%xmm1, 66(%rsp,%rdi)
	movdqu	%xmm2, 82(%rsp,%rdi)
	movdqa	%xmm0, %xmm1
	paddb	%xmm13, %xmm1
	movdqa	%xmm0, %xmm2
	paddb	%xmm14, %xmm2
	movdqu	%xmm1, 98(%rsp,%rdi)
	movdqu	%xmm2, 114(%rsp,%rdi)
	movdqa	%xmm0, %xmm1
	paddb	%xmm15, %xmm1
	movdqa	%xmm0, %xmm2
	paddb	%xmm4, %xmm2
	movdqu	%xmm1, 130(%rsp,%rdi)
	movdqu	%xmm2, 146(%rsp,%rdi)
	subl	$-128, %edx
	pxor	%xmm5, %xmm0
	addl	$4, %esi
	jne	.LBB14_504
.Ltmp2131:
.LBB14_505:                             # %middle.block.unr-lcssa.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 47                 # decompress.c:0:47
	testl	%ecx, %ecx
	je	.LBB14_508
.Ltmp2132:
# %bb.506:                              # %vector.body.epil.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	negl	%ecx
.Ltmp2133:
.LBB14_507:                             # %vector.body.epil.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movdqa	%xmm0, %xmm1
	paddb	%xmm10, %xmm1
	.loc	12 345 40               # decompress.c:345:40
	movl	%edx, %esi
	andl	$224, %esi
	.loc	12 345 47               # decompress.c:345:47
	movdqu	%xmm0, 34(%rsp,%rsi)
	movdqu	%xmm1, 50(%rsp,%rsi)
	addl	$32, %edx
	paddb	%xmm11, %xmm0
	incl	%ecx
	jne	.LBB14_507
.Ltmp2134:
.LBB14_508:                             # %middle.block.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 47                 # decompress.c:0:47
	cmpl	%eax, %ebx
	.loc	12 345 40               # decompress.c:345:40
	jne	.LBB14_270
	jmp	.LBB14_271
.Ltmp2135:
.LBB14_509:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 40                 # decompress.c:0:40
	movl	$-3, %eax
.Ltmp2136:
.LBB14_510:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%rbx, %r9
	pxor	%xmm8, %xmm8
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movq	96(%rsp), %r10          # 8-byte Reload
.Ltmp2137:
.LBB14_511:                             # %BZ2_decompress.exit
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %rbx          # 8-byte Reload
	movl	12(%rsp), %r11d         # 4-byte Reload
	jmp	.LBB14_828
.Ltmp2138:
.LBB14_512:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: c_state_out_len <- [$rsp+0]
	#DEBUG_VALUE: cs_avail_out <- $ebp
	#DEBUG_VALUE: avail_out_INIT <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: s_save_nblockPP <- $r14d
	#DEBUG_VALUE: cs_next_out <- $rcx
	#DEBUG_VALUE: c_tPos <- $r9d
	#DEBUG_VALUE: c_tt <- $rbx
	#DEBUG_VALUE: c_k0 <- $r10d
	#DEBUG_VALUE: c_nblock_used <- $r13d
	#DEBUG_VALUE: c_state_out_ch <- $r8b
	#DEBUG_VALUE: c_calculatedBlockCRC <- $r11d
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	.loc	5 650 21 is_stmt 1      # bzlib.c:650:21
	movl	%r8d, %r12d
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	xorl	%ebp, %ebp
.Ltmp2139:
	jmp	.LBB14_181
.Ltmp2140:
.LBB14_513:                             # %while.end1435.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	(%rsp), %rcx            # 8-byte Reload
.Ltmp2141:
	.loc	12 339 10 is_stmt 1     # decompress.c:339:10
	movslq	%ecx, %rcx
	movl	24(%rsp), %eax          # 4-byte Reload
	.loc	12 339 28 is_stmt 0     # decompress.c:339:28
	movb	%al, 25886(%r15,%rcx)
	movq	%rcx, %rax
.Ltmp2142:
	.loc	12 331 36 is_stmt 1     # decompress.c:331:36
	addl	$1, %eax
.Ltmp2143:
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	.loc	12 0 36 is_stmt 0       # decompress.c:0:36
	movl	56(%rsp), %ecx          # 4-byte Reload
	movl	%ecx, 12(%rsp)          # 4-byte Spill
	jmp	.LBB14_253
.Ltmp2144:
.LBB14_514:                             # %if.then625.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 279 10 is_stmt 1     # decompress.c:279:10
	movq	stderr(%rip), %rdi
	movl	$.L.str.67, %esi
	xorl	%eax, %eax
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%r9, %rbx
	movq	%r10, 96(%rsp)          # 8-byte Spill
	movq	%r8, %rbp
	movl	%r11d, 12(%rsp)         # 4-byte Spill
	callq	fprintf
	movl	12(%rsp), %r11d         # 4-byte Reload
	movq	%rbp, %r8
	movq	96(%rsp), %r10          # 8-byte Reload
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	pxor	%xmm8, %xmm8
	movq	%rbx, %r9
	movq	40(%rsp), %rbx          # 8-byte Reload
	jmp	.LBB14_338
.Ltmp2145:
.LBB14_676:                             # %sw.bb1870.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 413 7                # decompress.c:413:7
	movl	$37, (%r12)
.Ltmp2146:
	.loc	12 413 7 is_stmt 0      # decompress.c:413:7
	testl	%edx, %edx
.Ltmp2147:
	.loc	12 413 7                # decompress.c:413:7
	jle	.LBB14_678
.Ltmp2148:
# %bb.677:                              # %sw.bb1870.if.then1877_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	movl	(%r14), %eax
	jmp	.LBB14_682
.Ltmp2149:
.LBB14_678:                             # %if.end1886.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
	testl	%esi, %esi
.Ltmp2150:
	.loc	12 413 7                # decompress.c:413:7
	je	.LBB14_26
.Ltmp2151:
# %bb.679:                              # %if.end1892.i
                                        #   in Loop: Header=BB14_678 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	addl	$-1, %esi
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_681
.Ltmp2152:
# %bb.680:                              # %if.then1915.i
                                        #   in Loop: Header=BB14_678 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	addl	$1, 16(%rcx)
.Ltmp2153:
.LBB14_681:                             # %if.end1919.i
                                        #   in Loop: Header=BB14_678 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	testl	%edx, %edx
.Ltmp2154:
	.loc	12 413 7                # decompress.c:413:7
	jle	.LBB14_678
.Ltmp2155:
.LBB14_682:                             # %if.then1877.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	addl	$-1, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	andl	$1, %eax
.Ltmp2156:
	#DEBUG_VALUE: v <- $eax
	#DEBUG_VALUE: BZ2_decompress:zj <- $eax
	movl	%edx, (%r9)
	movq	112(%rsp), %rcx         # 8-byte Reload
.Ltmp2157:
	.loc	12 413 7                # decompress.c:413:7
	leal	(%rax,%rcx,2), %ecx
.Ltmp2158:
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
                                        # kill: def $eax killed $eax killed $rax
	.loc	12 0 7                  # decompress.c:0:7
	movl	%eax, 124(%rsp)         # 4-byte Spill
	movl	16(%rsp), %ebp          # 4-byte Reload
	jmp	.LBB14_673
.Ltmp2159:
.LBB14_577:                             # %for.cond1481.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- $eax
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 12] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	.loc	12 357 21 is_stmt 1     # decompress.c:357:21
	cmpl	%ebx, %eax
	movq	%rcx, 168(%rsp)         # 8-byte Spill
.Ltmp2160:
	.loc	12 357 7 is_stmt 0      # decompress.c:357:7
	jge	.LBB14_587
.Ltmp2161:
# %bb.578:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:t <- $eax
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	movl	%eax, 136(%rsp)         # 4-byte Spill
.Ltmp2162:
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	movl	12(%rsp), %eax          # 4-byte Reload
	movl	%eax, 56(%rsp)          # 4-byte Spill
.Ltmp2163:
.LBB14_579:                             # %sw.bb1485.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	.loc	12 358 10 is_stmt 1     # decompress.c:358:10
	movl	$33, (%r12)
.Ltmp2164:
	.loc	12 358 10 is_stmt 0     # decompress.c:358:10
	movl	(%r9), %ecx
	cmpl	$5, %ecx
.Ltmp2165:
	.loc	12 358 10               # decompress.c:358:10
	jl	.LBB14_581
.Ltmp2166:
# %bb.580:                              # %sw.bb1485.if.then1492_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	movl	(%r14), %eax
	jmp	.LBB14_586
.Ltmp2167:
.LBB14_581:                             # %if.end1501.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	movq	(%r15), %rdx
	movl	8(%rdx), %esi
.Ltmp2168:
	.loc	12 358 10               # decompress.c:358:10
	addl	$-1, %esi
.Ltmp2169:
.LBB14_582:                             # %if.end1501.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	cmpl	$-1, %esi
.Ltmp2170:
	.loc	12 358 10               # decompress.c:358:10
	je	.LBB14_26
.Ltmp2171:
# %bb.583:                              # %if.end1507.i
                                        #   in Loop: Header=BB14_582 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rdx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rdx)
	movl	%esi, 8(%rdx)
	addl	$1, 12(%rdx)
	jne	.LBB14_585
.Ltmp2172:
# %bb.584:                              # %if.then1530.i
                                        #   in Loop: Header=BB14_582 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	addl	$1, 16(%rdx)
.Ltmp2173:
.LBB14_585:                             # %if.end1534.i
                                        #   in Loop: Header=BB14_582 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	addl	$-1, %esi
	cmpl	$4, %ecx
.Ltmp2174:
	.loc	12 358 10               # decompress.c:358:10
	jle	.LBB14_582
.Ltmp2175:
.LBB14_586:                             # %if.then1492.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 358 10               # decompress.c:358:10
	addl	$-5, %ecx
	shrl	%cl, %eax
	andl	$31, %eax
.Ltmp2176:
	#DEBUG_VALUE: v <- $eax
	#DEBUG_VALUE: BZ2_decompress:curr <- $eax
	movl	%ecx, (%r9)
.Ltmp2177:
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 0 0                  # decompress.c:0:0
	movl	%eax, %ecx
.Ltmp2178:
	#DEBUG_VALUE: v <- $ecx
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	xorl	%eax, %eax
	jmp	.LBB14_650
.Ltmp2179:
.LBB14_587:                             # %for.cond1678.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:t <- $eax
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:t <- 0
	movq	%r10, 96(%rsp)          # 8-byte Spill
	movq	%r9, 184(%rsp)          # 8-byte Spill
.Ltmp2180:
	.loc	12 372 21 is_stmt 1     # decompress.c:372:21
	testl	%ebx, %ebx
	movq	%r8, 72(%rsp)           # 8-byte Spill
	movq	%rbx, 40(%rsp)          # 8-byte Spill
.Ltmp2181:
	.loc	12 372 7 is_stmt 0      # decompress.c:372:7
	jle	.LBB14_635
.Ltmp2182:
# %bb.588:                              # %for.cond1682.preheader.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	movq	%r13, 176(%rsp)         # 8-byte Spill
	movq	%r12, 216(%rsp)         # 8-byte Spill
	movl	92(%rsp), %ebp          # 4-byte Reload
	movl	%ebx, %eax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	movl	%ebp, %esi
	andl	$-8, %esi
	movl	%ebp, %eax
	andl	$1, %eax
	.loc	12 372 7                # decompress.c:372:7
	movq	%rbp, %r9
	movq	%rax, (%rsp)            # 8-byte Spill
	subq	%rax, %r9
	movq	232(%rsp), %r11         # 8-byte Reload
	movq	%r15, %r13
	movq	240(%rsp), %rcx         # 8-byte Reload
.Ltmp2183:
	.loc	12 0 7                  # decompress.c:0:7
	movq	248(%rsp), %rdx         # 8-byte Reload
	xorl	%edi, %edi
	movdqa	.LCPI14_10(%rip), %xmm12 # xmm12 = [2147483648,2147483648,2147483648,2147483648]
	movq	%rbp, 80(%rsp)          # 8-byte Spill
	movq	%rsi, 128(%rsp)         # 8-byte Spill
.Ltmp2184:
.LBB14_589:                             # %for.cond1682.preheader.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB14_594 Depth 3
                                        #       Child Loop BB14_596 Depth 3
                                        #       Child Loop BB14_599 Depth 3
                                        #         Child Loop BB14_600 Depth 4
                                        #       Child Loop BB14_613 Depth 3
                                        #       Child Loop BB14_618 Depth 3
                                        #       Child Loop BB14_625 Depth 3
                                        #       Child Loop BB14_631 Depth 3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	#DEBUG_VALUE: BZ2_decompress:t <- $rdi
	#DEBUG_VALUE: BZ2_decompress:minLen <- 32
	#DEBUG_VALUE: BZ2_decompress:maxLen <- 0
	movl	92(%rsp), %r14d         # 4-byte Reload
	testl	%r14d, %r14d
	movq	%rdi, 56(%rsp)          # 8-byte Spill
.Ltmp2185:
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	movq	%rdx, 136(%rsp)         # 8-byte Spill
.Ltmp2186:
	.loc	12 375 10 is_stmt 1     # decompress.c:375:10
	jle	.LBB14_592
.Ltmp2187:
# %bb.590:                              # %for.body1685.preheader.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10 is_stmt 0       # decompress.c:0:10
	cmpl	$8, %r14d
.Ltmp2188:
	.loc	12 376 17 is_stmt 1     # decompress.c:376:17
	jae	.LBB14_593
.Ltmp2189:
# %bb.591:                              #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 17 is_stmt 0       # decompress.c:0:17
	xorl	%edx, %edx
	movl	$32, %r10d
	xorl	%r8d, %r8d
	jmp	.LBB14_596
.Ltmp2190:
.LBB14_592:                             # %for.cond12.preheader.i.i.thread
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 380 15 is_stmt 1     # decompress.c:380:15
	movq	%rdi, %rax
	shlq	$10, %rax
	leaq	(%rax,%rdi,8), %rax
	leaq	(%r15,%rax), %r14
	addq	$45436, %r14            # imm = 0xB17C
.Ltmp2191:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 0
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- 0
	.file	13 "/home/readm/fast-cfi/401.bzip2/huffman.c"
	.loc	13 225 50               # huffman.c:225:50
	movdqu	%xmm8, 51704(%r15,%rax)
	movdqu	%xmm8, 51692(%r15,%rax)
	movdqu	%xmm8, 51676(%r15,%rax)
	movdqu	%xmm8, 51660(%r15,%rax)
	movdqu	%xmm8, 51644(%r15,%rax)
	movdqu	%xmm8, 51628(%r15,%rax)
	movb	$1, %bpl
	movl	$32, %r10d
.Ltmp2192:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 0 50 is_stmt 0       # huffman.c:0:50
	xorl	%r8d, %r8d
	jmp	.LBB14_616
.Ltmp2193:
.LBB14_593:                             # %vector.body5683.i.preheader
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movdqa	%xmm7, %xmm13
	movdqa	%xmm5, %xmm10
	movdqa	%xmm4, %xmm9
	pxor	%xmm2, %xmm2
.Ltmp2194:
	.loc	12 375 38 is_stmt 1     # decompress.c:375:38
	xorl	%eax, %eax
	movdqa	%xmm6, %xmm0
	movdqa	%xmm6, %xmm11
	movdqa	%xmm6, %xmm1
	pxor	%xmm3, %xmm3
.Ltmp2195:
	.p2align	4, 0x90
.LBB14_594:                             # %vector.body5683.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 376 17               # decompress.c:376:17
	movd	-4(%rdx,%rax), %xmm5    # xmm5 = mem[0],zero,zero,zero
	movd	(%rdx,%rax), %xmm4      # xmm4 = mem[0],zero,zero,zero
	punpcklbw	%xmm8, %xmm5    # xmm5 = xmm5[0],xmm8[0],xmm5[1],xmm8[1],xmm5[2],xmm8[2],xmm5[3],xmm8[3],xmm5[4],xmm8[4],xmm5[5],xmm8[5],xmm5[6],xmm8[6],xmm5[7],xmm8[7]
	punpcklwd	%xmm8, %xmm5    # xmm5 = xmm5[0],xmm8[0],xmm5[1],xmm8[1],xmm5[2],xmm8[2],xmm5[3],xmm8[3]
	punpcklbw	%xmm8, %xmm4    # xmm4 = xmm4[0],xmm8[0],xmm4[1],xmm8[1],xmm4[2],xmm8[2],xmm4[3],xmm8[3],xmm4[4],xmm8[4],xmm4[5],xmm8[5],xmm4[6],xmm8[6],xmm4[7],xmm8[7]
	punpcklwd	%xmm8, %xmm4    # xmm4 = xmm4[0],xmm8[0],xmm4[1],xmm8[1],xmm4[2],xmm8[2],xmm4[3],xmm8[3]
.Ltmp2196:
	.loc	12 376 17 is_stmt 0     # decompress.c:376:17
	movdqa	%xmm2, %xmm6
	pxor	%xmm12, %xmm2
	movdqa	%xmm5, %xmm7
	por	%xmm12, %xmm7
	pcmpgtd	%xmm7, %xmm2
	pand	%xmm2, %xmm6
	pandn	%xmm5, %xmm2
	por	%xmm6, %xmm2
	movdqa	%xmm3, %xmm6
	pxor	%xmm12, %xmm3
	movdqa	%xmm4, %xmm7
	por	%xmm12, %xmm7
	pcmpgtd	%xmm7, %xmm3
	pand	%xmm3, %xmm6
	pandn	%xmm4, %xmm3
	por	%xmm6, %xmm3
	.loc	12 377 17 is_stmt 1     # decompress.c:377:17
	movdqa	%xmm5, %xmm6
	pcmpgtd	%xmm0, %xmm6
	movdqa	%xmm0, %xmm7
	pand	%xmm6, %xmm7
	pandn	%xmm5, %xmm6
	movdqa	%xmm6, %xmm0
	por	%xmm7, %xmm0
	movdqa	%xmm4, %xmm5
	pcmpgtd	%xmm1, %xmm5
	movdqa	%xmm1, %xmm6
	pand	%xmm5, %xmm6
	pandn	%xmm4, %xmm5
	movdqa	%xmm5, %xmm1
	por	%xmm6, %xmm1
.Ltmp2197:
	.loc	12 375 38               # decompress.c:375:38
	addq	$8, %rax
	cmpq	%rax, %rsi
	jne	.LBB14_594
.Ltmp2198:
# %bb.595:                              # %middle.block5684.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 376 17               # decompress.c:376:17
	movdqa	%xmm3, %xmm4
	pxor	%xmm12, %xmm4
	movdqa	%xmm2, %xmm5
	pxor	%xmm12, %xmm5
	pcmpgtd	%xmm4, %xmm5
	pand	%xmm5, %xmm2
	pandn	%xmm3, %xmm5
	por	%xmm2, %xmm5
	pshufd	$78, %xmm5, %xmm2       # xmm2 = xmm5[2,3,0,1]
	movdqa	%xmm5, %xmm3
	pxor	%xmm12, %xmm3
	movdqa	%xmm2, %xmm4
	pxor	%xmm12, %xmm4
	pcmpgtd	%xmm4, %xmm3
	pand	%xmm3, %xmm5
	pandn	%xmm2, %xmm3
	por	%xmm5, %xmm3
	pshufd	$229, %xmm3, %xmm2      # xmm2 = xmm3[1,1,2,3]
	movdqa	%xmm3, %xmm4
	pxor	%xmm12, %xmm4
	movdqa	%xmm2, %xmm5
	pxor	%xmm12, %xmm5
	pcmpgtd	%xmm5, %xmm4
	pand	%xmm4, %xmm3
	pandn	%xmm2, %xmm4
	por	%xmm3, %xmm4
	movd	%xmm4, %r8d
	.loc	12 377 17               # decompress.c:377:17
	movdqa	%xmm1, %xmm2
	pcmpgtd	%xmm0, %xmm2
	pand	%xmm2, %xmm0
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pshufd	$78, %xmm2, %xmm0       # xmm0 = xmm2[2,3,0,1]
	movdqa	%xmm0, %xmm1
	pcmpgtd	%xmm2, %xmm1
	pand	%xmm1, %xmm2
	pandn	%xmm0, %xmm1
	por	%xmm2, %xmm1
	pshufd	$229, %xmm1, %xmm0      # xmm0 = xmm1[1,1,2,3]
	movdqa	%xmm0, %xmm2
	pcmpgtd	%xmm1, %xmm2
	pand	%xmm2, %xmm1
	pandn	%xmm0, %xmm2
	por	%xmm1, %xmm2
	movd	%xmm2, %r10d
	movq	%rsi, %rdx
	cmpq	%rbp, %rsi
	movdqa	%xmm9, %xmm4
	movdqa	%xmm10, %xmm5
	movdqa	%xmm11, %xmm6
	movdqa	%xmm13, %xmm7
.Ltmp2199:
	.loc	12 376 17               # decompress.c:376:17
	je	.LBB14_597
.Ltmp2200:
	.p2align	4, 0x90
.LBB14_596:                             # %for.body1685.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	movzbl	(%rcx,%rdx), %esi
	.loc	12 376 30 is_stmt 0     # decompress.c:376:30
	cmpl	%esi, %r8d
.Ltmp2201:
	.loc	12 376 17               # decompress.c:376:17
	cmovbl	%esi, %r8d
.Ltmp2202:
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	.loc	12 377 30 is_stmt 1     # decompress.c:377:30
	cmpl	%esi, %r10d
.Ltmp2203:
	.loc	12 377 17 is_stmt 0     # decompress.c:377:17
	cmovgl	%esi, %r10d
.Ltmp2204:
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 375 38 is_stmt 1     # decompress.c:375:38
	addq	$1, %rdx
	.loc	12 375 24 is_stmt 0     # decompress.c:375:24
	cmpq	%rdx, %rbp
.Ltmp2205:
	.loc	12 375 10               # decompress.c:375:10
	jne	.LBB14_596
.Ltmp2206:
.LBB14_597:                             # %for.end1720.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	.loc	12 380 15 is_stmt 1     # decompress.c:380:15
	movq	%rdi, %rdx
	shlq	$10, %rdx
	leaq	(%rdx,%rdi,8), %rsi
	.loc	12 381 15               # decompress.c:381:15
	leaq	(%r15,%rsi), %r12
	addq	$51628, %r12            # imm = 0xC9AC
	movb	$1, %bpl
.Ltmp2207:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- 0
	.loc	13 221 23               # huffman.c:221:23
	cmpl	%r8d, %r10d
.Ltmp2208:
	.loc	13 221 4 is_stmt 0      # huffman.c:221:4
	jg	.LBB14_610
.Ltmp2209:
# %bb.598:                              # %for.cond1.preheader.i.i.preheader
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 4                  # huffman.c:0:4
	xorl	%edx, %edx
	movl	%r10d, %ebx
.Ltmp2210:
	.p2align	4, 0x90
.LBB14_599:                             # %for.cond1.preheader.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB14_600 Depth 4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- 0
	xorl	%ebp, %ebp
	cmpl	$1, %r14d
.Ltmp2211:
	.loc	13 223 14 is_stmt 1     # huffman.c:223:14
	je	.LBB14_605
.Ltmp2212:
	.p2align	4, 0x90
.LBB14_600:                             # %for.body3.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        #       Parent Loop BB14_599 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	movzbl	(%rcx,%rbp), %eax
	.loc	13 223 24 is_stmt 0     # huffman.c:223:24
	cmpl	%eax, %ebx
.Ltmp2213:
	.loc	13 223 14               # huffman.c:223:14
	jne	.LBB14_602
.Ltmp2214:
# %bb.601:                              # %if.then.i131.i
                                        #   in Loop: Header=BB14_600 Depth=4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 223 32               # huffman.c:223:32
	movslq	%edx, %rdx
.Ltmp2215:
	leaq	(%r15,%rsi), %rax
	.loc	13 223 41               # huffman.c:223:41
	movl	%ebp, 57820(%rax,%rdx,4)
	.loc	13 223 48               # huffman.c:223:48
	addl	$1, %edx
.Ltmp2216:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
.LBB14_602:                             # %for.inc.i132.i
                                        #   in Loop: Header=BB14_600 Depth=4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 223 14               # huffman.c:223:14
	movzbl	1(%rcx,%rbp), %eax
	.loc	13 223 24               # huffman.c:223:24
	cmpl	%eax, %ebx
.Ltmp2217:
	.loc	13 223 14               # huffman.c:223:14
	jne	.LBB14_604
.Ltmp2218:
# %bb.603:                              # %if.then.1.i.i
                                        #   in Loop: Header=BB14_600 Depth=4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 223 32               # huffman.c:223:32
	movslq	%edx, %rdx
.Ltmp2219:
	leaq	(%r15,%rsi), %rax
	.loc	13 223 41               # huffman.c:223:41
	leal	1(%rbp), %edi
	movl	%edi, 57820(%rax,%rdx,4)
	.loc	13 223 48               # huffman.c:223:48
	addl	$1, %edx
.Ltmp2220:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
.LBB14_604:                             # %for.inc.1.i.i
                                        #   in Loop: Header=BB14_600 Depth=4
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 222 35 is_stmt 1     # huffman.c:222:35
	addq	$2, %rbp
.Ltmp2221:
	.loc	13 222 7 is_stmt 0      # huffman.c:222:7
	cmpq	%rbp, %r9
	jne	.LBB14_600
.Ltmp2222:
.LBB14_605:                             # %for.inc9.loopexit.unr-lcssa.i.i
                                        #   in Loop: Header=BB14_599 Depth=3
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	.loc	13 0 7                  # huffman.c:0:7
	cmpq	$0, (%rsp)              # 8-byte Folded Reload
.Ltmp2223:
	.loc	13 223 14 is_stmt 1     # huffman.c:223:14
	je	.LBB14_608
.Ltmp2224:
# %bb.606:                              # %for.body3.epil.i.i
                                        #   in Loop: Header=BB14_599 Depth=3
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 14 is_stmt 0       # huffman.c:0:14
	movq	56(%rsp), %rdi          # 8-byte Reload
.Ltmp2225:
	.loc	13 223 14               # huffman.c:223:14
	movq	%rdi, %rax
	shlq	$8, %rax
	leaq	(%rax,%rdi,2), %rax
	addq	%r15, %rax
	movzbl	43888(%rbp,%rax), %eax
	.loc	13 223 24               # huffman.c:223:24
	cmpl	%eax, %ebx
.Ltmp2226:
	.loc	13 223 14               # huffman.c:223:14
	jne	.LBB14_608
.Ltmp2227:
# %bb.607:                              # %if.then.epil.i.i
                                        #   in Loop: Header=BB14_599 Depth=3
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 223 32               # huffman.c:223:32
	movslq	%edx, %rdx
.Ltmp2228:
	leaq	(%r15,%rsi), %rax
	.loc	13 223 41               # huffman.c:223:41
	movl	%ebp, 57820(%rax,%rdx,4)
	.loc	13 223 48               # huffman.c:223:48
	addl	$1, %edx
.Ltmp2229:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
.LBB14_608:                             # %for.inc9.i.i
                                        #   in Loop: Header=BB14_599 Depth=3
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	.loc	13 221 35 is_stmt 1     # huffman.c:221:35
	leal	1(%rbx), %eax
.Ltmp2230:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $eax
	.loc	13 221 23 is_stmt 0     # huffman.c:221:23
	cmpl	%r8d, %ebx
	movl	%eax, %ebx
.Ltmp2231:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	.loc	13 221 4                # huffman.c:221:4
	jl	.LBB14_599
.Ltmp2232:
# %bb.609:                              #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:j <- $rbp
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:pp <- $edx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 4                  # huffman.c:0:4
	xorl	%ebp, %ebp
.Ltmp2233:
.LBB14_610:                             # %for.cond12.preheader.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%r14d, %eax
	leaq	(%r15,%rsi), %r14
	addq	$45436, %r14            # imm = 0xB17C
.Ltmp2234:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 0
	.loc	13 225 50 is_stmt 1     # huffman.c:225:50
	movdqu	%xmm8, 76(%r12)
	movdqu	%xmm8, 64(%r12)
	movdqu	%xmm8, 48(%r12)
	movdqu	%xmm8, 32(%r12)
	movdqu	%xmm8, 16(%r12)
	movdqu	%xmm8, (%r12)
.Ltmp2235:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 0 50 is_stmt 0       # huffman.c:0:50
	xorl	%edx, %edx
	cmpl	$1, %eax
.Ltmp2236:
	.loc	13 226 41 is_stmt 1     # huffman.c:226:41
	jne	.LBB14_612
.Ltmp2237:
# %bb.611:                              #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 41 is_stmt 0       # huffman.c:0:41
	movq	56(%rsp), %rdi          # 8-byte Reload
.Ltmp2238:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $rdx
	cmpq	$0, (%rsp)              # 8-byte Folded Reload
	.loc	13 226 4                # huffman.c:226:4
	jne	.LBB14_615
	jmp	.LBB14_616
.Ltmp2239:
.LBB14_612:                             # %for.body24.i.i.preheader
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 4                  # huffman.c:0:4
	movq	56(%rsp), %rdi          # 8-byte Reload
.Ltmp2240:
	.p2align	4, 0x90
.LBB14_613:                             # %for.body24.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $rdx
	.loc	13 226 41               # huffman.c:226:41
	movzbl	(%rcx,%rdx), %eax
	.loc	13 226 36               # huffman.c:226:36
	leaq	(%r15,%rsi), %rbx
	.loc	13 226 53               # huffman.c:226:53
	addl	$1, 51632(%rbx,%rax,4)
.Ltmp2241:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 226 41               # huffman.c:226:41
	movzbl	1(%rcx,%rdx), %eax
	.loc	13 226 53               # huffman.c:226:53
	addl	$1, 51632(%rbx,%rax,4)
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 226 32               # huffman.c:226:32
	addq	$2, %rdx
.Ltmp2242:
	.loc	13 226 4                # huffman.c:226:4
	cmpq	%rdx, %r9
	jne	.LBB14_613
.Ltmp2243:
# %bb.614:                              # %for.body37.preheader.loopexit.unr-lcssa.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $rdx
	.loc	13 0 4                  # huffman.c:0:4
	cmpq	$0, (%rsp)              # 8-byte Folded Reload
	.loc	13 226 4                # huffman.c:226:4
	je	.LBB14_616
.Ltmp2244:
.LBB14_615:                             # %for.body24.epil.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- $rdx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:limit <- $r14
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:minLen <- $r10d
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:base <- $r12
	#DEBUG_VALUE: BZ2_decompress:maxLen <- $r8d
	#DEBUG_VALUE: BZ2_decompress:minLen <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 226 41               # huffman.c:226:41
	movq	%rdi, %rax
	shlq	$8, %rax
	leaq	(%rax,%rdi,2), %rax
	addq	%r15, %rax
	movzbl	43888(%rdx,%rax), %eax
	.loc	13 226 36               # huffman.c:226:36
	addq	%r15, %rsi
.Ltmp2245:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 226 53               # huffman.c:226:53
	addl	$1, 51632(%rsi,%rax,4)
.Ltmp2246:
.LBB14_616:                             # %for.body37.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 2
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 228 42 is_stmt 1     # huffman.c:228:42
	movq	%rdi, %rax
	shlq	$10, %rax
	leaq	(%rax,%rdi,8), %r12
	.loc	13 228 50 is_stmt 0     # huffman.c:228:50
	movl	51636(%r15,%r12), %edx
	addl	51632(%r15,%r12), %edx
	movl	%edx, 51636(%r15,%r12)
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.Ltmp2247:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 3
	addl	51640(%r15,%r12), %edx
	movl	%edx, 51640(%r15,%r12)
.Ltmp2248:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 4
	addl	51644(%r15,%r12), %edx
	movl	%edx, 51644(%r15,%r12)
.Ltmp2249:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 5
	addl	51648(%r15,%r12), %edx
	movl	%edx, 51648(%r15,%r12)
.Ltmp2250:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 6
	addl	51652(%r15,%r12), %edx
	movl	%edx, 51652(%r15,%r12)
.Ltmp2251:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 7
	addl	51656(%r15,%r12), %edx
	movl	%edx, 51656(%r15,%r12)
.Ltmp2252:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 8
	addl	51660(%r15,%r12), %edx
	movl	%edx, 51660(%r15,%r12)
.Ltmp2253:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 9
	addl	51664(%r15,%r12), %edx
	movl	%edx, 51664(%r15,%r12)
.Ltmp2254:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 10
	addl	51668(%r15,%r12), %edx
	movl	%edx, 51668(%r15,%r12)
.Ltmp2255:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 11
	addl	51672(%r15,%r12), %edx
	movl	%edx, 51672(%r15,%r12)
.Ltmp2256:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 12
	addl	51676(%r15,%r12), %edx
	movl	%edx, 51676(%r15,%r12)
.Ltmp2257:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 13
	addl	51680(%r15,%r12), %edx
	movl	%edx, 51680(%r15,%r12)
.Ltmp2258:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 14
	addl	51684(%r15,%r12), %edx
	movl	%edx, 51684(%r15,%r12)
.Ltmp2259:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 15
	addl	51688(%r15,%r12), %edx
	movl	%edx, 51688(%r15,%r12)
.Ltmp2260:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 16
	addl	51692(%r15,%r12), %edx
	movl	%edx, 51692(%r15,%r12)
.Ltmp2261:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 17
	addl	51696(%r15,%r12), %edx
	movl	%edx, 51696(%r15,%r12)
.Ltmp2262:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 18
	addl	51700(%r15,%r12), %edx
	movl	%edx, 51700(%r15,%r12)
.Ltmp2263:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 19
	addl	51704(%r15,%r12), %edx
	movl	%edx, 51704(%r15,%r12)
.Ltmp2264:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 20
	addl	51708(%r15,%r12), %edx
	movl	%edx, 51708(%r15,%r12)
.Ltmp2265:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 21
	addl	51712(%r15,%r12), %edx
	movl	%edx, 51712(%r15,%r12)
.Ltmp2266:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- 22
	addl	%edx, 51716(%r15,%r12)
.Ltmp2267:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 230 51 is_stmt 1     # huffman.c:230:51
	movdqu	%xmm8, 76(%r14)
	movdqu	%xmm8, 64(%r14)
	movdqu	%xmm8, 48(%r14)
	movdqu	%xmm8, 32(%r14)
	movdqu	%xmm8, 16(%r14)
.Ltmp2268:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- 0
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- undef
	movdqu	%xmm8, (%r14)
.Ltmp2269:
	.loc	13 233 4                # huffman.c:233:4
	testb	%bpl, %bpl
	jne	.LBB14_619
.Ltmp2270:
# %bb.617:                              # %for.body58.preheader.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 234 21               # huffman.c:234:21
	movslq	%r10d, %rdx
	movslq	%r8d, %rsi
	leaq	(%r15,%r12), %rax
	.loc	13 234 27 is_stmt 0     # huffman.c:234:27
	movl	51628(%rax,%rdx,4), %ebp
	.loc	13 234 21               # huffman.c:234:21
	addq	$-1, %rdx
	xorl	%ebx, %ebx
.Ltmp2271:
	.p2align	4, 0x90
.LBB14_618:                             # %for.body58.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- undef
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- $ebx
	.loc	13 234 15               # huffman.c:234:15
	movl	51636(%r13,%rdx,4), %eax
	.loc	13 234 25               # huffman.c:234:25
	movl	%eax, %edi
	subl	%ebp, %edi
	.loc	13 235 21 is_stmt 1     # huffman.c:235:21
	leal	(%rdi,%rbx), %ebp
	addl	$-1, %ebp
	.loc	13 234 11               # huffman.c:234:11
	leal	(%rdi,%rbx), %edi
.Ltmp2272:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- $edi
	.loc	13 235 16               # huffman.c:235:16
	movl	%ebp, 45440(%r13,%rdx,4)
	.loc	13 236 11               # huffman.c:236:11
	addl	%edi, %edi
.Ltmp2273:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- $edi
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 233 23               # huffman.c:233:23
	addq	$1, %rdx
.Ltmp2274:
	.loc	13 234 27               # huffman.c:234:27
	movl	%eax, %ebp
	movl	%edi, %ebx
.Ltmp2275:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:vec <- $ebx
	.loc	13 233 23               # huffman.c:233:23
	cmpq	%rsi, %rdx
.Ltmp2276:
	.loc	13 233 4 is_stmt 0      # huffman.c:233:4
	jl	.LBB14_618
.Ltmp2277:
.LBB14_619:                             # %for.cond73.preheader.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 238 27 is_stmt 1     # huffman.c:238:27
	cmpl	%r8d, %r10d
	movq	40(%rsp), %rbx          # 8-byte Reload
.Ltmp2278:
	.loc	13 238 4 is_stmt 0      # huffman.c:238:4
	jge	.LBB14_632
.Ltmp2279:
# %bb.620:                              # %for.body76.preheader.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 0                  # huffman.c:0:0
	movslq	%r10d, %rsi
	movslq	%r8d, %r14
	movq	%r14, %r8
	subq	%rsi, %r8
	cmpq	$7, %r8
	jbe	.LBB14_628
.Ltmp2280:
# %bb.621:                              # %vector.memcheck.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leaq	(%r15,%r12), %rdx
	leaq	(%rdx,%rsi,4), %rax
	addq	$51632, %rax            # imm = 0xC9B0
	leaq	(%rdx,%r14,4), %rbx
	addq	$45436, %rbx            # imm = 0xB17C
	cmpq	%rbx, %rax
	jae	.LBB14_624
.Ltmp2281:
# %bb.622:                              # %vector.memcheck.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leaq	(%rdx,%r14,4), %rax
	addq	$51632, %rax            # imm = 0xC9B0
	leaq	(%rdx,%rsi,4), %rdx
	addq	$45436, %rdx            # imm = 0xB17C
	cmpq	%rax, %rdx
	jae	.LBB14_624
.Ltmp2282:
# %bb.623:                              #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	40(%rsp), %rbx          # 8-byte Reload
	jmp	.LBB14_628
.Ltmp2283:
.LBB14_624:                             # %vector.ph.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%r8, %rbp
	andq	$-8, %rbp
	leaq	(%r11,%rsi,4), %rbx
	xorl	%edx, %edx
.Ltmp2284:
	.p2align	4, 0x90
.LBB14_625:                             # %vector.body.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 239 19 is_stmt 1     # huffman.c:239:19
	movdqu	(%rbx,%rdx,4), %xmm0
	movdqu	16(%rbx,%rdx,4), %xmm1
	.loc	13 239 35 is_stmt 0     # huffman.c:239:35
	paddd	%xmm0, %xmm0
	paddd	%xmm1, %xmm1
	paddd	%xmm7, %xmm0
	paddd	%xmm7, %xmm1
	.loc	13 239 43               # huffman.c:239:43
	movdqu	6196(%rbx,%rdx,4), %xmm2
	.loc	13 239 41               # huffman.c:239:41
	psubd	%xmm2, %xmm0
	.loc	13 239 43               # huffman.c:239:43
	movdqu	6212(%rbx,%rdx,4), %xmm2
	.loc	13 239 41               # huffman.c:239:41
	psubd	%xmm2, %xmm1
	.loc	13 239 15               # huffman.c:239:15
	movdqu	%xmm0, 6196(%rbx,%rdx,4)
	movdqu	%xmm1, 6212(%rbx,%rdx,4)
	addq	$8, %rdx
	cmpq	%rdx, %rbp
	jne	.LBB14_625
.Ltmp2285:
# %bb.626:                              # %middle.block.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 15                 # huffman.c:0:15
	cmpq	%rbp, %r8
	movq	40(%rsp), %rbx          # 8-byte Reload
	je	.LBB14_632
.Ltmp2286:
# %bb.627:                              # %middle.block.i.i.for.body76.preheader193.i.i_crit_edge
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addq	%rbp, %rsi
	movq	%r14, %r8
	subq	%rsi, %r8
.Ltmp2287:
.LBB14_628:                             # %for.body76.preheader193.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%rsi, %rdx
	notq	%rdx
	testb	$1, %r8b
	je	.LBB14_630
.Ltmp2288:
# %bb.629:                              # %for.body76.prol.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 239 19               # huffman.c:239:19
	addq	%r15, %r12
	movl	45436(%r12,%rsi,4), %eax
	.loc	13 239 35               # huffman.c:239:35
	leal	(%rax,%rax), %eax
	addl	$2, %eax
	.loc	13 239 41               # huffman.c:239:41
	subl	51632(%r12,%rsi,4), %eax
.Ltmp2289:
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 239 15               # huffman.c:239:15
	movl	%eax, 51632(%r12,%rsi,4)
.Ltmp2290:
	.loc	13 0 0                  # huffman.c:0:0
	leaq	1(%rsi), %rsi
.Ltmp2291:
.LBB14_630:                             # %for.body76.prol.loopexit.i.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addq	%r14, %rdx
	je	.LBB14_632
.Ltmp2292:
	.p2align	4, 0x90
.LBB14_631:                             # %for.body76.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        #     Parent Loop BB14_589 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 239 19               # huffman.c:239:19
	movl	(%r11,%rsi,4), %eax
	movl	4(%r11,%rsi,4), %edx
	.loc	13 239 35               # huffman.c:239:35
	leal	(%rax,%rax), %eax
	addl	$2, %eax
	.loc	13 239 41               # huffman.c:239:41
	subl	6196(%r11,%rsi,4), %eax
	.loc	13 239 15               # huffman.c:239:15
	movl	%eax, 6196(%r11,%rsi,4)
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 239 35               # huffman.c:239:35
	leal	(%rdx,%rdx), %eax
	addl	$2, %eax
	.loc	13 239 41               # huffman.c:239:41
	subl	6200(%r11,%rsi,4), %eax
	#DEBUG_VALUE: BZ2_hbCreateDecodeTables:i <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 239 15               # huffman.c:239:15
	movl	%eax, 6200(%r11,%rsi,4)
.Ltmp2293:
	.loc	13 0 0                  # huffman.c:0:0
	leaq	2(%rsi), %rsi
.Ltmp2294:
	.loc	13 238 27 is_stmt 1     # huffman.c:238:27
	cmpq	%rsi, %r14
.Ltmp2295:
	.loc	13 238 4 is_stmt 0      # huffman.c:238:4
	jne	.LBB14_631
.Ltmp2296:
.LBB14_632:                             # %BZ2_hbCreateDecodeTables.exit.i
                                        #   in Loop: Header=BB14_589 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	13 0 4                  # huffman.c:0:4
	movq	56(%rsp), %rdi          # 8-byte Reload
	.loc	12 386 24 is_stmt 1     # decompress.c:386:24
	movl	%r10d, 64012(%r15,%rdi,4)
.Ltmp2297:
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 372 33               # decompress.c:372:33
	addq	$1, %rdi
	movq	136(%rsp), %rdx         # 8-byte Reload
.Ltmp2298:
	.loc	12 372 7 is_stmt 0      # decompress.c:372:7
	addq	$258, %rdx              # imm = 0x102
	addq	$258, %rcx              # imm = 0x102
	addq	$1032, %r13             # imm = 0x408
	addq	$1032, %r11             # imm = 0x408
.Ltmp2299:
	.loc	12 372 21               # decompress.c:372:21
	cmpq	48(%rsp), %rdi          # 8-byte Folded Reload
	movq	192(%rsp), %r14         # 8-byte Reload
	movq	80(%rsp), %rbp          # 8-byte Reload
	movq	128(%rsp), %rsi         # 8-byte Reload
.Ltmp2300:
	.loc	12 372 7                # decompress.c:372:7
	jne	.LBB14_589
.Ltmp2301:
# %bb.633:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	movl	%ebx, %eax
	movl	%ebx, 136(%rsp)         # 4-byte Spill
	movq	216(%rsp), %r12         # 8-byte Reload
	movq	176(%rsp), %r13         # 8-byte Reload
	jmp	.LBB14_636
.Ltmp2302:
.LBB14_635:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$0, 136(%rsp)           # 4-byte Folded Spill
.Ltmp2303:
.LBB14_636:                             # %for.end1738.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	.loc	12 391 21 is_stmt 1     # decompress.c:391:21
	movl	3192(%r15), %ebp
.Ltmp2304:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- 0
	#DEBUG_VALUE: BZ2_decompress:groupNo <- -1
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 392 31               # decompress.c:392:31
	movl	40(%r15), %ebx
.Ltmp2305:
	.loc	12 396 48               # decompress.c:396:48
	movl	$1024, %edx             # imm = 0x400
	movq	264(%rsp), %rdi         # 8-byte Reload
	xorl	%esi, %esi
	callq	memset
.Ltmp2306:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:i <- undef
	.loc	12 391 27               # decompress.c:391:27
	addl	$1, %ebp
.Ltmp2307:
	#DEBUG_VALUE: ii <- 15
	#DEBUG_VALUE: kk <- 4095
	#DEBUG_VALUE: BZ2_decompress:i <- 256
	.loc	12 0 27 is_stmt 0       # decompress.c:0:27
	movl	%ebp, 28(%rsp)          # 4-byte Spill
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	%rsi, %rax
	xorl	%ecx, %ecx
.Ltmp2308:
.LBB14_637:                             # %for.cond1756.preheader.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: kk <- undef
	#DEBUG_VALUE: ii <- undef
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	leal	-1(%rcx), %edx
.Ltmp2309:
	#DEBUG_VALUE: jj <- 0
	.loc	12 404 28 is_stmt 1     # decompress.c:404:28
	movb	%dl, -61(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2310:
	#DEBUG_VALUE: jj <- 14
	.loc	12 0 28 is_stmt 0       # decompress.c:0:28
	leal	-2(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -62(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2311:
	#DEBUG_VALUE: jj <- 13
	.loc	12 0 28                 # decompress.c:0:28
	leal	-3(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -63(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2312:
	#DEBUG_VALUE: jj <- 12
	.loc	12 0 28                 # decompress.c:0:28
	leal	-4(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -64(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2313:
	#DEBUG_VALUE: jj <- 11
	.loc	12 0 28                 # decompress.c:0:28
	leal	-5(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -65(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2314:
	#DEBUG_VALUE: jj <- 10
	.loc	12 0 28                 # decompress.c:0:28
	leal	-6(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -66(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2315:
	#DEBUG_VALUE: jj <- 9
	.loc	12 0 28                 # decompress.c:0:28
	leal	-7(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -67(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2316:
	#DEBUG_VALUE: jj <- 8
	.loc	12 0 28                 # decompress.c:0:28
	leal	-8(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -68(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2317:
	#DEBUG_VALUE: jj <- 7
	.loc	12 0 28                 # decompress.c:0:28
	leal	-9(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -69(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2318:
	#DEBUG_VALUE: jj <- 6
	.loc	12 0 28                 # decompress.c:0:28
	leal	-10(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -70(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2319:
	#DEBUG_VALUE: jj <- 5
	.loc	12 0 28                 # decompress.c:0:28
	leal	-11(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -71(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2320:
	#DEBUG_VALUE: jj <- 4
	.loc	12 0 28                 # decompress.c:0:28
	leal	-12(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -72(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2321:
	#DEBUG_VALUE: jj <- 3
	.loc	12 0 28                 # decompress.c:0:28
	leal	-13(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -73(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2322:
	#DEBUG_VALUE: jj <- 2
	.loc	12 0 28                 # decompress.c:0:28
	leal	-14(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -74(%rsi,%rcx)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2323:
	#DEBUG_VALUE: jj <- 1
	.loc	12 0 28                 # decompress.c:0:28
	leal	-15(%rcx), %edx
	.loc	12 404 28               # decompress.c:404:28
	movb	%dl, -75(%rsi,%rcx)
	leal	-16(%rcx), %edx
	movb	%dl, -76(%rsi,%rcx)
.Ltmp2324:
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: jj <- -1
	.loc	12 407 13 is_stmt 1     # decompress.c:407:13
	leal	4080(%rcx), %edx
	.loc	12 407 28 is_stmt 0     # decompress.c:407:28
	movl	%edx, (%rax)
.Ltmp2325:
	#DEBUG_VALUE: ii <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 402 44 is_stmt 1     # decompress.c:402:44
	addq	$-16, %rcx
	addq	$-4, %rax
	cmpq	$-256, %rcx
.Ltmp2326:
	.loc	12 402 10 is_stmt 0     # decompress.c:402:10
	jne	.LBB14_637
.Ltmp2327:
# %bb.638:                              # %if.then1777.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupNo <- 0
	#DEBUG_VALUE: BZ2_decompress:nblock <- 0
	.loc	12 392 26 is_stmt 1     # decompress.c:392:26
	imull	$100000, %ebx, %r11d    # imm = 0x186A0
	movl	12(%rsp), %esi          # 4-byte Reload
.Ltmp2328:
	.loc	12 413 7                # decompress.c:413:7
	testl	%esi, %esi
	movq	184(%rsp), %r9          # 8-byte Reload
	pxor	%xmm8, %xmm8
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
.Ltmp2329:
	.loc	12 413 7 is_stmt 0      # decompress.c:413:7
	jle	.LBB14_649
.Ltmp2330:
# %bb.639:                              # %if.end1782.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupPos <- 50
	movzbl	7884(%r15), %ecx
	movl	64012(%r15,%rcx,4), %edx
.Ltmp2331:
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- $edx
	#DEBUG_VALUE: BZ2_decompress:zn <- $edx
	movq	%rcx, %rax
	shlq	$10, %rax
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	leaq	(%rax,%rcx,8), %rax
	leaq	(%r15,%rax), %rcx
	addq	$51628, %rcx            # imm = 0xC9AC
.Ltmp2332:
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	.loc	12 0 7                  # decompress.c:0:7
	movq	%rcx, 152(%rsp)         # 8-byte Spill
	.loc	12 413 7                # decompress.c:413:7
	leaq	57820(%r15,%rax), %rcx
.Ltmp2333:
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 0 7                  # decompress.c:0:7
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	.loc	12 413 7                # decompress.c:413:7
	leaq	45436(%r15,%rax), %rax
.Ltmp2334:
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	.loc	12 0 7                  # decompress.c:0:7
	movq	%rax, 160(%rsp)         # 8-byte Spill
	movl	$256, %eax              # imm = 0x100
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	$49, 80(%rsp)           # 4-byte Folded Spill
.Ltmp2335:
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- 49
	#DEBUG_VALUE: BZ2_decompress:groupNo <- 0
	xorl	%eax, %eax
	movq	%rax, 48(%rsp)          # 8-byte Spill
	movl	%edx, 64(%rsp)          # 4-byte Spill
.Ltmp2336:
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%edx, 16(%rsp)          # 4-byte Spill
.Ltmp2337:
	xorl	%eax, %eax
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movl	%esi, 56(%rsp)          # 4-byte Spill
	movq	40(%rsp), %rbx          # 8-byte Reload
.Ltmp2338:
.LBB14_640:                             # %sw.bb1804.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 413 7                # decompress.c:413:7
	movl	$36, (%r12)
.Ltmp2339:
	.loc	12 413 7                # decompress.c:413:7
	movl	(%r9), %edx
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
.Ltmp2340:
	.loc	12 413 7                # decompress.c:413:7
	jge	.LBB14_646
.Ltmp2341:
# %bb.641:                              # %if.end1822.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
.Ltmp2342:
	.loc	12 413 7                # decompress.c:413:7
	addl	$-1, %esi
.Ltmp2343:
.LBB14_642:                             # %if.end1822.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	cmpl	$-1, %esi
.Ltmp2344:
	.loc	12 413 7                # decompress.c:413:7
	je	.LBB14_26
.Ltmp2345:
# %bb.643:                              # %if.end1828.i
                                        #   in Loop: Header=BB14_642 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_645
.Ltmp2346:
# %bb.644:                              # %if.then1851.i
                                        #   in Loop: Header=BB14_642 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	addl	$1, 16(%rcx)
.Ltmp2347:
.LBB14_645:                             # %if.end1855.i
                                        #   in Loop: Header=BB14_642 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	addl	$-1, %esi
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
	jl	.LBB14_642
	jmp	.LBB14_647
.Ltmp2348:
.LBB14_646:                             # %sw.bb1804.if.then1811_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 413 7                # decompress.c:413:7
	movl	(%r14), %eax
.Ltmp2349:
.LBB14_647:                             # %if.then1811.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	movl	16(%rsp), %ebp          # 4-byte Reload
	.loc	12 413 7                # decompress.c:413:7
	subl	%ebp, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	movl	$-1, %esi
	movl	%ebp, %ecx
	shll	%cl, %esi
	movq	%rsi, %rcx
	notl	%ecx
	andl	%eax, %ecx
.Ltmp2350:
	#DEBUG_VALUE: v <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	movl	%edx, (%r9)
.Ltmp2351:
.LBB14_673:                             # %while.cond1857.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 0 7                  # decompress.c:0:7
	movl	$-4, %eax
.Ltmp2352:
	.loc	12 413 7                # decompress.c:413:7
	cmpl	$20, %ebp
.Ltmp2353:
	.loc	12 413 7                # decompress.c:413:7
	jg	.LBB14_684
.Ltmp2354:
# %bb.674:                              # %if.end1862.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	movq	%rcx, %rdi
.Ltmp2355:
	.loc	12 413 7                # decompress.c:413:7
	movslq	%ebp, %rcx
.Ltmp2356:
	.loc	12 0 7                  # decompress.c:0:7
	movq	160(%rsp), %rsi         # 8-byte Reload
	.loc	12 413 7                # decompress.c:413:7
	cmpl	(%rsi,%rcx,4), %edi
	movq	%rdi, 112(%rsp)         # 8-byte Spill
.Ltmp2357:
	.loc	12 413 7                # decompress.c:413:7
	jle	.LBB14_685
.Ltmp2358:
# %bb.675:                              # %if.end1868.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addl	$1, %ebp
.Ltmp2359:
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	.loc	12 0 7                  # decompress.c:0:7
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2360:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	jmp	.LBB14_676
.Ltmp2361:
.LBB14_649:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$-4, %eax
	movl	$256, %ecx              # imm = 0x100
	movq	%rcx, (%rsp)            # 8-byte Spill
	xorl	%ecx, %ecx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movl	$0, 80(%rsp)            # 4-byte Folded Spill
	xorl	%ecx, %ecx
	movq	%rcx, 128(%rsp)         # 8-byte Spill
	movl	%esi, 56(%rsp)          # 4-byte Spill
	movq	40(%rsp), %rbx          # 8-byte Reload
	jmp	.LBB14_828
.Ltmp2362:
.LBB14_531:                             # %for.cond.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $ecx
	.loc	12 307 21 is_stmt 1     # decompress.c:307:21
	cmpl	$16, %ecx
.Ltmp2363:
	.loc	12 307 7 is_stmt 0      # decompress.c:307:7
	jge	.LBB14_535
.Ltmp2364:
# %bb.532:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	.loc	12 0 7                  # decompress.c:0:7
	movq	%rcx, (%rsp)            # 8-byte Spill
.Ltmp2365:
.LBB14_533:                             # %sw.bb1095.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 308 10 is_stmt 1     # decompress.c:308:10
	movl	$28, (%r12)
.Ltmp2366:
	.loc	12 308 10 is_stmt 0     # decompress.c:308:10
	movl	(%r9), %eax
	testl	%eax, %eax
.Ltmp2367:
	.loc	12 308 10               # decompress.c:308:10
	jle	.LBB14_536
.Ltmp2368:
# %bb.534:                              # %sw.bb1095.if.then1102_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10               # decompress.c:308:10
	movl	(%r14), %esi
	jmp	.LBB14_541
.Ltmp2369:
.LBB14_535:                             # %for.body1160.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- $ecx
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movq	272(%rsp), %rax         # 8-byte Reload
.Ltmp2370:
	.loc	12 314 45 is_stmt 1     # decompress.c:314:45
	movdqu	%xmm8, 240(%rax)
	movdqu	%xmm8, 224(%rax)
	movdqu	%xmm8, 208(%rax)
	movdqu	%xmm8, 192(%rax)
	movdqu	%xmm8, 176(%rax)
	movdqu	%xmm8, 160(%rax)
	movdqu	%xmm8, 144(%rax)
	movdqu	%xmm8, 128(%rax)
	movdqu	%xmm8, 112(%rax)
	movdqu	%xmm8, 96(%rax)
	movdqu	%xmm8, 80(%rax)
	movdqu	%xmm8, 64(%rax)
	movdqu	%xmm8, 48(%rax)
	movdqu	%xmm8, 32(%rax)
	movdqu	%xmm8, 16(%rax)
	movdqu	%xmm8, (%rax)
.Ltmp2371:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:i <- undef
	.loc	12 0 45 is_stmt 0       # decompress.c:0:45
	xorl	%eax, %eax
	jmp	.LBB14_543
.Ltmp2372:
.LBB14_536:                             # %if.end1112.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10 is_stmt 1     # decompress.c:308:10
	movq	(%r15), %rcx
	movl	8(%rcx), %edx
.Ltmp2373:
	.loc	12 308 10 is_stmt 0     # decompress.c:308:10
	addl	$-1, %edx
.Ltmp2374:
.LBB14_537:                             # %if.end1112.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10               # decompress.c:308:10
	cmpl	$-1, %edx
.Ltmp2375:
	.loc	12 308 10               # decompress.c:308:10
	je	.LBB14_26
.Ltmp2376:
# %bb.538:                              # %if.end1118.i
                                        #   in Loop: Header=BB14_537 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %eax
	movl	%eax, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%edx, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_540
.Ltmp2377:
# %bb.539:                              # %if.then1141.i
                                        #   in Loop: Header=BB14_537 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10               # decompress.c:308:10
	addl	$1, 16(%rcx)
.Ltmp2378:
.LBB14_540:                             # %if.end1145.i
                                        #   in Loop: Header=BB14_537 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10               # decompress.c:308:10
	addl	$-1, %edx
	testl	%eax, %eax
.Ltmp2379:
	.loc	12 308 10               # decompress.c:308:10
	jle	.LBB14_537
.Ltmp2380:
.LBB14_541:                             # %if.then1102.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 308 10               # decompress.c:308:10
	addl	$-1, %eax
	movl	%eax, 36(%r15)
.Ltmp2381:
	.loc	12 309 17 is_stmt 1     # decompress.c:309:17
	btl	%eax, %esi
	.loc	12 0 0 is_stmt 0        # decompress.c:0:0
	movslq	(%rsp), %rcx            # 4-byte Folded Reload
	setb	3452(%r15,%rcx)
.Ltmp2382:
	.loc	12 307 28 is_stmt 1     # decompress.c:307:28
	addl	$1, %ecx
.Ltmp2383:
	#DEBUG_VALUE: BZ2_decompress:i <- $ecx
	.loc	12 0 28 is_stmt 0       # decompress.c:0:28
	jmp	.LBB14_531
.Ltmp2384:
.LBB14_515:                             # %sw.bb2063.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 427 16 is_stmt 1     # decompress.c:427:16
	movl	$39, (%r12)
.Ltmp2385:
	.loc	12 427 16 is_stmt 0     # decompress.c:427:16
	testl	%edx, %edx
.Ltmp2386:
	.loc	12 427 16               # decompress.c:427:16
	jle	.LBB14_517
.Ltmp2387:
# %bb.516:                              # %sw.bb2063.if.then2070_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	movl	(%r14), %eax
	jmp	.LBB14_521
.Ltmp2388:
.LBB14_517:                             # %if.end2079.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
	testl	%esi, %esi
.Ltmp2389:
	.loc	12 427 16               # decompress.c:427:16
	je	.LBB14_26
.Ltmp2390:
# %bb.518:                              # %if.end2085.i
                                        #   in Loop: Header=BB14_517 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	addl	$-1, %esi
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_520
.Ltmp2391:
# %bb.519:                              # %if.then2108.i
                                        #   in Loop: Header=BB14_517 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	addl	$1, 16(%rcx)
.Ltmp2392:
.LBB14_520:                             # %if.end2112.i
                                        #   in Loop: Header=BB14_517 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	testl	%edx, %edx
.Ltmp2393:
	.loc	12 427 16               # decompress.c:427:16
	jle	.LBB14_517
.Ltmp2394:
.LBB14_521:                             # %if.then2070.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	addl	$-1, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	andl	$1, %eax
.Ltmp2395:
	#DEBUG_VALUE: v <- $eax
	#DEBUG_VALUE: BZ2_decompress:zj <- $eax
	movl	%edx, (%r9)
	movq	112(%rsp), %rcx         # 8-byte Reload
.Ltmp2396:
	.loc	12 427 16               # decompress.c:427:16
	leal	(%rax,%rcx,2), %ecx
.Ltmp2397:
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
                                        # kill: def $eax killed $eax killed $rax
	.loc	12 0 16                 # decompress.c:0:16
	movl	%eax, 124(%rsp)         # 4-byte Spill
	movl	16(%rsp), %ebp          # 4-byte Reload
	jmp	.LBB14_820
.Ltmp2398:
.LBB14_523:                             # %sw.bb2479.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 516 13 is_stmt 1     # decompress.c:516:13
	movl	$41, (%r12)
.Ltmp2399:
	.loc	12 516 13 is_stmt 0     # decompress.c:516:13
	testl	%edx, %edx
.Ltmp2400:
	.loc	12 516 13               # decompress.c:516:13
	jle	.LBB14_525
.Ltmp2401:
# %bb.524:                              # %sw.bb2479.if.then2486_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	movl	(%r14), %eax
	jmp	.LBB14_529
.Ltmp2402:
.LBB14_525:                             # %if.end2495.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
	testl	%esi, %esi
.Ltmp2403:
	.loc	12 516 13               # decompress.c:516:13
	je	.LBB14_26
.Ltmp2404:
# %bb.526:                              # %if.end2501.i
                                        #   in Loop: Header=BB14_525 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	addl	$-1, %esi
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_528
.Ltmp2405:
# %bb.527:                              # %if.then2524.i
                                        #   in Loop: Header=BB14_525 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	addl	$1, 16(%rcx)
.Ltmp2406:
.LBB14_528:                             # %if.end2528.i
                                        #   in Loop: Header=BB14_525 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	testl	%edx, %edx
.Ltmp2407:
	.loc	12 516 13               # decompress.c:516:13
	jle	.LBB14_525
.Ltmp2408:
.LBB14_529:                             # %if.then2486.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	addl	$-1, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	andl	$1, %eax
.Ltmp2409:
	#DEBUG_VALUE: v <- $eax
	#DEBUG_VALUE: BZ2_decompress:zj <- $eax
	movl	%edx, (%r9)
	movq	112(%rsp), %rcx         # 8-byte Reload
.Ltmp2410:
	.loc	12 516 13               # decompress.c:516:13
	leal	(%rax,%rcx,2), %ecx
.Ltmp2411:
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
                                        # kill: def $eax killed $eax killed $rax
	#DEBUG_VALUE: v <- $eax
	.loc	12 0 13                 # decompress.c:0:13
	movl	%eax, 124(%rsp)         # 4-byte Spill
.Ltmp2412:
	#DEBUG_VALUE: v <- [DW_OP_plus_uconst 124] [$rsp+0]
	movl	16(%rsp), %ebp          # 4-byte Reload
	jmp	.LBB14_778
.Ltmp2413:
.LBB14_543:                             # %for.cond1166.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 316 21 is_stmt 1     # decompress.c:316:21
	cmpl	$15, %eax
	movq	%rax, (%rsp)            # 8-byte Spill
.Ltmp2414:
	.loc	12 316 7 is_stmt 0      # decompress.c:316:7
	jg	.LBB14_545
.Ltmp2415:
# %bb.544:                              # %for.body1169.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 317 14 is_stmt 1     # decompress.c:317:14
	movslq	%eax, %rcx
	xorl	%eax, %eax
.Ltmp2416:
	cmpb	$0, 3452(%r15,%rcx)
	jne	.LBB14_564
	jmp	.LBB14_567
.Ltmp2417:
.LBB14_545:                             # %for.end1247.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 70 14                # decompress.c:70:14
	movl	$0, 3192(%r15)
	xorl	%eax, %eax
.Ltmp2418:
	#DEBUG_VALUE: makeMaps_d:i <- 0
	.loc	12 0 14 is_stmt 0       # decompress.c:0:14
	xorl	%ecx, %ecx
.Ltmp2419:
	.p2align	4, 0x90
.LBB14_546:                             # %for.body.i.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: makeMaps_d:i <- $rcx
	.loc	12 72 11 is_stmt 1      # decompress.c:72:11
	cmpb	$0, 3196(%r15,%rcx)
.Ltmp2420:
	.loc	12 72 11 is_stmt 0      # decompress.c:72:11
	je	.LBB14_548
.Ltmp2421:
# %bb.547:                              # %if.then.i.i
                                        #   in Loop: Header=BB14_546 Depth=2
	#DEBUG_VALUE: makeMaps_d:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 73 10 is_stmt 1      # decompress.c:73:10
	cltq
	.loc	12 73 35 is_stmt 0      # decompress.c:73:35
	movb	%cl, 3468(%r15,%rax)
	.loc	12 74 19 is_stmt 1      # decompress.c:74:19
	movl	3192(%r15), %eax
	addl	$1, %eax
	movl	%eax, 3192(%r15)
.Ltmp2422:
.LBB14_548:                             # %for.inc.i.i
                                        #   in Loop: Header=BB14_546 Depth=2
	#DEBUG_VALUE: makeMaps_d:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 72 11                # decompress.c:72:11
	cmpb	$0, 3197(%r15,%rcx)
.Ltmp2423:
	.loc	12 72 11 is_stmt 0      # decompress.c:72:11
	je	.LBB14_550
.Ltmp2424:
# %bb.549:                              # %if.then.i.1.i
                                        #   in Loop: Header=BB14_546 Depth=2
	#DEBUG_VALUE: makeMaps_d:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: makeMaps_d:i <- [DW_OP_constu 1, DW_OP_or, DW_OP_stack_value] undef
	.loc	12 73 10 is_stmt 1      # decompress.c:73:10
	cltq
	leal	1(%rcx), %edx
	.loc	12 73 35 is_stmt 0      # decompress.c:73:35
	movb	%dl, 3468(%r15,%rax)
	.loc	12 74 19 is_stmt 1      # decompress.c:74:19
	movl	3192(%r15), %eax
	addl	$1, %eax
	movl	%eax, 3192(%r15)
.Ltmp2425:
.LBB14_550:                             # %for.inc.i.1.i
                                        #   in Loop: Header=BB14_546 Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: makeMaps_d:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	.loc	12 71 26                # decompress.c:71:26
	addq	$2, %rcx
	.loc	12 71 18 is_stmt 0      # decompress.c:71:18
	cmpq	$256, %rcx              # imm = 0x100
.Ltmp2426:
	.loc	12 71 4                 # decompress.c:71:4
	jne	.LBB14_546
.Ltmp2427:
# %bb.551:                              # %makeMaps_d.exit.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 323 21 is_stmt 1     # decompress.c:323:21
	testl	%eax, %eax
.Ltmp2428:
	.loc	12 323 11 is_stmt 0     # decompress.c:323:11
	je	.LBB14_562
.Ltmp2429:
# %bb.552:                              # %if.end1251.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 324 28 is_stmt 1     # decompress.c:324:28
	addl	$2, %eax
.Ltmp2430:
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- $eax
                                        # kill: def $eax killed $eax killed $rax
	.loc	12 0 28 is_stmt 0       # decompress.c:0:28
	movl	%eax, 92(%rsp)          # 4-byte Spill
.Ltmp2431:
.LBB14_553:                             # %sw.bb1254.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	.loc	12 327 7 is_stmt 1      # decompress.c:327:7
	movl	$30, (%r12)
.Ltmp2432:
	.loc	12 327 7 is_stmt 0      # decompress.c:327:7
	movl	(%r9), %ecx
	cmpl	$3, %ecx
.Ltmp2433:
	.loc	12 327 7                # decompress.c:327:7
	jl	.LBB14_555
.Ltmp2434:
# %bb.554:                              # %sw.bb1254.if.then1261_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	movl	(%r14), %esi
	jmp	.LBB14_560
.Ltmp2435:
.LBB14_555:                             # %if.end1270.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	movq	(%r15), %rax
	movl	8(%rax), %edx
.Ltmp2436:
	.loc	12 327 7                # decompress.c:327:7
	addl	$-1, %edx
.Ltmp2437:
.LBB14_556:                             # %if.end1270.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	cmpl	$-1, %edx
.Ltmp2438:
	.loc	12 327 7                # decompress.c:327:7
	je	.LBB14_26
.Ltmp2439:
# %bb.557:                              # %if.end1276.i
                                        #   in Loop: Header=BB14_556 Depth=2
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rax), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %ecx
	movl	%ecx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rax)
	movl	%edx, 8(%rax)
	addl	$1, 12(%rax)
	jne	.LBB14_559
.Ltmp2440:
# %bb.558:                              # %if.then1299.i
                                        #   in Loop: Header=BB14_556 Depth=2
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	addl	$1, 16(%rax)
.Ltmp2441:
.LBB14_559:                             # %if.end1303.i
                                        #   in Loop: Header=BB14_556 Depth=2
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	addl	$-1, %edx
	cmpl	$2, %ecx
.Ltmp2442:
	.loc	12 327 7                # decompress.c:327:7
	jle	.LBB14_556
.Ltmp2443:
.LBB14_560:                             # %if.then1261.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 327 7                # decompress.c:327:7
	addl	$-3, %ecx
	shrl	%cl, %esi
	movl	%esi, %ebx
	andl	$7, %ebx
.Ltmp2444:
	#DEBUG_VALUE: v <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	movl	%ecx, (%r9)
.Ltmp2445:
	.loc	12 328 23 is_stmt 1     # decompress.c:328:23
	cmpl	$7, %ebx
	ja	.LBB14_199
.Ltmp2446:
# %bb.561:                              # %if.then1261.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: v <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 23 is_stmt 0       # decompress.c:0:23
	movl	$-4, %eax
	movl	$131, %edx
	btl	%ebx, %edx
	jb	.LBB14_828
	jmp	.LBB14_199
.Ltmp2447:
.LBB14_562:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$-4, %eax
	jmp	.LBB14_828
.Ltmp2448:
.LBB14_564:                             # %for.cond1175.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- $eax
	movl	%eax, 24(%rsp)          # 4-byte Spill
.Ltmp2449:
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 318 27 is_stmt 1     # decompress.c:318:27
	cmpl	$15, %eax
.Ltmp2450:
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 318 13 is_stmt 0     # decompress.c:318:13
	jg	.LBB14_567
.Ltmp2451:
.LBB14_565:                             # %sw.bb1179.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 319 16 is_stmt 1     # decompress.c:319:16
	movl	$29, (%r12)
.Ltmp2452:
	.loc	12 319 16 is_stmt 0     # decompress.c:319:16
	movl	(%r9), %eax
	testl	%eax, %eax
.Ltmp2453:
	.loc	12 319 16               # decompress.c:319:16
	jle	.LBB14_568
.Ltmp2454:
# %bb.566:                              # %sw.bb1179.if.then1186_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16               # decompress.c:319:16
	movl	(%r14), %esi
	jmp	.LBB14_573
.Ltmp2455:
.LBB14_567:                             # %for.inc1245.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 0 16                 # decompress.c:0:16
	movq	(%rsp), %rax            # 8-byte Reload
.Ltmp2456:
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	.loc	12 316 28 is_stmt 1     # decompress.c:316:28
	addl	$1, %eax
.Ltmp2457:
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	.loc	12 0 28 is_stmt 0       # decompress.c:0:28
	jmp	.LBB14_543
.Ltmp2458:
.LBB14_568:                             # %if.end1196.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16 is_stmt 1     # decompress.c:319:16
	movq	(%r15), %rcx
	movl	8(%rcx), %edx
.Ltmp2459:
	.loc	12 319 16 is_stmt 0     # decompress.c:319:16
	addl	$-1, %edx
.Ltmp2460:
.LBB14_569:                             # %if.end1196.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16               # decompress.c:319:16
	cmpl	$-1, %edx
.Ltmp2461:
	.loc	12 319 16               # decompress.c:319:16
	je	.LBB14_26
.Ltmp2462:
# %bb.570:                              # %if.end1202.i
                                        #   in Loop: Header=BB14_569 Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %eax
	movl	%eax, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%edx, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_572
.Ltmp2463:
# %bb.571:                              # %if.then1225.i
                                        #   in Loop: Header=BB14_569 Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16               # decompress.c:319:16
	addl	$1, 16(%rcx)
.Ltmp2464:
.LBB14_572:                             # %if.end1229.i
                                        #   in Loop: Header=BB14_569 Depth=2
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16               # decompress.c:319:16
	addl	$-1, %edx
	testl	%eax, %eax
.Ltmp2465:
	.loc	12 319 16               # decompress.c:319:16
	jle	.LBB14_569
.Ltmp2466:
.LBB14_573:                             # %if.then1186.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 319 16               # decompress.c:319:16
	addl	$-1, %eax
	movl	%eax, (%r9)
.Ltmp2467:
	.loc	12 320 23 is_stmt 1     # decompress.c:320:23
	btl	%eax, %esi
	movl	24(%rsp), %ecx          # 4-byte Reload
.Ltmp2468:
	.loc	12 320 20 is_stmt 0     # decompress.c:320:20
	jae	.LBB14_575
.Ltmp2469:
# %bb.574:                              # %if.then1234.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 20                 # decompress.c:0:20
	movq	(%rsp), %rax            # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
.Ltmp2470:
	.loc	12 320 40               # decompress.c:320:40
	shll	$4, %eax
	.loc	12 320 45               # decompress.c:320:45
	addl	%ecx, %eax
	.loc	12 320 29               # decompress.c:320:29
	cltq
	.loc	12 320 50               # decompress.c:320:50
	movb	$1, 3196(%r15,%rax)
.Ltmp2471:
.LBB14_575:                             # %for.inc1241.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 318 34 is_stmt 1     # decompress.c:318:34
	addl	$1, %ecx
.Ltmp2472:
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	.loc	12 0 0 is_stmt 0        # decompress.c:0:0
	movl	%ecx, %eax
.Ltmp2473:
	#DEBUG_VALUE: BZ2_decompress:j <- $eax
	jmp	.LBB14_564
.Ltmp2474:
.LBB14_650:                             # %for.cond1536.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	.loc	12 359 24 is_stmt 1     # decompress.c:359:24
	cmpl	92(%rsp), %eax          # 4-byte Folded Reload
.Ltmp2475:
	.loc	12 359 10 is_stmt 0     # decompress.c:359:10
	jge	.LBB14_652
.Ltmp2476:
# %bb.651:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movq	%rax, (%rsp)            # 8-byte Spill
	jmp	.LBB14_653
.Ltmp2477:
.LBB14_652:                             # %for.inc1675.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%rax, (%rsp)            # 8-byte Spill
	movl	136(%rsp), %eax         # 4-byte Reload
.Ltmp2478:
	.loc	12 357 33 is_stmt 1     # decompress.c:357:33
	addl	$1, %eax
.Ltmp2479:
	#DEBUG_VALUE: BZ2_decompress:t <- $eax
	.loc	12 0 33 is_stmt 0       # decompress.c:0:33
	movl	56(%rsp), %edx          # 4-byte Reload
	movl	%edx, 12(%rsp)          # 4-byte Spill
	jmp	.LBB14_577
.Ltmp2480:
.LBB14_653:                             # %while.cond1540.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	movq	%rcx, 168(%rsp)         # 8-byte Spill
.Ltmp2481:
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	.loc	12 361 29 is_stmt 1     # decompress.c:361:29
	leal	-1(%rcx), %ecx
	movl	$-4, %eax
	cmpl	$19, %ecx
	ja	.LBB14_828
.Ltmp2482:
.LBB14_654:                             # %sw.bb1549.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	.loc	12 362 16               # decompress.c:362:16
	movl	$34, (%r12)
.Ltmp2483:
	.loc	12 362 16 is_stmt 0     # decompress.c:362:16
	movl	(%r9), %eax
	testl	%eax, %eax
.Ltmp2484:
	.loc	12 362 16               # decompress.c:362:16
	jle	.LBB14_656
.Ltmp2485:
# %bb.655:                              # %sw.bb1549.if.then1556_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	movl	(%r14), %esi
	jmp	.LBB14_661
.Ltmp2486:
.LBB14_656:                             # %if.end1566.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	movq	(%r15), %rcx
	movl	8(%rcx), %edx
.Ltmp2487:
	.loc	12 362 16               # decompress.c:362:16
	addl	$-1, %edx
.Ltmp2488:
.LBB14_657:                             # %if.end1566.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	cmpl	$-1, %edx
.Ltmp2489:
	.loc	12 362 16               # decompress.c:362:16
	je	.LBB14_26
.Ltmp2490:
# %bb.658:                              # %if.end1572.i
                                        #   in Loop: Header=BB14_657 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %eax
	movl	%eax, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%edx, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_660
.Ltmp2491:
# %bb.659:                              # %if.then1595.i
                                        #   in Loop: Header=BB14_657 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	addl	$1, 16(%rcx)
.Ltmp2492:
.LBB14_660:                             # %if.end1599.i
                                        #   in Loop: Header=BB14_657 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	addl	$-1, %edx
	testl	%eax, %eax
.Ltmp2493:
	.loc	12 362 16               # decompress.c:362:16
	jle	.LBB14_657
.Ltmp2494:
.LBB14_661:                             # %if.then1556.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 362 16               # decompress.c:362:16
	addl	$-1, %eax
	movl	%eax, (%r9)
.Ltmp2495:
	.loc	12 363 23 is_stmt 1     # decompress.c:363:23
	btl	%eax, %esi
.Ltmp2496:
	.loc	12 363 20 is_stmt 0     # decompress.c:363:20
	jae	.LBB14_670
.Ltmp2497:
.LBB14_662:                             # %sw.bb1606.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	.loc	12 364 16 is_stmt 1     # decompress.c:364:16
	movl	$35, (%r12)
.Ltmp2498:
	.loc	12 364 16 is_stmt 0     # decompress.c:364:16
	testl	%eax, %eax
.Ltmp2499:
	.loc	12 364 16               # decompress.c:364:16
	jle	.LBB14_664
.Ltmp2500:
# %bb.663:                              # %sw.bb1606.if.then1613_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	movl	(%r14), %esi
	jmp	.LBB14_669
.Ltmp2501:
.LBB14_664:                             # %if.end1623.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	movq	(%r15), %rcx
	movl	8(%rcx), %edx
.Ltmp2502:
	.loc	12 364 16               # decompress.c:364:16
	addl	$-1, %edx
.Ltmp2503:
.LBB14_665:                             # %if.end1623.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	cmpl	$-1, %edx
.Ltmp2504:
	.loc	12 364 16               # decompress.c:364:16
	je	.LBB14_26
.Ltmp2505:
# %bb.666:                              # %if.end1629.i
                                        #   in Loop: Header=BB14_665 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %esi
	orl	%edi, %esi
	movl	%esi, (%r14)
	addl	$8, %eax
	movl	%eax, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%edx, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_668
.Ltmp2506:
# %bb.667:                              # %if.then1652.i
                                        #   in Loop: Header=BB14_665 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	addl	$1, 16(%rcx)
.Ltmp2507:
.LBB14_668:                             # %if.end1656.i
                                        #   in Loop: Header=BB14_665 Depth=2
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	addl	$-1, %edx
	testl	%eax, %eax
.Ltmp2508:
	.loc	12 364 16               # decompress.c:364:16
	jle	.LBB14_665
.Ltmp2509:
.LBB14_669:                             # %if.then1613.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 364 16               # decompress.c:364:16
	addl	$-1, %eax
	movl	%eax, (%r9)
.Ltmp2510:
	.loc	12 365 23 is_stmt 1     # decompress.c:365:23
	xorl	%ecx, %ecx
	btl	%eax, %esi
	setae	%cl
	movq	168(%rsp), %rax         # 8-byte Reload
.Ltmp2511:
	.loc	12 365 20 is_stmt 0     # decompress.c:365:20
	leal	(%rax,%rcx,2), %eax
	addl	$-1, %eax
.Ltmp2512:
	#DEBUG_VALUE: BZ2_decompress:curr <- $eax
	.loc	12 0 20                 # decompress.c:0:20
	movq	%rax, %rcx
.Ltmp2513:
	#DEBUG_VALUE: BZ2_decompress:curr <- $ecx
	jmp	.LBB14_653
.Ltmp2514:
.LBB14_670:                             # %while.end1666.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 367 13 is_stmt 1     # decompress.c:367:13
	movslq	136(%rsp), %rax         # 4-byte Folded Reload
	movq	(%rsp), %rdx            # 8-byte Reload
	movslq	%edx, %rdx
	movq	%rax, %rcx
	shlq	$8, %rcx
	leaq	(%rcx,%rax,2), %rax
	addq	%r15, %rax
	movq	168(%rsp), %rcx         # 8-byte Reload
	.loc	12 367 26 is_stmt 0     # decompress.c:367:26
	movb	%cl, 43888(%rdx,%rax)
	movq	%rdx, %rax
.Ltmp2515:
	.loc	12 359 38 is_stmt 1     # decompress.c:359:38
	addl	$1, %eax
.Ltmp2516:
	#DEBUG_VALUE: BZ2_decompress:i <- $eax
	.loc	12 0 38 is_stmt 0       # decompress.c:0:38
	jmp	.LBB14_650
.Ltmp2517:
.LBB14_684:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2518:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	%rcx, 112(%rsp)         # 8-byte Spill
	jmp	.LBB14_828
.Ltmp2519:
.LBB14_685:                             # %while.end1923.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2520:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	152(%rsp), %rdx         # 8-byte Reload
	movslq	(%rdx,%rcx,4), %rdx
	movslq	%edi, %rcx
	subq	%rdx, %rcx
	cmpl	$257, %ecx              # imm = 0x101
	ja	.LBB14_828
.Ltmp2521:
# %bb.686:                              # %if.end1936.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	144(%rsp), %rax         # 8-byte Reload
	movl	(%rax,%rcx,4), %r10d
.Ltmp2522:
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
.LBB14_687:                             # %while.cond1942.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 417 22 is_stmt 1     # decompress.c:417:22
	cmpl	28(%rsp), %r10d         # 4-byte Folded Reload
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movl	%r11d, 12(%rsp)         # 4-byte Spill
	movq	48(%rsp), %rdi          # 8-byte Reload
.Ltmp2523:
	.loc	12 417 14 is_stmt 0     # decompress.c:417:14
	jne	.LBB14_708
.Ltmp2524:
# %bb.688:                              # %while.end2551.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 524 14 is_stmt 1     # decompress.c:524:14
	movl	56(%r15), %ecx
	movl	$-4, %eax
	.loc	12 524 22 is_stmt 0     # decompress.c:524:22
	testl	%ecx, %ecx
	.loc	12 524 26               # decompress.c:524:26
	js	.LBB14_707
.Ltmp2525:
# %bb.689:                              # %while.end2551.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	%edi, %ecx
	jge	.LBB14_707
.Ltmp2526:
# %bb.690:                              # %if.end2560.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 528 19 is_stmt 1     # decompress.c:528:19
	movl	$0, 1096(%r15)
.Ltmp2527:
	#DEBUG_VALUE: BZ2_decompress:i <- 1
	.loc	12 0 19 is_stmt 0       # decompress.c:0:19
	movq	$-1024, %rcx            # imm = 0xFC00
.Ltmp2528:
.LBB14_691:                             # %vector.body5763.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 529 48 is_stmt 1     # decompress.c:529:48
	movdqu	1092(%r15,%rcx), %xmm0
	movdqu	1108(%r15,%rcx), %xmm1
	movdqu	1124(%r15,%rcx), %xmm2
	movdqu	1140(%r15,%rcx), %xmm3
	.loc	12 529 46 is_stmt 0     # decompress.c:529:46
	movdqu	%xmm0, 2124(%r15,%rcx)
	movdqu	%xmm1, 2140(%r15,%rcx)
	movdqu	%xmm2, 2156(%r15,%rcx)
	movdqu	%xmm3, 2172(%r15,%rcx)
	addq	$64, %rcx
	jne	.LBB14_691
.Ltmp2529:
# %bb.692:                              # %for.body2579.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 46                 # decompress.c:0:46
	xorl	%ecx, %ecx
.Ltmp2530:
	.loc	12 530 49 is_stmt 1     # decompress.c:530:49
	xorl	%edx, %edx
.Ltmp2531:
.LBB14_693:                             # %for.body2579.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- undef
	.loc	12 530 46 is_stmt 0     # decompress.c:530:46
	addl	1100(%r15,%rcx,4), %edx
	movl	%edx, 1100(%r15,%rcx,4)
.Ltmp2532:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	1104(%r15,%rcx,4), %edx
	movl	%edx, 1104(%r15,%rcx,4)
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	1108(%r15,%rcx,4), %edx
	movl	%edx, 1108(%r15,%rcx,4)
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	1112(%r15,%rcx,4), %edx
	movl	%edx, 1112(%r15,%rcx,4)
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 530 21               # decompress.c:530:21
	addq	$4, %rcx
	cmpq	$256, %rcx              # imm = 0x100
.Ltmp2533:
	.loc	12 530 7                # decompress.c:530:7
	jne	.LBB14_693
.Ltmp2534:
# %bb.694:                              # %for.body2594.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 7                  # decompress.c:0:7
	xorl	%ecx, %ecx
	jmp	.LBB14_696
.Ltmp2535:
.LBB14_695:                             # %for.inc2608.3.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 531 30 is_stmt 1     # decompress.c:531:30
	addq	$4, %rcx
.Ltmp2536:
.LBB14_696:                             # %for.body2594.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	.loc	12 532 14               # decompress.c:532:14
	movl	1096(%r15,%rcx,4), %edx
	.loc	12 532 26 is_stmt 0     # decompress.c:532:26
	testl	%edx, %edx
	.loc	12 532 30               # decompress.c:532:30
	js	.LBB14_706
.Ltmp2537:
# %bb.697:                              # %for.body2594.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	%edi, %edx
	jg	.LBB14_706
.Ltmp2538:
# %bb.698:                              # %for.inc2608.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 531 21 is_stmt 1     # decompress.c:531:21
	leaq	1(%rcx), %rdx
	cmpq	$257, %rdx              # imm = 0x101
.Ltmp2539:
	.loc	12 531 7 is_stmt 0      # decompress.c:531:7
	jae	.LBB14_724
.Ltmp2540:
# %bb.699:                              # %for.body2594.1.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	movq	%rcx, %rdx
	orq	$1, %rdx
.Ltmp2541:
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	movq	%rdx, (%rsp)            # 8-byte Spill
.Ltmp2542:
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 532 14 is_stmt 1     # decompress.c:532:14
	movl	1100(%r15,%rcx,4), %edx
	.loc	12 532 26 is_stmt 0     # decompress.c:532:26
	testl	%edx, %edx
	.loc	12 532 30               # decompress.c:532:30
	js	.LBB14_707
.Ltmp2543:
# %bb.700:                              # %for.body2594.1.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	%edi, %edx
	jg	.LBB14_707
.Ltmp2544:
# %bb.701:                              # %for.inc2608.1.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 531 30 is_stmt 1     # decompress.c:531:30
	movq	%rcx, %rdx
	orq	$2, %rdx
.Ltmp2545:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	.loc	12 0 30 is_stmt 0       # decompress.c:0:30
	movq	%rdx, (%rsp)            # 8-byte Spill
.Ltmp2546:
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 532 14 is_stmt 1     # decompress.c:532:14
	movl	1104(%r15,%rcx,4), %edx
	.loc	12 532 26 is_stmt 0     # decompress.c:532:26
	testl	%edx, %edx
	.loc	12 532 30               # decompress.c:532:30
	js	.LBB14_707
.Ltmp2547:
# %bb.702:                              # %for.inc2608.1.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	%edi, %edx
	jg	.LBB14_707
.Ltmp2548:
# %bb.703:                              # %for.inc2608.2.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 532 14               # decompress.c:532:14
	movl	1108(%r15,%rcx,4), %edx
	.loc	12 532 26               # decompress.c:532:26
	testl	%edx, %edx
	.loc	12 532 30               # decompress.c:532:30
	js	.LBB14_705
.Ltmp2549:
# %bb.704:                              # %for.inc2608.2.i
                                        #   in Loop: Header=BB14_696 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	cmpl	%edi, %edx
	jle	.LBB14_695
.Ltmp2550:
.LBB14_705:                             # %for.inc2608.2.i.save_state_and_return.loopexit5251.i_crit_edge
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addq	$3, %rcx
.Ltmp2551:
.LBB14_706:                             # %save_state_and_return.loopexit5251.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 30                 # decompress.c:0:30
	movq	%rcx, (%rsp)            # 8-byte Spill
.Ltmp2552:
.LBB14_707:                             # %save_state_and_return.loopexit5251.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	movl	%r10d, %ecx
	movl	%r10d, 28(%rsp)         # 4-byte Spill
	jmp	.LBB14_828
.Ltmp2553:
.LBB14_708:                             # %if.end1947.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 419 33 is_stmt 1     # decompress.c:419:33
	cmpl	$1, %r10d
	ja	.LBB14_710
.Ltmp2554:
# %bb.709:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 33 is_stmt 0       # decompress.c:0:33
	movl	$-1, %eax
	movl	$1, %r8d
.Ltmp2555:
	jmp	.LBB14_805
.Ltmp2556:
.LBB14_710:                             # %if.else2186.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$-4, %eax
.Ltmp2557:
	.loc	12 454 24 is_stmt 1     # decompress.c:454:24
	cmpl	%r11d, %edi
.Ltmp2558:
	.loc	12 454 17 is_stmt 0     # decompress.c:454:17
	jge	.LBB14_828
.Ltmp2559:
# %bb.711:                              # %if.end2190.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 460 38 is_stmt 1     # decompress.c:460:38
	leal	-1(%r10), %ebx
.Ltmp2560:
	#DEBUG_VALUE: nn <- $ebx
	.loc	12 462 23               # decompress.c:462:23
	cmpl	$15, %ebx
	movq	%r10, 96(%rsp)          # 8-byte Spill
.Ltmp2561:
	.loc	12 462 20 is_stmt 0     # decompress.c:462:20
	ja	.LBB14_721
.Ltmp2562:
# %bb.712:                              # %if.then2197.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: nn <- $ebx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 464 24 is_stmt 1     # decompress.c:464:24
	movl	7820(%r15), %r14d
.Ltmp2563:
	#DEBUG_VALUE: pp <- $r14d
	movslq	%r14d, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	.loc	12 465 34               # decompress.c:465:34
	leal	(%r14,%rbx), %ecx
	.loc	12 465 24 is_stmt 0     # decompress.c:465:24
	movb	3724(%r15,%rcx), %cl
.Ltmp2564:
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	.loc	12 0 24                 # decompress.c:0:24
	movb	%cl, 71(%rsp)           # 1-byte Spill
	movl	%r10d, %ecx
	.loc	12 466 29 is_stmt 1     # decompress.c:466:29
	cmpl	$4, %ebx
	movq	%r13, 176(%rsp)         # 8-byte Spill
	movq	%r9, 184(%rsp)          # 8-byte Spill
	movq	%r8, 72(%rsp)           # 8-byte Spill
	.loc	12 466 19 is_stmt 0     # decompress.c:466:19
	jb	.LBB14_716
.Ltmp2565:
.LBB14_713:                             # %while.body2207.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: nn <- $ebx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 19                 # decompress.c:0:19
	movl	%ecx, %edx
.Ltmp2566:
	#DEBUG_VALUE: nn <- undef
	.loc	12 470 39 is_stmt 1     # decompress.c:470:39
	leal	(%r14,%rdx), %ecx
	addl	$-4, %ecx
	movslq	%ecx, %rcx
	.loc	12 471 39               # decompress.c:471:39
	leal	-5(%r14,%rdx), %edi
	movslq	%edi, %rdi
	movl	3724(%r15,%rdi), %edi
	.loc	12 471 37 is_stmt 0     # decompress.c:471:37
	movl	%edi, 3724(%r15,%rcx)
.Ltmp2567:
	#DEBUG_VALUE: nn <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 466 29 is_stmt 1     # decompress.c:466:29
	leal	-4(%rdx), %ecx
	addl	$-5, %edx
	cmpl	$3, %edx
	.loc	12 466 19 is_stmt 0     # decompress.c:466:19
	ja	.LBB14_713
.Ltmp2568:
# %bb.714:                              # %while.cond2242.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: nn <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 0 19                 # decompress.c:0:19
	movq	%r12, %r9
	.loc	12 474 29 is_stmt 1     # decompress.c:474:29
	cmpl	$1, %ecx
	.loc	12 474 19 is_stmt 0     # decompress.c:474:19
	je	.LBB14_762
.Ltmp2569:
# %bb.715:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 19                 # decompress.c:0:19
	addl	$-1, %ecx
	movl	%ecx, %ebx
	movq	%r9, %r12
.Ltmp2570:
.LBB14_716:                             # %while.body2245.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 475 52 is_stmt 1     # decompress.c:475:52
	movl	%ebx, %r11d
.Ltmp2571:
	addl	$-1, %ebx
	leaq	1(%rbx), %r10
.Ltmp2572:
	cmpq	$15, %r10
	ja	.LBB14_745
.Ltmp2573:
.LBB14_717:                             # %while.body2245.preheader5810.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leal	-1(%r11), %r10d
	movl	%r11d, %edx
	andl	$3, %edx
	je	.LBB14_759
.Ltmp2574:
# %bb.718:                              # %while.body2245.prol.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%r11, %rdi
	negq	%rdi
	leal	(%r14,%r11), %ebp
	negl	%edx
.Ltmp2575:
.LBB14_719:                             # %while.body2245.prol.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: nn <- undef
	.loc	12 475 22 is_stmt 0     # decompress.c:475:22
	movl	%ebp, %ebx
	.loc	12 475 41               # decompress.c:475:41
	leal	-1(%rbp), %ebp
	movzbl	3724(%r15,%rbp), %ecx
	.loc	12 475 39               # decompress.c:475:39
	movb	%cl, 3724(%r15,%rbx)
.Ltmp2576:
	.loc	12 474 19 is_stmt 1     # decompress.c:474:19
	addq	$1, %rdi
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	incl	%edx
	jne	.LBB14_719
.Ltmp2577:
# %bb.720:                              # %while.body2245.prol.loopexit.i.loopexit
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 19 is_stmt 0       # decompress.c:0:19
	movq	%r12, %r9
.Ltmp2578:
	.loc	12 475 52 is_stmt 1     # decompress.c:475:52
	negq	%rdi
	movq	%rdi, %r11
	cmpl	$3, %r10d
	jae	.LBB14_760
	jmp	.LBB14_762
.Ltmp2579:
.LBB14_721:                             # %if.else2260.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: nn <- $ebx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 480 28               # decompress.c:480:28
	movl	%ebx, %edx
	shrl	$4, %edx
.Ltmp2580:
	#DEBUG_VALUE: lno <- $edx
	.loc	12 481 28               # decompress.c:481:28
	andl	$15, %ebx
.Ltmp2581:
	#DEBUG_VALUE: off <- $ebx
	.loc	12 482 24               # decompress.c:482:24
	movl	7820(%r15,%rdx,4), %ecx
	.loc	12 482 40 is_stmt 0     # decompress.c:482:40
	leal	(%rcx,%rbx), %esi
.Ltmp2582:
	#DEBUG_VALUE: pp <- $esi
	.loc	12 483 24 is_stmt 1     # decompress.c:483:24
	movslq	%esi, %rsi
.Ltmp2583:
	movb	3724(%r15,%rsi), %r11b
.Ltmp2584:
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	.loc	12 484 29               # decompress.c:484:29
	testl	%ebx, %ebx
	.loc	12 484 19 is_stmt 0     # decompress.c:484:19
	je	.LBB14_752
.Ltmp2585:
.LBB14_722:                             # %while.body2274.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: off <- $ebx
	#DEBUG_VALUE: lno <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: pp <- $rsi
	.loc	12 485 36 is_stmt 1     # decompress.c:485:36
	movzbl	3723(%r15,%rsi), %ecx
.Ltmp2586:
	#DEBUG_VALUE: pp <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 485 34 is_stmt 0     # decompress.c:485:34
	movb	%cl, 3724(%r15,%rsi)
	.loc	12 485 46               # decompress.c:485:46
	leaq	-1(%rsi), %rsi
.Ltmp2587:
	.loc	12 484 31 is_stmt 1     # decompress.c:484:31
	movslq	7820(%r15,%rdx,4), %rcx
	.loc	12 484 29 is_stmt 0     # decompress.c:484:29
	cmpq	%rcx, %rsi
	.loc	12 484 19               # decompress.c:484:19
	jg	.LBB14_722
.Ltmp2588:
# %bb.723:                              # %while.end2283.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: off <- $ebx
	#DEBUG_VALUE: lno <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 487 34 is_stmt 1     # decompress.c:487:34
	addl	$1, %ecx
	movl	%ecx, 7820(%r15,%rdx,4)
	.loc	12 488 30               # decompress.c:488:30
	testl	%edx, %edx
	.loc	12 488 19 is_stmt 0     # decompress.c:488:19
	jne	.LBB14_754
	jmp	.LBB14_755
.Ltmp2589:
.LBB14_724:                             # %for.end2610.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 538 24 is_stmt 1     # decompress.c:538:24
	movl	$0, 16(%r15)
	.loc	12 539 24               # decompress.c:539:24
	movb	$0, 12(%r15)
.Ltmp2590:
	.loc	12 540 7                # decompress.c:540:7
	movl	$-1, 3184(%r15)
.Ltmp2591:
	.loc	12 541 16               # decompress.c:541:16
	movl	$2, 8(%r15)
.Ltmp2592:
	.loc	12 542 24               # decompress.c:542:24
	cmpl	$2, 52(%r15)
.Ltmp2593:
	.loc	12 542 11 is_stmt 0     # decompress.c:542:11
	jge	.LBB14_792
.Ltmp2594:
# %bb.725:                              # %if.end2617.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 544 11 is_stmt 1     # decompress.c:544:11
	cmpb	$0, 44(%r15)
.Ltmp2595:
	.loc	12 544 11 is_stmt 0     # decompress.c:544:11
	je	.LBB14_793
.Ltmp2596:
.LBB14_726:                             # %vector.body5776.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 547 55 is_stmt 1     # decompress.c:547:55
	movups	1096(%r15), %xmm0
	movups	1112(%r15), %xmm1
	movups	1128(%r15), %xmm2
	movups	1144(%r15), %xmm3
	.loc	12 547 53 is_stmt 0     # decompress.c:547:53
	movups	%xmm0, 2124(%r15)
	movups	%xmm1, 2140(%r15)
	movups	%xmm2, 2156(%r15)
	movups	%xmm3, 2172(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1160(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2188(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1176(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2204(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1192(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2220(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1208(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2236(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1224(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2252(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1240(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2268(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1256(%r15), %xmm0
	movups	1272(%r15), %xmm1
	movups	1288(%r15), %xmm2
	movups	1304(%r15), %xmm3
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2284(%r15)
	movups	%xmm1, 2300(%r15)
	movups	%xmm2, 2316(%r15)
	movups	%xmm3, 2332(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1320(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2348(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1336(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2364(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1352(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2380(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1368(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2396(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1384(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2412(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1400(%r15), %xmm0
	movdqu	1416(%r15), %xmm1
	movdqu	1432(%r15), %xmm2
	movdqu	1448(%r15), %xmm3
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2428(%r15)
	movdqu	%xmm1, 2444(%r15)
	movdqu	%xmm2, 2460(%r15)
	movdqu	%xmm3, 2476(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1464(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2492(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1480(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2508(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1496(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2524(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1512(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2540(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1528(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2556(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1544(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2572(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1560(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2588(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1576(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2604(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1592(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2620(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1608(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2636(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1624(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2652(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1640(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2668(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1656(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2684(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1672(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2700(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1688(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2716(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1704(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2732(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1720(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2748(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1736(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2764(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1752(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2780(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1768(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2796(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1784(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2812(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1800(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2828(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1816(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2844(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1832(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2860(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1848(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2876(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1864(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2892(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1880(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2908(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1896(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2924(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1912(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2940(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1928(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2956(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1944(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2972(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1960(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 2988(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1976(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3004(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	1992(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3020(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2008(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3036(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2024(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3052(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2040(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3068(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2056(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3084(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2072(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3100(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movups	2088(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movups	%xmm0, 3116(%r15)
	.loc	12 547 55               # decompress.c:547:55
	movdqu	2104(%r15), %xmm0
	.loc	12 547 53               # decompress.c:547:53
	movdqu	%xmm0, 3132(%r15)
.Ltmp2597:
	#DEBUG_VALUE: BZ2_decompress:i <- 256
	.loc	12 547 55               # decompress.c:547:55
	movl	2120(%r15), %eax
.Ltmp2598:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 547 53               # decompress.c:547:53
	movl	%eax, 3148(%r15)
.Ltmp2599:
	.loc	12 550 24 is_stmt 1     # decompress.c:550:24
	testl	%edi, %edi
.Ltmp2600:
	.loc	12 550 10 is_stmt 0     # decompress.c:550:10
	jle	.LBB14_732
.Ltmp2601:
# %bb.727:                              # %for.body2636.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movl	48(%rsp), %eax          # 4-byte Reload
	xorl	%ecx, %ecx
.Ltmp2602:
.LBB14_728:                             # %for.body2636.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	.loc	12 551 29 is_stmt 1     # decompress.c:551:29
	movq	3160(%r15), %rdi
	.loc	12 551 26 is_stmt 0     # decompress.c:551:26
	movzbl	(%rdi,%rcx,2), %edx
.Ltmp2603:
	.loc	12 552 13 is_stmt 1     # decompress.c:552:13
	movl	2124(%r15,%rdx,4), %esi
	movw	%si, (%rdi,%rcx,2)
.Ltmp2604:
	.loc	12 552 13 is_stmt 0     # decompress.c:552:13
	movq	3168(%r15), %rdi
	movl	%ecx, %ebp
	shrl	%ebp
	movzbl	(%rdi,%rbp), %ebx
.Ltmp2605:
	.loc	12 552 13               # decompress.c:552:13
	testb	$1, %cl
	jne	.LBB14_730
.Ltmp2606:
# %bb.729:                              # %if.then2652.i
                                        #   in Loop: Header=BB14_728 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 552 13               # decompress.c:552:13
	andl	$-16, %ebx
	sarl	$16, %esi
	orl	%ebx, %esi
	jmp	.LBB14_731
.Ltmp2607:
.LBB14_730:                             # %if.else2669.i
                                        #   in Loop: Header=BB14_728 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	andl	$15, %ebx
	sarl	$16, %esi
	shll	$4, %esi
	orl	%ebx, %esi
.Ltmp2608:
.LBB14_731:                             # %if.end2687.i
                                        #   in Loop: Header=BB14_728 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movb	%sil, (%rdi,%rbp)
.Ltmp2609:
	.loc	12 553 29 is_stmt 1     # decompress.c:553:29
	addl	$1, 2124(%r15,%rdx,4)
.Ltmp2610:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 550 35               # decompress.c:550:35
	addq	$1, %rcx
	.loc	12 550 24 is_stmt 0     # decompress.c:550:24
	cmpq	%rcx, %rax
.Ltmp2611:
	.loc	12 550 10               # decompress.c:550:10
	jne	.LBB14_728
.Ltmp2612:
.LBB14_732:                             # %for.end2694.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 557 17 is_stmt 1     # decompress.c:557:17
	movslq	56(%r15), %rdx
.Ltmp2613:
	#DEBUG_VALUE: BZ2_decompress:i <- $edx
	.loc	12 558 14               # decompress.c:558:14
	movq	3160(%r15), %rsi
	movq	3168(%r15), %rax
	movl	%edx, %ecx
	sarl	%ecx
	movslq	%ecx, %rcx
	movzbl	(%rax,%rcx), %edi
	movl	%edx, %ecx
	shlb	$2, %cl
	andb	$4, %cl
	shrl	%cl, %edi
	movzwl	(%rsi,%rdx,2), %ecx
	andl	$15, %edi
	shll	$16, %edi
	orl	%ecx, %edi
.Ltmp2614:
	#DEBUG_VALUE: BZ2_decompress:j <- $edi
	.loc	12 0 14 is_stmt 0       # decompress.c:0:14
	movl	%edi, %ecx
.Ltmp2615:
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	jmp	.LBB14_734
.Ltmp2616:
.LBB14_733:                             # %if.end2765.do.body2711_crit_edge.i
                                        #   in Loop: Header=BB14_734 Depth=2
	#DEBUG_VALUE: tmp <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 560 25 is_stmt 1     # decompress.c:560:25
	movq	3160(%r15), %rsi
	movq	3168(%r15), %rax
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	movl	24(%rsp), %ecx          # 4-byte Reload
.Ltmp2617:
.LBB14_734:                             # %do.body2711.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $edx
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
                                        # kill: def $ecx killed $ecx def $rcx
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- $ecx
	#DEBUG_VALUE: BZ2_decompress:j <- $ecx
	#DEBUG_VALUE: BZ2_decompress:i <- $edx
	.loc	12 0 25 is_stmt 0       # decompress.c:0:25
	movq	%rcx, (%rsp)            # 8-byte Spill
.Ltmp2618:
	#DEBUG_VALUE: BZ2_indexIntoF:indx <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [$rsp+0]
	.loc	12 560 25               # decompress.c:560:25
	movslq	%ecx, %rbx
	movzwl	(%rsi,%rbx,2), %edi
	movl	%ebx, %ecx
	sarl	%ecx
	movslq	%ecx, %rbp
	movzbl	(%rax,%rbp), %r11d
	leal	(,%rbx,4), %ecx
	andl	$4, %ecx
	shrl	%cl, %r11d
	andl	$15, %r11d
	shll	$16, %r11d
	movl	%r11d, 24(%rsp)         # 4-byte Spill
.Ltmp2619:
	.loc	12 561 13 is_stmt 1     # decompress.c:561:13
	movw	%dx, (%rsi,%rbx,2)
.Ltmp2620:
	.loc	12 561 13 is_stmt 0     # decompress.c:561:13
	movzbl	(%rax,%rbp), %esi
.Ltmp2621:
	.loc	12 561 13               # decompress.c:561:13
	testb	$1, %bl
	jne	.LBB14_736
.Ltmp2622:
# %bb.735:                              # %if.then2736.i
                                        #   in Loop: Header=BB14_734 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 561 13               # decompress.c:561:13
	andl	$-16, %esi
	sarl	$16, %edx
.Ltmp2623:
	orl	%esi, %edx
	jmp	.LBB14_737
.Ltmp2624:
.LBB14_736:                             # %if.else2750.i
                                        #   in Loop: Header=BB14_734 Depth=2
	#DEBUG_VALUE: BZ2_decompress:i <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	andl	$15, %esi
	sarl	$16, %edx
.Ltmp2625:
	shll	$4, %edx
	orl	%esi, %edx
.Ltmp2626:
.LBB14_737:                             # %if.end2765.i
                                        #   in Loop: Header=BB14_734 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13                 # decompress.c:0:13
	movq	40(%rsp), %rbx          # 8-byte Reload
	movl	12(%rsp), %r11d         # 4-byte Reload
	addl	%edi, 24(%rsp)          # 4-byte Folded Spill
.Ltmp2627:
	#DEBUG_VALUE: tmp <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	12 561 13               # decompress.c:561:13
	movb	%dl, (%rax,%rbp)
	movq	(%rsp), %rdx            # 8-byte Reload
.Ltmp2628:
	.loc	12 565 22 is_stmt 1     # decompress.c:565:22
	cmpl	56(%r15), %edx
	#DEBUG_VALUE: tmp <- [DW_OP_plus_uconst 24] [$rsp+0]
.Ltmp2629:
	.loc	12 564 10               # decompress.c:564:10
	jne	.LBB14_733
.Ltmp2630:
# %bb.738:                              # %do.end2770.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 567 18               # decompress.c:567:18
	movl	%edx, 60(%r15)
	.loc	12 568 25               # decompress.c:568:25
	movl	$0, 1092(%r15)
.Ltmp2631:
	.loc	12 569 14               # decompress.c:569:14
	cmpb	$0, 20(%r15)
.Ltmp2632:
	.loc	12 569 14 is_stmt 0     # decompress.c:569:14
	je	.LBB14_782
.Ltmp2633:
# %bb.739:                              # %if.then2774.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 570 13 is_stmt 1     # decompress.c:570:13
	movq	$0, 24(%r15)
	xorl	%eax, %eax
.Ltmp2634:
	#DEBUG_VALUE: BZ2_indexIntoF:na <- 256
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- 0
	.loc	12 0 13 is_stmt 0       # decompress.c:0:13
	movl	$256, %edx              # imm = 0x100
.Ltmp2635:
.LBB14_740:                             # %do.body.i.i64
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rax,%rdx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp2636:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rdi
	movq	(%rsp), %rbp            # 8-byte Reload
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ebp, 1096(%r15,%rdi,4)
	jg	.LBB14_742
.Ltmp2637:
# %bb.741:                              # %do.body.i.i64
                                        #   in Loop: Header=BB14_740 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %eax
.Ltmp2638:
	jmp	.LBB14_743
.Ltmp2639:
.LBB14_742:                             #   in Loop: Header=BB14_740 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %edx
.Ltmp2640:
.LBB14_743:                             # %do.body.i.i64
                                        #   in Loop: Header=BB14_740 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%edx, %esi
.Ltmp2641:
	subl	%eax, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp2642:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_740
.Ltmp2643:
# %bb.744:                              # %BZ2_indexIntoF.exit.i66
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 571 13               # decompress.c:571:13
	movl	%eax, 64(%r15)
	movl	(%rsp), %edx            # 4-byte Reload
	movq	3160(%r15), %rsi
	movq	3168(%r15), %rdi
	movzwl	(%rsi,%rdx,2), %esi
	shrq	%rdx
	movzbl	(%rdi,%rdx), %edx
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %edx
	andl	$15, %edx
	shll	$16, %edx
	orl	%esi, %edx
	movl	%edx, 60(%r15)
	.loc	12 571 48 is_stmt 0     # decompress.c:571:48
	movl	$1, 1092(%r15)
.Ltmp2644:
	.loc	12 572 13 is_stmt 1     # decompress.c:572:13
	movl	$619, 24(%r15)          # imm = 0x26B
.Ltmp2645:
	.loc	12 572 13 is_stmt 0     # decompress.c:572:13
	movabsq	$4294967914, %rcx       # imm = 0x10000026A
	movq	%rcx, 24(%r15)
	.loc	12 572 37               # decompress.c:572:37
	movl	%eax, 64(%r15)
	xorl	%eax, %eax
	jmp	.LBB14_707
.Ltmp2646:
.LBB14_745:                             # %vector.scevcheck5734.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 475 52 is_stmt 1     # decompress.c:475:52
	leal	(%r11,%r14), %ecx
	cmpl	%ebx, %ecx
	jb	.LBB14_717
.Ltmp2647:
# %bb.746:                              # %vector.scevcheck5734.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leal	(%r11,%r14), %edx
	addl	$-1, %edx
	cmpl	%edx, %r14d
	ja	.LBB14_717
.Ltmp2648:
# %bb.747:                              # %vector.scevcheck5734.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leaq	(%r15,%rcx), %rdi
	addq	$3724, %rdi             # imm = 0xE8C
	cmpq	%rbx, %rdi
	jb	.LBB14_717
.Ltmp2649:
# %bb.748:                              # %vector.scevcheck5734.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leaq	(%r15,%rdx), %rdi
	addq	$3724, %rdi             # imm = 0xE8C
	cmpq	%rbx, %rdi
	jb	.LBB14_717
.Ltmp2650:
# %bb.749:                              # %vector.memcheck.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 52 is_stmt 0       # decompress.c:0:52
	movq	%r12, %r9
	.loc	12 475 52               # decompress.c:475:52
	leaq	3724(%rcx), %rdi
	subq	%rbx, %rdi
	addq	%r15, %rdi
	leaq	(%r15,%rdx), %rbp
	addq	$3725, %rbp             # imm = 0xE8D
	cmpq	%rbp, %rdi
	jae	.LBB14_788
.Ltmp2651:
# %bb.750:                              # %vector.memcheck.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addq	$3724, %rdx             # imm = 0xE8C
	addq	%r15, %rcx
	addq	$3725, %rcx             # imm = 0xE8D
	subq	%rbx, %rdx
	addq	%r15, %rdx
	cmpq	%rcx, %rdx
	jae	.LBB14_788
.Ltmp2652:
# %bb.751:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 52                 # decompress.c:0:52
	movq	%r9, %r12
	pxor	%xmm8, %xmm8
	jmp	.LBB14_717
.Ltmp2653:
.LBB14_752:                             # %while.end2283.thread.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: off <- $ebx
	#DEBUG_VALUE: lno <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 487 34 is_stmt 1     # decompress.c:487:34
	addl	$1, %ecx
	movl	%ecx, 7820(%r15,%rdx,4)
	jmp	.LBB14_754
.Ltmp2654:
.LBB14_753:                             # %while.body2291.i.while.body2291.i_crit_edge
                                        #   in Loop: Header=BB14_754 Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 489 37               # decompress.c:489:37
	movl	7820(%r15,%rdx,4), %ecx
.Ltmp2655:
.LBB14_754:                             # %while.body2291.preheader.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: off <- $ebx
	#DEBUG_VALUE: lno <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0 is_stmt 0        # decompress.c:0:0
	addq	$-1, %rdx
.Ltmp2656:
	#DEBUG_VALUE: lno <- undef
	.loc	12 490 22 is_stmt 1     # decompress.c:490:22
	movslq	%ecx, %rcx
	.loc	12 489 37               # decompress.c:489:37
	leaq	-1(%rcx), %rsi
	movl	%esi, 7824(%r15,%rdx,4)
	.loc	12 491 35               # decompress.c:491:35
	movslq	7820(%r15,%rdx,4), %rsi
	.loc	12 491 27 is_stmt 0     # decompress.c:491:27
	movzbl	3739(%r15,%rsi), %ebx
.Ltmp2657:
	.loc	12 491 25               # decompress.c:491:25
	movb	%bl, 3723(%r15,%rcx)
.Ltmp2658:
	#DEBUG_VALUE: lno <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 488 30 is_stmt 1     # decompress.c:488:30
	testq	%rdx, %rdx
	.loc	12 488 19 is_stmt 0     # decompress.c:488:19
	jg	.LBB14_753
.Ltmp2659:
.LBB14_755:                             # %while.end2312.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 494 32 is_stmt 1     # decompress.c:494:32
	movslq	7820(%r15), %rcx
	leaq	-1(%rcx), %rdx
	movl	%edx, 7820(%r15)
	.loc	12 495 42               # decompress.c:495:42
	movb	%r11b, 3723(%r15,%rcx)
.Ltmp2660:
	.loc	12 496 37               # decompress.c:496:37
	cmpl	$0, 7820(%r15)
.Ltmp2661:
	.loc	12 496 23 is_stmt 0     # decompress.c:496:23
	je	.LBB14_757
.Ltmp2662:
# %bb.756:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 23                 # decompress.c:0:23
	movq	40(%rsp), %rbx          # 8-byte Reload
	jmp	.LBB14_763
.Ltmp2663:
.LBB14_757:                             # %for.cond2330.preheader.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$4080, %edx             # imm = 0xFF0
	xorl	%esi, %esi
	movq	40(%rsp), %rbx          # 8-byte Reload
.Ltmp2664:
.LBB14_758:                             # %for.cond2330.preheader.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: kk <- undef
	#DEBUG_VALUE: ii <- undef
	#DEBUG_VALUE: jj <- 15
	.loc	12 500 50 is_stmt 1     # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42 is_stmt 0     # decompress.c:500:42
	movzbl	3739(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7819(%r15,%rsi,4)
.Ltmp2665:
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: jj <- 14
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3738(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7818(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2666:
	#DEBUG_VALUE: jj <- 13
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3737(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7817(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2667:
	#DEBUG_VALUE: jj <- 12
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3736(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7816(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2668:
	#DEBUG_VALUE: jj <- 11
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3735(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7815(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2669:
	#DEBUG_VALUE: jj <- 10
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3734(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7814(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2670:
	#DEBUG_VALUE: jj <- 9
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3733(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7813(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2671:
	#DEBUG_VALUE: jj <- 8
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3732(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7812(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2672:
	#DEBUG_VALUE: jj <- 7
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3731(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7811(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2673:
	#DEBUG_VALUE: jj <- 6
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3730(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7810(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2674:
	#DEBUG_VALUE: jj <- 5
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3729(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7809(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2675:
	#DEBUG_VALUE: jj <- 4
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3728(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7808(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2676:
	#DEBUG_VALUE: jj <- 3
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3727(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7807(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2677:
	#DEBUG_VALUE: jj <- 2
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3726(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7806(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2678:
	#DEBUG_VALUE: jj <- 1
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3725(%r15,%rcx), %ecx
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7805(%r15,%rsi,4)
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2679:
	#DEBUG_VALUE: jj <- 0
	.loc	12 500 50               # decompress.c:500:50
	movslq	7880(%r15,%rsi), %rcx
	.loc	12 500 42               # decompress.c:500:42
	movzbl	3724(%r15,%rcx), %ecx
	#DEBUG_VALUE: kk <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
.Ltmp2680:
	#DEBUG_VALUE: jj <- -1
	.loc	12 500 40               # decompress.c:500:40
	movb	%cl, 7804(%r15,%rsi,4)
.Ltmp2681:
	.loc	12 503 40 is_stmt 1     # decompress.c:503:40
	movl	%edx, 7880(%r15,%rsi)
.Ltmp2682:
	#DEBUG_VALUE: ii <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	12 498 54               # decompress.c:498:54
	addq	$-4, %rsi
	addl	$-16, %edx
	cmpq	$-64, %rsi
.Ltmp2683:
	.loc	12 498 22 is_stmt 0     # decompress.c:498:22
	jne	.LBB14_758
	jmp	.LBB14_763
.Ltmp2684:
.LBB14_759:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 22                 # decompress.c:0:22
	movq	%r12, %r9
.Ltmp2685:
	.loc	12 475 52 is_stmt 1     # decompress.c:475:52
	cmpl	$3, %r10d
	jb	.LBB14_762
.Ltmp2686:
.LBB14_760:                             # %while.body2245.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	leal	-3(%r14), %r13d
	leal	-4(%r14), %edi
	leal	-2(%r14), %ebp
	.loc	12 475 56 is_stmt 0     # decompress.c:475:56
	leal	-1(%r11), %r10d
	xorl	%r8d, %r8d
.Ltmp2687:
.LBB14_761:                             # %while.body2245.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: nn <- undef
	leal	(%r11,%r14), %r12d
	.loc	12 475 41               # decompress.c:475:41
	leal	(%r10,%r14), %esi
	movzbl	3724(%r15,%rsi), %ebx
.Ltmp2688:
	#DEBUG_VALUE: nn <- [DW_OP_plus_uconst 4294967295, DW_OP_stack_value] undef
	.loc	12 475 39               # decompress.c:475:39
	movb	%bl, 3724(%r15,%r12)
	.loc	12 475 41               # decompress.c:475:41
	leal	(%r11,%rbp), %ebx
	movzbl	3724(%r15,%rbx), %edx
.Ltmp2689:
	#DEBUG_VALUE: nn <- [DW_OP_plus_uconst 4294967294, DW_OP_stack_value] undef
	.loc	12 475 39               # decompress.c:475:39
	movb	%dl, 3724(%r15,%rsi)
	.loc	12 475 41               # decompress.c:475:41
	leal	(%r11,%r13), %edx
	movzbl	3724(%r15,%rdx), %ecx
.Ltmp2690:
	#DEBUG_VALUE: nn <- [DW_OP_plus_uconst 4294967293, DW_OP_stack_value] undef
	.loc	12 475 39               # decompress.c:475:39
	movb	%cl, 3724(%r15,%rbx)
	.loc	12 475 41               # decompress.c:475:41
	leal	(%r11,%rdi), %ecx
	movzbl	3724(%r15,%rcx), %ecx
	.loc	12 475 39               # decompress.c:475:39
	movb	%cl, 3724(%r15,%rdx)
.Ltmp2691:
	.loc	12 474 29 is_stmt 1     # decompress.c:474:29
	addl	$4, %r8d
	addl	$-4, %r13d
	addl	$-4, %edi
	addl	$-4, %ebp
	addl	$-4, %r14d
.Ltmp2692:
	cmpl	%r8d, %r11d
	.loc	12 474 19 is_stmt 0     # decompress.c:474:19
	jne	.LBB14_761
.Ltmp2693:
.LBB14_762:                             # %while.end2256.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 19                 # decompress.c:0:19
	movb	71(%rsp), %r11b         # 1-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	.loc	12 477 31 is_stmt 1     # decompress.c:477:31
	movb	%r11b, 3724(%r15,%rcx)
	movq	%r9, %r12
	movq	176(%rsp), %r13         # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r14         # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %rbx          # 8-byte Reload
	movq	48(%rsp), %rdi          # 8-byte Reload
.Ltmp2694:
.LBB14_763:                             # %if.end2356.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	.loc	12 510 24               # decompress.c:510:24
	movzbl	%r11b, %ecx
	movzbl	3468(%r15,%rcx), %edx
	.loc	12 510 42 is_stmt 0     # decompress.c:510:42
	addl	$1, 68(%r15,%rdx,4)
.Ltmp2695:
	.loc	12 511 17 is_stmt 1     # decompress.c:511:17
	cmpb	$0, 44(%r15)
	.loc	12 0 0 is_stmt 0        # decompress.c:0:0
	movzbl	3468(%r15,%rcx), %ecx
.Ltmp2696:
	.loc	12 511 17               # decompress.c:511:17
	je	.LBB14_765
.Ltmp2697:
# %bb.764:                              # %if.then2366.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 512 19 is_stmt 1     # decompress.c:512:19
	movq	3160(%r15), %rdx
	.loc	12 512 16 is_stmt 0     # decompress.c:512:16
	movslq	%edi, %rsi
	.loc	12 512 32               # decompress.c:512:32
	movw	%cx, (%rdx,%rsi,2)
	jmp	.LBB14_766
.Ltmp2698:
.LBB14_765:                             # %if.else2374.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 513 34 is_stmt 1     # decompress.c:513:34
	movzwl	%cx, %ecx
	.loc	12 513 19 is_stmt 0     # decompress.c:513:19
	movq	3152(%r15), %rdx
	.loc	12 513 16               # decompress.c:513:16
	movslq	%edi, %rsi
	.loc	12 513 32               # decompress.c:513:32
	movl	%ecx, (%rdx,%rsi,4)
.Ltmp2699:
.LBB14_766:                             # %if.end2382.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- $r11b
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 32                 # decompress.c:0:32
	movl	12(%rsp), %r11d         # 4-byte Reload
.Ltmp2700:
	.loc	12 514 19 is_stmt 1     # decompress.c:514:19
	addl	$1, %edi
.Ltmp2701:
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	.loc	12 0 19 is_stmt 0       # decompress.c:0:19
	movl	80(%rsp), %ecx          # 4-byte Reload
.Ltmp2702:
	.loc	12 516 13 is_stmt 1     # decompress.c:516:13
	testl	%ecx, %ecx
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	%rdi, 48(%rsp)          # 8-byte Spill
.Ltmp2703:
	.loc	12 516 13 is_stmt 0     # decompress.c:516:13
	jne	.LBB14_769
.Ltmp2704:
# %bb.767:                              # %if.then2386.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13                 # decompress.c:0:13
	movq	128(%rsp), %rcx         # 8-byte Reload
.Ltmp2705:
	.loc	12 516 13               # decompress.c:516:13
	movslq	%ecx, %rcx
	addq	$1, %rcx
.Ltmp2706:
	#DEBUG_VALUE: BZ2_decompress:groupNo <- $ecx
	.loc	12 0 13                 # decompress.c:0:13
	movl	$0, 80(%rsp)            # 4-byte Folded Spill
.Ltmp2707:
	.loc	12 516 13               # decompress.c:516:13
	cmpl	56(%rsp), %ecx          # 4-byte Folded Reload
	movq	%rcx, 128(%rsp)         # 8-byte Spill
.Ltmp2708:
	.loc	12 516 13               # decompress.c:516:13
	jge	.LBB14_828
.Ltmp2709:
# %bb.768:                              # %if.end2391.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:groupNo <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupPos <- 50
	movzbl	7884(%r15,%rcx), %ecx
.Ltmp2710:
	#DEBUG_VALUE: BZ2_decompress:gSel <- $ecx
	movl	64012(%r15,%rcx,4), %eax
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	movl	%eax, 64(%rsp)          # 4-byte Spill
	movq	%rcx, %rax
	shlq	$10, %rax
	movq	%rcx, 200(%rsp)         # 8-byte Spill
.Ltmp2711:
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	leaq	(%rax,%rcx,8), %rax
	leaq	(%r15,%rax), %rcx
	addq	$45436, %rcx            # imm = 0xB17C
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leaq	57820(%r15,%rax), %rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	addq	%r15, %rax
	addq	$51628, %rax            # imm = 0xC9AC
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movl	$50, %ecx
.Ltmp2712:
.LBB14_769:                             # %if.end2411.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 516 13               # decompress.c:516:13
	addl	$-1, %ecx
.Ltmp2713:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	.loc	12 0 13                 # decompress.c:0:13
	movl	%ecx, 80(%rsp)          # 4-byte Spill
.Ltmp2714:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	movl	64(%rsp), %eax          # 4-byte Reload
	movl	%eax, 16(%rsp)          # 4-byte Spill
.Ltmp2715:
.LBB14_770:                             # %sw.bb2413.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 516 13               # decompress.c:516:13
	movl	$40, (%r12)
.Ltmp2716:
	.loc	12 516 13               # decompress.c:516:13
	movl	(%r9), %edx
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
.Ltmp2717:
	.loc	12 516 13               # decompress.c:516:13
	jge	.LBB14_776
.Ltmp2718:
# %bb.771:                              # %if.end2431.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
.Ltmp2719:
	.loc	12 516 13               # decompress.c:516:13
	addl	$-1, %esi
.Ltmp2720:
.LBB14_772:                             # %if.end2431.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	cmpl	$-1, %esi
.Ltmp2721:
	.loc	12 516 13               # decompress.c:516:13
	je	.LBB14_26
.Ltmp2722:
# %bb.773:                              # %if.end2437.i
                                        #   in Loop: Header=BB14_772 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_775
.Ltmp2723:
# %bb.774:                              # %if.then2460.i
                                        #   in Loop: Header=BB14_772 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	addl	$1, 16(%rcx)
.Ltmp2724:
.LBB14_775:                             # %if.end2464.i
                                        #   in Loop: Header=BB14_772 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	addl	$-1, %esi
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
	jl	.LBB14_772
	jmp	.LBB14_777
.Ltmp2725:
.LBB14_776:                             # %sw.bb2413.if.then2420_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 516 13               # decompress.c:516:13
	movl	(%r14), %eax
.Ltmp2726:
.LBB14_777:                             # %if.then2420.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13                 # decompress.c:0:13
	movl	16(%rsp), %ebp          # 4-byte Reload
	.loc	12 516 13               # decompress.c:516:13
	subl	%ebp, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	movl	$-1, %esi
	movl	%ebp, %ecx
	shll	%cl, %esi
	movq	%rsi, %rcx
	notl	%ecx
	andl	%eax, %ecx
.Ltmp2727:
	#DEBUG_VALUE: v <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	movl	%edx, (%r9)
.Ltmp2728:
.LBB14_778:                             # %while.cond2466.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 0 13                 # decompress.c:0:13
	movl	$-4, %eax
.Ltmp2729:
	.loc	12 516 13               # decompress.c:516:13
	cmpl	$20, %ebp
.Ltmp2730:
	.loc	12 516 13               # decompress.c:516:13
	jg	.LBB14_684
.Ltmp2731:
# %bb.779:                              # %if.end2471.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13                 # decompress.c:0:13
	movq	%rcx, %rdi
.Ltmp2732:
	.loc	12 516 13               # decompress.c:516:13
	movslq	%ebp, %rcx
.Ltmp2733:
	.loc	12 0 13                 # decompress.c:0:13
	movq	160(%rsp), %rsi         # 8-byte Reload
	.loc	12 516 13               # decompress.c:516:13
	cmpl	(%rsi,%rcx,4), %edi
	movq	%rdi, 112(%rsp)         # 8-byte Spill
.Ltmp2734:
	.loc	12 516 13               # decompress.c:516:13
	jle	.LBB14_685
.Ltmp2735:
# %bb.780:                              # %if.end2477.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addl	$1, %ebp
.Ltmp2736:
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	.loc	12 0 13                 # decompress.c:0:13
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2737:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	jmp	.LBB14_523
.Ltmp2738:
.LBB14_782:                             # %do.body.i149.i.preheader
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	xorl	%eax, %eax
	movl	$256, %edx              # imm = 0x100
.Ltmp2739:
.LBB14_783:                             # %do.body.i149.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	.loc	5 749 17 is_stmt 1      # bzlib.c:749:17
	leal	(%rax,%rdx), %esi
	.loc	5 749 23 is_stmt 0      # bzlib.c:749:23
	sarl	%esi
.Ltmp2740:
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	.loc	5 750 19 is_stmt 1      # bzlib.c:750:19
	movslq	%esi, %rdi
	movq	(%rsp), %rbp            # 8-byte Reload
	.loc	5 750 16 is_stmt 0      # bzlib.c:750:16
	cmpl	%ebp, 1096(%r15,%rdi,4)
	jg	.LBB14_785
.Ltmp2741:
# %bb.784:                              # %do.body.i149.i
                                        #   in Loop: Header=BB14_783 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 16                  # bzlib.c:0:16
	movl	%esi, %eax
.Ltmp2742:
	jmp	.LBB14_786
.Ltmp2743:
.LBB14_785:                             #   in Loop: Header=BB14_783 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%esi, %edx
.Ltmp2744:
.LBB14_786:                             # %do.body.i149.i
                                        #   in Loop: Header=BB14_783 Depth=2
	#DEBUG_VALUE: BZ2_indexIntoF:mid <- $esi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_indexIntoF:na <- $edx
	#DEBUG_VALUE: BZ2_indexIntoF:nb <- $eax
	.loc	5 752 14 is_stmt 1      # bzlib.c:752:14
	movl	%edx, %esi
.Ltmp2745:
	subl	%eax, %esi
	.loc	5 752 19 is_stmt 0      # bzlib.c:752:19
	cmpl	$1, %esi
.Ltmp2746:
	.loc	5 751 4 is_stmt 1       # bzlib.c:751:4
	jne	.LBB14_783
.Ltmp2747:
# %bb.787:                              # %BZ2_indexIntoF.exit150.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 574 13               # decompress.c:574:13
	movl	%eax, 64(%r15)
	movl	(%rsp), %eax            # 4-byte Reload
	movq	3160(%r15), %rdx
	movq	3168(%r15), %rsi
	movzwl	(%rdx,%rax,2), %edx
	shrq	%rax
	movzbl	(%rsi,%rax), %eax
                                        # kill: def $cl killed $cl killed $ecx
	shrl	%cl, %eax
	andl	$15, %eax
	shll	$16, %eax
	orl	%edx, %eax
	movl	%eax, 60(%r15)
	.loc	12 574 48 is_stmt 0     # decompress.c:574:48
	movl	$1, 1092(%r15)
	xorl	%eax, %eax
	jmp	.LBB14_707
.Ltmp2748:
.LBB14_788:                             # %vector.ph5740.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 475 52 is_stmt 1     # decompress.c:475:52
	movl	%r11d, %ecx
	andl	$15, %ecx
	subq	%rcx, %r10
	leal	(%r11,%r14), %edx
	movq	%r10, %rdi
.Ltmp2749:
.LBB14_789:                             # %vector.body5713.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 475 41 is_stmt 0     # decompress.c:475:41
	leal	-1(%rdx), %ebx
	movdqu	3709(%r15,%rbx), %xmm0
	.loc	12 475 22               # decompress.c:475:22
	movl	%edx, %ebx
	.loc	12 475 39               # decompress.c:475:39
	movdqu	%xmm0, 3709(%r15,%rbx)
	addl	$-16, %edx
	addq	$-16, %rdi
	jne	.LBB14_789
.Ltmp2750:
# %bb.790:                              # %middle.block5714.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 39                 # decompress.c:0:39
	testl	%ecx, %ecx
	pxor	%xmm8, %xmm8
	.loc	12 475 52               # decompress.c:475:52
	je	.LBB14_762
.Ltmp2751:
# %bb.791:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:uc <- [DW_OP_plus_uconst 71] [$rsp+0]
	#DEBUG_VALUE: pp <- $r14d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 52                 # decompress.c:0:52
	subq	%r10, %r11
	movq	%r9, %r12
	jmp	.LBB14_717
.Ltmp2752:
.LBB14_792:                             # %if.then2615.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 542 30 is_stmt 1     # decompress.c:542:30
	movq	stderr(%rip), %rcx
	movl	$.L.str.1.68, %edi
	movl	$6, %esi
	movl	$1, %edx
	movq	%r9, %rbx
.Ltmp2753:
	.loc	12 0 30 is_stmt 0       # decompress.c:0:30
	movq	%r10, 96(%rsp)          # 8-byte Spill
	movq	%r8, %rbp
	.loc	12 542 30               # decompress.c:542:30
	callq	fwrite
.Ltmp2754:
	.loc	12 0 30                 # decompress.c:0:30
	movq	%rbp, %r8
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %r10          # 8-byte Reload
	movdqa	.LCPI14_11(%rip), %xmm7 # xmm7 = [2,2,2,2]
	movdqa	.LCPI14_9(%rip), %xmm6  # xmm6 = [32,32,32,32]
	movdqa	.LCPI14_8(%rip), %xmm5  # xmm5 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
	movdqa	.LCPI14_7(%rip), %xmm4  # xmm4 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI14_6(%rip), %xmm15 # xmm15 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI14_5(%rip), %xmm14 # xmm14 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI14_4(%rip), %xmm13 # xmm13 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI14_3(%rip), %xmm12 # xmm12 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI14_2(%rip), %xmm11 # xmm11 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI14_1(%rip), %xmm10 # xmm10 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI14_0(%rip), %xmm9  # xmm9 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	pxor	%xmm8, %xmm8
	movq	%rbx, %r9
.Ltmp2755:
	#DEBUG_VALUE: BZ2_decompress:i <- 0
	.loc	12 544 11 is_stmt 1     # decompress.c:544:11
	cmpb	$0, 44(%r15)
.Ltmp2756:
	.loc	12 544 11 is_stmt 0     # decompress.c:544:11
	jne	.LBB14_726
.Ltmp2757:
.LBB14_793:                             # %for.cond2851.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 11                 # decompress.c:0:11
	movq	%r8, 72(%rsp)           # 8-byte Spill
.Ltmp2758:
	movq	3152(%r15), %rax
.Ltmp2759:
	.loc	12 580 24 is_stmt 1     # decompress.c:580:24
	testl	%edi, %edi
.Ltmp2760:
	.loc	12 580 10 is_stmt 0     # decompress.c:580:10
	jle	.LBB14_796
.Ltmp2761:
# %bb.794:                              # %for.body2854.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	movl	%edi, %esi
	.loc	12 580 10               # decompress.c:580:10
	movl	%esi, %r8d
	andl	$1, %r8d
	cmpl	$1, %edi
	jne	.LBB14_797
.Ltmp2762:
# %bb.795:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 10                 # decompress.c:0:10
	xorl	%edx, %edx
	jmp	.LBB14_799
.Ltmp2763:
.LBB14_796:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	xorl	%ecx, %ecx
	movq	%rcx, (%rsp)            # 8-byte Spill
	jmp	.LBB14_801
.Ltmp2764:
.LBB14_797:                             # %for.body2854.lr.ph.new.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 580 10               # decompress.c:580:10
	subq	%r8, %rsi
	movl	$256, %edi              # imm = 0x100
	xorl	%edx, %edx
.Ltmp2765:
.LBB14_798:                             # %for.body2854.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	.loc	12 581 26 is_stmt 1     # decompress.c:581:26
	movzbl	(%rax,%rdx,4), %ebp
	.loc	12 582 19               # decompress.c:582:19
	leal	-256(%rdi), %ebx
	movslq	1096(%r15,%rbp,4), %rcx
	.loc	12 582 33 is_stmt 0     # decompress.c:582:33
	orl	%ebx, (%rax,%rcx,4)
	.loc	12 583 25 is_stmt 1     # decompress.c:583:25
	addl	$1, 1096(%r15,%rbp,4)
.Ltmp2766:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 581 26               # decompress.c:581:26
	movzbl	4(%rax,%rdx,4), %ecx
	.loc	12 582 19               # decompress.c:582:19
	movslq	1096(%r15,%rcx,4), %rbp
	.loc	12 582 33 is_stmt 0     # decompress.c:582:33
	orl	%edi, (%rax,%rbp,4)
	.loc	12 583 25 is_stmt 1     # decompress.c:583:25
	addl	$1, 1096(%r15,%rcx,4)
.Ltmp2767:
	.loc	12 580 35               # decompress.c:580:35
	addq	$2, %rdx
.Ltmp2768:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	12 580 10 is_stmt 0     # decompress.c:580:10
	addl	$512, %edi              # imm = 0x200
	cmpq	%rdx, %rsi
	jne	.LBB14_798
.Ltmp2769:
.LBB14_799:                             # %for.end2874.loopexit.unr-lcssa.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	.loc	12 0 10                 # decompress.c:0:10
	movq	48(%rsp), %rdi          # 8-byte Reload
	movl	%edi, %ecx
	movq	%rcx, (%rsp)            # 8-byte Spill
.Ltmp2770:
	.loc	12 580 10               # decompress.c:580:10
	testq	%r8, %r8
	je	.LBB14_801
.Ltmp2771:
# %bb.800:                              # %for.body2854.epil.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:i <- $rdx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 581 26 is_stmt 1     # decompress.c:581:26
	movzbl	(%rax,%rdx,4), %ecx
	.loc	12 582 39               # decompress.c:582:39
	shll	$8, %edx
.Ltmp2772:
	.loc	12 582 19 is_stmt 0     # decompress.c:582:19
	movslq	1096(%r15,%rcx,4), %rsi
	.loc	12 582 33               # decompress.c:582:33
	orl	%edx, (%rax,%rsi,4)
	.loc	12 583 25 is_stmt 1     # decompress.c:583:25
	addl	$1, 1096(%r15,%rcx,4)
.Ltmp2773:
	#DEBUG_VALUE: BZ2_decompress:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
                                        # kill: def $edi killed $edi killed $rdi def $rdi
	.loc	12 0 25 is_stmt 0       # decompress.c:0:25
	movq	%rdi, (%rsp)            # 8-byte Spill
.Ltmp2774:
.LBB14_801:                             # %for.end2874.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 586 29 is_stmt 1     # decompress.c:586:29
	movslq	56(%r15), %rcx
	.loc	12 586 20 is_stmt 0     # decompress.c:586:20
	movl	(%rax,%rcx,4), %ecx
	.loc	12 586 38               # decompress.c:586:38
	shrq	$8, %rcx
	.loc	12 586 18               # decompress.c:586:18
	movl	%ecx, 60(%r15)
	.loc	12 587 25 is_stmt 1     # decompress.c:587:25
	movl	$0, 1092(%r15)
.Ltmp2775:
	.loc	12 588 14               # decompress.c:588:14
	cmpb	$0, 20(%r15)
.Ltmp2776:
	.loc	12 588 14 is_stmt 0     # decompress.c:588:14
	je	.LBB14_803
.Ltmp2777:
# %bb.802:                              # %if.end2917.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 589 13 is_stmt 1     # decompress.c:589:13
	movq	$0, 24(%r15)
	.loc	12 590 13               # decompress.c:590:13
	movl	(%rax,%rcx,4), %eax
	movzbl	%al, %ecx
	shrl	$8, %eax
	movl	%eax, 60(%r15)
	.loc	12 590 47 is_stmt 0     # decompress.c:590:47
	movl	$1, 1092(%r15)
	.loc	12 591 13 is_stmt 1     # decompress.c:591:13
	movabsq	$4294967914, %rax       # imm = 0x10000026A
	movq	%rax, 24(%r15)
	.loc	12 591 37 is_stmt 0     # decompress.c:591:37
	movl	%ecx, 64(%r15)
	jmp	.LBB14_804
.Ltmp2778:
.LBB14_803:                             # %if.else2926.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 593 13 is_stmt 1     # decompress.c:593:13
	movl	%ecx, %ecx
	movl	(%rax,%rcx,4), %eax
	movzbl	%al, %ecx
	movl	%ecx, 64(%r15)
	shrl	$8, %eax
	movl	%eax, 60(%r15)
	.loc	12 593 47 is_stmt 0     # decompress.c:593:47
	movl	$1, 1092(%r15)
.Ltmp2779:
.LBB14_804:                             # %BZ2_decompress.exit
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 47                 # decompress.c:0:47
	xorl	%eax, %eax
	movl	%r10d, %ecx
	movl	%r10d, 28(%rsp)         # 4-byte Spill
	movq	192(%rsp), %r14         # 8-byte Reload
	pxor	%xmm8, %xmm8
	jmp	.LBB14_511
.Ltmp2780:
.LBB14_805:                             # %do.body.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	80(%rsp), %ecx          # 4-byte Reload
.Ltmp2781:
	.loc	12 424 20 is_stmt 1     # decompress.c:424:20
	cmpl	$1, %r10d
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
.Ltmp2782:
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	.loc	12 0 20 is_stmt 0       # decompress.c:0:20
	movq	%rdi, 48(%rsp)          # 8-byte Spill
	.loc	12 424 20               # decompress.c:424:20
	je	.LBB14_808
.Ltmp2783:
# %bb.806:                              # %do.body.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	testl	%r10d, %r10d
	jne	.LBB14_809
.Ltmp2784:
# %bb.807:                              # %if.then1956.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 424 48               # decompress.c:424:48
	addl	%r8d, %eax
.Ltmp2785:
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	.loc	12 0 48                 # decompress.c:0:48
	jmp	.LBB14_809
.Ltmp2786:
.LBB14_808:                             # %if.then1962.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 425 48 is_stmt 1     # decompress.c:425:48
	leal	(%rax,%r8,2), %eax
.Ltmp2787:
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
.LBB14_809:                             # %if.end1966.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	.loc	12 426 22               # decompress.c:426:22
	addl	%r8d, %r8d
.Ltmp2788:
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	.loc	12 427 16               # decompress.c:427:16
	testl	%ecx, %ecx
	movq	%rax, 104(%rsp)         # 8-byte Spill
.Ltmp2789:
	.loc	12 427 16 is_stmt 0     # decompress.c:427:16
	jne	.LBB14_812
.Ltmp2790:
# %bb.810:                              # %if.then1970.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16                 # decompress.c:0:16
	movq	128(%rsp), %rax         # 8-byte Reload
.Ltmp2791:
	.loc	12 427 16               # decompress.c:427:16
	cltq
	addq	$1, %rax
.Ltmp2792:
	#DEBUG_VALUE: BZ2_decompress:groupNo <- $eax
	.loc	12 427 16               # decompress.c:427:16
	cmpl	56(%rsp), %eax          # 4-byte Folded Reload
	movq	%rax, 128(%rsp)         # 8-byte Spill
.Ltmp2793:
	.loc	12 427 16               # decompress.c:427:16
	jge	.LBB14_827
.Ltmp2794:
# %bb.811:                              # %if.end1975.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:groupNo <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupPos <- 50
	movzbl	7884(%r15,%rax), %ecx
.Ltmp2795:
	#DEBUG_VALUE: BZ2_decompress:gSel <- $ecx
	movl	64012(%r15,%rcx,4), %eax
.Ltmp2796:
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	.loc	12 0 16                 # decompress.c:0:16
	movl	%eax, 64(%rsp)          # 4-byte Spill
	.loc	12 427 16               # decompress.c:427:16
	movq	%rcx, %rax
	shlq	$10, %rax
	movq	%rcx, 200(%rsp)         # 8-byte Spill
.Ltmp2797:
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	leaq	(%rax,%rcx,8), %rax
	leaq	(%r15,%rax), %rcx
	addq	$45436, %rcx            # imm = 0xB17C
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leaq	57820(%r15,%rax), %rcx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	addq	%r15, %rax
	addq	$51628, %rax            # imm = 0xC9AC
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movl	$50, %ecx
.Ltmp2798:
.LBB14_812:                             # %if.end1995.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 427 16               # decompress.c:427:16
	addl	$-1, %ecx
.Ltmp2799:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	.loc	12 0 16                 # decompress.c:0:16
	movl	%ecx, 80(%rsp)          # 4-byte Spill
.Ltmp2800:
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	movl	64(%rsp), %eax          # 4-byte Reload
	movl	%eax, 16(%rsp)          # 4-byte Spill
.Ltmp2801:
.LBB14_813:                             # %sw.bb1997.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 427 16               # decompress.c:427:16
	movl	$38, (%r12)
.Ltmp2802:
	.loc	12 427 16               # decompress.c:427:16
	movl	(%r9), %edx
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
.Ltmp2803:
	.loc	12 427 16               # decompress.c:427:16
	jge	.LBB14_818
.Ltmp2804:
.LBB14_814:                             # %if.end2015.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	movq	(%r15), %rcx
	movl	8(%rcx), %esi
	testl	%esi, %esi
.Ltmp2805:
	.loc	12 427 16               # decompress.c:427:16
	je	.LBB14_26
.Ltmp2806:
# %bb.815:                              # %if.end2021.i
                                        #   in Loop: Header=BB14_814 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	(%r14), %edi
	shll	$8, %edi
	movq	(%rcx), %rbp
	movzbl	(%rbp), %eax
	orl	%edi, %eax
	movl	%eax, (%r14)
	addl	$8, %edx
	movl	%edx, (%r9)
	addq	$1, %rbp
	movq	%rbp, (%rcx)
	addl	$-1, %esi
	movl	%esi, 8(%rcx)
	addl	$1, 12(%rcx)
	jne	.LBB14_817
.Ltmp2807:
# %bb.816:                              # %if.then2044.i
                                        #   in Loop: Header=BB14_814 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	addl	$1, 16(%rcx)
.Ltmp2808:
.LBB14_817:                             # %if.end2048.i
                                        #   in Loop: Header=BB14_814 Depth=2
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	cmpl	16(%rsp), %edx          # 4-byte Folded Reload
	jl	.LBB14_814
	jmp	.LBB14_819
.Ltmp2809:
.LBB14_26:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16                 # decompress.c:0:16
	xorl	%eax, %eax
.Ltmp2810:
.LBB14_828:                             # %BZ2_decompress.exit
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:retVal <- $eax
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: r <- $eax
	movq	(%rsp), %rcx            # 8-byte Reload
	.loc	12 635 24 is_stmt 1     # decompress.c:635:24
	movl	%ecx, 64036(%r15)
	movl	24(%rsp), %ecx          # 4-byte Reload
	.loc	12 636 24               # decompress.c:636:24
	movl	%ecx, 64040(%r15)
	movl	136(%rsp), %ecx         # 4-byte Reload
	.loc	12 637 24               # decompress.c:637:24
	movl	%ecx, 64044(%r15)
	movl	92(%rsp), %ecx          # 4-byte Reload
	.loc	12 638 24               # decompress.c:638:24
	movl	%ecx, 64048(%r15)
	.loc	12 639 24               # decompress.c:639:24
	movl	%ebx, 64052(%r15)
	movl	56(%rsp), %ecx          # 4-byte Reload
	.loc	12 640 24               # decompress.c:640:24
	movl	%ecx, 64056(%r15)
	movl	28(%rsp), %ecx          # 4-byte Reload
	.loc	12 641 24               # decompress.c:641:24
	movl	%ecx, 64060(%r15)
	movq	128(%rsp), %rcx         # 8-byte Reload
	.loc	12 642 24               # decompress.c:642:24
	movl	%ecx, 64064(%r15)
	movl	80(%rsp), %ecx          # 4-byte Reload
	.loc	12 643 24               # decompress.c:643:24
	movl	%ecx, 64068(%r15)
	.loc	12 644 24               # decompress.c:644:24
	movl	%r10d, 64072(%r15)
	.loc	12 645 24               # decompress.c:645:24
	movl	%r11d, 64076(%r15)
	movq	48(%rsp), %rcx          # 8-byte Reload
	.loc	12 646 24               # decompress.c:646:24
	movl	%ecx, 64080(%r15)
	movq	104(%rsp), %rcx         # 8-byte Reload
	.loc	12 647 24               # decompress.c:647:24
	movl	%ecx, 64084(%r15)
	.loc	12 648 24               # decompress.c:648:24
	movl	%r8d, 64088(%r15)
	movq	168(%rsp), %rcx         # 8-byte Reload
	.loc	12 649 24               # decompress.c:649:24
	movl	%ecx, 64092(%r15)
	movl	212(%rsp), %ecx         # 4-byte Reload
	.loc	12 650 24               # decompress.c:650:24
	movl	%ecx, 64096(%r15)
	movl	16(%rsp), %ecx          # 4-byte Reload
	.loc	12 651 24               # decompress.c:651:24
	movl	%ecx, 64100(%r15)
	movq	112(%rsp), %rcx         # 8-byte Reload
	.loc	12 652 24               # decompress.c:652:24
	movl	%ecx, 64104(%r15)
	movl	124(%rsp), %ecx         # 4-byte Reload
	.loc	12 653 24               # decompress.c:653:24
	movl	%ecx, 64108(%r15)
	movq	200(%rsp), %rcx         # 8-byte Reload
	.loc	12 654 24               # decompress.c:654:24
	movl	%ecx, 64112(%r15)
	movl	64(%rsp), %ecx          # 4-byte Reload
	.loc	12 655 24               # decompress.c:655:24
	movl	%ecx, 64116(%r15)
	movq	160(%rsp), %rcx         # 8-byte Reload
	.loc	12 656 24               # decompress.c:656:24
	movq	%rcx, 64120(%r15)
	movq	152(%rsp), %rcx         # 8-byte Reload
	.loc	12 657 24               # decompress.c:657:24
	movq	%rcx, 64128(%r15)
	movq	144(%rsp), %rcx         # 8-byte Reload
	.loc	12 658 24               # decompress.c:658:24
	movq	%rcx, 64136(%r15)
.Ltmp2811:
	.loc	5 899 16                # bzlib.c:899:16
	cmpl	$4, %eax
.Ltmp2812:
	.loc	5 899 14 is_stmt 0      # bzlib.c:899:14
	je	.LBB14_844
.Ltmp2813:
# %bb.829:                              # %cleanup
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: r <- $eax
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 14                  # bzlib.c:0:14
	movl	$2, %ecx
.Ltmp2814:
	.loc	5 907 23 is_stmt 1      # bzlib.c:907:23
	cmpl	$2, (%r12)
	je	.LBB14_4
	jmp	.LBB14_843
.Ltmp2815:
.LBB14_818:                             # %sw.bb1997.if.then2004_crit_edge.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 427 16               # decompress.c:427:16
	movl	(%r14), %eax
.Ltmp2816:
.LBB14_819:                             # %if.then2004.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16 is_stmt 0       # decompress.c:0:16
	movl	16(%rsp), %ebp          # 4-byte Reload
	.loc	12 427 16               # decompress.c:427:16
	subl	%ebp, %edx
	movl	%edx, %ecx
	shrl	%cl, %eax
	movl	$-1, %esi
	movl	%ebp, %ecx
	shll	%cl, %esi
	movq	%rsi, %rcx
	notl	%ecx
	andl	%eax, %ecx
.Ltmp2817:
	#DEBUG_VALUE: v <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	movl	%edx, (%r9)
.Ltmp2818:
.LBB14_820:                             # %while.cond2050.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	12 0 16                 # decompress.c:0:16
	movl	$-4, %eax
.Ltmp2819:
	.loc	12 427 16               # decompress.c:427:16
	cmpl	$20, %ebp
.Ltmp2820:
	.loc	12 427 16               # decompress.c:427:16
	jg	.LBB14_684
.Ltmp2821:
# %bb.821:                              # %if.end2055.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:zvec <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16                 # decompress.c:0:16
	movq	%rcx, %rdi
.Ltmp2822:
	.loc	12 427 16               # decompress.c:427:16
	movslq	%ebp, %rcx
.Ltmp2823:
	.loc	12 0 16                 # decompress.c:0:16
	movq	160(%rsp), %rsi         # 8-byte Reload
	.loc	12 427 16               # decompress.c:427:16
	cmpl	(%rsi,%rcx,4), %edi
	movq	%rdi, 112(%rsp)         # 8-byte Spill
.Ltmp2824:
	.loc	12 427 16               # decompress.c:427:16
	jle	.LBB14_824
.Ltmp2825:
# %bb.822:                              # %if.end2061.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	addl	$1, %ebp
.Ltmp2826:
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	.loc	12 0 16                 # decompress.c:0:16
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2827:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	jmp	.LBB14_515
.Ltmp2828:
.LBB14_824:                             # %while.end2116.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:zn <- $ebp
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ebp, 16(%rsp)          # 4-byte Spill
.Ltmp2829:
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	movq	152(%rsp), %rdx         # 8-byte Reload
.Ltmp2830:
	.loc	12 427 16               # decompress.c:427:16
	movslq	(%rdx,%rcx,4), %rdx
.Ltmp2831:
	.loc	12 427 16               # decompress.c:427:16
	movslq	%edi, %rcx
.Ltmp2832:
	.loc	12 427 16               # decompress.c:427:16
	subq	%rdx, %rcx
	cmpl	$257, %ecx              # imm = 0x101
	ja	.LBB14_828
.Ltmp2833:
# %bb.825:                              # %if.end2129.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16                 # decompress.c:0:16
	movq	144(%rsp), %rdx         # 8-byte Reload
	.loc	12 427 16               # decompress.c:427:16
	movl	(%rdx,%rcx,4), %r10d
.Ltmp2834:
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	.loc	12 429 42 is_stmt 1     # decompress.c:429:42
	cmpl	$2, %r10d
.Ltmp2835:
	.loc	12 428 13               # decompress.c:428:13
	jae	.LBB14_830
.Ltmp2836:
# %bb.826:                              #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 13 is_stmt 0       # decompress.c:0:13
	movq	104(%rsp), %rax         # 8-byte Reload
	movq	48(%rsp), %rdi          # 8-byte Reload
	jmp	.LBB14_805
.Ltmp2837:
.LBB14_827:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:groupNo <- $eax
	#DEBUG_VALUE: BZ2_decompress:groupPos <- $ecx
	#DEBUG_VALUE: BZ2_decompress:nblock <- $edi
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zvec <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	$-4, %eax
.Ltmp2838:
	movl	$0, 80(%rsp)            # 4-byte Folded Spill
	jmp	.LBB14_828
.Ltmp2839:
.LBB14_830:                             # %do.end.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:es <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	104(%rsp), %rsi         # 8-byte Reload
	.loc	12 431 15 is_stmt 1     # decompress.c:431:15
	leal	1(%rsi), %ecx
.Ltmp2840:
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	.loc	12 432 41               # decompress.c:432:41
	movslq	7820(%r15), %rdx
	.loc	12 432 33 is_stmt 0     # decompress.c:432:33
	movzbl	3724(%r15,%rdx), %edx
	.loc	12 432 18               # decompress.c:432:18
	movzbl	3468(%r15,%rdx), %edx
.Ltmp2841:
	#DEBUG_VALUE: BZ2_decompress:uc <- undef
	.loc	12 433 28 is_stmt 1     # decompress.c:433:28
	addl	%ecx, 68(%r15,%rdx,4)
.Ltmp2842:
	.loc	12 435 17               # decompress.c:435:17
	cmpb	$0, 44(%r15)
	movq	48(%rsp), %rbp          # 8-byte Reload
.Ltmp2843:
	.loc	12 435 17 is_stmt 0     # decompress.c:435:17
	je	.LBB14_835
.Ltmp2844:
# %bb.831:                              # %while.cond2154.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	testl	%esi, %esi
	.loc	12 436 16 is_stmt 1     # decompress.c:436:16
	js	.LBB14_840
.Ltmp2845:
# %bb.832:                              # %while.body2157.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movslq	%ebp, %rbp
	movslq	%r11d, %rsi
.Ltmp2846:
.LBB14_833:                             # %while.body2157.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:nblock <- $rbp
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	.loc	12 437 30               # decompress.c:437:30
	cmpq	%rsi, %rbp
.Ltmp2847:
	.loc	12 437 23 is_stmt 0     # decompress.c:437:23
	jge	.LBB14_841
.Ltmp2848:
# %bb.834:                              # %if.end2161.i
                                        #   in Loop: Header=BB14_833 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nblock <- $rbp
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 438 22 is_stmt 1     # decompress.c:438:22
	movq	3160(%r15), %rdi
	.loc	12 438 35 is_stmt 0     # decompress.c:438:35
	movw	%dx, (%rdi,%rbp,2)
	.loc	12 439 25 is_stmt 1     # decompress.c:439:25
	addq	$1, %rbp
.Ltmp2849:
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	.loc	12 436 26               # decompress.c:436:26
	addl	$-1, %ecx
.Ltmp2850:
	.loc	12 436 16 is_stmt 0     # decompress.c:436:16
	jg	.LBB14_833
	jmp	.LBB14_839
.Ltmp2851:
.LBB14_835:                             # %while.cond2170.preheader.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 0                  # decompress.c:0:0
	testl	%esi, %esi
	.loc	12 443 16 is_stmt 1     # decompress.c:443:16
	js	.LBB14_840
.Ltmp2852:
# %bb.836:                              # %while.body2173.lr.ph.i
                                        #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 0 16 is_stmt 0       # decompress.c:0:16
	movzwl	%dx, %edx
	.loc	12 443 16               # decompress.c:443:16
	movslq	%ebp, %rbp
	movslq	%r11d, %rsi
.Ltmp2853:
.LBB14_837:                             # %while.body2173.i
                                        #   Parent Loop BB14_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_decompress:nblock <- $rbp
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	.loc	12 444 30 is_stmt 1     # decompress.c:444:30
	cmpq	%rsi, %rbp
.Ltmp2854:
	.loc	12 444 23 is_stmt 0     # decompress.c:444:23
	jge	.LBB14_841
.Ltmp2855:
# %bb.838:                              # %if.end2177.i
                                        #   in Loop: Header=BB14_837 Depth=2
	#DEBUG_VALUE: BZ2_decompress:nblock <- $rbp
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 445 22 is_stmt 1     # decompress.c:445:22
	movq	3152(%r15), %rdi
	.loc	12 445 33 is_stmt 0     # decompress.c:445:33
	movl	%edx, (%rdi,%rbp,4)
	.loc	12 446 25 is_stmt 1     # decompress.c:446:25
	addq	$1, %rbp
.Ltmp2856:
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	.loc	12 443 26               # decompress.c:443:26
	addl	$-1, %ecx
.Ltmp2857:
	.loc	12 0 26 is_stmt 0       # decompress.c:0:26
	jg	.LBB14_837
.Ltmp2858:
.LBB14_839:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%rbp, 48(%rsp)          # 8-byte Spill
.Ltmp2859:
.LBB14_840:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movl	%ecx, %eax
	movq	%rax, 104(%rsp)         # 8-byte Spill
	jmp	.LBB14_687
.Ltmp2860:
.LBB14_841:                             #   in Loop: Header=BB14_4 Depth=1
	#DEBUG_VALUE: BZ2_decompress:nblock <- $rbp
	#DEBUG_VALUE: BZ2_decompress:es <- $ecx
	#DEBUG_VALUE: BZ2_decompress:gPerm <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gBase <- [DW_OP_plus_uconst 152] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gLimit <- [DW_OP_plus_uconst 160] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gMinlen <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:gSel <- [DW_OP_plus_uconst 200] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zj <- [DW_OP_plus_uconst 124] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:zn <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:curr <- [DW_OP_plus_uconst 168] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:N <- $r8d
	#DEBUG_VALUE: BZ2_decompress:nblockMAX <- $r11d
	#DEBUG_VALUE: BZ2_decompress:nextSym <- $r10d
	#DEBUG_VALUE: BZ2_decompress:groupPos <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:groupNo <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:EOB <- [DW_OP_plus_uconst 28] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nSelectors <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:nGroups <- $ebx
	#DEBUG_VALUE: BZ2_decompress:alphaSize <- [DW_OP_plus_uconst 92] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:t <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:j <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: BZ2_decompress:i <- [$rsp+0]
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	movq	%rbp, 48(%rsp)          # 8-byte Spill
.Ltmp2861:
	#DEBUG_VALUE: BZ2_decompress:nblock <- [DW_OP_plus_uconst 48] [$rsp+0]
                                        # kill: def $ecx killed $ecx def $rcx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	jmp	.LBB14_828
.Ltmp2862:
.LBB14_842:                             # %cleanup71.loopexit51
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	#DEBUG_VALUE: BZ2_bzDecompress:strm <- $rdi
	movl	$-1, %eax
.Ltmp2863:
.LBB14_843:                             # %cleanup71
	.loc	5 914 1 is_stmt 1       # bzlib.c:914:1
	addq	$280, %rsp              # imm = 0x118
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB14_846:
	.cfi_def_cfa_offset 336
.Ltmp2864:
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 0 1 is_stmt 0         # bzlib.c:0:1
	movl	$-4, %eax
	jmp	.LBB14_843
.Ltmp2865:
.LBB14_844:                             # %if.then53
	#DEBUG_VALUE: r <- $eax
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 900 30 is_stmt 1      # bzlib.c:900:30
	cmpl	$3, 52(%r15)
.Ltmp2866:
	.loc	5 900 17 is_stmt 0      # bzlib.c:900:17
	jge	.LBB14_851
.Ltmp2867:
.LBB14_845:                             # %cleanup.thread
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 903 20 is_stmt 1      # bzlib.c:903:20
	movl	3188(%r15), %eax
	.loc	5 903 42 is_stmt 0      # bzlib.c:903:42
	xorl	%ecx, %ecx
	cmpl	3180(%r15), %eax
	sete	%cl
.Ltmp2868:
	.loc	5 0 0                   # bzlib.c:0:0
	leal	-4(,%rcx,8), %eax
	jmp	.LBB14_843
.Ltmp2869:
.LBB14_851:                             # %if.then56
	#DEBUG_VALUE: r <- $eax
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	5 901 16 is_stmt 1      # bzlib.c:901:16
	movq	stderr(%rip), %rdi
	movl	3180(%r15), %edx
	movl	3188(%r15), %ecx
	movl	$.L.str.4.36, %esi
	xorl	%eax, %eax
.Ltmp2870:
	callq	fprintf
	jmp	.LBB14_845
.Ltmp2871:
.LBB14_852:                             # %sw.default.i
	#DEBUG_VALUE: BZ2_bzDecompress:s <- $r15
	.loc	12 628 16               # decompress.c:628:16
	movl	$4001, %edi             # imm = 0xFA1
	callq	BZ2_bz__AssertH__fail
.Ltmp2872:
.Lfunc_end14:
	.size	BZ2_bzDecompress, .Lfunc_end14-BZ2_bzDecompress
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI14_0:
	.quad	.LBB14_9
	.quad	.LBB14_192
	.quad	.LBB14_206
	.quad	.LBB14_203
	.quad	.LBB14_286
	.quad	.LBB14_227
	.quad	.LBB14_197
	.quad	.LBB14_228
	.quad	.LBB14_229
	.quad	.LBB14_237
	.quad	.LBB14_339
	.quad	.LBB14_230
	.quad	.LBB14_231
	.quad	.LBB14_238
	.quad	.LBB14_239
	.quad	.LBB14_232
	.quad	.LBB14_233
	.quad	.LBB14_240
	.quad	.LBB14_533
	.quad	.LBB14_565
	.quad	.LBB14_553
	.quad	.LBB14_198
	.quad	.LBB14_255
	.quad	.LBB14_579
	.quad	.LBB14_654
	.quad	.LBB14_241
	.quad	.LBB14_640
	.quad	.LBB14_242
	.quad	.LBB14_813
	.quad	.LBB14_234
	.quad	.LBB14_770
	.quad	.LBB14_235
	.quad	.LBB14_236
	.quad	.LBB14_204
	.quad	.LBB14_201
	.quad	.LBB14_195
	.quad	.LBB14_202
	.quad	.LBB14_196
	.quad	.LBB14_243
	.quad	.LBB14_244
	.quad	.LBB14_205
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function handle_compress
	.type	handle_compress,@function
handle_compress:                        # @handle_compress
.Lfunc_begin15:
	.loc	5 419 0                 # bzlib.c:419:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: handle_compress:strm <- $rdi
.Ltmp2873:
	#DEBUG_VALUE: handle_compress:progress_in <- 0
	#DEBUG_VALUE: handle_compress:progress_out <- 0
	.loc	5 422 22 prologue_end   # bzlib.c:422:22
	movq	48(%rdi), %rbx
.Ltmp2874:
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: copy_output_until_stop:s <- $rbx
	#DEBUG_VALUE: isempty_RL:s <- $rbx
	#DEBUG_VALUE: prepare_new_block:s <- $rbx
	#DEBUG_VALUE: isempty_RL:s <- $rbx
	#DEBUG_VALUE: copy_input_until_stop:s <- $rbx
	#DEBUG_VALUE: flush_RL:s <- $rbx
	#DEBUG_VALUE: init_RL:s <- $rbx
	.loc	5 0 22 is_stmt 0        # bzlib.c:0:22
	movq	%rbx, %r15
	subq	$-128, %r15
	xorl	%r12d, %r12d
	xorl	%r14d, %r14d
	jmp	.LBB15_2
.Ltmp2875:
	.p2align	4, 0x90
.LBB15_1:                               # %while.cond.outer
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	callq	BZ2_compressBlock
	movl	$1, 12(%rbx)
	movl	%r13d, %r12d
	jmp	.LBB15_2
.Ltmp2876:
	.p2align	4, 0x90
.LBB15_69:                              # %if.then55
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 448 13 is_stmt 1      # bzlib.c:448:13
	movq	%rbx, %rdi
	xorl	%esi, %esi
	jmp	.LBB15_1
.Ltmp2877:
	.p2align	4, 0x90
.LBB15_2:                               # %while.cond.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_3 Depth 2
                                        #     Child Loop BB15_8 Depth 2
                                        #     Child Loop BB15_48 Depth 2
                                        #     Child Loop BB15_30 Depth 2
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	.loc	5 0 13 is_stmt 0        # bzlib.c:0:13
	movl	12(%rbx), %eax
.Ltmp2878:
	.p2align	4, 0x90
.LBB15_3:                               # %while.cond
                                        #   Parent Loop BB15_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 426 11 is_stmt 1      # bzlib.c:426:11
	cmpl	$2, %eax
	je	.LBB15_12
.Ltmp2879:
# %bb.4:                                # %while.cond
                                        #   in Loop: Header=BB15_3 Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	cmpl	$1, %eax
	jne	.LBB15_3
.Ltmp2880:
# %bb.5:                                # %if.then
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 0
	.loc	5 398 14                # bzlib.c:398:14
	movq	(%rbx), %rcx
	.loc	5 398 30 is_stmt 0      # bzlib.c:398:30
	cmpl	$0, 32(%rcx)
.Ltmp2881:
	.loc	5 0 0                   # bzlib.c:0:0
	movl	120(%rbx), %eax
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 0
.Ltmp2882:
	.loc	5 398 11                # bzlib.c:398:11
	je	.LBB15_14
.Ltmp2883:
# %bb.6:                                # %if.end.lr.ph.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 0
	.loc	5 401 28 is_stmt 1      # bzlib.c:401:28
	cmpl	116(%rbx), %eax
.Ltmp2884:
	.loc	5 401 11 is_stmt 0      # bzlib.c:401:11
	jge	.LBB15_14
.Ltmp2885:
# %bb.7:                                # %if.end3.i.preheader
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 404 18 is_stmt 1      # bzlib.c:404:18
	movq	24(%rcx), %rcx
.Ltmp2886:
	.p2align	4, 0x90
.LBB15_8:                               # %if.end3.i
                                        #   Parent Loop BB15_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 1
	.loc	5 404 33 is_stmt 0      # bzlib.c:404:33
	movq	80(%rbx), %rdx
	.loc	5 404 30                # bzlib.c:404:30
	cltq
	movzbl	(%rdx,%rax), %eax
	.loc	5 404 28                # bzlib.c:404:28
	movb	%al, (%rcx)
	.loc	5 405 23 is_stmt 1      # bzlib.c:405:23
	movl	120(%rbx), %eax
	addl	$1, %eax
	movl	%eax, 120(%rbx)
	.loc	5 406 10                # bzlib.c:406:10
	movq	(%rbx), %rsi
	.loc	5 406 25 is_stmt 0      # bzlib.c:406:25
	movl	32(%rsi), %edx
	addl	$-1, %edx
	movl	%edx, 32(%rsi)
	.loc	5 407 24 is_stmt 1      # bzlib.c:407:24
	movq	24(%rsi), %rcx
	addq	$1, %rcx
	movq	%rcx, 24(%rsi)
	.loc	5 408 30                # bzlib.c:408:30
	addl	$1, 36(%rsi)
	.loc	5 409 11                # bzlib.c:409:11
	jne	.LBB15_10
.Ltmp2887:
# %bb.9:                                # %if.then16.i
                                        #   in Loop: Header=BB15_8 Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 409 64 is_stmt 0      # bzlib.c:409:64
	addl	$1, 40(%rsi)
.Ltmp2888:
.LBB15_10:                              # %if.end19.i
                                        #   in Loop: Header=BB15_8 Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 1
	.loc	5 0 64                  # bzlib.c:0:64
	movb	$1, %r13b
.Ltmp2889:
	.loc	5 398 30 is_stmt 1      # bzlib.c:398:30
	testl	%edx, %edx
.Ltmp2890:
	.loc	5 398 11 is_stmt 0      # bzlib.c:398:11
	je	.LBB15_15
.Ltmp2891:
# %bb.11:                               # %if.end.i
                                        #   in Loop: Header=BB15_8 Depth=2
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- 1
	.loc	5 401 28 is_stmt 1      # bzlib.c:401:28
	cmpl	116(%rbx), %eax
	jl	.LBB15_8
	jmp	.LBB15_15
.Ltmp2892:
	.p2align	4, 0x90
.LBB15_12:                              # %if.end30.if.then34_crit_edge.loopexit
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 350 11                # bzlib.c:350:11
	movl	8(%rbx), %edx
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movl	108(%rbx), %r8d
	jmp	.LBB15_26
.Ltmp2893:
	.p2align	4, 0x90
.LBB15_14:                              #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	xorl	%r13d, %r13d
.Ltmp2894:
.LBB15_15:                              # %copy_output_until_stop.exit
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r12b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_output_until_stop:progress_out <- $r13b
	.loc	5 427 23 is_stmt 1      # bzlib.c:427:23
	orb	%r12b, %r13b
.Ltmp2895:
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	.loc	5 428 31                # bzlib.c:428:31
	cmpl	116(%rbx), %eax
.Ltmp2896:
	.loc	5 428 14 is_stmt 0      # bzlib.c:428:14
	jl	.LBB15_73
.Ltmp2897:
# %bb.16:                               # %if.end
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 429 17 is_stmt 1      # bzlib.c:429:17
	movl	8(%rbx), %edx
	.loc	5 429 22 is_stmt 0      # bzlib.c:429:22
	cmpl	$4, %edx
	.loc	5 429 40                # bzlib.c:429:40
	jne	.LBB15_20
.Ltmp2898:
# %bb.17:                               # %land.lhs.true
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 430 33 is_stmt 1      # bzlib.c:430:33
	cmpl	$0, 16(%rbx)
	.loc	5 430 38 is_stmt 0      # bzlib.c:430:38
	jne	.LBB15_20
.Ltmp2899:
# %bb.18:                               # %land.lhs.true11
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 198 23 is_stmt 1      # bzlib.c:198:23
	cmpl	$255, 92(%rbx)
	.loc	5 198 29 is_stmt 0      # bzlib.c:198:29
	ja	.LBB15_73
.Ltmp2900:
# %bb.19:                               # %land.lhs.true.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 198 48                # bzlib.c:198:48
	cmpl	$0, 96(%rbx)
.Ltmp2901:
	.loc	5 198 8                 # bzlib.c:198:8
	jle	.LBB15_73
.Ltmp2902:
	.p2align	4, 0x90
.LBB15_20:                              # %if.end15
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 177 14 is_stmt 1      # bzlib.c:177:14
	movl	$0, 108(%rbx)
	.loc	5 178 12                # bzlib.c:178:12
	movq	$0, 116(%rbx)
.Ltmp2903:
	.loc	5 180 4                 # bzlib.c:180:4
	movl	$-1, 648(%rbx)
.Ltmp2904:
	#DEBUG_VALUE: prepare_new_block:i <- 0
	.loc	5 0 4 is_stmt 0         # bzlib.c:0:4
	xorps	%xmm0, %xmm0
.Ltmp2905:
	.loc	5 181 42 is_stmt 1      # bzlib.c:181:42
	movups	%xmm0, 240(%r15)
	movups	%xmm0, 224(%r15)
	movups	%xmm0, 208(%r15)
	movups	%xmm0, 192(%r15)
	movups	%xmm0, 176(%r15)
	movups	%xmm0, 160(%r15)
	movups	%xmm0, 144(%r15)
	movups	%xmm0, 128(%r15)
	movups	%xmm0, 112(%r15)
	movups	%xmm0, 96(%r15)
	movups	%xmm0, 80(%r15)
	movups	%xmm0, 64(%r15)
	movups	%xmm0, 48(%r15)
	movups	%xmm0, 32(%r15)
	movups	%xmm0, 16(%r15)
	movups	%xmm0, (%r15)
.Ltmp2906:
	#DEBUG_VALUE: prepare_new_block:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: prepare_new_block:i <- undef
	.loc	5 182 14                # bzlib.c:182:14
	addl	$1, 660(%rbx)
.Ltmp2907:
	.loc	5 433 19                # bzlib.c:433:19
	movl	$2, 12(%rbx)
	xorl	%r8d, %r8d
.Ltmp2908:
	.loc	5 434 22                # bzlib.c:434:22
	cmpl	$3, %edx
	.loc	5 434 39 is_stmt 0      # bzlib.c:434:39
	jne	.LBB15_25
.Ltmp2909:
# %bb.21:                               # %land.lhs.true20
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 435 33 is_stmt 1      # bzlib.c:435:33
	cmpl	$0, 16(%rbx)
	.loc	5 435 38 is_stmt 0      # bzlib.c:435:38
	jne	.LBB15_24
.Ltmp2910:
# %bb.22:                               # %land.lhs.true24
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 198 23 is_stmt 1      # bzlib.c:198:23
	cmpl	$255, 92(%rbx)
	.loc	5 198 29 is_stmt 0      # bzlib.c:198:29
	ja	.LBB15_73
.Ltmp2911:
# %bb.23:                               # %land.lhs.true.i125
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 198 48                # bzlib.c:198:48
	cmpl	$0, 96(%rbx)
.Ltmp2912:
	.loc	5 198 8                 # bzlib.c:198:8
	jle	.LBB15_73
.Ltmp2913:
.LBB15_24:                              # %if.then34.thread
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 0
	.loc	5 0 0                   # bzlib.c:0:0
	movl	112(%rbx), %ecx
	xorl	%r8d, %r8d
.Ltmp2914:
	.loc	5 348 9 is_stmt 1       # bzlib.c:348:9
	movl	$0, %edx
.Ltmp2915:
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	testl	%ecx, %ecx
.Ltmp2916:
	.loc	5 371 14 is_stmt 1      # bzlib.c:371:14
	jg	.LBB15_45
	jmp	.LBB15_65
.Ltmp2917:
	.p2align	4, 0x90
.LBB15_25:                              #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 0 14 is_stmt 0        # bzlib.c:0:14
	movl	%r13d, %r12d
.Ltmp2918:
.LBB15_26:                              # %if.then34
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 0
	movl	112(%rbx), %ecx
	.loc	5 350 16 is_stmt 1      # bzlib.c:350:16
	cmpl	$2, %edx
.Ltmp2919:
	.loc	5 350 8 is_stmt 0       # bzlib.c:350:8
	jne	.LBB15_43
.Ltmp2920:
# %bb.27:                               # %while.cond.preheader.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 0 0                   # bzlib.c:0:0
	cmpl	%ecx, %r8d
.Ltmp2921:
	.loc	5 355 14 is_stmt 1      # bzlib.c:355:14
	jge	.LBB15_61
.Ltmp2922:
# %bb.28:                               # %if.end.lr.ph.i108
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 357 17                # bzlib.c:357:17
	movq	(%rbx), %rax
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 0
	.loc	5 357 32 is_stmt 0      # bzlib.c:357:32
	cmpl	$0, 8(%rax)
.Ltmp2923:
	.loc	5 357 14                # bzlib.c:357:14
	je	.LBB15_61
.Ltmp2924:
# %bb.29:                               # %if.end5.i.preheader
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 359 10 is_stmt 1      # bzlib.c:359:10
	movq	(%rax), %rdi
.Ltmp2925:
	.loc	5 359 10 is_stmt 0      # bzlib.c:359:10
	movl	92(%rbx), %esi
.Ltmp2926:
	.p2align	4, 0x90
.LBB15_30:                              # %if.end5.i
                                        #   Parent Loop BB15_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 1
	.loc	5 359 10                # bzlib.c:359:10
	movzbl	(%rdi), %ebp
.Ltmp2927:
	#DEBUG_VALUE: zchh <- $ebp
	.loc	5 0 0                   # bzlib.c:0:0
	movl	96(%rbx), %eax
	.loc	5 359 10                # bzlib.c:359:10
	cmpl	%ebp, %esi
	jne	.LBB15_33
.Ltmp2928:
# %bb.31:                               # %lor.lhs.false.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	cmpl	$255, %eax
.Ltmp2929:
	.loc	5 359 10                # bzlib.c:359:10
	je	.LBB15_35
.Ltmp2930:
# %bb.32:                               # %if.else40.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	addl	$1, %eax
	movl	%eax, 96(%rbx)
	jmp	.LBB15_38
.Ltmp2931:
	.p2align	4, 0x90
.LBB15_33:                              # %land.lhs.true.i110
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	cmpl	$1, %eax
.Ltmp2932:
	.loc	5 359 10                # bzlib.c:359:10
	jne	.LBB15_35
.Ltmp2933:
# %bb.34:                               # %if.then11.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: ch <- $sil
	.loc	5 359 10                # bzlib.c:359:10
	movl	648(%rbx), %eax
	movl	%eax, %ecx
	shll	$8, %ecx
	shrl	$24, %eax
	movzbl	%sil, %edx
	xorl	%edx, %eax
	xorl	BZ2_crc32Table(,%rax,4), %ecx
	movl	%ecx, 648(%rbx)
.Ltmp2934:
	.loc	5 359 10                # bzlib.c:359:10
	movl	%esi, %eax
	movb	$1, 128(%rbx,%rax)
	movq	64(%rbx), %rax
	movslq	%r8d, %rcx
	movb	%dl, (%rax,%rcx)
	addl	$1, 108(%rbx)
	movl	%ebp, 92(%rbx)
	jmp	.LBB15_38
.Ltmp2935:
	.p2align	4, 0x90
.LBB15_35:                              # %if.then32.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	cmpl	$255, %esi
.Ltmp2936:
	.loc	5 359 10                # bzlib.c:359:10
	ja	.LBB15_37
.Ltmp2937:
# %bb.36:                               # %if.then36.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	movq	%rbx, %rdi
	callq	add_pair_to_block
.Ltmp2938:
.LBB15_37:                              # %if.end37.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10                # bzlib.c:359:10
	movl	%ebp, 92(%rbx)
	movl	$1, 96(%rbx)
.Ltmp2939:
.LBB15_38:                              # %if.end44.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 360 13 is_stmt 1      # bzlib.c:360:13
	movq	(%rbx), %rcx
	.loc	5 360 26 is_stmt 0      # bzlib.c:360:26
	movq	(%rcx), %rdi
	addq	$1, %rdi
	movq	%rdi, (%rcx)
	.loc	5 361 27 is_stmt 1      # bzlib.c:361:27
	movl	8(%rcx), %eax
	addl	$-1, %eax
	movl	%eax, 8(%rcx)
	.loc	5 362 32                # bzlib.c:362:32
	addl	$1, 12(%rcx)
	.loc	5 363 14                # bzlib.c:363:14
	jne	.LBB15_40
.Ltmp2940:
# %bb.39:                               # %if.then55.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 363 65 is_stmt 0      # bzlib.c:363:65
	addl	$1, 16(%rcx)
.Ltmp2941:
.LBB15_40:                              # %if.end58.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 1
	.loc	5 355 17 is_stmt 1      # bzlib.c:355:17
	movl	108(%rbx), %r8d
	.loc	5 355 30 is_stmt 0      # bzlib.c:355:30
	movl	112(%rbx), %ecx
	movb	$1, %dl
	.loc	5 355 24                # bzlib.c:355:24
	cmpl	%ecx, %r8d
.Ltmp2942:
	.loc	5 355 14                # bzlib.c:355:14
	jge	.LBB15_64
.Ltmp2943:
# %bb.41:                               # %if.end58.i
                                        #   in Loop: Header=BB15_30 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 359 10 is_stmt 1      # bzlib.c:359:10
	movl	%ebp, %esi
.Ltmp2944:
	.loc	5 355 14                # bzlib.c:355:14
	testl	%eax, %eax
	jne	.LBB15_30
	jmp	.LBB15_64
.Ltmp2945:
	.p2align	4, 0x90
.LBB15_43:                              # %while.cond60.preheader.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	cmpl	%ecx, %r8d
.Ltmp2946:
	.loc	5 371 14 is_stmt 1      # bzlib.c:371:14
	jge	.LBB15_61
.Ltmp2947:
# %bb.44:                               #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 0 14 is_stmt 0        # bzlib.c:0:14
	movl	%r12d, %r13d
.Ltmp2948:
.LBB15_45:                              # %if.end67.lr.ph.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 373 17 is_stmt 1      # bzlib.c:373:17
	movq	(%rbx), %rax
.Ltmp2949:
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 0
	.loc	5 373 32 is_stmt 0      # bzlib.c:373:32
	cmpl	$0, 8(%rax)
.Ltmp2950:
	.loc	5 373 14                # bzlib.c:373:14
	je	.LBB15_63
.Ltmp2951:
# %bb.46:                               # %if.end73.i.preheader
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 0
	.loc	5 375 33 is_stmt 1      # bzlib.c:375:33
	cmpl	$0, 16(%rbx)
.Ltmp2952:
	.loc	5 375 14 is_stmt 0      # bzlib.c:375:14
	je	.LBB15_63
.Ltmp2953:
# %bb.47:                               # %if.end77.i.preheader
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10 is_stmt 1      # bzlib.c:377:10
	movq	(%rax), %rsi
.Ltmp2954:
	.p2align	4, 0x90
.LBB15_48:                              # %if.end77.i
                                        #   Parent Loop BB15_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 1
	movzbl	(%rsi), %ebp
.Ltmp2955:
	#DEBUG_VALUE: zchh <- $ebp
	.loc	5 377 10 is_stmt 0      # bzlib.c:377:10
	movl	92(%rbx), %ecx
	.loc	5 0 0                   # bzlib.c:0:0
	movl	96(%rbx), %eax
	.loc	5 377 10                # bzlib.c:377:10
	cmpl	%ebp, %ecx
	jne	.LBB15_51
.Ltmp2956:
# %bb.49:                               # %lor.lhs.false118.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10                # bzlib.c:377:10
	cmpl	$255, %eax
.Ltmp2957:
	.loc	5 377 10                # bzlib.c:377:10
	je	.LBB15_53
.Ltmp2958:
# %bb.50:                               # %if.else130.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10                # bzlib.c:377:10
	addl	$1, %eax
	movl	%eax, 96(%rbx)
	jmp	.LBB15_56
.Ltmp2959:
	.p2align	4, 0x90
.LBB15_51:                              # %land.lhs.true85.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10                # bzlib.c:377:10
	cmpl	$1, %eax
.Ltmp2960:
	.loc	5 377 10                # bzlib.c:377:10
	jne	.LBB15_53
.Ltmp2961:
# %bb.52:                               # %if.then89.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	#DEBUG_VALUE: ch <- $cl
	.loc	5 377 10                # bzlib.c:377:10
	movl	648(%rbx), %eax
	movl	%eax, %edx
	shll	$8, %edx
	shrl	$24, %eax
	movzbl	%cl, %esi
	xorl	%eax, %esi
	xorl	BZ2_crc32Table(,%rsi,4), %edx
	movl	%edx, 648(%rbx)
.Ltmp2962:
	.loc	5 377 10                # bzlib.c:377:10
	movb	$1, 128(%rbx,%rcx)
	movq	64(%rbx), %rax
	movslq	%r8d, %rdx
	movb	%cl, (%rax,%rdx)
	addl	$1, 108(%rbx)
	movl	%ebp, 92(%rbx)
	jmp	.LBB15_56
.Ltmp2963:
	.p2align	4, 0x90
.LBB15_53:                              # %if.then122.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10                # bzlib.c:377:10
	cmpl	$255, %ecx
.Ltmp2964:
	.loc	5 377 10                # bzlib.c:377:10
	ja	.LBB15_55
.Ltmp2965:
# %bb.54:                               # %if.then126.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 377 10                # bzlib.c:377:10
	movq	%rbx, %rdi
.Ltmp2966:
	callq	add_pair_to_block
.Ltmp2967:
.LBB15_55:                              # %if.end127.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: zchh <- $ebp
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 377 10                # bzlib.c:377:10
	movl	%ebp, 92(%rbx)
	movl	$1, 96(%rbx)
.Ltmp2968:
.LBB15_56:                              # %if.end134.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 378 13 is_stmt 1      # bzlib.c:378:13
	movq	(%rbx), %rax
	.loc	5 378 26 is_stmt 0      # bzlib.c:378:26
	movq	(%rax), %rsi
	addq	$1, %rsi
	movq	%rsi, (%rax)
	.loc	5 379 27 is_stmt 1      # bzlib.c:379:27
	movl	8(%rax), %edi
	addl	$-1, %edi
	movl	%edi, 8(%rax)
	.loc	5 380 32                # bzlib.c:380:32
	addl	$1, 12(%rax)
	.loc	5 381 14                # bzlib.c:381:14
	jne	.LBB15_58
.Ltmp2969:
# %bb.57:                               # %if.then148.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 381 65 is_stmt 0      # bzlib.c:381:65
	addl	$1, 16(%rax)
.Ltmp2970:
.LBB15_58:                              # %if.end152.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 382 28 is_stmt 1      # bzlib.c:382:28
	movl	16(%rbx), %eax
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- 1
.Ltmp2971:
	.loc	5 371 17                # bzlib.c:371:17
	movl	108(%rbx), %r8d
.Ltmp2972:
	.loc	5 382 28                # bzlib.c:382:28
	addl	$-1, %eax
	movl	%eax, 16(%rbx)
.Ltmp2973:
	.loc	5 371 30                # bzlib.c:371:30
	movl	112(%rbx), %ecx
	movb	$1, %dl
	.loc	5 371 24 is_stmt 0      # bzlib.c:371:24
	cmpl	%ecx, %r8d
.Ltmp2974:
	.loc	5 371 14                # bzlib.c:371:14
	jge	.LBB15_65
.Ltmp2975:
# %bb.59:                               # %if.end152.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	testl	%edi, %edi
	je	.LBB15_65
.Ltmp2976:
# %bb.60:                               # %if.end152.i
                                        #   in Loop: Header=BB15_48 Depth=2
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	testl	%eax, %eax
	jne	.LBB15_48
	jmp	.LBB15_65
.Ltmp2977:
	.p2align	4, 0x90
.LBB15_61:                              #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	.loc	5 0 14                  # bzlib.c:0:14
	xorl	%edx, %edx
.Ltmp2978:
.LBB15_64:                              #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	movl	%r12d, %r13d
	jmp	.LBB15_65
.Ltmp2979:
.LBB15_63:                              #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:strm <- $rdi
	xorl	%edx, %edx
.Ltmp2980:
	.p2align	4, 0x90
.LBB15_65:                              # %copy_input_until_stop.exit
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: copy_input_until_stop:progress_in <- $dl
	.loc	5 440 22 is_stmt 1      # bzlib.c:440:22
	orb	%dl, %r14b
.Ltmp2981:
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	.loc	5 441 17                # bzlib.c:441:17
	movl	8(%rbx), %edx
.Ltmp2982:
	.loc	5 441 22 is_stmt 0      # bzlib.c:441:22
	cmpl	$2, %edx
	.loc	5 441 38                # bzlib.c:441:38
	je	.LBB15_67
.Ltmp2983:
# %bb.66:                               # %land.lhs.true43
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 441 60                # bzlib.c:441:60
	cmpl	$0, 16(%rbx)
.Ltmp2984:
	.loc	5 441 14                # bzlib.c:441:14
	je	.LBB15_70
.Ltmp2985:
.LBB15_67:                              # %if.else
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 447 24 is_stmt 1      # bzlib.c:447:24
	cmpl	%ecx, %r8d
.Ltmp2986:
	.loc	5 447 14 is_stmt 0      # bzlib.c:447:14
	jge	.LBB15_69
.Ltmp2987:
# %bb.68:                               # %if.else57
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 452 17 is_stmt 1      # bzlib.c:452:17
	movq	(%rbx), %rax
	.loc	5 452 32 is_stmt 0      # bzlib.c:452:32
	cmpl	$0, 8(%rax)
	movl	%r13d, %r12d
.Ltmp2988:
	.loc	5 452 14                # bzlib.c:452:14
	jne	.LBB15_2
	jmp	.LBB15_73
.Ltmp2989:
.LBB15_70:                              # %if.then47
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 311 23 is_stmt 1      # bzlib.c:311:23
	cmpl	$255, 92(%rbx)
.Ltmp2990:
	.loc	5 311 8 is_stmt 0       # bzlib.c:311:8
	ja	.LBB15_72
.Ltmp2991:
# %bb.71:                               # %if.then.i
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 311 30                # bzlib.c:311:30
	movq	%rbx, %rdi
	callq	add_pair_to_block
.Ltmp2992:
	.loc	5 443 46 is_stmt 1      # bzlib.c:443:46
	movl	8(%rbx), %edx
.Ltmp2993:
.LBB15_72:                              # %flush_RL.exit
                                        #   in Loop: Header=BB15_2 Depth=1
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	.loc	5 190 20                # bzlib.c:190:20
	movq	$256, 92(%rbx)          # imm = 0x100
.Ltmp2994:
	.loc	5 443 51                # bzlib.c:443:51
	xorl	%esi, %esi
	cmpl	$4, %edx
	sete	%sil
	.loc	5 443 13 is_stmt 0      # bzlib.c:443:13
	movq	%rbx, %rdi
	jmp	.LBB15_1
.Ltmp2995:
.LBB15_73:                              # %while.end
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:s <- $rbx
	#DEBUG_VALUE: handle_compress:progress_in <- $r14b
	#DEBUG_VALUE: handle_compress:progress_out <- $r13b
	.loc	5 459 23 is_stmt 1      # bzlib.c:459:23
	orb	%r14b, %r13b
.Ltmp2996:
	setne	%al
	.loc	5 459 4 is_stmt 0       # bzlib.c:459:4
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2997:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2998:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2999:
.Lfunc_end15:
	.size	handle_compress, .Lfunc_end15-handle_compress
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function add_pair_to_block
	.type	add_pair_to_block,@function
add_pair_to_block:                      # @add_pair_to_block
.Lfunc_begin16:
	.loc	5 274 0 is_stmt 1       # bzlib.c:274:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 276 26 prologue_end   # bzlib.c:276:26
	movl	92(%rdi), %r9d
.Ltmp3000:
	#DEBUG_VALUE: add_pair_to_block:i <- 0
	.loc	5 277 23                # bzlib.c:277:23
	movslq	96(%rdi), %r10
	testq	%r10, %r10
.Ltmp3001:
	.loc	5 277 4 is_stmt 0       # bzlib.c:277:4
	jle	.LBB16_6
.Ltmp3002:
# %bb.1:                                # %for.body.lr.ph
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 0 4                   # bzlib.c:0:4
	movzbl	%r9b, %esi
.Ltmp3003:
	.loc	5 278 7 is_stmt 1       # bzlib.c:278:7
	movl	648(%rdi), %edx
.Ltmp3004:
	.loc	5 277 4                 # bzlib.c:277:4
	cmpl	$1, %r10d
	je	.LBB16_5
.Ltmp3005:
# %bb.2:                                # %for.body.lr.ph.new
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 0 4 is_stmt 0         # bzlib.c:0:4
	movl	%r10d, %r8d
	andl	$1, %r8d
	.loc	5 277 4                 # bzlib.c:277:4
	movl	%r8d, %eax
	subl	%r10d, %eax
.Ltmp3006:
	.p2align	4, 0x90
.LBB16_3:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	#DEBUG_VALUE: add_pair_to_block:i <- undef
	.loc	5 278 7 is_stmt 1       # bzlib.c:278:7
	movl	%edx, %ecx
	shll	$8, %ecx
	shrl	$24, %edx
	xorl	%esi, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %ecx
.Ltmp3007:
	#DEBUG_VALUE: add_pair_to_block:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	movl	%ecx, %edx
	shll	$8, %edx
	shrl	$24, %ecx
	xorl	%esi, %ecx
.Ltmp3008:
	#DEBUG_VALUE: add_pair_to_block:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	xorl	BZ2_crc32Table(,%rcx,4), %edx
.Ltmp3009:
	.loc	5 277 4                 # bzlib.c:277:4
	addl	$2, %eax
	jne	.LBB16_3
.Ltmp3010:
# %bb.4:                                # %for.end.loopexit.unr-lcssa
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 278 7                 # bzlib.c:278:7
	movl	%edx, 648(%rdi)
.Ltmp3011:
	.loc	5 277 4                 # bzlib.c:277:4
	testl	%r8d, %r8d
	je	.LBB16_6
.Ltmp3012:
.LBB16_5:                               # %for.body.epil
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 278 7                 # bzlib.c:278:7
	movl	%edx, %eax
	shll	$8, %eax
	shrl	$24, %edx
	xorl	%esi, %edx
	xorl	BZ2_crc32Table(,%rdx,4), %eax
	movl	%eax, 648(%rdi)
.Ltmp3013:
.LBB16_6:                               # %for.end
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	.loc	5 280 29                # bzlib.c:280:29
	movb	$1, 128(%rdi,%r9)
	.loc	5 281 4                 # bzlib.c:281:4
	cmpl	$3, %r10d
	je	.LBB16_11
.Ltmp3014:
# %bb.7:                                # %for.end
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	cmpl	$2, %r10d
	je	.LBB16_10
.Ltmp3015:
# %bb.8:                                # %for.end
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	cmpl	$1, %r10d
	jne	.LBB16_12
.Ltmp3016:
# %bb.9:                                # %sw.bb
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 283 13                # bzlib.c:283:13
	leaq	64(%rdi), %rcx
	.loc	5 283 22 is_stmt 0      # bzlib.c:283:22
	movl	108(%rdi), %edx
	addq	$108, %rdi
.Ltmp3017:
	.loc	5 0 22                  # bzlib.c:0:22
	jmp	.LBB16_13
.Ltmp3018:
.LBB16_11:                              # %sw.bb27
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 290 13 is_stmt 1      # bzlib.c:290:13
	movq	64(%rdi), %rax
	.loc	5 290 22 is_stmt 0      # bzlib.c:290:22
	movslq	108(%rdi), %rcx
	.loc	5 290 30                # bzlib.c:290:30
	movb	%r9b, (%rax,%rcx)
	.loc	5 290 52                # bzlib.c:290:52
	movslq	108(%rdi), %rax
	leaq	1(%rax), %rcx
	movl	%ecx, 108(%rdi)
	.loc	5 291 13 is_stmt 1      # bzlib.c:291:13
	movq	64(%rdi), %rcx
	.loc	5 291 30 is_stmt 0      # bzlib.c:291:30
	movb	%r9b, 1(%rcx,%rax)
	.loc	5 291 52                # bzlib.c:291:52
	movl	108(%rdi), %edx
	addl	$1, %edx
	movl	%edx, 108(%rdi)
	.loc	5 290 13 is_stmt 1      # bzlib.c:290:13
	leaq	64(%rdi), %rcx
	.loc	5 290 22 is_stmt 0      # bzlib.c:290:22
	leaq	108(%rdi), %rdi
.Ltmp3019:
	.loc	5 0 22                  # bzlib.c:0:22
	jmp	.LBB16_13
.Ltmp3020:
.LBB16_10:                              # %sw.bb14
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 286 13 is_stmt 1      # bzlib.c:286:13
	leaq	64(%rdi), %rcx
	movq	64(%rdi), %rax
	.loc	5 286 22 is_stmt 0      # bzlib.c:286:22
	movslq	108(%rdi), %rdx
	.loc	5 286 30                # bzlib.c:286:30
	movb	%r9b, (%rax,%rdx)
	.loc	5 286 52                # bzlib.c:286:52
	movl	108(%rdi), %edx
	addl	$1, %edx
	movl	%edx, 108(%rdi)
	.loc	5 286 22                # bzlib.c:286:22
	leaq	108(%rdi), %rdi
.Ltmp3021:
	.loc	5 0 22                  # bzlib.c:0:22
	jmp	.LBB16_13
.Ltmp3022:
.LBB16_12:                              # %sw.default
	#DEBUG_VALUE: add_pair_to_block:ch <- $r9b
	#DEBUG_VALUE: add_pair_to_block:s <- $rdi
	.loc	5 295 38 is_stmt 1      # bzlib.c:295:38
	movb	$1, 124(%rdi,%r10)
	.loc	5 296 13                # bzlib.c:296:13
	leaq	64(%rdi), %rcx
	movq	64(%rdi), %rax
	.loc	5 296 22 is_stmt 0      # bzlib.c:296:22
	movslq	108(%rdi), %rdx
	.loc	5 296 30                # bzlib.c:296:30
	movb	%r9b, (%rax,%rdx)
	.loc	5 296 52                # bzlib.c:296:52
	movslq	108(%rdi), %rax
	leaq	1(%rax), %rdx
	movl	%edx, 108(%rdi)
	.loc	5 297 13 is_stmt 1      # bzlib.c:297:13
	movq	64(%rdi), %rdx
	.loc	5 297 30 is_stmt 0      # bzlib.c:297:30
	movb	%r9b, 1(%rdx,%rax)
	.loc	5 297 52                # bzlib.c:297:52
	movslq	108(%rdi), %rax
	leaq	1(%rax), %rdx
	movl	%edx, 108(%rdi)
	.loc	5 298 13 is_stmt 1      # bzlib.c:298:13
	movq	64(%rdi), %rdx
	.loc	5 298 30 is_stmt 0      # bzlib.c:298:30
	movb	%r9b, 1(%rdx,%rax)
	.loc	5 298 52                # bzlib.c:298:52
	movslq	108(%rdi), %rax
	leaq	1(%rax), %rdx
	movl	%edx, 108(%rdi)
	.loc	5 299 13 is_stmt 1      # bzlib.c:299:13
	movq	64(%rdi), %rdx
	.loc	5 299 30 is_stmt 0      # bzlib.c:299:30
	movb	%r9b, 1(%rdx,%rax)
	.loc	5 299 52                # bzlib.c:299:52
	movl	108(%rdi), %edx
	addl	$1, %edx
	movl	%edx, 108(%rdi)
	.loc	5 300 44 is_stmt 1      # bzlib.c:300:44
	movb	96(%rdi), %r9b
.Ltmp3023:
	.loc	5 296 22                # bzlib.c:296:22
	leaq	108(%rdi), %rdi
.Ltmp3024:
	.loc	5 300 33                # bzlib.c:300:33
	addb	$-4, %r9b
.LBB16_13:                              # %sw.epilog
	.loc	5 0 0 is_stmt 0         # bzlib.c:0:0
	movq	(%rcx), %rax
	movslq	%edx, %rcx
	movb	%r9b, (%rax,%rcx)
	addl	$1, (%rdi)
.Ltmp3025:
	.loc	5 304 1 is_stmt 1       # bzlib.c:304:1
	retq
.Ltmp3026:
.Lfunc_end16:
	.size	add_pair_to_block, .Lfunc_end16-add_pair_to_block
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function BZ2_bzReadClose
	.type	BZ2_bzReadClose,@function
BZ2_bzReadClose:                        # @BZ2_bzReadClose
.Lfunc_begin17:
	.loc	5 1216 0                # bzlib.c:1216:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rsi
.Ltmp3027:
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rsi
	movq	%rsi, %rbx
.Ltmp3028:
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4 prologue_end   # bzlib.c:1219:4
	testq	%rdi, %rdi
.Ltmp3029:
	.loc	5 1219 4 is_stmt 0      # bzlib.c:1219:4
	je	.LBB17_2
.Ltmp3030:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4                # bzlib.c:1219:4
	movl	$0, (%rdi)
.Ltmp3031:
.LBB17_2:                               # %if.end
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4                # bzlib.c:1219:4
	testq	%rbx, %rbx
.Ltmp3032:
	.loc	5 1219 4                # bzlib.c:1219:4
	je	.LBB17_3
.Ltmp3033:
# %bb.5:                                # %if.end13
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4                # bzlib.c:1219:4
	movl	$0, 5096(%rbx)
.Ltmp3034:
	.loc	5 1223 8 is_stmt 1      # bzlib.c:1223:8
	cmpb	$0, 5008(%rbx)
.Ltmp3035:
	.loc	5 1223 8 is_stmt 0      # bzlib.c:1223:8
	je	.LBB17_10
.Ltmp3036:
# %bb.6:                                # %if.then14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4 is_stmt 1      # bzlib.c:1219:4
	testq	%rdi, %rdi
.Ltmp3037:
	.loc	5 1224 9                # bzlib.c:1224:9
	je	.LBB17_8
.Ltmp3038:
# %bb.7:                                # %if.then16
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1224 9 is_stmt 0      # bzlib.c:1224:9
	movl	$-1, (%rdi)
.Ltmp3039:
.LBB17_8:                               # %if.then19
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1224 9                # bzlib.c:1224:9
	movl	$-1, 5096(%rbx)
	jmp	.LBB17_9
.Ltmp3040:
.LBB17_3:                               # %if.then5
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1219 4 is_stmt 1      # bzlib.c:1219:4
	testq	%rdi, %rdi
.Ltmp3041:
	.loc	5 1221 9                # bzlib.c:1221:9
	je	.LBB17_9
.Ltmp3042:
# %bb.4:                                # %if.then7
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1221 9 is_stmt 0      # bzlib.c:1221:9
	movl	$0, (%rdi)
.Ltmp3043:
.LBB17_9:                               # %cleanup
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1229 1 is_stmt 1      # bzlib.c:1229:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp3044:
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Ltmp3045:
.LBB17_10:                              # %if.end22
	.cfi_def_cfa_offset 32
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1226 8                # bzlib.c:1226:8
	cmpb	$0, 5100(%rbx)
.Ltmp3046:
	.loc	5 1226 8 is_stmt 0      # bzlib.c:1226:8
	je	.LBB17_20
.Ltmp3047:
# %bb.11:                               # %if.then24
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 922 14 is_stmt 1      # bzlib.c:922:14
	movq	5064(%rbx), %r14
.Ltmp3048:
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	.loc	5 923 10                # bzlib.c:923:10
	testq	%r14, %r14
.Ltmp3049:
	.loc	5 923 8 is_stmt 0       # bzlib.c:923:8
	je	.LBB17_20
.Ltmp3050:
# %bb.12:                               # %if.end3.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 1227 42 is_stmt 1     # bzlib.c:1227:42
	leaq	5016(%rbx), %rax
.Ltmp3051:
	#DEBUG_VALUE: BZ2_bzDecompressEnd:strm <- $rax
	.loc	5 924 16                # bzlib.c:924:16
	cmpq	%rax, (%r14)
.Ltmp3052:
	.loc	5 924 8 is_stmt 0       # bzlib.c:924:8
	jne	.LBB17_20
.Ltmp3053:
# %bb.13:                               # %if.end7.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:strm <- $rax
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 926 11 is_stmt 1      # bzlib.c:926:11
	movq	3152(%r14), %rsi
	.loc	5 926 16 is_stmt 0      # bzlib.c:926:16
	testq	%rsi, %rsi
.Ltmp3054:
	.loc	5 926 8                 # bzlib.c:926:8
	je	.LBB17_15
.Ltmp3055:
# %bb.14:                               # %if.then9.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:strm <- $rax
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzerror <- $rdi
	.loc	5 926 25                # bzlib.c:926:25
	movq	5088(%rbx), %rdi
.Ltmp3056:
	callq	*5080(%rbx)
.Ltmp3057:
.LBB17_15:                              # %if.end11.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 927 11 is_stmt 1      # bzlib.c:927:11
	movq	3160(%r14), %rsi
	.loc	5 927 16 is_stmt 0      # bzlib.c:927:16
	testq	%rsi, %rsi
.Ltmp3058:
	.loc	5 927 8                 # bzlib.c:927:8
	je	.LBB17_17
.Ltmp3059:
# %bb.16:                               # %if.then13.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 927 25                # bzlib.c:927:25
	movq	5088(%rbx), %rdi
	callq	*5080(%rbx)
.Ltmp3060:
.LBB17_17:                              # %if.end17.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 928 11 is_stmt 1      # bzlib.c:928:11
	movq	3168(%r14), %rsi
	.loc	5 928 16 is_stmt 0      # bzlib.c:928:16
	testq	%rsi, %rsi
.Ltmp3061:
	.loc	5 928 8                 # bzlib.c:928:8
	je	.LBB17_19
.Ltmp3062:
# %bb.18:                               # %if.then19.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 928 25                # bzlib.c:928:25
	movq	5088(%rbx), %rdi
	callq	*5080(%rbx)
.Ltmp3063:
.LBB17_19:                              # %if.end23.i
	#DEBUG_VALUE: BZ2_bzDecompressEnd:s <- $r14
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 930 4 is_stmt 1       # bzlib.c:930:4
	movq	5064(%rbx), %rsi
	movq	5088(%rbx), %rdi
	callq	*5080(%rbx)
.Ltmp3064:
.LBB17_20:                              # %if.end25
	#DEBUG_VALUE: BZ2_bzReadClose:b <- $rbx
	#DEBUG_VALUE: BZ2_bzReadClose:bzf <- $rbx
	.loc	5 1228 4                # bzlib.c:1228:4
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp3065:
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp3066:
.Lfunc_end17:
	.size	BZ2_bzReadClose, .Lfunc_end17-BZ2_bzReadClose
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function BZ2_compressBlock
.LCPI18_0:
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
.LCPI18_1:
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
.LCPI18_2:
	.long	8                       # 0x8
	.long	9                       # 0x9
	.long	10                      # 0xa
	.long	11                      # 0xb
.LCPI18_3:
	.long	12                      # 0xc
	.long	13                      # 0xd
	.long	14                      # 0xe
	.long	15                      # 0xf
.LCPI18_4:
	.long	16                      # 0x10
	.long	17                      # 0x11
	.long	18                      # 0x12
	.long	19                      # 0x13
.LCPI18_5:
	.long	20                      # 0x14
	.long	21                      # 0x15
	.long	22                      # 0x16
	.long	23                      # 0x17
.LCPI18_6:
	.long	24                      # 0x18
	.long	25                      # 0x19
	.long	26                      # 0x1a
	.long	27                      # 0x1b
.LCPI18_7:
	.long	28                      # 0x1c
	.long	29                      # 0x1d
	.long	30                      # 0x1e
	.long	31                      # 0x1f
.LCPI18_8:
	.long	32                      # 0x20
	.long	33                      # 0x21
	.long	34                      # 0x22
	.long	35                      # 0x23
.LCPI18_9:
	.long	36                      # 0x24
	.long	37                      # 0x25
	.long	38                      # 0x26
	.long	39                      # 0x27
.LCPI18_10:
	.long	40                      # 0x28
	.long	41                      # 0x29
	.long	42                      # 0x2a
	.long	43                      # 0x2b
.LCPI18_11:
	.long	44                      # 0x2c
	.long	45                      # 0x2d
	.long	46                      # 0x2e
	.long	47                      # 0x2f
.LCPI18_12:
	.long	48                      # 0x30
	.long	49                      # 0x31
	.long	50                      # 0x32
	.long	51                      # 0x33
.LCPI18_13:
	.long	52                      # 0x34
	.long	53                      # 0x35
	.long	54                      # 0x36
	.long	55                      # 0x37
.LCPI18_14:
	.long	56                      # 0x38
	.long	57                      # 0x39
	.long	58                      # 0x3a
	.long	59                      # 0x3b
.LCPI18_15:
	.long	60                      # 0x3c
	.long	61                      # 0x3d
	.long	62                      # 0x3e
	.long	63                      # 0x3f
.LCPI18_16:
	.long	64                      # 0x40
	.long	65                      # 0x41
	.long	66                      # 0x42
	.long	67                      # 0x43
.LCPI18_17:
	.long	68                      # 0x44
	.long	69                      # 0x45
	.long	70                      # 0x46
	.long	71                      # 0x47
.LCPI18_18:
	.long	72                      # 0x48
	.long	73                      # 0x49
	.long	74                      # 0x4a
	.long	75                      # 0x4b
.LCPI18_19:
	.long	76                      # 0x4c
	.long	77                      # 0x4d
	.long	78                      # 0x4e
	.long	79                      # 0x4f
.LCPI18_20:
	.long	80                      # 0x50
	.long	81                      # 0x51
	.long	82                      # 0x52
	.long	83                      # 0x53
.LCPI18_21:
	.long	84                      # 0x54
	.long	85                      # 0x55
	.long	86                      # 0x56
	.long	87                      # 0x57
.LCPI18_22:
	.long	88                      # 0x58
	.long	89                      # 0x59
	.long	90                      # 0x5a
	.long	91                      # 0x5b
.LCPI18_23:
	.long	92                      # 0x5c
	.long	93                      # 0x5d
	.long	94                      # 0x5e
	.long	95                      # 0x5f
.LCPI18_24:
	.long	96                      # 0x60
	.long	97                      # 0x61
	.long	98                      # 0x62
	.long	99                      # 0x63
.LCPI18_25:
	.long	100                     # 0x64
	.long	101                     # 0x65
	.long	102                     # 0x66
	.long	103                     # 0x67
.LCPI18_26:
	.long	104                     # 0x68
	.long	105                     # 0x69
	.long	106                     # 0x6a
	.long	107                     # 0x6b
.LCPI18_27:
	.long	108                     # 0x6c
	.long	109                     # 0x6d
	.long	110                     # 0x6e
	.long	111                     # 0x6f
.LCPI18_28:
	.long	112                     # 0x70
	.long	113                     # 0x71
	.long	114                     # 0x72
	.long	115                     # 0x73
.LCPI18_29:
	.long	116                     # 0x74
	.long	117                     # 0x75
	.long	118                     # 0x76
	.long	119                     # 0x77
.LCPI18_30:
	.long	120                     # 0x78
	.long	121                     # 0x79
	.long	122                     # 0x7a
	.long	123                     # 0x7b
.LCPI18_31:
	.long	124                     # 0x7c
	.long	125                     # 0x7d
	.long	126                     # 0x7e
	.long	127                     # 0x7f
.LCPI18_32:
	.long	128                     # 0x80
	.long	129                     # 0x81
	.long	130                     # 0x82
	.long	131                     # 0x83
.LCPI18_33:
	.long	132                     # 0x84
	.long	133                     # 0x85
	.long	134                     # 0x86
	.long	135                     # 0x87
.LCPI18_34:
	.long	136                     # 0x88
	.long	137                     # 0x89
	.long	138                     # 0x8a
	.long	139                     # 0x8b
.LCPI18_35:
	.long	140                     # 0x8c
	.long	141                     # 0x8d
	.long	142                     # 0x8e
	.long	143                     # 0x8f
.LCPI18_36:
	.long	144                     # 0x90
	.long	145                     # 0x91
	.long	146                     # 0x92
	.long	147                     # 0x93
.LCPI18_37:
	.long	148                     # 0x94
	.long	149                     # 0x95
	.long	150                     # 0x96
	.long	151                     # 0x97
.LCPI18_38:
	.long	152                     # 0x98
	.long	153                     # 0x99
	.long	154                     # 0x9a
	.long	155                     # 0x9b
.LCPI18_39:
	.long	156                     # 0x9c
	.long	157                     # 0x9d
	.long	158                     # 0x9e
	.long	159                     # 0x9f
.LCPI18_40:
	.long	160                     # 0xa0
	.long	161                     # 0xa1
	.long	162                     # 0xa2
	.long	163                     # 0xa3
.LCPI18_41:
	.long	164                     # 0xa4
	.long	165                     # 0xa5
	.long	166                     # 0xa6
	.long	167                     # 0xa7
.LCPI18_42:
	.long	168                     # 0xa8
	.long	169                     # 0xa9
	.long	170                     # 0xaa
	.long	171                     # 0xab
.LCPI18_43:
	.long	172                     # 0xac
	.long	173                     # 0xad
	.long	174                     # 0xae
	.long	175                     # 0xaf
.LCPI18_44:
	.long	176                     # 0xb0
	.long	177                     # 0xb1
	.long	178                     # 0xb2
	.long	179                     # 0xb3
.LCPI18_45:
	.long	180                     # 0xb4
	.long	181                     # 0xb5
	.long	182                     # 0xb6
	.long	183                     # 0xb7
.LCPI18_46:
	.long	184                     # 0xb8
	.long	185                     # 0xb9
	.long	186                     # 0xba
	.long	187                     # 0xbb
.LCPI18_47:
	.long	188                     # 0xbc
	.long	189                     # 0xbd
	.long	190                     # 0xbe
	.long	191                     # 0xbf
.LCPI18_48:
	.long	192                     # 0xc0
	.long	193                     # 0xc1
	.long	194                     # 0xc2
	.long	195                     # 0xc3
.LCPI18_49:
	.long	196                     # 0xc4
	.long	197                     # 0xc5
	.long	198                     # 0xc6
	.long	199                     # 0xc7
.LCPI18_50:
	.long	200                     # 0xc8
	.long	201                     # 0xc9
	.long	202                     # 0xca
	.long	203                     # 0xcb
.LCPI18_51:
	.long	204                     # 0xcc
	.long	205                     # 0xcd
	.long	206                     # 0xce
	.long	207                     # 0xcf
.LCPI18_52:
	.long	208                     # 0xd0
	.long	209                     # 0xd1
	.long	210                     # 0xd2
	.long	211                     # 0xd3
.LCPI18_53:
	.long	212                     # 0xd4
	.long	213                     # 0xd5
	.long	214                     # 0xd6
	.long	215                     # 0xd7
.LCPI18_54:
	.long	216                     # 0xd8
	.long	217                     # 0xd9
	.long	218                     # 0xda
	.long	219                     # 0xdb
.LCPI18_55:
	.long	220                     # 0xdc
	.long	221                     # 0xdd
	.long	222                     # 0xde
	.long	223                     # 0xdf
.LCPI18_56:
	.long	224                     # 0xe0
	.long	225                     # 0xe1
	.long	226                     # 0xe2
	.long	227                     # 0xe3
.LCPI18_57:
	.long	228                     # 0xe4
	.long	229                     # 0xe5
	.long	230                     # 0xe6
	.long	231                     # 0xe7
.LCPI18_58:
	.long	232                     # 0xe8
	.long	233                     # 0xe9
	.long	234                     # 0xea
	.long	235                     # 0xeb
.LCPI18_59:
	.long	236                     # 0xec
	.long	237                     # 0xed
	.long	238                     # 0xee
	.long	239                     # 0xef
.LCPI18_60:
	.long	240                     # 0xf0
	.long	241                     # 0xf1
	.long	242                     # 0xf2
	.long	243                     # 0xf3
.LCPI18_61:
	.long	244                     # 0xf4
	.long	245                     # 0xf5
	.long	246                     # 0xf6
	.long	247                     # 0xf7
.LCPI18_62:
	.long	248                     # 0xf8
	.long	249                     # 0xf9
	.long	250                     # 0xfa
	.long	251                     # 0xfb
.LCPI18_63:
	.long	252                     # 0xfc
	.long	253                     # 0xfd
	.long	254                     # 0xfe
	.long	255                     # 0xff
.LCPI18_64:
	.byte	0                       # 0x0
	.byte	1                       # 0x1
	.byte	2                       # 0x2
	.byte	3                       # 0x3
	.byte	4                       # 0x4
	.byte	5                       # 0x5
	.byte	6                       # 0x6
	.byte	7                       # 0x7
	.byte	8                       # 0x8
	.byte	9                       # 0x9
	.byte	10                      # 0xa
	.byte	11                      # 0xb
	.byte	12                      # 0xc
	.byte	13                      # 0xd
	.byte	14                      # 0xe
	.byte	15                      # 0xf
.LCPI18_65:
	.zero	16,16
.LCPI18_66:
	.zero	16,32
.LCPI18_67:
	.zero	16,48
.LCPI18_68:
	.zero	16,64
.LCPI18_69:
	.zero	16,80
.LCPI18_70:
	.zero	16,96
.LCPI18_71:
	.zero	16,112
.LCPI18_72:
	.zero	16,128
	.text
	.p2align	4, 0x90
	.type	BZ2_compressBlock,@function
BZ2_compressBlock:                      # @BZ2_compressBlock
.Lfunc_begin18:
	.file	14 "/home/readm/fast-cfi/401.bzip2/compress.c"
	.loc	14 647 0                # compress.c:647:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$4808, %rsp             # imm = 0x12C8
	.cfi_def_cfa_offset 4864
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: BZ2_compressBlock:s <- $rdi
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- $esi
.Ltmp3067:
	#DEBUG_VALUE: BZ2_blockSort:s <- $rdi
	#DEBUG_VALUE: BZ2_bsInitWrite:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: generateMTFValues:s <- $rdi
	#DEBUG_VALUE: makeMaps_e:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUChar:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsFinishWrite:s <- $rdi
	movl	%esi, 128(%rsp)         # 4-byte Spill
	movq	%rdi, %r13
.Ltmp3068:
	#DEBUG_VALUE: bsFinishWrite:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: makeMaps_e:s <- $r13
	#DEBUG_VALUE: generateMTFValues:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: bsW:s <- $r13
	#DEBUG_VALUE: bsPutUChar:s <- $r13
	#DEBUG_VALUE: BZ2_bsInitWrite:s <- $r13
	#DEBUG_VALUE: BZ2_blockSort:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	.loc	14 648 11 prologue_end  # compress.c:648:11
	movslq	108(%rdi), %r9
	testq	%r9, %r9
.Ltmp3069:
	.loc	14 648 8 is_stmt 0      # compress.c:648:8
	jle	.LBB18_178
.Ltmp3070:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 650 7 is_stmt 1      # compress.c:650:7
	movl	648(%r13), %ecx
.Ltmp3071:
	.loc	14 651 28               # compress.c:651:28
	movl	652(%r13), %r8d
.Ltmp3072:
	.loc	14 650 7                # compress.c:650:7
	notl	%ecx
	movl	%ecx, 648(%r13)
.Ltmp3073:
	.loc	14 651 46               # compress.c:651:46
	roll	%r8d
	.loc	14 652 22               # compress.c:652:22
	xorl	%ecx, %r8d
	movl	%r8d, 652(%r13)
.Ltmp3074:
	.loc	14 653 14               # compress.c:653:14
	movl	660(%r13), %edx
	.loc	14 653 22 is_stmt 0     # compress.c:653:22
	cmpl	$2, %edx
.Ltmp3075:
	.loc	14 653 11               # compress.c:653:11
	jl	.LBB18_3
.Ltmp3076:
# %bb.2:                                # %if.then7
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 653 35               # compress.c:653:35
	movl	$0, 116(%r13)
.Ltmp3077:
.LBB18_3:                               # %if.end
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 655 14 is_stmt 1     # compress.c:655:14
	movl	656(%r13), %ebp
	.loc	14 655 24 is_stmt 0     # compress.c:655:24
	cmpl	$2, %ebp
.Ltmp3078:
	.loc	14 655 11               # compress.c:655:11
	jge	.LBB18_280
.Ltmp3079:
.LBB18_4:                               # %if.end14
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:nblock <- $r9d
	#DEBUG_VALUE: mainQSort3:nblock <- $r9d
	#DEBUG_VALUE: mainSort:verb <- $ebp
	#DEBUG_VALUE: mainSort:nblock <- $r9d
	#DEBUG_VALUE: BZ2_blockSort:verb <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:nblock <- $r9d
	.loc	3 1082 24 is_stmt 1     # blocksort.c:1082:24
	movq	40(%r13), %r12
.Ltmp3080:
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: mainSort:ftab <- $r12
	.loc	3 1080 24               # blocksort.c:1080:24
	movq	56(%r13), %rax
.Ltmp3081:
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	3 0 24 is_stmt 0        # blocksort.c:0:24
	movq	%rax, 8(%rsp)           # 8-byte Spill
.Ltmp3082:
	.loc	3 1091 15 is_stmt 1     # blocksort.c:1091:15
	cmpl	$9999, %r9d             # imm = 0x270F
.Ltmp3083:
	.loc	3 1091 8 is_stmt 0      # blocksort.c:1091:8
	jg	.LBB18_6
.Ltmp3084:
# %bb.5:                                # %if.then.i
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:nblock <- $r9d
	#DEBUG_VALUE: BZ2_blockSort:verb <- $ebp
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1092 25 is_stmt 1     # blocksort.c:1092:25
	movq	24(%r13), %rdi
	.loc	3 1092 34 is_stmt 0     # blocksort.c:1092:34
	movq	32(%r13), %rsi
	.loc	3 1092 7                # blocksort.c:1092:7
	movq	%r12, %rdx
	movl	%r9d, %ecx
	movl	%ebp, %r8d
	jmp	.LBB18_171
.Ltmp3085:
.LBB18_6:                               # %if.else.i21
	#DEBUG_VALUE: mainSimpleSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:nblock <- $r9d
	#DEBUG_VALUE: BZ2_blockSort:verb <- $ebp
	#DEBUG_VALUE: mainSort:nblock <- $r9d
	#DEBUG_VALUE: mainSort:verb <- $ebp
	#DEBUG_VALUE: mainQSort3:nblock <- $r9d
	#DEBUG_VALUE: mainSimpleSort:nblock <- $r9d
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movq	64(%r13), %r14
.Ltmp3086:
	#DEBUG_VALUE: BZ2_blockSort:block <- $r14
	#DEBUG_VALUE: mainQSort3:block <- $r14
	#DEBUG_VALUE: mainSimpleSort:block <- $r14
	movl	88(%r13), %eax
.Ltmp3087:
	#DEBUG_VALUE: BZ2_blockSort:wfact <- $eax
	.loc	3 1099 17 is_stmt 1     # blocksort.c:1099:17
	leal	34(%r9), %ecx
.Ltmp3088:
	#DEBUG_VALUE: BZ2_blockSort:i <- $ecx
	.loc	3 1100 19               # blocksort.c:1100:19
	leal	35(%r9), %edx
	.loc	3 1100 13 is_stmt 0     # blocksort.c:1100:13
	testb	$1, %cl
.Ltmp3089:
	.loc	3 1100 11               # blocksort.c:1100:11
	cmovel	%ecx, %edx
.Ltmp3090:
	#DEBUG_VALUE: BZ2_blockSort:i <- $edx
	.loc	3 0 11                  # blocksort.c:0:11
	movq	%r9, %rbx
	.loc	3 1101 30 is_stmt 1     # blocksort.c:1101:30
	movslq	%edx, %r15
	.loc	3 1110 11               # blocksort.c:1110:11
	testl	%eax, %eax
	movl	$1, %ecx
	cmovgl	%eax, %ecx
.Ltmp3091:
	#DEBUG_VALUE: BZ2_blockSort:wfact <- $ecx
	.loc	3 1111 11               # blocksort.c:1111:11
	cmpl	$101, %ecx
	movl	$100, %eax
	cmovll	%ecx, %eax
.Ltmp3092:
	#DEBUG_VALUE: BZ2_blockSort:wfact <- $eax
	.loc	3 1112 36               # blocksort.c:1112:36
	addl	$-1, %eax
.Ltmp3093:
	.loc	3 1112 40 is_stmt 0     # blocksort.c:1112:40
	cltq
	imulq	$1431655766, %rax, %rcx # imm = 0x55555556
	movq	%rcx, %rax
	shrq	$63, %rax
	shrq	$32, %rcx
	addl	%eax, %ecx
	.loc	3 1112 27               # blocksort.c:1112:27
	imull	%ebx, %ecx
.Ltmp3094:
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ecx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- $ecx
	.loc	3 0 27                  # blocksort.c:0:27
	movq	%rcx, 144(%rsp)         # 8-byte Spill
.Ltmp3095:
	#DEBUG_VALUE: BZ2_blockSort:budget <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	.loc	3 1113 14 is_stmt 1     # blocksort.c:1113:14
	movl	%ecx, 28(%rsp)
.Ltmp3096:
	#DEBUG_VALUE: mainSort:budget <- undef
	#DEBUG_VALUE: BZ2_blockSort:budget <- [DW_OP_deref] undef
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movl	%ebp, 40(%rsp)          # 4-byte Spill
.Ltmp3097:
	#DEBUG_VALUE: mainSort:block <- $r14
	.loc	3 814 13 is_stmt 1      # blocksort.c:814:13
	cmpl	$4, %ebp
.Ltmp3098:
	.loc	3 814 8 is_stmt 0       # blocksort.c:814:8
	jge	.LBB18_282
.Ltmp3099:
.LBB18_7:                               # %for.body6.preheader.i.i
	#DEBUG_VALUE: mainSort:block <- $r14
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- $r14
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:verb <- $ebp
	#DEBUG_VALUE: mainSort:verb <- $ebp
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 8                   # blocksort.c:0:8
	movq	%r15, 16(%rsp)          # 8-byte Spill
	leaq	(%r14,%r15), %r15
.Ltmp3100:
	#DEBUG_VALUE: mainSort:i <- 65536
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: mainQSort3:quadrant <- $r15
	#DEBUG_VALUE: mainSimpleSort:quadrant <- $r15
	.loc	3 817 41 is_stmt 1      # blocksort.c:817:41
	movl	$262148, %edx           # imm = 0x40004
	movq	%r12, %rdi
	xorl	%esi, %esi
	callq	memset
.Ltmp3101:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSort:i <- undef
	.loc	3 819 8                 # blocksort.c:819:8
	movzbl	(%r14), %ecx
	.loc	3 819 17 is_stmt 0      # blocksort.c:819:17
	shll	$8, %ecx
.Ltmp3102:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 0 17                  # blocksort.c:0:17
	movq	%rbx, 72(%rsp)          # 8-byte Spill
	.loc	3 820 14 is_stmt 1      # blocksort.c:820:14
	leal	-1(%rbx), %eax
.Ltmp3103:
	#DEBUG_VALUE: mainSort:i <- $eax
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movq	%r14, %rbp
.Ltmp3104:
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	movl	%eax, 100(%rsp)         # 4-byte Spill
.Ltmp3105:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	.loc	3 822 7 is_stmt 1       # blocksort.c:822:7
	movslq	%eax, %r14
.Ltmp3106:
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	movq	%r14, %rax
.Ltmp3107:
	.p2align	4, 0x90
.LBB18_8:                               # %for.body6.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $ecx
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- $rax
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 822 19                # blocksort.c:822:19
	movw	$0, (%r15,%rax,2)
	.loc	3 823 14 is_stmt 1      # blocksort.c:823:14
	sarl	$8, %ecx
.Ltmp3108:
	.loc	3 823 33 is_stmt 0      # blocksort.c:823:33
	movzbl	(%rbp,%rax), %edx
	.loc	3 823 43                # blocksort.c:823:43
	shlq	$8, %rdx
	.loc	3 824 7 is_stmt 1       # blocksort.c:824:7
	movslq	%ecx, %rcx
	.loc	3 823 20                # blocksort.c:823:20
	orq	%rdx, %rcx
.Ltmp3109:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 824 14                # blocksort.c:824:14
	addl	$1, (%r12,%rcx,4)
	.loc	3 825 21                # blocksort.c:825:21
	movw	$0, -2(%r15,%rax,2)
	.loc	3 826 14                # blocksort.c:826:14
	sarl	$8, %ecx
.Ltmp3110:
	.loc	3 826 33 is_stmt 0      # blocksort.c:826:33
	movzbl	-1(%rbp,%rax), %edx
	.loc	3 826 45                # blocksort.c:826:45
	shlq	$8, %rdx
	.loc	3 827 7 is_stmt 1       # blocksort.c:827:7
	movslq	%ecx, %rcx
	.loc	3 826 20                # blocksort.c:826:20
	orq	%rdx, %rcx
.Ltmp3111:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 827 14                # blocksort.c:827:14
	addl	$1, (%r12,%rcx,4)
	.loc	3 828 21                # blocksort.c:828:21
	movw	$0, -4(%r15,%rax,2)
	.loc	3 829 14                # blocksort.c:829:14
	sarl	$8, %ecx
.Ltmp3112:
	.loc	3 829 33 is_stmt 0      # blocksort.c:829:33
	movzbl	-2(%rbp,%rax), %edx
	.loc	3 829 45                # blocksort.c:829:45
	shlq	$8, %rdx
	.loc	3 830 7 is_stmt 1       # blocksort.c:830:7
	movslq	%ecx, %rcx
	.loc	3 829 20                # blocksort.c:829:20
	orq	%rdx, %rcx
.Ltmp3113:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 830 14                # blocksort.c:830:14
	addl	$1, (%r12,%rcx,4)
	.loc	3 831 21                # blocksort.c:831:21
	movw	$0, -6(%r15,%rax,2)
	.loc	3 832 14                # blocksort.c:832:14
	sarl	$8, %ecx
.Ltmp3114:
	.loc	3 832 33 is_stmt 0      # blocksort.c:832:33
	movzbl	-3(%rbp,%rax), %edx
	.loc	3 832 45                # blocksort.c:832:45
	shlq	$8, %rdx
	.loc	3 833 7 is_stmt 1       # blocksort.c:833:7
	movslq	%ecx, %rcx
	.loc	3 832 20                # blocksort.c:832:20
	orq	%rdx, %rcx
.Ltmp3115:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 833 14                # blocksort.c:833:14
	addl	$1, (%r12,%rcx,4)
.Ltmp3116:
	.loc	3 821 21                # blocksort.c:821:21
	addq	$-4, %rax
.Ltmp3117:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 821 13 is_stmt 0      # blocksort.c:821:13
	cmpq	$2, %rax
.Ltmp3118:
	.loc	3 821 4                 # blocksort.c:821:4
	jg	.LBB18_8
.Ltmp3119:
# %bb.9:                                # %for.cond61.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	#DEBUG_VALUE: mainSort:j <- $ecx
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 835 13 is_stmt 1      # blocksort.c:835:13
	testl	%eax, %eax
.Ltmp3120:
	.loc	3 835 4 is_stmt 0       # blocksort.c:835:4
	js	.LBB18_12
.Ltmp3121:
# %bb.10:                               # %for.body64.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	#DEBUG_VALUE: mainSort:j <- $ecx
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 836 7 is_stmt 1       # blocksort.c:836:7
	cltq
	addq	$1, %rax
.Ltmp3122:
	.p2align	4, 0x90
.LBB18_11:                              # %for.body64.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	#DEBUG_VALUE: mainSort:j <- $ecx
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- undef
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 836 19 is_stmt 0      # blocksort.c:836:19
	movw	$0, -2(%r15,%rax,2)
	.loc	3 837 14 is_stmt 1      # blocksort.c:837:14
	sarl	$8, %ecx
.Ltmp3123:
	.loc	3 837 33 is_stmt 0      # blocksort.c:837:33
	movzbl	-1(%rbp,%rax), %edx
	.loc	3 837 43                # blocksort.c:837:43
	shlq	$8, %rdx
	.loc	3 838 7 is_stmt 1       # blocksort.c:838:7
	movslq	%ecx, %rcx
	.loc	3 837 20                # blocksort.c:837:20
	orq	%rdx, %rcx
.Ltmp3124:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 838 14                # blocksort.c:838:14
	addl	$1, (%r12,%rcx,4)
.Ltmp3125:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 835 13                # blocksort.c:835:13
	addq	$-1, %rax
.Ltmp3126:
	.loc	3 835 4 is_stmt 0       # blocksort.c:835:4
	jg	.LBB18_11
.Ltmp3127:
.LBB18_12:                              # %for.cond80.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- $rbp
	#DEBUG_VALUE: mainSort:j <- $ecx
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- 0
	.loc	3 0 4                   # blocksort.c:0:4
	movq	%r15, 48(%rsp)          # 8-byte Spill
.Ltmp3128:
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	.loc	3 842 4 is_stmt 1       # blocksort.c:842:4
	movslq	72(%rsp), %rcx          # 4-byte Folded Reload
.Ltmp3129:
	leaq	(%rcx,%rbp), %rax
	leaq	34(%rbp,%rcx), %rsi
	movq	16(%rsp), %r11          # 8-byte Reload
	leaq	(%r11,%rcx,2), %rdx
	leaq	(%rdx,%rbp), %rdi
	addq	%rbp, %rdx
	addq	$68, %rdx
	leaq	34(%rbp), %rbx
	cmpq	%rdx, %rax
	setb	%r8b
	cmpq	%rsi, %rdi
	setb	%r9b
	cmpq	%rbx, %rax
	setb	%r10b
	cmpq	%rsi, %rbp
	setb	%sil
	cmpq	%rbx, %rdi
	setb	%bl
	movq	%rbp, 32(%rsp)          # 8-byte Spill
.Ltmp3130:
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	cmpq	%rdx, %rbp
	setb	%dil
	xorl	%eax, %eax
	testb	%r9b, %r8b
	jne	.LBB18_16
.Ltmp3131:
# %bb.13:                               # %for.cond80.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	andb	%sil, %r10b
	movq	48(%rsp), %rdx          # 8-byte Reload
	jne	.LBB18_16
.Ltmp3132:
# %bb.14:                               # %for.cond80.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	andb	%dil, %bl
	jne	.LBB18_16
.Ltmp3133:
# %bb.15:                               # %vector.body.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 844 26                # blocksort.c:844:26
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdx,%rcx,2)
	movq	32(%rsp), %rax          # 8-byte Reload
	.loc	3 843 28                # blocksort.c:843:28
	movups	(%rax), %xmm1
	.loc	3 843 26 is_stmt 0      # blocksort.c:843:26
	movups	%xmm1, (%rax,%rcx)
	.loc	3 844 26 is_stmt 1      # blocksort.c:844:26
	movups	%xmm0, 16(%rdx,%rcx,2)
	movups	%xmm0, 32(%rdx,%rcx,2)
	.loc	3 843 28                # blocksort.c:843:28
	movups	16(%rax), %xmm1
	.loc	3 843 26 is_stmt 0      # blocksort.c:843:26
	movups	%xmm1, 16(%rax,%rcx)
	.loc	3 844 26 is_stmt 1      # blocksort.c:844:26
	movups	%xmm0, 48(%rdx,%rcx,2)
	movl	$32, %eax
.Ltmp3134:
.LBB18_16:                              # %for.body83.i.preheader.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 26 is_stmt 0        # blocksort.c:0:26
	movl	$34, %edx
	.loc	3 843 28 is_stmt 1      # blocksort.c:843:28
	subq	%rax, %rdx
	leaq	(%rax,%rcx), %rsi
	leaq	(%r11,%rsi,2), %rsi
	addq	$2, %rsi
	addq	%rax, %rcx
	addq	$1, %rcx
	addq	$1, %rax
	movq	32(%rsp), %rdi          # 8-byte Reload
.Ltmp3135:
	.p2align	4, 0x90
.LBB18_17:                              # %for.body83.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- undef
	movzbl	-1(%rdi,%rax), %ebx
	.loc	3 843 26 is_stmt 0      # blocksort.c:843:26
	movb	%bl, -1(%rdi,%rcx)
	.loc	3 844 26 is_stmt 1      # blocksort.c:844:26
	movw	$0, -2(%rdi,%rsi)
.Ltmp3136:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 843 28                # blocksort.c:843:28
	movzbl	(%rdi,%rax), %ebx
	.loc	3 843 26 is_stmt 0      # blocksort.c:843:26
	movb	%bl, (%rdi,%rcx)
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 844 26 is_stmt 1      # blocksort.c:844:26
	movw	$0, (%rdi,%rsi)
.Ltmp3137:
	.loc	3 842 18                # blocksort.c:842:18
	addq	$4, %rsi
	addq	$2, %rcx
	addq	$2, %rax
	addq	$-2, %rdx
.Ltmp3138:
	.loc	3 842 4 is_stmt 0       # blocksort.c:842:4
	jne	.LBB18_17
.Ltmp3139:
# %bb.18:                               # %for.end93.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:quadrant <- $r15
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 814 13 is_stmt 1      # blocksort.c:814:13
	cmpl	$4, 40(%rsp)            # 4-byte Folded Reload
	movq	72(%rsp), %r15          # 8-byte Reload
.Ltmp3140:
	.loc	3 847 8                 # blocksort.c:847:8
	jge	.LBB18_283
.Ltmp3141:
.LBB18_19:                              # %if.end98.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- 1
	.loc	3 850 44                # blocksort.c:850:44
	movl	(%r12), %eax
	movl	$4, %ecx
.Ltmp3142:
	.p2align	4, 0x90
.LBB18_20:                              # %for.body102.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- undef
	.loc	3 850 41 is_stmt 0      # blocksort.c:850:41
	addl	-12(%r12,%rcx,4), %eax
	movl	%eax, -12(%r12,%rcx,4)
.Ltmp3143:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	-8(%r12,%rcx,4), %eax
	movl	%eax, -8(%r12,%rcx,4)
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	-4(%r12,%rcx,4), %eax
	movl	%eax, -4(%r12,%rcx,4)
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	addl	(%r12,%rcx,4), %eax
	movl	%eax, (%r12,%rcx,4)
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 850 18                # blocksort.c:850:18
	addq	$4, %rcx
	cmpq	$65540, %rcx            # imm = 0x10004
.Ltmp3144:
	.loc	3 850 4                 # blocksort.c:850:4
	jne	.LBB18_20
.Ltmp3145:
# %bb.21:                               # %for.body120.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 4                   # blocksort.c:0:4
	movq	32(%rsp), %rdx          # 8-byte Reload
	.loc	3 852 8 is_stmt 1       # blocksort.c:852:8
	movzbl	(%rdx), %ecx
	.loc	3 852 17 is_stmt 0      # blocksort.c:852:17
	shll	$8, %ecx
.Ltmp3146:
	#DEBUG_VALUE: mainSort:s <- $cx
	.loc	3 855 14 is_stmt 1      # blocksort.c:855:14
	movl	100(%rsp), %eax         # 4-byte Reload
	leal	-4(%r15), %r8d
	leaq	(%rdx,%r14), %rsi
	leal	-3(%r15), %r9d
	leal	-2(%r15), %r10d
	xorl	%ebp, %ebp
	movq	8(%rsp), %rbx           # 8-byte Reload
.Ltmp3147:
	.p2align	4, 0x90
.LBB18_22:                              # %for.body120.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- undef
	#DEBUG_VALUE: mainSort:s <- $cx
	.loc	3 856 11                # blocksort.c:856:11
	movzwl	%cx, %ecx
.Ltmp3148:
	.loc	3 855 14                # blocksort.c:855:14
	shrq	$8, %rcx
	.loc	3 855 23 is_stmt 0      # blocksort.c:855:23
	movzbl	(%rsi,%rbp), %edi
	.loc	3 855 32                # blocksort.c:855:32
	movq	%rdi, %rdx
	shlq	$8, %rdx
	.loc	3 855 20                # blocksort.c:855:20
	orq	%rcx, %rdx
.Ltmp3149:
	#DEBUG_VALUE: mainSort:s <- $rdx
	.loc	3 856 11 is_stmt 1      # blocksort.c:856:11
	movl	(%r12,%rdx,4), %ecx
	.loc	3 856 19 is_stmt 0      # blocksort.c:856:19
	addl	$-1, %ecx
.Ltmp3150:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 857 15 is_stmt 1      # blocksort.c:857:15
	movl	%ecx, (%r12,%rdx,4)
	.loc	3 858 7                 # blocksort.c:858:7
	movslq	%ecx, %rcx
.Ltmp3151:
	.loc	3 858 14 is_stmt 0      # blocksort.c:858:14
	leal	(%rax,%rbp), %edx
.Ltmp3152:
	movl	%edx, (%rbx,%rcx,4)
	.loc	3 859 23 is_stmt 1      # blocksort.c:859:23
	movzbl	-1(%rsi,%rbp), %ecx
	.loc	3 859 34 is_stmt 0      # blocksort.c:859:34
	movq	%rcx, %rdx
	shlq	$8, %rdx
	.loc	3 859 20                # blocksort.c:859:20
	orq	%rdi, %rdx
.Ltmp3153:
	#DEBUG_VALUE: mainSort:s <- $rdx
	.loc	3 860 11 is_stmt 1      # blocksort.c:860:11
	movl	(%r12,%rdx,4), %edi
	.loc	3 860 19 is_stmt 0      # blocksort.c:860:19
	addl	$-1, %edi
.Ltmp3154:
	#DEBUG_VALUE: mainSort:j <- $edi
	.loc	3 861 15 is_stmt 1      # blocksort.c:861:15
	movl	%edi, (%r12,%rdx,4)
	.loc	3 862 7                 # blocksort.c:862:7
	movslq	%edi, %rdx
.Ltmp3155:
	.loc	3 862 14 is_stmt 0      # blocksort.c:862:14
	leal	(%r10,%rbp), %edi
.Ltmp3156:
	movl	%edi, (%rbx,%rdx,4)
	.loc	3 863 23 is_stmt 1      # blocksort.c:863:23
	movzbl	-2(%rsi,%rbp), %edx
	.loc	3 863 34 is_stmt 0      # blocksort.c:863:34
	movq	%rdx, %rdi
	shlq	$8, %rdi
	.loc	3 863 20                # blocksort.c:863:20
	orq	%rcx, %rdi
.Ltmp3157:
	#DEBUG_VALUE: mainSort:s <- $rdi
	.loc	3 864 11 is_stmt 1      # blocksort.c:864:11
	movl	(%r12,%rdi,4), %ecx
	.loc	3 864 19 is_stmt 0      # blocksort.c:864:19
	addl	$-1, %ecx
.Ltmp3158:
	#DEBUG_VALUE: mainSort:j <- $ecx
	.loc	3 865 15 is_stmt 1      # blocksort.c:865:15
	movl	%ecx, (%r12,%rdi,4)
	.loc	3 866 7                 # blocksort.c:866:7
	movslq	%ecx, %rcx
.Ltmp3159:
	.loc	3 866 14 is_stmt 0      # blocksort.c:866:14
	leal	(%r9,%rbp), %edi
.Ltmp3160:
	movl	%edi, (%rbx,%rcx,4)
	.loc	3 867 23 is_stmt 1      # blocksort.c:867:23
	movzbl	-3(%rsi,%rbp), %ecx
	.loc	3 867 34 is_stmt 0      # blocksort.c:867:34
	shlq	$8, %rcx
	.loc	3 867 20                # blocksort.c:867:20
	orq	%rdx, %rcx
.Ltmp3161:
	#DEBUG_VALUE: mainSort:s <- $cx
	.loc	3 868 11 is_stmt 1      # blocksort.c:868:11
	movl	(%r12,%rcx,4), %edx
	.loc	3 868 19 is_stmt 0      # blocksort.c:868:19
	addl	$-1, %edx
.Ltmp3162:
	#DEBUG_VALUE: mainSort:j <- $edx
	.loc	3 869 15 is_stmt 1      # blocksort.c:869:15
	movl	%edx, (%r12,%rcx,4)
	.loc	3 870 7                 # blocksort.c:870:7
	movslq	%edx, %rdx
.Ltmp3163:
	.loc	3 870 14 is_stmt 0      # blocksort.c:870:14
	leal	(%r8,%rbp), %edi
	movl	%edi, (%rbx,%rdx,4)
.Ltmp3164:
	.loc	3 854 13 is_stmt 1      # blocksort.c:854:13
	leaq	(%r14,%rbp), %rdx
	addq	$-4, %rdx
.Ltmp3165:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	addq	$-4, %rbp
	cmpq	$2, %rdx
.Ltmp3166:
	.loc	3 854 4 is_stmt 0       # blocksort.c:854:4
	jg	.LBB18_22
.Ltmp3167:
# %bb.23:                               # %for.cond190.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 872 13 is_stmt 1      # blocksort.c:872:13
	addq	%rbp, %rax
	testl	%eax, %eax
	movq	32(%rsp), %rdi          # 8-byte Reload
.Ltmp3168:
	.loc	3 872 4 is_stmt 0       # blocksort.c:872:4
	js	.LBB18_26
.Ltmp3169:
# %bb.24:                               # %for.body193.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 873 14 is_stmt 1      # blocksort.c:873:14
	movslq	%eax, %rdx
	addq	$1, %rdx
.Ltmp3170:
	.p2align	4, 0x90
.LBB18_25:                              # %for.body193.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- undef
	#DEBUG_VALUE: mainSort:s <- $cx
	.loc	3 874 11                # blocksort.c:874:11
	movzwl	%cx, %esi
	.loc	3 873 14                # blocksort.c:873:14
	shrq	$8, %rsi
	.loc	3 873 23 is_stmt 0      # blocksort.c:873:23
	movzbl	-1(%rdi,%rdx), %ecx
.Ltmp3171:
	.loc	3 873 32                # blocksort.c:873:32
	shlq	$8, %rcx
	.loc	3 873 20                # blocksort.c:873:20
	orq	%rsi, %rcx
.Ltmp3172:
	#DEBUG_VALUE: mainSort:s <- $cx
	.loc	3 874 11 is_stmt 1      # blocksort.c:874:11
	movl	(%r12,%rcx,4), %esi
	.loc	3 874 19 is_stmt 0      # blocksort.c:874:19
	addl	$-1, %esi
.Ltmp3173:
	#DEBUG_VALUE: mainSort:j <- $esi
	.loc	3 875 15 is_stmt 1      # blocksort.c:875:15
	movl	%esi, (%r12,%rcx,4)
	.loc	3 876 7                 # blocksort.c:876:7
	movslq	%esi, %rsi
.Ltmp3174:
	.loc	3 876 14 is_stmt 0      # blocksort.c:876:14
	movl	%eax, (%rbx,%rsi,4)
.Ltmp3175:
	.loc	3 872 13 is_stmt 1      # blocksort.c:872:13
	addl	$-1, %eax
.Ltmp3176:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	addq	$-1, %rdx
.Ltmp3177:
	.loc	3 872 4 is_stmt 0       # blocksort.c:872:4
	jg	.LBB18_25
.Ltmp3178:
.LBB18_26:                              # %for.cond212.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- 0
	.loc	3 885 23 is_stmt 1      # blocksort.c:885:23
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1536(%rsp)
	movaps	%xmm0, 1520(%rsp)
	movaps	%xmm0, 1504(%rsp)
	movaps	%xmm0, 1488(%rsp)
	movaps	%xmm0, 1472(%rsp)
	movaps	%xmm0, 1456(%rsp)
	movaps	%xmm0, 1440(%rsp)
	movaps	%xmm0, 1424(%rsp)
	movaps	%xmm0, 1408(%rsp)
	movaps	%xmm0, 1392(%rsp)
	movaps	%xmm0, 1376(%rsp)
	movaps	%xmm0, 1360(%rsp)
	movaps	%xmm0, 1344(%rsp)
	movaps	%xmm0, 1328(%rsp)
	movaps	%xmm0, 1312(%rsp)
	movaps	%xmm0, 1296(%rsp)
	.loc	3 886 23                # blocksort.c:886:23
	movaps	.LCPI18_0(%rip), %xmm0  # xmm0 = [0,1,2,3]
	movaps	%xmm0, 272(%rsp)
	movaps	.LCPI18_1(%rip), %xmm0  # xmm0 = [4,5,6,7]
	movaps	%xmm0, 288(%rsp)
	movaps	.LCPI18_2(%rip), %xmm0  # xmm0 = [8,9,10,11]
	movaps	%xmm0, 304(%rsp)
	movaps	.LCPI18_3(%rip), %xmm0  # xmm0 = [12,13,14,15]
	movaps	%xmm0, 320(%rsp)
	movaps	.LCPI18_4(%rip), %xmm0  # xmm0 = [16,17,18,19]
	movaps	%xmm0, 336(%rsp)
	movaps	.LCPI18_5(%rip), %xmm0  # xmm0 = [20,21,22,23]
	movaps	%xmm0, 352(%rsp)
	movaps	.LCPI18_6(%rip), %xmm0  # xmm0 = [24,25,26,27]
	movaps	%xmm0, 368(%rsp)
	movaps	.LCPI18_7(%rip), %xmm0  # xmm0 = [28,29,30,31]
	movaps	%xmm0, 384(%rsp)
	movaps	.LCPI18_8(%rip), %xmm0  # xmm0 = [32,33,34,35]
	movaps	%xmm0, 400(%rsp)
	movaps	.LCPI18_9(%rip), %xmm0  # xmm0 = [36,37,38,39]
	movaps	%xmm0, 416(%rsp)
	movaps	.LCPI18_10(%rip), %xmm0 # xmm0 = [40,41,42,43]
	movaps	%xmm0, 432(%rsp)
	movaps	.LCPI18_11(%rip), %xmm0 # xmm0 = [44,45,46,47]
	movaps	%xmm0, 448(%rsp)
	movaps	.LCPI18_12(%rip), %xmm0 # xmm0 = [48,49,50,51]
	movaps	%xmm0, 464(%rsp)
	movaps	.LCPI18_13(%rip), %xmm0 # xmm0 = [52,53,54,55]
	movaps	%xmm0, 480(%rsp)
	movaps	.LCPI18_14(%rip), %xmm0 # xmm0 = [56,57,58,59]
	movaps	%xmm0, 496(%rsp)
	movaps	.LCPI18_15(%rip), %xmm0 # xmm0 = [60,61,62,63]
	movaps	%xmm0, 512(%rsp)
	movaps	.LCPI18_16(%rip), %xmm0 # xmm0 = [64,65,66,67]
	movaps	%xmm0, 528(%rsp)
	movaps	.LCPI18_17(%rip), %xmm0 # xmm0 = [68,69,70,71]
	movaps	%xmm0, 544(%rsp)
	movaps	.LCPI18_18(%rip), %xmm0 # xmm0 = [72,73,74,75]
	movaps	%xmm0, 560(%rsp)
	movaps	.LCPI18_19(%rip), %xmm0 # xmm0 = [76,77,78,79]
	movaps	%xmm0, 576(%rsp)
	movaps	.LCPI18_20(%rip), %xmm0 # xmm0 = [80,81,82,83]
	movaps	%xmm0, 592(%rsp)
	movaps	.LCPI18_21(%rip), %xmm0 # xmm0 = [84,85,86,87]
	movaps	%xmm0, 608(%rsp)
	movaps	.LCPI18_22(%rip), %xmm0 # xmm0 = [88,89,90,91]
	movaps	%xmm0, 624(%rsp)
	movaps	.LCPI18_23(%rip), %xmm0 # xmm0 = [92,93,94,95]
	movaps	%xmm0, 640(%rsp)
	movaps	.LCPI18_24(%rip), %xmm0 # xmm0 = [96,97,98,99]
	movaps	%xmm0, 656(%rsp)
	movaps	.LCPI18_25(%rip), %xmm0 # xmm0 = [100,101,102,103]
	movaps	%xmm0, 672(%rsp)
	movaps	.LCPI18_26(%rip), %xmm0 # xmm0 = [104,105,106,107]
	movaps	%xmm0, 688(%rsp)
	movaps	.LCPI18_27(%rip), %xmm0 # xmm0 = [108,109,110,111]
	movaps	%xmm0, 704(%rsp)
	movaps	.LCPI18_28(%rip), %xmm0 # xmm0 = [112,113,114,115]
	movaps	%xmm0, 720(%rsp)
	movaps	.LCPI18_29(%rip), %xmm0 # xmm0 = [116,117,118,119]
	movaps	%xmm0, 736(%rsp)
	movaps	.LCPI18_30(%rip), %xmm0 # xmm0 = [120,121,122,123]
	movaps	%xmm0, 752(%rsp)
	movaps	.LCPI18_31(%rip), %xmm0 # xmm0 = [124,125,126,127]
	movaps	%xmm0, 768(%rsp)
	movaps	.LCPI18_32(%rip), %xmm0 # xmm0 = [128,129,130,131]
	movaps	%xmm0, 784(%rsp)
	movaps	.LCPI18_33(%rip), %xmm0 # xmm0 = [132,133,134,135]
	movaps	%xmm0, 800(%rsp)
	movaps	.LCPI18_34(%rip), %xmm0 # xmm0 = [136,137,138,139]
	movaps	%xmm0, 816(%rsp)
	movaps	.LCPI18_35(%rip), %xmm0 # xmm0 = [140,141,142,143]
	movaps	%xmm0, 832(%rsp)
	movaps	.LCPI18_36(%rip), %xmm0 # xmm0 = [144,145,146,147]
	movaps	%xmm0, 848(%rsp)
	movaps	.LCPI18_37(%rip), %xmm0 # xmm0 = [148,149,150,151]
	movaps	%xmm0, 864(%rsp)
	movaps	.LCPI18_38(%rip), %xmm0 # xmm0 = [152,153,154,155]
	movaps	%xmm0, 880(%rsp)
	movaps	.LCPI18_39(%rip), %xmm0 # xmm0 = [156,157,158,159]
	movaps	%xmm0, 896(%rsp)
	movaps	.LCPI18_40(%rip), %xmm0 # xmm0 = [160,161,162,163]
	movaps	%xmm0, 912(%rsp)
	movaps	.LCPI18_41(%rip), %xmm0 # xmm0 = [164,165,166,167]
	movaps	%xmm0, 928(%rsp)
	movaps	.LCPI18_42(%rip), %xmm0 # xmm0 = [168,169,170,171]
	movaps	%xmm0, 944(%rsp)
	movaps	.LCPI18_43(%rip), %xmm0 # xmm0 = [172,173,174,175]
	movaps	%xmm0, 960(%rsp)
	movaps	.LCPI18_44(%rip), %xmm0 # xmm0 = [176,177,178,179]
	movaps	%xmm0, 976(%rsp)
	movaps	.LCPI18_45(%rip), %xmm0 # xmm0 = [180,181,182,183]
	movaps	%xmm0, 992(%rsp)
	movaps	.LCPI18_46(%rip), %xmm0 # xmm0 = [184,185,186,187]
	movaps	%xmm0, 1008(%rsp)
	movaps	.LCPI18_47(%rip), %xmm0 # xmm0 = [188,189,190,191]
	movaps	%xmm0, 1024(%rsp)
	movaps	.LCPI18_48(%rip), %xmm0 # xmm0 = [192,193,194,195]
	movaps	%xmm0, 1040(%rsp)
	movaps	.LCPI18_49(%rip), %xmm0 # xmm0 = [196,197,198,199]
	movaps	%xmm0, 1056(%rsp)
	movaps	.LCPI18_50(%rip), %xmm0 # xmm0 = [200,201,202,203]
	movaps	%xmm0, 1072(%rsp)
	movaps	.LCPI18_51(%rip), %xmm0 # xmm0 = [204,205,206,207]
	movaps	%xmm0, 1088(%rsp)
	movaps	.LCPI18_52(%rip), %xmm0 # xmm0 = [208,209,210,211]
	movaps	%xmm0, 1104(%rsp)
	movaps	.LCPI18_53(%rip), %xmm0 # xmm0 = [212,213,214,215]
	movaps	%xmm0, 1120(%rsp)
	movaps	.LCPI18_54(%rip), %xmm0 # xmm0 = [216,217,218,219]
	movaps	%xmm0, 1136(%rsp)
	movaps	.LCPI18_55(%rip), %xmm0 # xmm0 = [220,221,222,223]
	movaps	%xmm0, 1152(%rsp)
	movaps	.LCPI18_56(%rip), %xmm0 # xmm0 = [224,225,226,227]
	movaps	%xmm0, 1168(%rsp)
	movaps	.LCPI18_57(%rip), %xmm0 # xmm0 = [228,229,230,231]
	movaps	%xmm0, 1184(%rsp)
	movaps	.LCPI18_58(%rip), %xmm0 # xmm0 = [232,233,234,235]
	movaps	%xmm0, 1200(%rsp)
	movaps	.LCPI18_59(%rip), %xmm0 # xmm0 = [236,237,238,239]
	movaps	%xmm0, 1216(%rsp)
	movaps	.LCPI18_60(%rip), %xmm0 # xmm0 = [240,241,242,243]
	movaps	%xmm0, 1232(%rsp)
	movaps	.LCPI18_61(%rip), %xmm0 # xmm0 = [244,245,246,247]
	movaps	%xmm0, 1248(%rsp)
	movaps	.LCPI18_62(%rip), %xmm0 # xmm0 = [248,249,250,251]
	movaps	%xmm0, 1264(%rsp)
	movdqa	.LCPI18_63(%rip), %xmm0 # xmm0 = [252,253,254,255]
	movdqa	%xmm0, 1280(%rsp)
	movl	$364, %r8d              # imm = 0x16C
.Ltmp3179:
	.p2align	4, 0x90
.LBB18_27:                              # %do.body226.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB18_29 Depth 2
                                        #       Child Loop BB18_30 Depth 3
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: h <- $r8d
	.loc	3 894 16                # blocksort.c:894:16
	movslq	%r8d, %rax
	imulq	$1431655766, %rax, %r14 # imm = 0x55555556
	movq	%r14, %rdx
	shrq	$63, %rdx
	shrq	$32, %r14
	addl	%edx, %r14d
.Ltmp3180:
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: mainSort:i <- $r14d
	.loc	3 895 24                # blocksort.c:895:24
	cmpl	$767, %eax              # imm = 0x2FF
.Ltmp3181:
	.loc	3 895 10 is_stmt 0      # blocksort.c:895:10
	jg	.LBB18_34
.Ltmp3182:
# %bb.28:                               # %for.body230.preheader.i.i
                                        #   in Loop: Header=BB18_27 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- $r14d
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 896 18 is_stmt 1      # blocksort.c:896:18
	movslq	%r14d, %r11
	xorl	%r10d, %r10d
.Ltmp3183:
	.p2align	4, 0x90
.LBB18_29:                              # %for.body230.i.i
                                        #   Parent Loop BB18_27 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB18_30 Depth 3
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- $r14d
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- $r11
	#DEBUG_VALUE: mainSort:j <- $r11
	movl	272(%rsp,%r11,4), %r9d
.Ltmp3184:
	#DEBUG_VALUE: vv <- $r9d
	.loc	3 0 18 is_stmt 0        # blocksort.c:0:18
	movl	%r9d, %eax
	shll	$8, %eax
	leal	256(%rax), %esi
	movslq	%esi, %rsi
	movl	(%r12,%rsi,4), %ebp
	cltq
	subl	(%r12,%rax,4), %ebp
	movl	%r10d, %ebx
.Ltmp3185:
	.p2align	4, 0x90
.LBB18_30:                              # %while.cond.i.i
                                        #   Parent Loop BB18_27 Depth=1
                                        #     Parent Loop BB18_29 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: vv <- $r9d
	#DEBUG_VALUE: mainSort:j <- $r11
	#DEBUG_VALUE: mainSort:i <- $r11
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: mainSort:s <- $cx
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- undef
	.loc	3 898 21 is_stmt 1      # blocksort.c:898:21
	leal	(%r14,%rbx), %eax
	movslq	%ebx, %rsi
	movl	272(%rsp,%rsi,4), %edi
	movl	%edi, %edx
	shll	$8, %edx
	leal	256(%rdx), %ecx
.Ltmp3186:
	movslq	%ecx, %rcx
	movl	(%r12,%rcx,4), %ecx
	movslq	%edx, %rdx
	subl	(%r12,%rdx,4), %ecx
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	cltq
	.loc	3 898 48                # blocksort.c:898:48
	cmpl	%ebp, %ecx
	.loc	3 898 13                # blocksort.c:898:13
	jbe	.LBB18_32
.Ltmp3187:
# %bb.31:                               # %while.body.i.i
                                        #   in Loop: Header=BB18_30 Depth=3
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: vv <- $r9d
	#DEBUG_VALUE: mainSort:i <- $r11
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 899 32 is_stmt 1      # blocksort.c:899:32
	movl	%edi, 272(%rsp,%rax,4)
.Ltmp3188:
	.loc	3 901 22                # blocksort.c:901:22
	subl	%r14d, %ebx
.Ltmp3189:
	.loc	3 901 20 is_stmt 0      # blocksort.c:901:20
	jge	.LBB18_30
	jmp	.LBB18_33
.Ltmp3190:
	.p2align	4, 0x90
.LBB18_32:                              #   in Loop: Header=BB18_29 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: vv <- $r9d
	#DEBUG_VALUE: mainSort:i <- $r11
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 904 13 is_stmt 1      # blocksort.c:904:13
	movq	%rax, %rsi
.Ltmp3191:
.LBB18_33:                              # %zero.i.i
                                        #   in Loop: Header=BB18_29 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: vv <- $r9d
	#DEBUG_VALUE: mainSort:i <- $r11
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 904 29 is_stmt 0      # blocksort.c:904:29
	movl	%r9d, 272(%rsp,%rsi,4)
.Ltmp3192:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 895 33 is_stmt 1      # blocksort.c:895:33
	addq	$1, %r11
.Ltmp3193:
	.loc	3 895 10 is_stmt 0      # blocksort.c:895:10
	addl	$1, %r10d
.Ltmp3194:
	.loc	3 895 24                # blocksort.c:895:24
	cmpq	$256, %r11              # imm = 0x100
.Ltmp3195:
	.loc	3 895 10                # blocksort.c:895:10
	jl	.LBB18_29
.Ltmp3196:
.LBB18_34:                              # %do.cond273.i.i
                                        #   in Loop: Header=BB18_27 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: h <- $r14d
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 906 18 is_stmt 1      # blocksort.c:906:18
	addl	$-3, %r8d
	cmpl	$2, %r8d
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%r14d, %r8d
.Ltmp3197:
	.loc	3 906 7                 # blocksort.c:906:7
	ja	.LBB18_27
.Ltmp3198:
# %bb.35:                               # %for.cond277.preheader.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- 0
	#DEBUG_VALUE: mainSort:numQSorted <- 0
	.loc	3 0 7                   # blocksort.c:0:7
	movq	8(%rsp), %rax           # 8-byte Reload
.Ltmp3199:
	.loc	3 915 4 is_stmt 1       # blocksort.c:915:4
	leaq	4(%rax), %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	8(%rax), %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	leaq	16(%rax), %rcx
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	leaq	20(%rax), %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	leaq	1028(%r12), %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	3072(%r12), %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	leaq	-4(%rax), %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movl	$-2097153, %r9d         # imm = 0xFFDFFFFF
	movq	144(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ecx
	movl	%eax, 4(%rsp)           # 4-byte Spill
	movl	%eax, %ebp
	xorl	%eax, %eax
	movl	$0, 44(%rsp)            # 4-byte Folded Spill
	movl	40(%rsp), %r14d         # 4-byte Reload
	movq	%r13, 176(%rsp)         # 8-byte Spill
	movq	%r12, 168(%rsp)         # 8-byte Spill
.Ltmp3200:
	.p2align	4, 0x90
.LBB18_36:                              # %for.body280.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB18_38 Depth 2
                                        #       Child Loop BB18_43 Depth 3
                                        #         Child Loop BB18_45 Depth 4
                                        #           Child Loop BB18_64 Depth 5
                                        #             Child Loop BB18_65 Depth 6
                                        #           Child Loop BB18_55 Depth 5
                                        #             Child Loop BB18_56 Depth 6
                                        #         Child Loop BB18_108 Depth 4
                                        #         Child Loop BB18_112 Depth 4
                                        #         Child Loop BB18_120 Depth 4
                                        #         Child Loop BB18_124 Depth 4
                                        #         Child Loop BB18_80 Depth 4
                                        #         Child Loop BB18_83 Depth 4
                                        #           Child Loop BB18_84 Depth 5
                                        #             Child Loop BB18_86 Depth 6
                                        #             Child Loop BB18_91 Depth 6
                                        #             Child Loop BB18_96 Depth 6
                                        #     Child Loop BB18_135 Depth 2
                                        #     Child Loop BB18_137 Depth 2
                                        #     Child Loop BB18_142 Depth 2
                                        #     Child Loop BB18_148 Depth 2
                                        #     Child Loop BB18_151 Depth 2
                                        #     Child Loop BB18_158 Depth 2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- $rax
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	.loc	3 0 4 is_stmt 0         # blocksort.c:0:4
	movq	%rax, 152(%rsp)         # 8-byte Spill
.Ltmp3201:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 152] [$rsp+0]
	.loc	3 923 12 is_stmt 1      # blocksort.c:923:12
	movl	272(%rsp,%rax,4), %ecx
.Ltmp3202:
	#DEBUG_VALUE: mainSort:ss <- $ecx
	#DEBUG_VALUE: mainSort:j <- 0
	.loc	3 0 12 is_stmt 0        # blocksort.c:0:12
	movl	%ecx, %eax
	shll	$8, %eax
	movl	%eax, 132(%rsp)         # 4-byte Spill
.Ltmp3203:
	.loc	3 933 7 is_stmt 1       # blocksort.c:933:7
	movslq	%eax, %rdi
	xorl	%eax, %eax
.Ltmp3204:
	#DEBUG_VALUE: mainSort:i <- $rax
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	movq	%rdi, 184(%rsp)         # 8-byte Spill
	movq	%rcx, 200(%rsp)         # 8-byte Spill
.Ltmp3205:
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 152] [$rsp+0]
	jmp	.LBB18_38
.Ltmp3206:
.LBB18_37:                              # %if.then308.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 941 22 is_stmt 1      # blocksort.c:941:22
	movq	stderr(%rip), %rdi
	movl	$1, %r9d
	subl	60(%rsp), %r9d          # 4-byte Folded Reload
	addl	56(%rsp), %r9d          # 4-byte Folded Reload
	movl	$.L.str.7.2, %esi
	movq	200(%rsp), %rdx         # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx
	movq	208(%rsp), %rcx         # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	44(%rsp), %r8d          # 4-byte Reload
	xorl	%eax, %eax
	callq	fprintf
	jmp	.LBB18_42
.Ltmp3207:
	.p2align	4, 0x90
.LBB18_38:                              # %for.body286.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB18_43 Depth 3
                                        #         Child Loop BB18_45 Depth 4
                                        #           Child Loop BB18_64 Depth 5
                                        #             Child Loop BB18_65 Depth 6
                                        #           Child Loop BB18_55 Depth 5
                                        #             Child Loop BB18_56 Depth 6
                                        #         Child Loop BB18_108 Depth 4
                                        #         Child Loop BB18_112 Depth 4
                                        #         Child Loop BB18_120 Depth 4
                                        #         Child Loop BB18_124 Depth 4
                                        #         Child Loop BB18_80 Depth 4
                                        #         Child Loop BB18_83 Depth 4
                                        #           Child Loop BB18_84 Depth 5
                                        #             Child Loop BB18_86 Depth 6
                                        #             Child Loop BB18_91 Depth 6
                                        #             Child Loop BB18_96 Depth 6
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:ss <- $ecx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $rax
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	.loc	3 934 16                # blocksort.c:934:16
	cmpq	%rcx, %rax
.Ltmp3208:
	.loc	3 934 14 is_stmt 0      # blocksort.c:934:14
	je	.LBB18_132
.Ltmp3209:
# %bb.39:                               # %if.then289.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $rax
	#DEBUG_VALUE: mainSort:ss <- $ecx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 935 28 is_stmt 1      # blocksort.c:935:28
	leaq	(%rax,%rdi), %rdx
.Ltmp3210:
	.loc	3 936 21                # blocksort.c:936:21
	movl	(%r12,%rdx,4), %ecx
.Ltmp3211:
	.loc	3 936 30 is_stmt 0      # blocksort.c:936:30
	testl	$2097152, %ecx          # imm = 0x200000
	movq	%rax, 208(%rsp)         # 8-byte Spill
.Ltmp3212:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	.loc	3 936 18                # blocksort.c:936:18
	jne	.LBB18_129
.Ltmp3213:
# %bb.40:                               # %if.then294.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 937 38 is_stmt 1      # blocksort.c:937:38
	movl	%ecx, %esi
	andl	$-2097153, %esi         # imm = 0xFFDFFFFF
.Ltmp3214:
	#DEBUG_VALUE: lo <- $esi
	#DEBUG_VALUE: mainQSort3:loSt <- $esi
	.loc	3 0 38 is_stmt 0        # blocksort.c:0:38
	movq	%rdx, 192(%rsp)         # 8-byte Spill
	movl	4(%r12,%rdx,4), %edx
	.loc	3 938 39 is_stmt 1      # blocksort.c:938:39
	andl	%r9d, %edx
	.loc	3 938 52 is_stmt 0      # blocksort.c:938:52
	addl	$-1, %edx
.Ltmp3215:
	#DEBUG_VALUE: hi <- $edx
	#DEBUG_VALUE: mainQSort3:hiSt <- $edx
	.loc	3 0 52                  # blocksort.c:0:52
	movl	%esi, 60(%rsp)          # 4-byte Spill
.Ltmp3216:
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:loSt <- [DW_OP_plus_uconst 60] [$rsp+0]
	movl	%edx, 56(%rsp)          # 4-byte Spill
.Ltmp3217:
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:hiSt <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	3 939 23 is_stmt 1      # blocksort.c:939:23
	cmpl	%esi, %edx
.Ltmp3218:
	.loc	3 939 20 is_stmt 0      # blocksort.c:939:20
	jle	.LBB18_130
.Ltmp3219:
# %bb.41:                               # %if.then305.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 20                  # blocksort.c:0:20
	movl	%ebp, 24(%rsp)          # 4-byte Spill
.Ltmp3220:
	.loc	3 814 13 is_stmt 1      # blocksort.c:814:13
	cmpl	$4, %r14d
.Ltmp3221:
	.loc	3 940 23                # blocksort.c:940:23
	jge	.LBB18_37
.Ltmp3222:
.LBB18_42:                              # %if.end312.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 23 is_stmt 0        # blocksort.c:0:23
	movl	60(%rsp), %eax          # 4-byte Reload
.Ltmp3223:
	#DEBUG_VALUE: mainQSort3:sp <- 0
	#DEBUG_VALUE: mainQSort3:dSt <- 2
	.loc	3 689 4 is_stmt 1       # blocksort.c:689:4
	movl	%eax, 2352(%rsp)
	movl	56(%rsp), %eax          # 4-byte Reload
	movl	%eax, 1952(%rsp)
	movl	$2, 1552(%rsp)
.Ltmp3224:
	#DEBUG_VALUE: mainQSort3:sp <- 1
	.loc	3 0 4 is_stmt 0         # blocksort.c:0:4
	movl	$1, %ecx
	movl	4(%rsp), %ebp           # 4-byte Reload
	jmp	.LBB18_43
.Ltmp3225:
	.p2align	4, 0x90
.LBB18_129:                             #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%ebp, %eax
	jmp	.LBB18_131
.Ltmp3226:
.LBB18_130:                             #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:hiSt <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:loSt <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%ebp, %eax
	movq	192(%rsp), %rdx         # 8-byte Reload
	jmp	.LBB18_131
.Ltmp3227:
.LBB18_107:                             # %vector.ph413.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 743 37 is_stmt 1      # blocksort.c:743:37
	addl	$1, %edx
	andl	$7, %edx
	subq	%rdx, %rbp
	leaq	(%r11,%rbp), %r10
	movq	160(%rsp), %rsi         # 8-byte Reload
	leaq	(%rsi,%r13,4), %rdi
	leaq	(%rsi,%r11,4), %rsi
	xorl	%ebx, %ebx
.Ltmp3228:
	.p2align	4, 0x90
.LBB18_108:                             # %vector.body391.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movdqu	-16(%rsi,%rbx,4), %xmm0
	movups	(%rsi,%rbx,4), %xmm1
	movdqu	-16(%rdi,%rbx,4), %xmm2
	movdqu	(%rdi,%rbx,4), %xmm3
	movdqu	%xmm2, -16(%rsi,%rbx,4)
	movdqu	%xmm3, (%rsi,%rbx,4)
	movdqu	%xmm0, -16(%rdi,%rbx,4)
	movups	%xmm1, (%rdi,%rbx,4)
	addq	$8, %rbx
	cmpq	%rbx, %rbp
	jne	.LBB18_108
.Ltmp3229:
# %bb.109:                              # %middle.block392.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 37 is_stmt 0        # blocksort.c:0:37
	testl	%edx, %edx
	.loc	3 743 37                # blocksort.c:743:37
	je	.LBB18_113
.Ltmp3230:
# %bb.110:                              #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	addq	%rbp, %r13
	subl	%ebp, %eax
.Ltmp3231:
	jmp	.LBB18_111
.Ltmp3232:
.LBB18_119:                             # %vector.ph364.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	addl	$1, %ebp
	andl	$7, %ebp
	subq	%rbp, %r13
	leaq	(%r11,%r13), %rcx
	movq	240(%rsp), %rsi         # 8-byte Reload
	leaq	(%rsi,%rdx,4), %rdi
	movq	160(%rsp), %rsi         # 8-byte Reload
	leaq	(%rsi,%r11,4), %rbx
	xorl	%esi, %esi
.Ltmp3233:
	.p2align	4, 0x90
.LBB18_120:                             # %vector.body343.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 744 37 is_stmt 1      # blocksort.c:744:37
	movdqu	-16(%rbx,%rsi,4), %xmm0
	movups	(%rbx,%rsi,4), %xmm1
	movdqu	-16(%rdi,%rsi,4), %xmm2
	movdqu	(%rdi,%rsi,4), %xmm3
	movdqu	%xmm2, -16(%rbx,%rsi,4)
	movdqu	%xmm3, (%rbx,%rsi,4)
	movdqu	%xmm0, -16(%rdi,%rsi,4)
	movups	%xmm1, (%rdi,%rsi,4)
	addq	$8, %rsi
	cmpq	%rsi, %r13
	jne	.LBB18_120
.Ltmp3234:
# %bb.121:                              # %middle.block344.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 37 is_stmt 0        # blocksort.c:0:37
	testl	%ebp, %ebp
	je	.LBB18_125
.Ltmp3235:
# %bb.122:                              #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	addq	%r13, %rdx
	subl	%r13d, %eax
.Ltmp3236:
	jmp	.LBB18_123
.Ltmp3237:
	.p2align	4, 0x90
.LBB18_43:                              # %while.body.lr.ph.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB18_45 Depth 4
                                        #           Child Loop BB18_64 Depth 5
                                        #             Child Loop BB18_65 Depth 6
                                        #           Child Loop BB18_55 Depth 5
                                        #             Child Loop BB18_56 Depth 6
                                        #         Child Loop BB18_108 Depth 4
                                        #         Child Loop BB18_112 Depth 4
                                        #         Child Loop BB18_120 Depth 4
                                        #         Child Loop BB18_124 Depth 4
                                        #         Child Loop BB18_80 Depth 4
                                        #         Child Loop BB18_83 Depth 4
                                        #           Child Loop BB18_84 Depth 5
                                        #             Child Loop BB18_86 Depth 6
                                        #             Child Loop BB18_91 Depth 6
                                        #             Child Loop BB18_96 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- $ecx
	movl	%ebp, 4(%rsp)           # 4-byte Spill
	leal	-1(%rcx), %eax
.Ltmp3238:
	#DEBUG_VALUE: mainQSort3:sp <- $eax
	movl	%eax, 104(%rsp)         # 4-byte Spill
.Ltmp3239:
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	movslq	%eax, %rbp
	movq	8(%rsp), %r13           # 8-byte Reload
.Ltmp3240:
	movq	32(%rsp), %r14          # 8-byte Reload
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	movq	%rbp, 64(%rsp)          # 8-byte Spill
	cmpl	$100, %ecx
.Ltmp3241:
	.loc	3 693 7 is_stmt 1       # blocksort.c:693:7
	jge	.LBB18_287
.Ltmp3242:
	.p2align	4, 0x90
.LBB18_45:                              # %if.end.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB18_64 Depth 5
                                        #             Child Loop BB18_65 Depth 6
                                        #           Child Loop BB18_55 Depth 5
                                        #             Child Loop BB18_56 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 695 7                 # blocksort.c:695:7
	movl	2352(%rsp,%rbp,4), %edi
.Ltmp3243:
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainSimpleSort:lo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: yyp1 <- $edi
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	movl	1952(%rsp,%rbp,4), %r9d
.Ltmp3244:
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainSimpleSort:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	movslq	%r9d, %rdx
	movl	1552(%rsp,%rbp,4), %esi
.Ltmp3245:
	#DEBUG_VALUE: mainQSort3:d <- $esi
	#DEBUG_VALUE: mainSimpleSort:d <- $esi
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 0 32] $esi
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 32 32] $esi
	.loc	3 696 14                # blocksort.c:696:14
	movl	%edx, %eax
	subl	%edi, %eax
.Ltmp3246:
	#DEBUG_VALUE: mainSimpleSort:bigN <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $eax
	.loc	3 696 19 is_stmt 0      # blocksort.c:696:19
	cmpl	$20, %eax
	movq	%rsi, 16(%rsp)          # 8-byte Spill
.Ltmp3247:
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 32 32] [$rsp+0]
	.loc	3 0 19                  # blocksort.c:0:19
	movq	%rdi, 112(%rsp)         # 8-byte Spill
	.loc	3 696 45                # blocksort.c:696:45
	jl	.LBB18_78
.Ltmp3248:
# %bb.46:                               # %if.end.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	cmpl	$15, %esi
	jge	.LBB18_78
.Ltmp3249:
# %bb.47:                               # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movslq	%edi, %r11
	movl	(%r13,%r11,4), %eax
	.loc	3 704 44 is_stmt 1      # blocksort.c:704:44
	addl	%esi, %eax
	.loc	3 704 21 is_stmt 0      # blocksort.c:704:21
	movb	(%r14,%rax), %cl
	movl	(%r13,%rdx,4), %eax
	.loc	3 705 44 is_stmt 1      # blocksort.c:705:44
	addl	%esi, %eax
	.loc	3 705 21 is_stmt 0      # blocksort.c:705:21
	movb	(%r14,%rax), %al
	.loc	3 706 35 is_stmt 1      # blocksort.c:706:35
	leal	(%r9,%rdi), %edx
	.loc	3 706 39 is_stmt 0      # blocksort.c:706:39
	sarl	%edx
	.loc	3 706 27                # blocksort.c:706:27
	movslq	%edx, %rdx
	movl	(%r13,%rdx,4), %edx
	.loc	3 706 44                # blocksort.c:706:44
	addl	%esi, %edx
	.loc	3 706 21                # blocksort.c:706:21
	movb	(%r14,%rdx), %bl
.Ltmp3250:
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mmed3:b <- $al
	#DEBUG_VALUE: mmed3:a <- $cl
	.loc	3 633 8 is_stmt 1       # blocksort.c:633:8
	movl	%ecx, %edx
.Ltmp3251:
	.loc	3 633 10 is_stmt 0      # blocksort.c:633:10
	cmpb	%al, %cl
.Ltmp3252:
	.loc	3 633 8                 # blocksort.c:633:8
	ja	.LBB18_48
.Ltmp3253:
# %bb.71:                               # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:a <- $cl
	#DEBUG_VALUE: mmed3:b <- $al
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%eax, %edx
.Ltmp3254:
	#DEBUG_VALUE: mmed3:b <- $dl
	jbe	.LBB18_72
.Ltmp3255:
.LBB18_49:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:b <- $dl
	#DEBUG_VALUE: mmed3:a <- $cl
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mmed3:a <- $al
	.loc	3 634 8 is_stmt 1       # blocksort.c:634:8
	cmpb	%bl, %al
	ja	.LBB18_50
.Ltmp3256:
.LBB18_73:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:a <- $al
	#DEBUG_VALUE: mmed3:b <- $dl
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%ebx, %eax
.Ltmp3257:
	.loc	3 634 10 is_stmt 0      # blocksort.c:634:10
	cmpb	%bl, %dl
.Ltmp3258:
	.loc	3 634 8                 # blocksort.c:634:8
	jbe	.LBB18_51
	jmp	.LBB18_52
.Ltmp3259:
	.p2align	4, 0x90
.LBB18_48:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:a <- $cl
	#DEBUG_VALUE: mmed3:b <- $al
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mmed3:b <- $dl
	.loc	3 633 8 is_stmt 1       # blocksort.c:633:8
	ja	.LBB18_49
.Ltmp3260:
.LBB18_72:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:b <- $dl
	#DEBUG_VALUE: mmed3:a <- $cl
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%ecx, %eax
.Ltmp3261:
	#DEBUG_VALUE: mmed3:a <- $al
	.loc	3 634 8                 # blocksort.c:634:8
	cmpb	%bl, %al
	jbe	.LBB18_73
.Ltmp3262:
.LBB18_50:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:a <- $al
	#DEBUG_VALUE: mmed3:b <- $dl
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 634 10 is_stmt 0      # blocksort.c:634:10
	cmpb	%bl, %dl
.Ltmp3263:
	.loc	3 634 8                 # blocksort.c:634:8
	ja	.LBB18_52
.Ltmp3264:
.LBB18_51:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mmed3:b <- $dl
	#DEBUG_VALUE: mmed3:c <- $bl
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%edx, %eax
.Ltmp3265:
.LBB18_52:                              # %if.end18.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	leaq	(,%r11,4), %r10
	addq	%r13, %r10
	.loc	3 703 13 is_stmt 1      # blocksort.c:703:13
	movzbl	%al, %eax
.Ltmp3266:
	#DEBUG_VALUE: mainQSort3:med <- $eax
	.loc	3 709 19                # blocksort.c:709:19
	movl	%r9d, %r15d
	.loc	3 708 19                # blocksort.c:708:19
	movl	%edi, %r12d
.Ltmp3267:
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%r9d, %ebx
	movq	%rdi, %r8
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
.Ltmp3268:
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	.loc	3 713 22 is_stmt 1      # blocksort.c:713:22
	cmpl	%ebx, %r8d
.Ltmp3269:
	.loc	3 713 17 is_stmt 0      # blocksort.c:713:17
	jg	.LBB18_62
.Ltmp3270:
.LBB18_54:                              # %if.end41.lr.ph.preheader.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movslq	%ebx, %rsi
	movslq	%r12d, %r12
.Ltmp3271:
.LBB18_55:                              # %if.end41.lr.ph.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_45 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB18_56 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movslq	%r8d, %rcx
.Ltmp3272:
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12
	#DEBUG_VALUE: mainQSort3:unLo <- undef
	.loc	3 0 17                  # blocksort.c:0:17
	movq	16(%rsp), %rdx          # 8-byte Reload
.Ltmp3273:
	.p2align	4, 0x90
.LBB18_56:                              # %if.end41.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_45 Depth=4
                                        #           Parent Loop BB18_55 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $rcx
	.loc	3 714 31 is_stmt 1      # blocksort.c:714:31
	movl	(%r13,%rcx,4), %edi
.Ltmp3274:
	#DEBUG_VALUE: zztmp <- $edi
	.loc	3 714 40 is_stmt 0      # blocksort.c:714:40
	leal	(%rdi,%rdx), %ebp
	.loc	3 714 25                # blocksort.c:714:25
	movzbl	(%r14,%rbp), %ebp
.Ltmp3275:
	#DEBUG_VALUE: mainQSort3:n <- $ebp
	.loc	3 715 19 is_stmt 1      # blocksort.c:715:19
	subl	%eax, %ebp
.Ltmp3276:
	.loc	3 715 17 is_stmt 0      # blocksort.c:715:17
	je	.LBB18_59
.Ltmp3277:
# %bb.57:                               # %if.end62.i.i.i
                                        #   in Loop: Header=BB18_56 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $rcx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 719 19 is_stmt 1      # blocksort.c:719:19
	testl	%ebp, %ebp
.Ltmp3278:
	.loc	3 719 17 is_stmt 0      # blocksort.c:719:17
	jg	.LBB18_61
.Ltmp3279:
# %bb.58:                               # %if.end66.i.i.i
                                        #   in Loop: Header=BB18_56 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $rcx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 713 22 is_stmt 1      # blocksort.c:713:22
	cmpq	%rsi, %rcx
.Ltmp3280:
	.loc	3 720 17                # blocksort.c:720:17
	leaq	1(%rcx), %rcx
	.loc	3 713 17                # blocksort.c:713:17
	jl	.LBB18_56
	jmp	.LBB18_61
.Ltmp3281:
	.p2align	4, 0x90
.LBB18_59:                              # %if.then51.i.i.i
                                        #   in Loop: Header=BB18_55 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: zztmp <- $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $rcx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 716 16                # blocksort.c:716:16
	movl	(%r13,%r12,4), %ebp
	movl	%ebp, (%r13,%rcx,4)
	movl	%edi, (%r13,%r12,4)
.Ltmp3282:
	.loc	3 717 20                # blocksort.c:717:20
	addq	$1, %r12
.Ltmp3283:
	#DEBUG_VALUE: mainQSort3:ltLo <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 0 20 is_stmt 0        # blocksort.c:0:20
	leal	1(%rcx), %r8d
.Ltmp3284:
	.loc	3 713 22 is_stmt 1      # blocksort.c:713:22
	cmpl	%ecx, %ebx
.Ltmp3285:
	.loc	3 713 17 is_stmt 0      # blocksort.c:713:17
	jg	.LBB18_55
.Ltmp3286:
# %bb.60:                               # %while.end.loopexit93.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $rcx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 723 22 is_stmt 1      # blocksort.c:723:22
	addl	$1, %ecx
.Ltmp3287:
	.p2align	4, 0x90
.LBB18_61:                              # %while.end.loopexit.split.loop.exit203.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%ecx, %r8d
.Ltmp3288:
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: yyp1 <- $r8d
	.loc	3 723 22                # blocksort.c:723:22
	cmpl	%ebx, %r8d
	jle	.LBB18_63
	jmp	.LBB18_74
.Ltmp3289:
	.p2align	4, 0x90
.LBB18_53:                              # %if.end105.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- undef
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	.loc	3 733 10 is_stmt 1      # blocksort.c:733:10
	movl	(%r13,%rsi,4), %ebp
.Ltmp3290:
	#DEBUG_VALUE: zztmp <- $ebp
	movl	%ebx, (%r13,%rsi,4)
	movl	%ebp, -4(%r13,%rdi,4)
.Ltmp3291:
	.loc	3 733 43 is_stmt 0      # blocksort.c:733:43
	addl	$1, %r8d
.Ltmp3292:
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	.loc	3 711 7 is_stmt 1       # blocksort.c:711:7
	addl	$-1, %ecx
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%ecx, %ebx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
.Ltmp3293:
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	.loc	3 713 22 is_stmt 1      # blocksort.c:713:22
	cmpl	%ebx, %r8d
.Ltmp3294:
	.loc	3 713 17 is_stmt 0      # blocksort.c:713:17
	jle	.LBB18_54
.Ltmp3295:
.LBB18_62:                              # %while.end.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: yyp1 <- $r8d
	.loc	3 723 22 is_stmt 1      # blocksort.c:723:22
	cmpl	%ebx, %r8d
.Ltmp3296:
	.loc	3 723 17 is_stmt 0      # blocksort.c:723:17
	jg	.LBB18_74
.Ltmp3297:
.LBB18_63:                              # %if.end73.lr.ph.preheader.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movslq	%r8d, %rsi
	movslq	%r15d, %r15
.Ltmp3298:
.LBB18_64:                              # %if.end73.lr.ph.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_45 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB18_65 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	movslq	%ebx, %rdi
.Ltmp3299:
	addq	$1, %rdi
	movl	%ebx, %ecx
.Ltmp3300:
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	.p2align	4, 0x90
.LBB18_65:                              # %if.end73.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_45 Depth=4
                                        #           Parent Loop BB18_64 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- undef
	.loc	3 724 31 is_stmt 1      # blocksort.c:724:31
	movl	-4(%r13,%rdi,4), %ebx
.Ltmp3301:
	#DEBUG_VALUE: zztmp <- $ebx
	.loc	3 0 31 is_stmt 0        # blocksort.c:0:31
	movq	16(%rsp), %rdx          # 8-byte Reload
	.loc	3 724 40                # blocksort.c:724:40
	leal	(%rbx,%rdx), %ebp
	.loc	3 724 25                # blocksort.c:724:25
	movzbl	(%r14,%rbp), %ebp
.Ltmp3302:
	#DEBUG_VALUE: mainQSort3:n <- $ebp
	.loc	3 725 19 is_stmt 1      # blocksort.c:725:19
	subl	%eax, %ebp
.Ltmp3303:
	.loc	3 725 17 is_stmt 0      # blocksort.c:725:17
	je	.LBB18_68
.Ltmp3304:
# %bb.66:                               # %if.end95.i.i.i
                                        #   in Loop: Header=BB18_65 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 729 19 is_stmt 1      # blocksort.c:729:19
	testl	%ebp, %ebp
.Ltmp3305:
	.loc	3 729 17 is_stmt 0      # blocksort.c:729:17
	js	.LBB18_53
.Ltmp3306:
# %bb.67:                               # %if.end99.i.i.i
                                        #   in Loop: Header=BB18_65 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 723 22 is_stmt 1      # blocksort.c:723:22
	addl	$-1, %ecx
	addq	$-1, %rdi
	cmpq	%rsi, %rdi
.Ltmp3307:
	.loc	3 723 17 is_stmt 0      # blocksort.c:723:17
	jg	.LBB18_65
	jmp	.LBB18_70
.Ltmp3308:
	.p2align	4, 0x90
.LBB18_68:                              # %if.then83.i.i.i
                                        #   in Loop: Header=BB18_64 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: zztmp <- $ebx
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- undef
	.loc	3 726 16 is_stmt 1      # blocksort.c:726:16
	movl	(%r13,%r15,4), %ebp
	movl	%ebp, -4(%r13,%rdi,4)
	movl	%ebx, (%r13,%r15,4)
.Ltmp3309:
	#DEBUG_VALUE: mainQSort3:gtHi <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 727 20                # blocksort.c:727:20
	addq	$-1, %r15
.Ltmp3310:
	.loc	3 723 22                # blocksort.c:723:22
	leal	-1(%rcx), %ebx
.Ltmp3311:
	cmpl	%ecx, %r8d
.Ltmp3312:
	.loc	3 723 17 is_stmt 0      # blocksort.c:723:17
	jl	.LBB18_64
.Ltmp3313:
# %bb.69:                               # %while.end117.loopexit92.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 738 16 is_stmt 1      # blocksort.c:738:16
	addl	$-1, %ecx
.Ltmp3314:
	.p2align	4, 0x90
.LBB18_70:                              # %while.end117.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:ltLo <- $r12d
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	cmpl	%r12d, %r15d
.Ltmp3315:
	.loc	3 738 11 is_stmt 0      # blocksort.c:738:11
	jge	.LBB18_75
.Ltmp3316:
.LBB18_44:                              # %if.then120.i.i.i
                                        #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 11                  # blocksort.c:0:11
	movq	16(%rsp), %rax          # 8-byte Reload
.Ltmp3317:
	.loc	3 739 10 is_stmt 1      # blocksort.c:739:10
	addl	$1, %eax
	movq	64(%rsp), %rbp          # 8-byte Reload
	movl	%eax, 1552(%rsp,%rbp,4)
	movq	80(%rsp), %rcx          # 8-byte Reload
.Ltmp3318:
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	cmpl	$100, %ecx
	jl	.LBB18_45
	jmp	.LBB18_287
.Ltmp3319:
.LBB18_74:                              #   in Loop: Header=BB18_45 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:gtHi <- $r15d
	#DEBUG_VALUE: mainQSort3:unHi <- $ebx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%ebx, %ecx
.Ltmp3320:
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	.loc	3 738 16 is_stmt 1      # blocksort.c:738:16
	cmpl	%r12d, %r15d
.Ltmp3321:
	.loc	3 738 11 is_stmt 0      # blocksort.c:738:11
	jl	.LBB18_44
.Ltmp3322:
	.p2align	4, 0x90
.LBB18_75:                              # %if.end129.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:med <- $eax
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 743 11 is_stmt 1      # blocksort.c:743:11
	movl	%r12d, %esi
	subl	112(%rsp), %esi         # 4-byte Folded Reload
	movl	%r8d, %eax
.Ltmp3323:
	subl	%r12d, %eax
	cmpl	%eax, %esi
	cmovlel	%esi, %eax
.Ltmp3324:
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:n <- $eax
	.loc	3 743 37 is_stmt 0      # blocksort.c:743:37
	testl	%eax, %eax
	movq	256(%rsp), %r14         # 8-byte Reload
	jle	.LBB18_113
.Ltmp3325:
# %bb.76:                               # %while.body140.preheader.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 743 37                # blocksort.c:743:37
	movl	%r12d, %esi
	notl	%esi
	addl	112(%rsp), %esi         # 4-byte Folded Reload
	movl	%r8d, %edi
	notl	%edi
	addl	%r12d, %edi
	cmpl	%edi, %esi
	cmovgel	%esi, %edi
	leal	(%r8,%rdi), %esi
	addl	$1, %esi
	movslq	%esi, %r13
	movl	$-2, %edx
	subl	%edi, %edx
	leaq	1(%rdx), %rbp
	cmpq	$8, %rbp
	jb	.LBB18_77
.Ltmp3326:
# %bb.104:                              # %vector.memcheck412.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	leaq	(%rdx,%r13), %rsi
	leaq	(%r14,%rsi,4), %rsi
	cmpq	%rsi, %r10
	jae	.LBB18_107
.Ltmp3327:
# %bb.105:                              # %vector.memcheck412.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	leaq	(%r11,%rdx), %rsi
	leaq	(%r14,%rsi,4), %rsi
	movq	8(%rsp), %rdi           # 8-byte Reload
	leaq	(%rdi,%r13,4), %rdi
	cmpq	%rsi, %rdi
	jae	.LBB18_107
.Ltmp3328:
.LBB18_77:                              #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:n <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	movq	%r11, %r10
.Ltmp3329:
.LBB18_111:                             # %while.body140.i.i.preheader.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movq	8(%rsp), %rsi           # 8-byte Reload
.Ltmp3330:
	.p2align	4, 0x90
.LBB18_112:                             # %while.body140.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: yyp1 <- undef
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: yyp2 <- undef
	.loc	3 743 37                # blocksort.c:743:37
	movl	(%rsi,%r10,4), %edi
.Ltmp3331:
	#DEBUG_VALUE: zztmp <- $edi
	movl	(%rsi,%r13,4), %ebp
	movl	%ebp, (%rsi,%r10,4)
	movl	%edi, (%rsi,%r13,4)
.Ltmp3332:
	#DEBUG_VALUE: yyp1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 743 37                # blocksort.c:743:37
	addq	$4, %rsi
	addl	$-1, %eax
.Ltmp3333:
	jg	.LBB18_112
.Ltmp3334:
.LBB18_113:                             # %while.end153.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 744 11 is_stmt 1      # blocksort.c:744:11
	movl	%r9d, %eax
	subl	%r15d, %eax
	movl	%r15d, %r10d
	subl	%ecx, %r10d
	cmpl	%r10d, %eax
	cmovgl	%r10d, %eax
.Ltmp3335:
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:m <- $eax
	.loc	3 744 37 is_stmt 0      # blocksort.c:744:37
	testl	%eax, %eax
	jle	.LBB18_125
.Ltmp3336:
# %bb.114:                              # %while.body172.preheader.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unHi <- $ecx
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%r9d, %esi
	notl	%esi
	addl	%r15d, %esi
	notl	%r15d
	addl	%r15d, %ecx
.Ltmp3337:
	cmpl	%ecx, %esi
	cmovgel	%esi, %ecx
	leal	1(%r9,%rcx), %edx
	movslq	%edx, %rdx
	movslq	%r8d, %r11
	movl	$-2, %ebp
	subl	%ecx, %ebp
	leaq	1(%rbp), %r13
	cmpq	$8, %r13
	jb	.LBB18_115
.Ltmp3338:
# %bb.116:                              # %vector.memcheck363.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movq	8(%rsp), %rcx           # 8-byte Reload
	leaq	(%rcx,%r11,4), %rcx
	leaq	(%rdx,%rbp), %rsi
	movq	248(%rsp), %rdi         # 8-byte Reload
	leaq	(%rdi,%rsi,4), %rsi
	cmpq	%rsi, %rcx
	jae	.LBB18_119
.Ltmp3339:
# %bb.117:                              # %vector.memcheck363.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	leaq	(%r11,%rbp), %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r14,%rdx,4), %rsi
	cmpq	%rcx, %rsi
	jae	.LBB18_119
.Ltmp3340:
.LBB18_115:                             #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:m <- $eax
	#DEBUG_VALUE: yyn <- $eax
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movq	%r11, %rcx
.Ltmp3341:
.LBB18_123:                             # %while.body172.i.i.preheader.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movq	8(%rsp), %rsi           # 8-byte Reload
.Ltmp3342:
	.p2align	4, 0x90
.LBB18_124:                             # %while.body172.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: yyp1 <- undef
	#DEBUG_VALUE: yyn <- $eax
	.loc	3 744 37                # blocksort.c:744:37
	movl	(%rsi,%rcx,4), %edi
.Ltmp3343:
	#DEBUG_VALUE: zztmp <- $edi
	movl	4(%rsi,%rdx,4), %ebp
	movl	%ebp, (%rsi,%rcx,4)
.Ltmp3344:
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	movl	%edi, 4(%rsi,%rdx,4)
.Ltmp3345:
	#DEBUG_VALUE: yyp1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: yyp2 <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 744 37                # blocksort.c:744:37
	addq	$4, %rsi
	addl	$-1, %eax
.Ltmp3346:
	jg	.LBB18_124
.Ltmp3347:
.LBB18_125:                             # %while.end185.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:unLo <- $r8d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 37                  # blocksort.c:0:37
	movq	112(%rsp), %rdx         # 8-byte Reload
	.loc	3 746 14 is_stmt 1      # blocksort.c:746:14
	movl	%edx, %eax
	subl	%r12d, %eax
	.loc	3 746 21 is_stmt 0      # blocksort.c:746:21
	leal	(%rax,%r8), %r11d
.Ltmp3348:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 64 32] $r11d
	.loc	3 746 28                # blocksort.c:746:28
	leal	(%rax,%r8), %r8d
.Ltmp3349:
	addl	$-1, %r8d
.Ltmp3350:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 0 32] $r8d
	#DEBUG_VALUE: mainQSort3:n <- $r8d
	.loc	3 747 14 is_stmt 1      # blocksort.c:747:14
	movl	%r9d, %ebp
	subl	%r10d, %ebp
.Ltmp3351:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 64 32] $ebp
	.loc	3 747 30 is_stmt 0      # blocksort.c:747:30
	leal	1(%rbp), %eax
.Ltmp3352:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: mainQSort3:m <- $eax
	.loc	3 753 11 is_stmt 1      # blocksort.c:753:11
	movl	%r8d, %ecx
	subl	%edx, %ecx
	.loc	3 753 26 is_stmt 0      # blocksort.c:753:26
	movl	%r9d, %edi
	subl	%eax, %edi
	.loc	3 753 24                # blocksort.c:753:24
	cmpl	%edi, %ecx
.Ltmp3353:
	.loc	3 753 11                # blocksort.c:753:11
	movl	%eax, %ecx
	cmovll	%edx, %ecx
.Ltmp3354:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 32 32] $ecx
	cmovll	%eax, %edx
.Ltmp3355:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edx
	movl	%r9d, %ebx
	cmovll	%r8d, %ebx
.Ltmp3356:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $ebx
	cmovll	%r9d, %r8d
.Ltmp3357:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 0 32] $r8d
	.loc	3 0 11                  # blocksort.c:0:11
	movq	16(%rsp), %r14          # 8-byte Reload
	.loc	3 751 53 is_stmt 1      # blocksort.c:751:53
	leal	1(%r14), %r15d
.Ltmp3358:
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 64 32] $r15d
	.loc	3 754 11                # blocksort.c:754:11
	movl	%ebx, %eax
.Ltmp3359:
	subl	%ecx, %eax
	.loc	3 754 26 is_stmt 0      # blocksort.c:754:26
	movl	%ebp, %esi
	subl	%r11d, %esi
	.loc	3 754 24                # blocksort.c:754:24
	cmpl	%esi, %eax
.Ltmp3360:
	.loc	3 754 11                # blocksort.c:754:11
	movl	%ecx, %esi
	cmovll	%r11d, %esi
.Ltmp3361:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 32 32] $esi
	movl	%ebp, %r10d
	cmovll	%ebx, %r10d
.Ltmp3362:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 64 32] $r10d
	cmovll	%ebp, %ebx
	movl	%r14d, %ebp
	cmovll	%r15d, %ebp
.Ltmp3363:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $ebx
	cmovll	%r14d, %r15d
.Ltmp3364:
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 64 32] $r15d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 32 32] $ebp
	cmovgel	%r11d, %ecx
.Ltmp3365:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 64 32] $ecx
	.loc	3 755 11 is_stmt 1      # blocksort.c:755:11
	movl	%r8d, %eax
	subl	%edx, %eax
	.loc	3 755 26 is_stmt 0      # blocksort.c:755:26
	movl	%ebx, %edi
	subl	%esi, %edi
	.loc	3 755 24                # blocksort.c:755:24
	cmpl	%edi, %eax
.Ltmp3366:
	.loc	3 755 11                # blocksort.c:755:11
	movl	%esi, %r9d
.Ltmp3367:
	cmovll	%edx, %r9d
.Ltmp3368:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 32 32] $r9d
	cmovgel	%edx, %esi
.Ltmp3369:
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $esi
	movl	%ebx, %edi
	cmovll	%r8d, %edi
.Ltmp3370:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $edi
	cmovgel	%r8d, %ebx
.Ltmp3371:
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 0 32] $ebx
	movl	%ebp, %edx
	cmovll	%r14d, %edx
.Ltmp3372:
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 32 32] $edx
	cmovgel	%r14d, %ebp
.Ltmp3373:
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_LLVM_fragment 0 32] $ebp
	.loc	3 0 11                  # blocksort.c:0:11
	movq	64(%rsp), %rax          # 8-byte Reload
.Ltmp3374:
	.loc	3 760 7 is_stmt 1       # blocksort.c:760:7
	movl	%esi, 2352(%rsp,%rax,4)
	movl	%ebx, 1952(%rsp,%rax,4)
	movl	%ebp, 1552(%rsp,%rax,4)
	movq	80(%rsp), %rbp          # 8-byte Reload
.Ltmp3375:
	.loc	3 761 7                 # blocksort.c:761:7
	movslq	%ebp, %rsi
.Ltmp3376:
	movl	%r9d, 2352(%rsp,%rsi,4)
	movl	%edi, 1952(%rsp,%rsi,4)
	movl	%edx, 1552(%rsp,%rsi,4)
.Ltmp3377:
	#DEBUG_VALUE: mainQSort3:sp <- undef
	.loc	3 762 7                 # blocksort.c:762:7
	movl	%ecx, 2356(%rsp,%rsi,4)
	movl	%r10d, 1956(%rsp,%rsi,4)
	movl	%r15d, 1556(%rsp,%rsi,4)
	addl	$2, %ebp
.Ltmp3378:
	#DEBUG_VALUE: mainQSort3:sp <- $ebp
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	movl	%ebp, %eax
	movl	%ebp, 104(%rsp)         # 4-byte Spill
	movq	72(%rsp), %r15          # 8-byte Reload
	movl	4(%rsp), %ebp           # 4-byte Reload
.Ltmp3379:
	jmp	.LBB18_126
.Ltmp3380:
	.p2align	4, 0x90
.LBB18_78:                              # %if.then14.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 545 13 is_stmt 1      # blocksort.c:545:13
	testl	%eax, %eax
	movq	72(%rsp), %r15          # 8-byte Reload
.Ltmp3381:
	.loc	3 545 8 is_stmt 0       # blocksort.c:545:8
	jle	.LBB18_102
.Ltmp3382:
# %bb.79:                               # %while.cond.i.i.i.i.preheader
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 8                   # blocksort.c:0:8
	movq	$-1, %rcx
	movl	4(%rsp), %ebp           # 4-byte Reload
.Ltmp3383:
	.p2align	4, 0x90
.LBB18_80:                              # %while.cond.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:hp <- undef
	#DEBUG_VALUE: mainSimpleSort:hp <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 548 20 is_stmt 1      # blocksort.c:548:20
	cmpl	%eax, incs+4(,%rcx,4)
	.loc	3 548 4 is_stmt 0       # blocksort.c:548:4
	leaq	1(%rcx), %rcx
	jle	.LBB18_80
.Ltmp3384:
# %bb.81:                               # %for.cond.preheader.i.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:hp <- undef
	.loc	3 551 14 is_stmt 1      # blocksort.c:551:14
	testl	%ecx, %ecx
.Ltmp3385:
	.loc	3 551 4 is_stmt 0       # blocksort.c:551:4
	je	.LBB18_103
.Ltmp3386:
# %bb.82:                               # %for.body.preheader.i.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	movl	%ecx, %eax
	leal	1(%rdi), %ecx
	movl	%ecx, 140(%rsp)         # 4-byte Spill
	leal	2(%rdi), %ecx
	movl	%ecx, 136(%rsp)         # 4-byte Spill
	movq	%rdx, 120(%rsp)         # 8-byte Spill
.Ltmp3387:
.LBB18_83:                              # %for.body.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB18_84 Depth 5
                                        #             Child Loop BB18_86 Depth 6
                                        #             Child Loop BB18_91 Depth 6
                                        #             Child Loop BB18_96 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 552 11 is_stmt 1      # blocksort.c:552:11
	movl	incs-4(,%rax,4), %r13d
.Ltmp3388:
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	addq	$-1, %rax
.Ltmp3389:
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	movq	%rax, 264(%rsp)         # 8-byte Spill
.Ltmp3390:
	.loc	3 554 14 is_stmt 1      # blocksort.c:554:14
	leal	(%rdi,%r13), %eax
.Ltmp3391:
	#DEBUG_VALUE: mainSimpleSort:i <- $eax
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movl	%eax, 80(%rsp)          # 4-byte Spill
.Ltmp3392:
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	.loc	3 555 7 is_stmt 1       # blocksort.c:555:7
	movslq	%eax, %rcx
	movl	136(%rsp), %eax         # 4-byte Reload
	movl	%eax, 108(%rsp)         # 4-byte Spill
	movl	140(%rsp), %eax         # 4-byte Reload
	movl	%eax, 24(%rsp)          # 4-byte Spill
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	movl	%edi, %eax
	movl	%edi, 4(%rsp)           # 4-byte Spill
.Ltmp3393:
	.p2align	4, 0x90
.LBB18_84:                              # %while.cond6.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_83 Depth=4
                                        # =>        This Loop Header: Depth=5
                                        #             Child Loop BB18_86 Depth 6
                                        #             Child Loop BB18_91 Depth 6
                                        #             Child Loop BB18_96 Depth 6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- $rcx
	#DEBUG_VALUE: mainSimpleSort:j <- $rcx
	.loc	3 558 16 is_stmt 1      # blocksort.c:558:16
	cmpq	%rdx, %rcx
	movq	8(%rsp), %r14           # 8-byte Reload
.Ltmp3394:
	.loc	3 558 14 is_stmt 0      # blocksort.c:558:14
	jg	.LBB18_100
.Ltmp3395:
# %bb.85:                               # %if.end10.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- $rcx
	#DEBUG_VALUE: mainSimpleSort:i <- $rcx
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 14                  # blocksort.c:0:14
	movq	%rcx, 64(%rsp)          # 8-byte Spill
.Ltmp3396:
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 64] [$rsp+0]
	.loc	3 559 14 is_stmt 1      # blocksort.c:559:14
	movl	(%r14,%rcx,4), %eax
.Ltmp3397:
	#DEBUG_VALUE: mainSimpleSort:v <- $eax
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movq	%rax, 88(%rsp)          # 8-byte Spill
.Ltmp3398:
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	leal	(%rax,%rsi), %r12d
.Ltmp3399:
	movl	4(%rsp), %eax           # 4-byte Reload
                                        # kill: def $eax killed $eax def $rax
	movq	48(%rsp), %rbp          # 8-byte Reload
.Ltmp3400:
	.p2align	4, 0x90
.LBB18_86:                              # %while.cond13.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_83 Depth=4
                                        #           Parent Loop BB18_84 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- $rcx
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 562 26 is_stmt 1      # blocksort.c:562:26
	leal	(%rax,%r13), %r15d
.Ltmp3401:
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 562 21 is_stmt 0      # blocksort.c:562:21
	movslq	%eax, %rbx
	movl	(%r14,%rbx,4), %edi
.Ltmp3402:
	.loc	3 562 29                # blocksort.c:562:29
	addl	%esi, %edi
.Ltmp3403:
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	.loc	3 561 18 is_stmt 1      # blocksort.c:561:18
	movl	%r12d, %esi
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	%rbp, %rcx
	movq	72(%rsp), %r8           # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	leaq	28(%rsp), %r9
.Ltmp3404:
	callq	mainGtU
	.loc	3 561 10 is_stmt 0      # blocksort.c:561:10
	testb	%al, %al
	je	.LBB18_88
.Ltmp3405:
# %bb.87:                               # %while.body19.i.i.i.i
                                        #   in Loop: Header=BB18_86 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 564 22 is_stmt 1      # blocksort.c:564:22
	movl	(%r14,%rbx,4), %eax
	.loc	3 564 13 is_stmt 0      # blocksort.c:564:13
	movslq	%r15d, %rcx
	.loc	3 564 20                # blocksort.c:564:20
	movl	%eax, (%r14,%rcx,4)
.Ltmp3406:
	.loc	3 566 19 is_stmt 1      # blocksort.c:566:19
	movl	%ebx, %eax
	subl	%r13d, %eax
	cmpl	80(%rsp), %ebx          # 4-byte Folded Reload
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3407:
	.loc	3 566 17 is_stmt 0      # blocksort.c:566:17
	jge	.LBB18_86
	jmp	.LBB18_89
.Ltmp3408:
	.p2align	4, 0x90
.LBB18_88:                              # %while.cond13.while.end31_crit_edge.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 568 10 is_stmt 1      # blocksort.c:568:10
	movslq	%r15d, %rbx
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3409:
.LBB18_89:                              # %while.end31.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movq	88(%rsp), %rax          # 8-byte Reload
	.loc	3 568 17                # blocksort.c:568:17
	movl	%eax, (%r14,%rbx,4)
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
.Ltmp3410:
	.loc	3 572 16 is_stmt 1      # blocksort.c:572:16
	cmpq	%rdx, %rax
	movq	72(%rsp), %r15          # 8-byte Reload
.Ltmp3411:
	.loc	3 572 14 is_stmt 0      # blocksort.c:572:14
	jge	.LBB18_100
.Ltmp3412:
# %bb.90:                               # %if.end37.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 573 14 is_stmt 1      # blocksort.c:573:14
	movl	4(%r14,%rax,4), %eax
.Ltmp3413:
	#DEBUG_VALUE: mainSimpleSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSimpleSort:v <- $eax
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movq	%rax, 88(%rsp)          # 8-byte Spill
.Ltmp3414:
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	leal	(%rax,%rsi), %ebx
	movl	24(%rsp), %eax          # 4-byte Reload
                                        # kill: def $eax killed $eax def $rax
.Ltmp3415:
	.p2align	4, 0x90
.LBB18_91:                              # %while.cond40.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_83 Depth=4
                                        #           Parent Loop BB18_84 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 576 26 is_stmt 1      # blocksort.c:576:26
	leal	(%rax,%r13), %ebp
	.loc	3 576 21 is_stmt 0      # blocksort.c:576:21
	movslq	%eax, %r12
	movl	(%r14,%r12,4), %edi
	.loc	3 576 29                # blocksort.c:576:29
	addl	%esi, %edi
	.loc	3 575 18 is_stmt 1      # blocksort.c:575:18
	movl	%ebx, %esi
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	48(%rsp), %rcx          # 8-byte Reload
	movl	%r15d, %r8d
	leaq	28(%rsp), %r9
	callq	mainGtU
	.loc	3 575 10 is_stmt 0      # blocksort.c:575:10
	testb	%al, %al
	je	.LBB18_93
.Ltmp3416:
# %bb.92:                               # %while.body48.i.i.i.i
                                        #   in Loop: Header=BB18_91 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 578 22 is_stmt 1      # blocksort.c:578:22
	movl	(%r14,%r12,4), %eax
	.loc	3 578 13 is_stmt 0      # blocksort.c:578:13
	movslq	%ebp, %rcx
	.loc	3 578 20                # blocksort.c:578:20
	movl	%eax, (%r14,%rcx,4)
.Ltmp3417:
	.loc	3 580 19 is_stmt 1      # blocksort.c:580:19
	movl	%r12d, %eax
	subl	%r13d, %eax
	cmpl	80(%rsp), %r12d         # 4-byte Folded Reload
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3418:
	.loc	3 580 17 is_stmt 0      # blocksort.c:580:17
	jge	.LBB18_91
	jmp	.LBB18_94
.Ltmp3419:
	.p2align	4, 0x90
.LBB18_93:                              # %while.cond40.while.end60_crit_edge.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 582 10 is_stmt 1      # blocksort.c:582:10
	movslq	%ebp, %r12
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3420:
.LBB18_94:                              # %while.end60.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movq	88(%rsp), %rax          # 8-byte Reload
	.loc	3 582 17                # blocksort.c:582:17
	movl	%eax, (%r14,%r12,4)
.Ltmp3421:
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	.loc	3 0 17                  # blocksort.c:0:17
	movq	64(%rsp), %rcx          # 8-byte Reload
	.loc	3 583 11 is_stmt 1      # blocksort.c:583:11
	leaq	2(%rcx), %rax
	movq	120(%rsp), %rdx         # 8-byte Reload
.Ltmp3422:
	.loc	3 586 16                # blocksort.c:586:16
	cmpq	%rdx, %rax
.Ltmp3423:
	.loc	3 586 14 is_stmt 0      # blocksort.c:586:14
	jg	.LBB18_100
.Ltmp3424:
# %bb.95:                               # %if.end66.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 587 14 is_stmt 1      # blocksort.c:587:14
	movl	8(%r14,%rcx,4), %eax
.Ltmp3425:
	#DEBUG_VALUE: mainSimpleSort:j <- [DW_OP_plus_uconst 2, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSimpleSort:v <- $eax
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movq	%rax, 88(%rsp)          # 8-byte Spill
.Ltmp3426:
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	leal	(%rax,%rsi), %ebx
	movl	108(%rsp), %eax         # 4-byte Reload
                                        # kill: def $eax killed $eax def $rax
.Ltmp3427:
	.p2align	4, 0x90
.LBB18_96:                              # %while.cond69.i.i.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        #     Parent Loop BB18_38 Depth=2
                                        #       Parent Loop BB18_43 Depth=3
                                        #         Parent Loop BB18_83 Depth=4
                                        #           Parent Loop BB18_84 Depth=5
                                        # =>          This Inner Loop Header: Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 590 26 is_stmt 1      # blocksort.c:590:26
	leal	(%rax,%r13), %ebp
	.loc	3 590 21 is_stmt 0      # blocksort.c:590:21
	movslq	%eax, %r12
	movl	(%r14,%r12,4), %edi
	.loc	3 590 29                # blocksort.c:590:29
	addl	%esi, %edi
	.loc	3 589 18 is_stmt 1      # blocksort.c:589:18
	movl	%ebx, %esi
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	48(%rsp), %rcx          # 8-byte Reload
	movl	%r15d, %r8d
	leaq	28(%rsp), %r9
	callq	mainGtU
	.loc	3 589 10 is_stmt 0      # blocksort.c:589:10
	testb	%al, %al
	je	.LBB18_98
.Ltmp3428:
# %bb.97:                               # %while.body77.i.i.i.i
                                        #   in Loop: Header=BB18_96 Depth=6
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 592 22 is_stmt 1      # blocksort.c:592:22
	movl	(%r14,%r12,4), %eax
	.loc	3 592 13 is_stmt 0      # blocksort.c:592:13
	movslq	%ebp, %rcx
	.loc	3 592 20                # blocksort.c:592:20
	movl	%eax, (%r14,%rcx,4)
.Ltmp3429:
	.loc	3 594 19 is_stmt 1      # blocksort.c:594:19
	movl	%r12d, %eax
	subl	%r13d, %eax
	cmpl	80(%rsp), %r12d         # 4-byte Folded Reload
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3430:
	.loc	3 594 17 is_stmt 0      # blocksort.c:594:17
	jge	.LBB18_96
	jmp	.LBB18_99
.Ltmp3431:
	.p2align	4, 0x90
.LBB18_98:                              # %while.cond69.while.end89_crit_edge.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:j <- undef
	.loc	3 596 10 is_stmt 1      # blocksort.c:596:10
	movslq	%ebp, %r12
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3432:
.LBB18_99:                              # %while.end89.i.i.i.i
                                        #   in Loop: Header=BB18_84 Depth=5
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:budget <- [DW_OP_plus_uconst 28] $rsp
	#DEBUG_VALUE: mainSimpleSort:v <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 10 is_stmt 0        # blocksort.c:0:10
	movq	88(%rsp), %rax          # 8-byte Reload
	.loc	3 596 17                # blocksort.c:596:17
	movl	%eax, (%r14,%r12,4)
	movq	64(%rsp), %rcx          # 8-byte Reload
	.loc	3 597 11 is_stmt 1      # blocksort.c:597:11
	addq	$3, %rcx
.Ltmp3433:
	#DEBUG_VALUE: mainSimpleSort:i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] undef
	.loc	3 599 14                # blocksort.c:599:14
	movl	28(%rsp), %ebp
.Ltmp3434:
	.loc	3 599 14 is_stmt 0      # blocksort.c:599:14
	addl	$3, 4(%rsp)             # 4-byte Folded Spill
	addl	$3, 24(%rsp)            # 4-byte Folded Spill
	addl	$3, 108(%rsp)           # 4-byte Folded Spill
	movl	%ebp, %eax
.Ltmp3435:
	.loc	3 599 22                # blocksort.c:599:22
	testl	%ebp, %ebp
	movq	120(%rsp), %rdx         # 8-byte Reload
.Ltmp3436:
	.loc	3 599 14                # blocksort.c:599:14
	jns	.LBB18_84
	jmp	.LBB18_127
.Ltmp3437:
	.p2align	4, 0x90
.LBB18_100:                             # %for.inc.i.i.i.i
                                        #   in Loop: Header=BB18_83 Depth=4
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:h <- $r13d
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSimpleSort:hp <- [DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 0 14                  # blocksort.c:0:14
	movq	264(%rsp), %rax         # 8-byte Reload
	.loc	3 551 14 is_stmt 1      # blocksort.c:551:14
	testq	%rax, %rax
	movq	112(%rsp), %rdi         # 8-byte Reload
.Ltmp3438:
	.loc	3 551 4 is_stmt 0       # blocksort.c:551:4
	jg	.LBB18_83
.Ltmp3439:
# %bb.101:                              # %mainSimpleSort.exit.i.i.loopexit.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 699 14 is_stmt 1      # blocksort.c:699:14
	movl	28(%rsp), %ebp
	movl	%ebp, 24(%rsp)          # 4-byte Spill
	jmp	.LBB18_103
.Ltmp3440:
.LBB18_102:                             #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextHi <- [DW_OP_LLVM_fragment 32 32] $r9d
	#DEBUG_VALUE: mainQSort3:unHi <- $r9d
	#DEBUG_VALUE: mainQSort3:gtHi <- $r9d
	#DEBUG_VALUE: mainQSort3:hi <- $r9d
	#DEBUG_VALUE: mainQSort3:nextLo <- [DW_OP_LLVM_fragment 0 32] $edi
	#DEBUG_VALUE: mainQSort3:unLo <- $edi
	#DEBUG_VALUE: mainQSort3:ltLo <- $edi
	#DEBUG_VALUE: mainQSort3:lo <- $edi
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 14 is_stmt 0        # blocksort.c:0:14
	movl	4(%rsp), %ebp           # 4-byte Reload
.Ltmp3441:
.LBB18_103:                             # %mainSimpleSort.exit.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:nextD <- [DW_OP_plus_uconst 16, DW_OP_LLVM_fragment 0 32] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	24(%rsp), %ecx          # 4-byte Reload
	movl	%ecx, %eax
	.loc	3 699 22                # blocksort.c:699:22
	testl	%ecx, %ecx
.Ltmp3442:
	.loc	3 699 14                # blocksort.c:699:14
	js	.LBB18_127
.Ltmp3443:
.LBB18_126:                             # %while.cond.outer.backedge.i.i.i
                                        #   in Loop: Header=BB18_43 Depth=3
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:d <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	.loc	3 0 14                  # blocksort.c:0:14
	movl	104(%rsp), %edx         # 4-byte Reload
.Ltmp3444:
	#DEBUG_VALUE: mainQSort3:sp <- $edx
	movl	%edx, %ecx
	movl	%ebp, %eax
	.loc	3 691 14 is_stmt 1      # blocksort.c:691:14
	testl	%edx, %edx
.Ltmp3445:
	#DEBUG_VALUE: mainQSort3:sp <- $ecx
	.loc	3 691 4 is_stmt 0       # blocksort.c:691:4
	jg	.LBB18_43
.Ltmp3446:
.LBB18_127:                             # %mainQSort3.exit.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 949 31 is_stmt 1      # blocksort.c:949:31
	testl	%eax, %eax
.Ltmp3447:
	.loc	3 949 23 is_stmt 0      # blocksort.c:949:23
	js	.LBB18_167
.Ltmp3448:
# %bb.128:                              # %mainQSort3.exit.if.end322_crit_edge.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 23                  # blocksort.c:0:23
	movl	%ebp, 4(%rsp)           # 4-byte Spill
	movl	44(%rsp), %ecx          # 4-byte Reload
	.loc	3 948 37 is_stmt 1      # blocksort.c:948:37
	addl	$1, %ecx
	.loc	3 948 42 is_stmt 0      # blocksort.c:948:42
	subl	60(%rsp), %ecx          # 4-byte Folded Reload
	.loc	3 948 30                # blocksort.c:948:30
	addl	56(%rsp), %ecx          # 4-byte Folded Reload
.Ltmp3449:
	#DEBUG_VALUE: mainSort:numQSorted <- $ecx
	.loc	3 0 30                  # blocksort.c:0:30
	movl	%ecx, 44(%rsp)          # 4-byte Spill
.Ltmp3450:
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	movq	168(%rsp), %r12         # 8-byte Reload
	movq	192(%rsp), %rdx         # 8-byte Reload
.Ltmp3451:
	.loc	3 952 22 is_stmt 1      # blocksort.c:952:22
	movl	(%r12,%rdx,4), %ecx
	movq	176(%rsp), %r13         # 8-byte Reload
	movl	40(%rsp), %r14d         # 4-byte Reload
	movl	$-2097153, %r9d         # imm = 0xFFDFFFFF
	movq	184(%rsp), %rdi         # 8-byte Reload
.Ltmp3452:
.LBB18_131:                             # %if.end322.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	orl	$2097152, %ecx          # imm = 0x200000
	movl	%ecx, (%r12,%rdx,4)
	movl	%eax, %ebp
	movq	200(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %rax         # 8-byte Reload
.Ltmp3453:
.LBB18_132:                             # %for.inc327.i.i
                                        #   in Loop: Header=BB18_38 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 933 30                # blocksort.c:933:30
	addq	$1, %rax
	.loc	3 933 21 is_stmt 0      # blocksort.c:933:21
	cmpq	$256, %rax              # imm = 0x100
.Ltmp3454:
	.loc	3 933 7                 # blocksort.c:933:7
	jb	.LBB18_38
.Ltmp3455:
# %bb.133:                              # %for.end329.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 956 7 is_stmt 1       # blocksort.c:956:7
	movslq	%ecx, %rax
	cmpb	$0, 1296(%rsp,%rax)
.Ltmp3456:
	.loc	3 956 7 is_stmt 0       # blocksort.c:956:7
	jne	.LBB18_288
.Ltmp3457:
# %bb.134:                              # %for.body338.i.i.preheader
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 7                   # blocksort.c:0:7
	movq	232(%rsp), %rcx         # 8-byte Reload
.Ltmp3458:
	.loc	3 967 37 is_stmt 1      # blocksort.c:967:37
	leaq	(%rcx,%rax,4), %rcx
	xorl	%edx, %edx
.Ltmp3459:
	.p2align	4, 0x90
.LBB18_135:                             # %for.body338.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $rdx
	.loc	3 0 37 is_stmt 0        # blocksort.c:0:37
	movl	-1028(%rcx), %esi
	.loc	3 967 53                # blocksort.c:967:53
	andl	%r9d, %esi
	.loc	3 967 26                # blocksort.c:967:26
	movl	%esi, 3776(%rsp,%rdx,4)
	movl	-1024(%rcx), %esi
	.loc	3 968 53 is_stmt 1      # blocksort.c:968:53
	andl	%r9d, %esi
	.loc	3 968 66 is_stmt 0      # blocksort.c:968:66
	addl	$-1, %esi
	.loc	3 968 26                # blocksort.c:968:26
	movl	%esi, 2752(%rsp,%rdx,4)
.Ltmp3460:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 0 26                  # blocksort.c:0:26
	movl	-4(%rcx), %esi
	.loc	3 967 53 is_stmt 1      # blocksort.c:967:53
	andl	%r9d, %esi
	.loc	3 967 26 is_stmt 0      # blocksort.c:967:26
	movl	%esi, 3780(%rsp,%rdx,4)
	movl	(%rcx), %esi
	.loc	3 968 53 is_stmt 1      # blocksort.c:968:53
	andl	%r9d, %esi
	.loc	3 968 66 is_stmt 0      # blocksort.c:968:66
	addl	$-1, %esi
	.loc	3 968 26                # blocksort.c:968:26
	movl	%esi, 2756(%rsp,%rdx,4)
.Ltmp3461:
	.loc	3 966 33 is_stmt 1      # blocksort.c:966:33
	addq	$2, %rdx
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 966 24 is_stmt 0      # blocksort.c:966:24
	addq	$2048, %rcx             # imm = 0x800
	cmpq	$256, %rdx              # imm = 0x100
.Ltmp3462:
	.loc	3 966 10                # blocksort.c:966:10
	jne	.LBB18_135
.Ltmp3463:
# %bb.136:                              # %for.end357.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 10                  # blocksort.c:0:10
	movl	%ebp, %r10d
.Ltmp3464:
	.loc	3 970 19 is_stmt 1      # blocksort.c:970:19
	movslq	(%r12,%rdi,4), %rdx
	.loc	3 970 33 is_stmt 0      # blocksort.c:970:33
	andq	$-2097153, %rdx         # imm = 0xFFDFFFFF
.Ltmp3465:
	#DEBUG_VALUE: mainSort:j <- $edx
	.loc	3 970 50                # blocksort.c:970:50
	movl	3776(%rsp,%rax,4), %ecx
	.loc	3 970 48                # blocksort.c:970:48
	cmpl	%ecx, %edx
.Ltmp3466:
	.loc	3 970 10                # blocksort.c:970:10
	jge	.LBB18_140
.Ltmp3467:
	.p2align	4, 0x90
.LBB18_137:                             # %for.body367.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $edx
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $rdx
	.loc	3 0 10                  # blocksort.c:0:10
	movq	8(%rsp), %rsi           # 8-byte Reload
.Ltmp3468:
	.loc	3 971 17 is_stmt 1      # blocksort.c:971:17
	movl	(%rsi,%rdx,4), %esi
	.loc	3 971 23 is_stmt 0      # blocksort.c:971:23
	leal	-1(%rsi), %edi
.Ltmp3469:
	#DEBUG_VALUE: mainSort:k <- $edi
	.loc	3 971 31                # blocksort.c:971:31
	sarl	$31, %edi
.Ltmp3470:
	andl	%r15d, %edi
	leal	(%rdi,%rsi), %esi
	addl	$-1, %esi
.Ltmp3471:
	#DEBUG_VALUE: mainSort:k <- $esi
	.loc	3 972 18 is_stmt 1      # blocksort.c:972:18
	movslq	%esi, %rdi
	movq	32(%rsp), %rbp          # 8-byte Reload
	movzbl	(%rbp,%rdi), %edi
.Ltmp3472:
	#DEBUG_VALUE: mainSort:c1 <- undef
	.loc	3 973 18                # blocksort.c:973:18
	cmpb	$0, 1296(%rsp,%rdi)
.Ltmp3473:
	.loc	3 973 17 is_stmt 0      # blocksort.c:973:17
	jne	.LBB18_139
.Ltmp3474:
# %bb.138:                              # %if.then381.i.i
                                        #   in Loop: Header=BB18_137 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:k <- $esi
	#DEBUG_VALUE: mainSort:j <- $rdx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 974 34 is_stmt 1      # blocksort.c:974:34
	movslq	3776(%rsp,%rdi,4), %rcx
	leal	1(%rcx), %ebp
	movl	%ebp, 3776(%rsp,%rdi,4)
	movq	8(%rsp), %rdi           # 8-byte Reload
	.loc	3 974 39 is_stmt 0      # blocksort.c:974:39
	movl	%esi, (%rdi,%rcx,4)
.Ltmp3475:
	.loc	3 970 50 is_stmt 1      # blocksort.c:970:50
	movl	3776(%rsp,%rax,4), %ecx
.Ltmp3476:
.LBB18_139:                             # %for.inc388.i.i
                                        #   in Loop: Header=BB18_137 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:k <- $esi
	#DEBUG_VALUE: mainSort:j <- $rdx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 970 66 is_stmt 0      # blocksort.c:970:66
	addq	$1, %rdx
	.loc	3 970 48                # blocksort.c:970:48
	movslq	%ecx, %rsi
.Ltmp3477:
	cmpq	%rsi, %rdx
.Ltmp3478:
	.loc	3 970 10                # blocksort.c:970:10
	jl	.LBB18_137
.Ltmp3479:
.LBB18_140:                             # %for.end390.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 10                  # blocksort.c:0:10
	movl	132(%rsp), %edx         # 4-byte Reload
.Ltmp3480:
	.loc	3 976 32 is_stmt 1      # blocksort.c:976:32
	addl	$256, %edx              # imm = 0x100
	.loc	3 976 20 is_stmt 0      # blocksort.c:976:20
	movslq	%edx, %r8
	movl	(%r12,%r8,4), %edi
	.loc	3 976 38                # blocksort.c:976:38
	andl	%r9d, %edi
.Ltmp3481:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edi
	.loc	3 0 0                   # blocksort.c:0:0
	addl	$-1, %edi
.Ltmp3482:
	#DEBUG_VALUE: mainSort:j <- $edi
	.loc	3 976 60                # blocksort.c:976:60
	movl	2752(%rsp,%rax,4), %esi
	.loc	3 976 58                # blocksort.c:976:58
	cmpl	%esi, %edi
.Ltmp3483:
	.loc	3 976 10                # blocksort.c:976:10
	jle	.LBB18_144
.Ltmp3484:
	.p2align	4, 0x90
.LBB18_142:                             # %for.body402.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $edi
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edi
	.loc	3 977 17 is_stmt 1      # blocksort.c:977:17
	movslq	%edi, %rbp
	movq	8(%rsp), %rdx           # 8-byte Reload
	movl	(%rdx,%rbp,4), %ebp
	.loc	3 977 23 is_stmt 0      # blocksort.c:977:23
	leal	-1(%rbp), %ebx
.Ltmp3485:
	#DEBUG_VALUE: mainSort:k <- $ebx
	.loc	3 977 31                # blocksort.c:977:31
	sarl	$31, %ebx
.Ltmp3486:
	andl	%r15d, %ebx
	leal	(%rbx,%rbp), %ebp
	addl	$-1, %ebp
.Ltmp3487:
	#DEBUG_VALUE: mainSort:k <- $ebp
	.loc	3 978 18 is_stmt 1      # blocksort.c:978:18
	movslq	%ebp, %rbx
	movq	32(%rsp), %rdx          # 8-byte Reload
	movzbl	(%rdx,%rbx), %ebx
	#DEBUG_VALUE: mainSort:c1 <- undef
.Ltmp3488:
	.loc	3 979 18                # blocksort.c:979:18
	cmpb	$0, 1296(%rsp,%rbx)
.Ltmp3489:
	.loc	3 979 17 is_stmt 0      # blocksort.c:979:17
	jne	.LBB18_141
.Ltmp3490:
# %bb.143:                              # %if.then416.i.i
                                        #   in Loop: Header=BB18_142 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:k <- $ebp
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $edi
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 980 32 is_stmt 1      # blocksort.c:980:32
	movslq	2752(%rsp,%rbx,4), %rsi
	leal	-1(%rsi), %edx
	movl	%edx, 2752(%rsp,%rbx,4)
	movq	8(%rsp), %rdx           # 8-byte Reload
	.loc	3 980 37 is_stmt 0      # blocksort.c:980:37
	movl	%ebp, (%rdx,%rsi,4)
.Ltmp3491:
	.loc	3 976 60 is_stmt 1      # blocksort.c:976:60
	movl	2752(%rsp,%rax,4), %esi
.Ltmp3492:
.LBB18_141:                             # %for.inc423.i.i
                                        #   in Loop: Header=BB18_142 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:k <- $ebp
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $edi
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	addl	$-1, %edi
.Ltmp3493:
	.loc	3 976 58                # blocksort.c:976:58
	cmpl	%esi, %edi
.Ltmp3494:
	.loc	3 976 10                # blocksort.c:976:10
	jg	.LBB18_142
.Ltmp3495:
.LBB18_144:                             # %for.end425.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 984 7 is_stmt 1       # blocksort.c:984:7
	leal	-1(%rcx), %edx
	cmpl	%esi, %edx
	movq	184(%rsp), %rdx         # 8-byte Reload
	je	.LBB18_147
.Ltmp3496:
# %bb.145:                              # %lor.lhs.false.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	testl	%ecx, %ecx
	jne	.LBB18_289
.Ltmp3497:
# %bb.146:                              # %lor.lhs.false.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	cmpl	100(%rsp), %esi         # 4-byte Folded Reload
	jne	.LBB18_289
.Ltmp3498:
.LBB18_147:                             # %for.body447.i.preheader.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 7 is_stmt 0         # blocksort.c:0:7
	movq	224(%rsp), %rcx         # 8-byte Reload
.Ltmp3499:
	.loc	3 993 42 is_stmt 1      # blocksort.c:993:42
	leaq	(%rcx,%rax,4), %rcx
	xorl	%esi, %esi
	movl	%r10d, %ebp
.Ltmp3500:
	.p2align	4, 0x90
.LBB18_148:                             # %for.body447.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- undef
	.loc	3 993 54 is_stmt 0      # blocksort.c:993:54
	orb	$32, -3070(%rcx,%rsi)
.Ltmp3501:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 1, DW_OP_or, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	orb	$32, -2046(%rcx,%rsi)
.Ltmp3502:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 2, DW_OP_or, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	orb	$32, -1022(%rcx,%rsi)
.Ltmp3503:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 2, DW_OP_or, DW_OP_constu 1, DW_OP_or, DW_OP_stack_value] undef
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	orb	$32, 2(%rcx,%rsi)
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 993 21                # blocksort.c:993:21
	addq	$4096, %rsi             # imm = 0x1000
	cmpq	$262144, %rsi           # imm = 0x40000
.Ltmp3504:
	.loc	3 993 7                 # blocksort.c:993:7
	jne	.LBB18_148
.Ltmp3505:
# %bb.149:                              # %for.end455.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1034 19 is_stmt 1     # blocksort.c:1034:19
	movb	$1, 1296(%rsp,%rax)
	movq	152(%rsp), %rax         # 8-byte Reload
.Ltmp3506:
	.loc	3 1036 13               # blocksort.c:1036:13
	cmpq	$254, %rax
.Ltmp3507:
	.loc	3 1036 11 is_stmt 0     # blocksort.c:1036:11
	ja	.LBB18_164
.Ltmp3508:
# %bb.150:                              # %if.then460.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1037 27 is_stmt 1     # blocksort.c:1037:27
	movslq	(%r12,%rdx,4), %rsi
	.loc	3 1037 41 is_stmt 0     # blocksort.c:1037:41
	andq	$-2097153, %rsi         # imm = 0xFFDFFFFF
.Ltmp3509:
	#DEBUG_VALUE: bbStart <- $esi
	.loc	3 0 41                  # blocksort.c:0:41
	movl	(%r12,%r8,4), %edi
	.loc	3 1038 46 is_stmt 1     # blocksort.c:1038:46
	andl	%r9d, %edi
	.loc	3 1038 59 is_stmt 0     # blocksort.c:1038:59
	subl	%esi, %edi
.Ltmp3510:
	#DEBUG_VALUE: shifts <- 0
	#DEBUG_VALUE: bbSize <- $edi
	.loc	3 0 59                  # blocksort.c:0:59
	movl	$-1, %ecx
.Ltmp3511:
	.p2align	4, 0x90
.LBB18_151:                             # %while.cond471.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: shifts <- undef
	.loc	3 1041 25 is_stmt 1     # blocksort.c:1041:25
	addl	$1, %ecx
	movl	%edi, %eax
	sarl	%cl, %eax
.Ltmp3512:
	#DEBUG_VALUE: shifts <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 1041 36 is_stmt 0     # blocksort.c:1041:36
	cmpl	$65534, %eax            # imm = 0xFFFE
	.loc	3 1041 10               # blocksort.c:1041:10
	jg	.LBB18_151
.Ltmp3513:
# %bb.152:                              # %while.end477.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: shifts <- undef
	.loc	3 1043 25 is_stmt 1     # blocksort.c:1043:25
	leal	-1(%rdi), %eax
.Ltmp3514:
	#DEBUG_VALUE: mainSort:j <- $eax
	.loc	3 1043 31 is_stmt 0     # blocksort.c:1043:31
	testl	%edi, %edi
.Ltmp3515:
	.loc	3 1043 10               # blocksort.c:1043:10
	jle	.LBB18_163
.Ltmp3516:
# %bb.153:                              # %for.body482.preheader.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $eax
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1044 46 is_stmt 1     # blocksort.c:1044:46
	movslq	%edi, %rdx
	testb	$1, %dl
	je	.LBB18_156
.Ltmp3517:
# %bb.154:                              # %for.body482.i.prol.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $eax
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	leaq	(%rdx,%rsi), %r8
	addq	$-1, %r8
.Ltmp3518:
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	addq	$-1, %rdx
.Ltmp3519:
	#DEBUG_VALUE: mainSort:j <- $rdx
	.loc	3 1045 45 is_stmt 1     # blocksort.c:1045:45
	movl	%edx, %ebp
	shrl	%cl, %ebp
	movq	8(%rsp), %rbx           # 8-byte Reload
	.loc	3 1044 34               # blocksort.c:1044:34
	movslq	(%rbx,%r8,4), %rbx
	movq	48(%rsp), %r8           # 8-byte Reload
	.loc	3 1046 32               # blocksort.c:1046:32
	movw	%bp, (%r8,%rbx,2)
	.loc	3 1044 34               # blocksort.c:1044:34
	cmpq	$33, %rbx
.Ltmp3520:
	#DEBUG_VALUE: qVal <- $bp
	.loc	3 1047 17               # blocksort.c:1047:17
	jg	.LBB18_156
.Ltmp3521:
# %bb.155:                              # %if.then492.i.prol.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: qVal <- $bp
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:j <- $rdx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: a2update <- $ebx
	.loc	3 1048 34               # blocksort.c:1048:34
	addl	%r15d, %ebx
.Ltmp3522:
	.loc	3 1048 16 is_stmt 0     # blocksort.c:1048:16
	movslq	%ebx, %rbx
	.loc	3 1048 44               # blocksort.c:1048:44
	movw	%bp, (%r8,%rbx,2)
.Ltmp3523:
.LBB18_156:                             # %for.body482.i.prol.loopexit.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1044 46 is_stmt 1     # blocksort.c:1044:46
	cmpl	$1, %edi
	je	.LBB18_163
.Ltmp3524:
# %bb.157:                              # %for.body482.i.i.preheader
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: bbSize <- $edi
	#DEBUG_VALUE: bbStart <- $esi
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 46 is_stmt 0        # blocksort.c:0:46
	movq	216(%rsp), %rdi         # 8-byte Reload
.Ltmp3525:
	leaq	(%rdi,%rsi,4), %rsi
.Ltmp3526:
	.p2align	4, 0x90
.LBB18_158:                             # %for.body482.i.i
                                        #   Parent Loop BB18_36 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1045 45 is_stmt 1     # blocksort.c:1045:45
	leal	-1(%rdx), %edi
	shrl	%cl, %edi
	.loc	3 1044 34               # blocksort.c:1044:34
	movslq	(%rsi,%rdx,4), %rbp
	movq	48(%rsp), %rbx          # 8-byte Reload
	.loc	3 1046 32               # blocksort.c:1046:32
	movw	%di, (%rbx,%rbp,2)
	.loc	3 1044 34               # blocksort.c:1044:34
	cmpq	$33, %rbp
.Ltmp3527:
	#DEBUG_VALUE: qVal <- $di
	.loc	3 1047 17               # blocksort.c:1047:17
	jg	.LBB18_160
.Ltmp3528:
# %bb.159:                              # %if.then492.i.i
                                        #   in Loop: Header=BB18_158 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: qVal <- $di
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: a2update <- $ebp
	.loc	3 1048 34               # blocksort.c:1048:34
	addl	%r15d, %ebp
.Ltmp3529:
	.loc	3 1048 16 is_stmt 0     # blocksort.c:1048:16
	movslq	%ebp, %rbp
	.loc	3 1048 44               # blocksort.c:1048:44
	movw	%di, (%rbx,%rbp,2)
.Ltmp3530:
.LBB18_160:                             # %if.end496.i.i
                                        #   in Loop: Header=BB18_158 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: qVal <- $di
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1044 34 is_stmt 1     # blocksort.c:1044:34
	movslq	-4(%rsi,%rdx,4), %rdi
.Ltmp3531:
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 0 0 is_stmt 0         # blocksort.c:0:0
	addq	$-2, %rdx
.Ltmp3532:
	#DEBUG_VALUE: mainSort:j <- $rdx
	.loc	3 1045 45 is_stmt 1     # blocksort.c:1045:45
	movl	%edx, %ebp
	shrl	%cl, %ebp
	.loc	3 1046 32               # blocksort.c:1046:32
	movw	%bp, (%rbx,%rdi,2)
	.loc	3 1044 34               # blocksort.c:1044:34
	cmpq	$34, %rdi
.Ltmp3533:
	#DEBUG_VALUE: qVal <- $bp
	.loc	3 1047 17               # blocksort.c:1047:17
	jge	.LBB18_162
.Ltmp3534:
# %bb.161:                              # %if.then492.i.1.i
                                        #   in Loop: Header=BB18_158 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: qVal <- $bp
	#DEBUG_VALUE: mainSort:j <- $rdx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: a2update <- $edi
	.loc	3 1048 34               # blocksort.c:1048:34
	addl	%r15d, %edi
.Ltmp3535:
	.loc	3 1048 16 is_stmt 0     # blocksort.c:1048:16
	movslq	%edi, %rdi
	movq	48(%rsp), %rbx          # 8-byte Reload
	.loc	3 1048 44               # blocksort.c:1048:44
	movw	%bp, (%rbx,%rdi,2)
.Ltmp3536:
.LBB18_162:                             # %if.end496.i.1.i
                                        #   in Loop: Header=BB18_158 Depth=2
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- $rdx
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	3 1043 31 is_stmt 1     # blocksort.c:1043:31
	testq	%rdx, %rdx
.Ltmp3537:
	.loc	3 1043 10 is_stmt 0     # blocksort.c:1043:10
	jg	.LBB18_158
.Ltmp3538:
.LBB18_163:                             # %for.end499.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
                                        # kill: def $cl killed $cl killed $ecx
	.loc	3 1050 10 is_stmt 1     # blocksort.c:1050:10
	sarl	%cl, %eax
	cmpl	$65536, %eax            # imm = 0x10000
	movq	152(%rsp), %rax         # 8-byte Reload
	movl	%r10d, %ebp
.Ltmp3539:
	.loc	3 1050 10 is_stmt 0     # blocksort.c:1050:10
	jge	.LBB18_290
.Ltmp3540:
.LBB18_164:                             # %for.inc507.i.i
                                        #   in Loop: Header=BB18_36 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 915 27 is_stmt 1      # blocksort.c:915:27
	addq	$1, %rax
	.loc	3 915 18 is_stmt 0      # blocksort.c:915:18
	cmpq	$256, %rax              # imm = 0x100
.Ltmp3541:
	.loc	3 915 4                 # blocksort.c:915:4
	jb	.LBB18_36
.Ltmp3542:
# %bb.165:                              # %for.end509.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 814 13 is_stmt 1      # blocksort.c:814:13
	cmpl	$4, %r14d
.Ltmp3543:
	.loc	3 1055 8                # blocksort.c:1055:8
	jge	.LBB18_286
.Ltmp3544:
.LBB18_166:                             # %mainSort.exit.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 8 is_stmt 0         # blocksort.c:0:8
	movl	4(%rsp), %ebp           # 4-byte Reload
.Ltmp3545:
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	.loc	3 1116 16 is_stmt 1     # blocksort.c:1116:16
	cmpl	$3, %r14d
.Ltmp3546:
	.loc	3 1116 11 is_stmt 0     # blocksort.c:1116:11
	jl	.LBB18_168
.Ltmp3547:
.LBB18_284:                             # %if.then13.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 11                  # blocksort.c:0:11
	movq	144(%rsp), %rdx         # 8-byte Reload
.Ltmp3548:
	.loc	3 1117 10 is_stmt 1     # blocksort.c:1117:10
	subl	%ebp, %edx
	cvtsi2ssl	%edx, %xmm0
	testl	%r15d, %r15d
	movl	$1, %eax
	cmovnel	%r15d, %eax
	cvtsi2ssl	%eax, %xmm1
	movq	stderr(%rip), %rdi
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str, %esi
                                        # kill: def $edx killed $edx killed $rdx
	movl	%r15d, %ecx
	movb	$1, %al
	callq	fprintf
.Ltmp3549:
	.loc	3 1122 18               # blocksort.c:1122:18
	testl	%ebp, %ebp
	jns	.LBB18_172
	jmp	.LBB18_169
.Ltmp3550:
.LBB18_167:
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 18 is_stmt 0        # blocksort.c:0:18
	movq	176(%rsp), %r13         # 8-byte Reload
	movl	40(%rsp), %r14d         # 4-byte Reload
	movq	168(%rsp), %r12         # 8-byte Reload
.Ltmp3551:
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	.loc	3 1116 16 is_stmt 1     # blocksort.c:1116:16
	cmpl	$3, %r14d
.Ltmp3552:
	.loc	3 1116 11 is_stmt 0     # blocksort.c:1116:11
	jge	.LBB18_284
.Ltmp3553:
.LBB18_168:                             # %if.end21.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1122 18 is_stmt 1     # blocksort.c:1122:18
	testl	%ebp, %ebp
.Ltmp3554:
	.loc	3 1122 11 is_stmt 0     # blocksort.c:1122:11
	jns	.LBB18_172
.Ltmp3555:
.LBB18_169:                             # %if.then24.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1123 19 is_stmt 1     # blocksort.c:1123:19
	cmpl	$2, %r14d
.Ltmp3556:
	.loc	3 1123 14 is_stmt 0     # blocksort.c:1123:14
	jge	.LBB18_285
.Ltmp3557:
.LBB18_170:                             # %if.end29.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1126 28 is_stmt 1     # blocksort.c:1126:28
	movq	24(%r13), %rdi
	.loc	3 1126 37 is_stmt 0     # blocksort.c:1126:37
	movq	32(%r13), %rsi
	.loc	3 1126 10               # blocksort.c:1126:10
	movq	%r12, %rdx
	movl	%r15d, %ecx
	movl	%r14d, %r8d
.Ltmp3558:
.LBB18_171:                             # %if.end33.i
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 0                   # blocksort.c:0:0
	callq	fallbackSort
.Ltmp3559:
.LBB18_172:                             # %if.end33.i
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1130 15 is_stmt 1     # blocksort.c:1130:15
	movl	$-1, 48(%r13)
.Ltmp3560:
	#DEBUG_VALUE: BZ2_blockSort:i <- 0
	.loc	3 1131 23               # blocksort.c:1131:23
	movslq	108(%r13), %r9
	testq	%r9, %r9
.Ltmp3561:
	.loc	3 1131 4 is_stmt 0      # blocksort.c:1131:4
	jle	.LBB18_176
.Ltmp3562:
# %bb.173:                              # %for.body.preheader.i28
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 0 4                   # blocksort.c:0:4
	xorl	%eax, %eax
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp3563:
	.p2align	4, 0x90
.LBB18_174:                             # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:i <- $rax
	.loc	3 1132 18 is_stmt 1     # blocksort.c:1132:18
	cmpl	$0, (%rcx,%rax,4)
.Ltmp3564:
	.loc	3 1132 11 is_stmt 0     # blocksort.c:1132:11
	je	.LBB18_177
.Ltmp3565:
# %bb.175:                              # %for.inc.i
                                        #   in Loop: Header=BB18_174 Depth=1
	#DEBUG_VALUE: BZ2_blockSort:i <- $rax
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	3 1131 32 is_stmt 1     # blocksort.c:1131:32
	addq	$1, %rax
	.loc	3 1131 18 is_stmt 0     # blocksort.c:1131:18
	cmpq	%r9, %rax
.Ltmp3566:
	.loc	3 1131 4                # blocksort.c:1131:4
	jl	.LBB18_174
.Ltmp3567:
.LBB18_176:                             # %if.then48.i
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1135 4 is_stmt 1      # blocksort.c:1135:4
	movl	$1003, %edi             # imm = 0x3EB
	callq	BZ2_bz__AssertH__fail
.Ltmp3568:
.LBB18_177:                             # %BZ2_blockSort.exit
	#DEBUG_VALUE: BZ2_blockSort:i <- $rax
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1133 23               # blocksort.c:1133:23
	movl	%eax, 48(%r13)
.Ltmp3569:
.LBB18_178:                             # %if.end15
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 663 26               # compress.c:663:26
	movq	%r9, %rax
	addq	32(%r13), %rax
	.loc	14 663 13 is_stmt 0     # compress.c:663:13
	movq	%rax, 80(%r13)
.Ltmp3570:
	.loc	14 666 19 is_stmt 1     # compress.c:666:19
	cmpl	$1, 660(%r13)
.Ltmp3571:
	.loc	14 666 8 is_stmt 0      # compress.c:666:8
	jne	.LBB18_186
.Ltmp3572:
# %bb.179:                              # %while.body.lr.ph.i.i248
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 8                  # compress.c:0:8
	movabsq	$35467034624, %rcx      # imm = 0x842000000
.Ltmp3573:
	#DEBUG_VALUE: bsW:v <- 66
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 66
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movq	%rcx, 640(%r13)
.Ltmp3574:
	#DEBUG_VALUE: bsW:v <- 90
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 90
	.loc	14 119 4                # compress.c:119:4
	movslq	116(%r13), %rcx
	movb	$66, (%rax,%rcx)
	movl	116(%r13), %edx
	addl	$1, %edx
	movl	%edx, 116(%r13)
	movl	640(%r13), %eax
	shll	$8, %eax
	movl	%eax, 640(%r13)
	movl	644(%r13), %esi
	leal	-8(%rsi), %ecx
	movl	%ecx, 644(%r13)
.Ltmp3575:
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	cmpl	$8, %ecx
	jl	.LBB18_181
.Ltmp3576:
	.p2align	4, 0x90
.LBB18_180:                             # %while.body.i.i257.while.body.i.i257_crit_edge
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4                # compress.c:119:4
	movq	80(%r13), %rcx
	shrl	$24, %eax
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	movl	116(%r13), %edx
	addl	$1, %edx
	movl	%edx, 116(%r13)
	movl	640(%r13), %eax
	shll	$8, %eax
	movl	%eax, 640(%r13)
	movl	644(%r13), %esi
	leal	-8(%rsi), %ecx
	movl	%ecx, 644(%r13)
.Ltmp3577:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %ecx
	jg	.LBB18_180
.Ltmp3578:
.LBB18_181:                             # %bsPutUChar.exit263
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movl	%esi, %ecx
	negb	%cl
	movl	$90, %ebp
	shll	%cl, %ebp
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%eax, %ebp
	movl	%ebp, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	movl	%esi, 644(%r13)
.Ltmp3579:
	#DEBUG_VALUE: bsW:v <- 104
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 104
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %esi
	jl	.LBB18_183
.Ltmp3580:
	.p2align	4, 0x90
.LBB18_182:                             # %while.body.i.i328
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebp
	movq	80(%r13), %rax
	movslq	%edx, %rcx
	movb	%bpl, (%rax,%rcx)
	movl	116(%r13), %edx
	addl	$1, %edx
	movl	%edx, 116(%r13)
	movl	640(%r13), %ebp
	shll	$8, %ebp
	movl	%ebp, 640(%r13)
	movl	644(%r13), %esi
	addl	$-8, %esi
	movl	%esi, 644(%r13)
.Ltmp3581:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB18_182
.Ltmp3582:
.LBB18_183:                             # %bsPutUChar.exit334
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$24, %al
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%sil, %cl
	movl	$104, %edi
	shll	%cl, %edi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%ebp, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %esi
	movl	%esi, 644(%r13)
.Ltmp3583:
	.loc	14 671 45               # compress.c:671:45
	movl	664(%r13), %ecx
	.loc	14 671 23 is_stmt 0     # compress.c:671:23
	addl	$48, %ecx
.Ltmp3584:
	#DEBUG_VALUE: bsPutUChar:c <- $ecx
	.loc	14 140 15 is_stmt 1     # compress.c:140:15
	movzbl	%cl, %ebp
.Ltmp3585:
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- $ebp
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %esi
	jl	.LBB18_185
.Ltmp3586:
	.p2align	4, 0x90
.LBB18_184:                             # %while.body.i.i504
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $ebp
	#DEBUG_VALUE: bsPutUChar:c <- $ecx
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %edi
	movq	80(%r13), %rcx
.Ltmp3587:
	movslq	%edx, %rdx
	movb	%dil, (%rcx,%rdx)
	movl	116(%r13), %edx
	addl	$1, %edx
	movl	%edx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %esi
	addl	$-8, %esi
	movl	%esi, 644(%r13)
.Ltmp3588:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB18_184
.Ltmp3589:
.LBB18_185:                             # %bsPutUChar.exit510
	#DEBUG_VALUE: bsW:v <- $ebp
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%sil, %al
	movl	%eax, %ecx
	shll	%cl, %ebp
.Ltmp3590:
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %ebp
	movl	%ebp, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %esi
	movl	%esi, 644(%r13)
.Ltmp3591:
	.loc	14 674 11               # compress.c:674:11
	movl	108(%r13), %r9d
.Ltmp3592:
.LBB18_186:                             # %if.end20
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 674 18 is_stmt 0     # compress.c:674:18
	testl	%r9d, %r9d
.Ltmp3593:
	.loc	14 674 8                # compress.c:674:8
	jle	.LBB18_255
.Ltmp3594:
# %bb.187:                              # %if.then24
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: bsPutUChar:c <- 49
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- 49
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	movl	644(%r13), %edx
	cmpl	$7, %edx
	jle	.LBB18_190
.Ltmp3595:
# %bb.188:                              # %while.body.lr.ph.i.i469
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	640(%r13), %esi
	movl	116(%r13), %eax
.Ltmp3596:
	.p2align	4, 0x90
.LBB18_189:                             # %while.body.i.i478
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3597:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_189
	jmp	.LBB18_191
.Ltmp3598:
.LBB18_190:                             # %entry.while.end_crit_edge.i.i464
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	640(%r13), %esi
.Ltmp3599:
.LBB18_191:                             # %bsPutUChar.exit484
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 14 is_stmt 0       # compress.c:0:14
	movb	$24, %al
	.loc	14 120 20               # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$49, %edi
	shll	%cl, %edi
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3600:
	#DEBUG_VALUE: bsW:v <- 65
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 65
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_194
.Ltmp3601:
# %bb.192:                              # %while.body.lr.ph.i.i444
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3602:
	.p2align	4, 0x90
.LBB18_193:                             # %while.body.i.i453
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3603:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_193
.Ltmp3604:
.LBB18_194:                             # %bsPutUChar.exit459
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$65, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3605:
	#DEBUG_VALUE: bsW:v <- 89
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 89
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_197
.Ltmp3606:
# %bb.195:                              # %while.body.lr.ph.i.i419
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %eax
.Ltmp3607:
	.p2align	4, 0x90
.LBB18_196:                             # %while.body.i.i428
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3608:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_196
.Ltmp3609:
.LBB18_197:                             # %bsPutUChar.exit434
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$24, %al
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$89, %edi
	shll	%cl, %edi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3610:
	#DEBUG_VALUE: bsW:v <- 38
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 38
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_200
.Ltmp3611:
# %bb.198:                              # %while.body.lr.ph.i.i394
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3612:
	.p2align	4, 0x90
.LBB18_199:                             # %while.body.i.i403
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3613:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_199
.Ltmp3614:
.LBB18_200:                             # %bsPutUChar.exit409
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$38, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3615:
	#DEBUG_VALUE: bsW:v <- 83
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 83
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_203
.Ltmp3616:
# %bb.201:                              # %while.body.lr.ph.i.i369
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %eax
.Ltmp3617:
	.p2align	4, 0x90
.LBB18_202:                             # %while.body.i.i378
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3618:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_202
.Ltmp3619:
.LBB18_203:                             # %bsPutUChar.exit384
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$24, %al
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$83, %edi
	shll	%cl, %edi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3620:
	#DEBUG_VALUE: bsW:v <- 89
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 89
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_206
.Ltmp3621:
# %bb.204:                              # %while.body.lr.ph.i.i344
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3622:
	.p2align	4, 0x90
.LBB18_205:                             # %while.body.i.i353
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3623:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_205
.Ltmp3624:
.LBB18_206:                             # %bsPutUChar.exit359
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$89, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3625:
	.loc	14 681 27               # compress.c:681:27
	movl	648(%r13), %esi
	.loc	14 681 7 is_stmt 0      # compress.c:681:7
	movq	%r13, %rdi
	callq	bsPutUInt32
.Ltmp3626:
	#DEBUG_VALUE: bsW:v <- 0
	#DEBUG_VALUE: bsW:n <- 1
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	movl	644(%r13), %edi
	cmpl	$7, %edi
	jle	.LBB18_209
.Ltmp3627:
# %bb.207:                              # %while.body.lr.ph.i295
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	640(%r13), %eax
	movl	116(%r13), %ecx
.Ltmp3628:
	.p2align	4, 0x90
.LBB18_208:                             # %while.body.i304
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %eax
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%al, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %eax
	shll	$8, %eax
	movl	%eax, 640(%r13)
	movl	644(%r13), %edi
	addl	$-8, %edi
	movl	%edi, 644(%r13)
.Ltmp3629:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB18_208
	jmp	.LBB18_210
.Ltmp3630:
.LBB18_209:                             # %entry.while.end_crit_edge.i290
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	640(%r13), %eax
.Ltmp3631:
.LBB18_210:                             # %bsW.exit309
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	%eax, 640(%r13)
	.loc	14 121 14               # compress.c:121:14
	leal	1(%rdi), %esi
	movl	%esi, 644(%r13)
.Ltmp3632:
	.loc	14 694 23               # compress.c:694:23
	movl	48(%r13), %edx
.Ltmp3633:
	#DEBUG_VALUE: bsW:n <- 24
	#DEBUG_VALUE: bsW:v <- $edx
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jl	.LBB18_213
.Ltmp3634:
# %bb.211:                              # %while.body.lr.ph.i275
	#DEBUG_VALUE: bsW:v <- $edx
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3635:
	.p2align	4, 0x90
.LBB18_212:                             # %while.body.i284
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $edx
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %eax
	movq	80(%r13), %rsi
	movslq	%ecx, %rcx
	movb	%al, (%rsi,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %eax
	shll	$8, %eax
	movl	%eax, 640(%r13)
	movl	644(%r13), %esi
	addl	$-8, %esi
	movl	%esi, 644(%r13)
.Ltmp3636:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB18_212
.Ltmp3637:
.LBB18_213:                             # %bsW.exit
	#DEBUG_VALUE: bsW:v <- $edx
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$8, %cl
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%sil, %cl
	shll	%cl, %edx
.Ltmp3638:
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%eax, %edx
	movl	%edx, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$24, %esi
	movl	%esi, 644(%r13)
.Ltmp3639:
	.loc	14 194 23               # compress.c:194:23
	movq	56(%r13), %r12
.Ltmp3640:
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	.loc	14 195 23               # compress.c:195:23
	movq	64(%r13), %rbp
.Ltmp3641:
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	.loc	14 196 23               # compress.c:196:23
	movq	72(%r13), %r15
.Ltmp3642:
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	.loc	14 153 14               # compress.c:153:14
	movl	$0, 124(%r13)
	xorl	%ebx, %ebx
.Ltmp3643:
	#DEBUG_VALUE: makeMaps_e:i <- 0
	.loc	14 0 14 is_stmt 0       # compress.c:0:14
	movl	$385, %eax              # imm = 0x181
.Ltmp3644:
	.p2align	4, 0x90
.LBB18_214:                             # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: makeMaps_e:i <- undef
	.loc	14 155 11 is_stmt 1     # compress.c:155:11
	cmpb	$0, -257(%r13,%rax)
.Ltmp3645:
	.loc	14 155 11 is_stmt 0     # compress.c:155:11
	je	.LBB18_216
.Ltmp3646:
# %bb.215:                              # %if.then.i.i
                                        #   in Loop: Header=BB18_214 Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 156 27 is_stmt 1     # compress.c:156:27
	movb	%bl, -1(%r13,%rax)
	.loc	14 157 19               # compress.c:157:19
	addl	$1, %ebx
	movl	%ebx, 124(%r13)
.Ltmp3647:
.LBB18_216:                             # %for.inc.i.i
                                        #   in Loop: Header=BB18_214 Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: makeMaps_e:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 155 11               # compress.c:155:11
	cmpb	$0, -256(%r13,%rax)
.Ltmp3648:
	.loc	14 155 11 is_stmt 0     # compress.c:155:11
	je	.LBB18_218
.Ltmp3649:
# %bb.217:                              # %if.then.i.i.1
                                        #   in Loop: Header=BB18_214 Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 156 27 is_stmt 1     # compress.c:156:27
	movb	%bl, (%r13,%rax)
	.loc	14 157 19               # compress.c:157:19
	addl	$1, %ebx
	movl	%ebx, 124(%r13)
.Ltmp3650:
.LBB18_218:                             # %for.inc.i.i.1
                                        #   in Loop: Header=BB18_214 Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: makeMaps_e:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 154 18               # compress.c:154:18
	addq	$2, %rax
	cmpq	$641, %rax              # imm = 0x281
.Ltmp3651:
	.loc	14 154 4 is_stmt 0      # compress.c:154:4
	jne	.LBB18_214
.Ltmp3652:
# %bb.219:                              # %makeMaps_e.exit.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- 0
	#DEBUG_VALUE: generateMTFValues:EOB <- undef
	.loc	14 201 18 is_stmt 1     # compress.c:201:18
	movl	%ebx, %r14d
	incl	%r14d
.Ltmp3653:
	.loc	14 201 4 is_stmt 0      # compress.c:201:4
	js	.LBB18_221
.Ltmp3654:
# %bb.220:                              # %for.body.preheader.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 201 31               # compress.c:201:31
	leal	2(%rbx), %edx
	leaq	672(%r13), %rdi
	shlq	$2, %rdx
	.loc	14 201 45               # compress.c:201:45
	xorl	%esi, %esi
	callq	memset
.Ltmp3655:
	#DEBUG_VALUE: generateMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: generateMTFValues:i <- undef
.LBB18_221:                             # %for.cond4.preheader.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- 0
	.loc	14 205 18 is_stmt 1     # compress.c:205:18
	testl	%ebx, %ebx
.Ltmp3656:
	.loc	14 205 4 is_stmt 0      # compress.c:205:4
	jle	.LBB18_233
.Ltmp3657:
# %bb.222:                              # %for.body7.preheader.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movl	%ebx, %eax
.Ltmp3658:
	.loc	14 205 44               # compress.c:205:44
	cmpl	$31, %ebx
	ja	.LBB18_224
.Ltmp3659:
# %bb.223:
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 44                 # compress.c:0:44
	xorl	%ecx, %ecx
	jmp	.LBB18_232
.Ltmp3660:
.LBB18_224:                             # %vector.ph
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 205 44               # compress.c:205:44
	movl	%eax, %ecx
	andl	$-32, %ecx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rsi
	shrq	$5, %rsi
	addq	$1, %rsi
	movl	%esi, %edx
	andl	$3, %edx
	cmpq	$96, %rdi
	jae	.LBB18_226
.Ltmp3661:
# %bb.225:
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 44                 # compress.c:0:44
	movdqa	.LCPI18_64(%rip), %xmm0 # xmm0 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	xorl	%esi, %esi
	.loc	14 205 32               # compress.c:205:32
	testq	%rdx, %rdx
	jne	.LBB18_229
	jmp	.LBB18_231
.Ltmp3662:
.LBB18_226:                             # %vector.ph.new
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 32                 # compress.c:0:32
	movl	$1, %edi
	.loc	14 205 44               # compress.c:205:44
	subq	%rsi, %rdi
	addq	%rdx, %rdi
	addq	$-1, %rdi
	movdqa	.LCPI18_64(%rip), %xmm0 # xmm0 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
	xorl	%esi, %esi
	movdqa	.LCPI18_65(%rip), %xmm8 # xmm8 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI18_66(%rip), %xmm9 # xmm9 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	.LCPI18_67(%rip), %xmm10 # xmm10 = [48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48]
	movdqa	.LCPI18_68(%rip), %xmm4 # xmm4 = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]
	movdqa	.LCPI18_69(%rip), %xmm5 # xmm5 = [80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80]
	movdqa	.LCPI18_70(%rip), %xmm6 # xmm6 = [96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96]
	movdqa	.LCPI18_71(%rip), %xmm7 # xmm7 = [112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112]
	movdqa	.LCPI18_72(%rip), %xmm1 # xmm1 = [128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128]
.Ltmp3663:
	.p2align	4, 0x90
.LBB18_227:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movdqa	%xmm0, %xmm2
	paddb	%xmm8, %xmm2
	.loc	14 205 42               # compress.c:205:42
	movdqa	%xmm0, 272(%rsp,%rsi)
	movdqa	%xmm2, 288(%rsp,%rsi)
	.loc	14 205 44               # compress.c:205:44
	movdqa	%xmm0, %xmm2
	paddb	%xmm9, %xmm2
	movdqa	%xmm0, %xmm3
	paddb	%xmm10, %xmm3
	.loc	14 205 42               # compress.c:205:42
	movdqa	%xmm2, 304(%rsp,%rsi)
	movdqa	%xmm3, 320(%rsp,%rsi)
	.loc	14 205 44               # compress.c:205:44
	movdqa	%xmm0, %xmm2
	paddb	%xmm4, %xmm2
	movdqa	%xmm0, %xmm3
	paddb	%xmm5, %xmm3
	.loc	14 205 42               # compress.c:205:42
	movdqa	%xmm2, 336(%rsp,%rsi)
	movdqa	%xmm3, 352(%rsp,%rsi)
	.loc	14 205 44               # compress.c:205:44
	movdqa	%xmm0, %xmm2
	paddb	%xmm6, %xmm2
	movdqa	%xmm0, %xmm3
	paddb	%xmm7, %xmm3
	.loc	14 205 42               # compress.c:205:42
	movdqa	%xmm2, 368(%rsp,%rsi)
	movdqa	%xmm3, 384(%rsp,%rsi)
	.loc	14 205 32               # compress.c:205:32
	subq	$-128, %rsi
	.loc	14 205 44               # compress.c:205:44
	pxor	%xmm1, %xmm0
	.loc	14 205 32               # compress.c:205:32
	addq	$4, %rdi
	jne	.LBB18_227
.Ltmp3664:
# %bb.228:                              # %middle.block.unr-lcssa
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	testq	%rdx, %rdx
	je	.LBB18_231
.Ltmp3665:
.LBB18_229:                             # %vector.body.epil.preheader
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 205 44               # compress.c:205:44
	addq	%rsp, %rsi
	addq	$288, %rsi              # imm = 0x120
	negq	%rdx
	movdqa	.LCPI18_65(%rip), %xmm1 # xmm1 = [16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16]
	movdqa	.LCPI18_66(%rip), %xmm2 # xmm2 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
.Ltmp3666:
	.p2align	4, 0x90
.LBB18_230:                             # %vector.body.epil
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	movdqa	%xmm0, %xmm3
	paddb	%xmm1, %xmm3
	.loc	14 205 42               # compress.c:205:42
	movdqa	%xmm0, -16(%rsi)
	movdqa	%xmm3, (%rsi)
	.loc	14 205 44               # compress.c:205:44
	paddb	%xmm2, %xmm0
	.loc	14 205 32               # compress.c:205:32
	addq	$32, %rsi
	incq	%rdx
	jne	.LBB18_230
.Ltmp3667:
.LBB18_231:                             # %middle.block
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 32                 # compress.c:0:32
	cmpq	%rax, %rcx
	.loc	14 205 44               # compress.c:205:44
	je	.LBB18_233
.Ltmp3668:
	.p2align	4, 0x90
.LBB18_232:                             # %for.body7.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- $rcx
	.loc	14 205 42               # compress.c:205:42
	movb	%cl, 272(%rsp,%rcx)
.Ltmp3669:
	#DEBUG_VALUE: generateMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 205 32               # compress.c:205:32
	addq	$1, %rcx
	.loc	14 205 18               # compress.c:205:18
	cmpq	%rcx, %rax
.Ltmp3670:
	.loc	14 205 4                # compress.c:205:4
	jne	.LBB18_232
.Ltmp3671:
.LBB18_233:                             # %for.cond13.preheader.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- 0
	#DEBUG_VALUE: generateMTFValues:zPend <- 0
	#DEBUG_VALUE: generateMTFValues:wr <- 0
	.loc	14 207 23 is_stmt 1     # compress.c:207:23
	movl	108(%r13), %edi
	.loc	14 207 18 is_stmt 0     # compress.c:207:18
	testl	%edi, %edi
.Ltmp3672:
	.loc	14 207 4                # compress.c:207:4
	jle	.LBB18_253
.Ltmp3673:
# %bb.234:                              # %for.body16.lr.ph.i
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	xorl	%esi, %esi
	leaq	273(%rsp), %r9
.Ltmp3674:
	#DEBUG_VALUE: ryy_j <- $r9
	leaq	272(%rsp), %r8
	xorl	%ecx, %ecx
	xorl	%eax, %eax
.Ltmp3675:
	.p2align	4, 0x90
.LBB18_235:                             # %for.body16.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB18_245 Depth 2
	#DEBUG_VALUE: ryy_j <- $r9
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 210 11 is_stmt 1     # compress.c:210:11
	movl	(%r12,%rsi,4), %edx
	.loc	14 210 17 is_stmt 0     # compress.c:210:17
	leal	-1(%rdx), %ebx
.Ltmp3676:
	#DEBUG_VALUE: generateMTFValues:j <- $ebx
	.loc	14 210 25               # compress.c:210:25
	sarl	$31, %ebx
.Ltmp3677:
	andl	%edi, %ebx
	leal	(%rbx,%rdx), %edx
	addl	$-1, %edx
.Ltmp3678:
	#DEBUG_VALUE: generateMTFValues:j <- $edx
	.loc	14 211 28 is_stmt 1     # compress.c:211:28
	movslq	%edx, %rdx
.Ltmp3679:
	movzbl	(%rbp,%rdx), %edx
	.loc	14 211 14 is_stmt 0     # compress.c:211:14
	movb	384(%r13,%rdx), %r11b
.Ltmp3680:
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: rll_i <- $r11b
	#DEBUG_VALUE: rtmp <- $r11b
	.loc	14 214 11 is_stmt 1     # compress.c:214:11
	movb	272(%rsp), %r10b
	.loc	14 214 17 is_stmt 0     # compress.c:214:17
	cmpb	%r11b, %r10b
.Ltmp3681:
	.loc	14 214 11               # compress.c:214:11
	jne	.LBB18_237
.Ltmp3682:
# %bb.236:                              # %if.then32.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 215 15 is_stmt 1     # compress.c:215:15
	addl	$1, %ecx
.Ltmp3683:
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	.loc	14 0 15 is_stmt 0       # compress.c:0:15
	jmp	.LBB18_247
.Ltmp3684:
	.p2align	4, 0x90
.LBB18_237:                             # %if.else.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 218 20 is_stmt 1     # compress.c:218:20
	testl	%ecx, %ecx
.Ltmp3685:
	.loc	14 218 14 is_stmt 0     # compress.c:218:14
	jle	.LBB18_243
.Ltmp3686:
# %bb.238:                              # %if.then36.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 219 18 is_stmt 1     # compress.c:219:18
	addl	$-1, %ecx
.Ltmp3687:
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	.loc	14 220 13               # compress.c:220:13
	movslq	%eax, %rdx
	leal	1(%rdx), %eax
.Ltmp3688:
	leaq	(%r15,%rdx,2), %rdi
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
.Ltmp3689:
	#DEBUG_VALUE: generateMTFValues:wr <- undef
	.loc	14 221 26               # compress.c:221:26
	testb	$1, %cl
.Ltmp3690:
	.loc	14 221 20 is_stmt 0     # compress.c:221:20
	je	.LBB18_240
.Ltmp3691:
	.p2align	4, 0x90
.LBB18_241:                             # %if.then37.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 222 28 is_stmt 1     # compress.c:222:28
	movw	$1, (%rdi)
	.loc	14 223 38               # compress.c:223:38
	addl	$1, 676(%r13)
.Ltmp3692:
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 228 26               # compress.c:228:26
	cmpl	$2, %ecx
.Ltmp3693:
	.loc	14 228 20 is_stmt 0     # compress.c:228:20
	jl	.LBB18_242
.Ltmp3694:
.LBB18_239:                             # %if.end55.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 229 31 is_stmt 1     # compress.c:229:31
	leal	-2(%rcx), %edx
	.loc	14 229 36 is_stmt 0     # compress.c:229:36
	shrl	$31, %edx
	leal	(%rcx,%rdx), %ecx
.Ltmp3695:
	addl	$-2, %ecx
	sarl	%ecx
.Ltmp3696:
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	.loc	14 220 13 is_stmt 1     # compress.c:220:13
	addl	$1, %eax
	addq	$2, %rdi
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
.Ltmp3697:
	#DEBUG_VALUE: generateMTFValues:wr <- undef
	.loc	14 221 26               # compress.c:221:26
	testb	$1, %cl
.Ltmp3698:
	.loc	14 221 20 is_stmt 0     # compress.c:221:20
	jne	.LBB18_241
.Ltmp3699:
.LBB18_240:                             # %if.else44.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 225 28 is_stmt 1     # compress.c:225:28
	movw	$0, (%rdi)
	.loc	14 226 38               # compress.c:226:38
	addl	$1, 672(%r13)
.Ltmp3700:
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 228 26               # compress.c:228:26
	cmpl	$2, %ecx
.Ltmp3701:
	.loc	14 228 20 is_stmt 0     # compress.c:228:20
	jge	.LBB18_239
.Ltmp3702:
.LBB18_242:                             # %if.end57.loopexit.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 20                 # compress.c:0:20
	xorl	%ecx, %ecx
.Ltmp3703:
	.loc	14 238 21 is_stmt 1     # compress.c:238:21
	movb	272(%rsp), %r10b
.Ltmp3704:
.LBB18_243:                             # %if.end57.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 237 21               # compress.c:237:21
	movb	273(%rsp), %dl
.Ltmp3705:
	#DEBUG_VALUE: rtmp <- $dl
	.loc	14 238 19               # compress.c:238:19
	movb	%r10b, 273(%rsp)
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movq	%r9, %rdi
	.loc	14 241 27 is_stmt 1     # compress.c:241:27
	cmpb	%dl, %r11b
	.loc	14 241 13 is_stmt 0     # compress.c:241:13
	je	.LBB18_246
.Ltmp3706:
# %bb.244:                              # %while.body67.i.preheader
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: rtmp <- $dl
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 13                 # compress.c:0:13
	movq	%r9, %rdi
.Ltmp3707:
	.p2align	4, 0x90
.LBB18_245:                             # %while.body67.i
                                        #   Parent Loop BB18_235 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: rtmp <- $dl
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: ryy_j <- $rdi
	#DEBUG_VALUE: rtmp <- $dl
	#DEBUG_VALUE: rtmp2 <- $dl
	.loc	14 245 25 is_stmt 1     # compress.c:245:25
	movzbl	1(%rdi), %ebx
.Ltmp3708:
	#DEBUG_VALUE: rtmp <- $bl
	.loc	14 246 23               # compress.c:246:23
	movb	%dl, 1(%rdi)
	.loc	14 243 21               # compress.c:243:21
	leaq	1(%rdi), %rdi
.Ltmp3709:
	.loc	14 0 21 is_stmt 0       # compress.c:0:21
	movl	%ebx, %edx
.Ltmp3710:
	.loc	14 241 27 is_stmt 1     # compress.c:241:27
	cmpb	%bl, %r11b
.Ltmp3711:
	#DEBUG_VALUE: rtmp <- $dl
	.loc	14 241 13 is_stmt 0     # compress.c:241:13
	jne	.LBB18_245
.Ltmp3712:
.LBB18_246:                             # %while.end68.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: rtmp <- $dl
	#DEBUG_VALUE: ll_i <- $r11b
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: ryy_j <- $rdi
	.loc	14 249 23 is_stmt 1     # compress.c:249:23
	subq	%r8, %rdi
.Ltmp3713:
	.loc	14 248 19               # compress.c:248:19
	movb	%r11b, 272(%rsp)
.Ltmp3714:
	#DEBUG_VALUE: generateMTFValues:j <- undef
	.loc	14 250 24               # compress.c:250:24
	leal	1(%rdi), %edx
.Ltmp3715:
	.loc	14 250 13 is_stmt 0     # compress.c:250:13
	cltq
.Ltmp3716:
	.loc	14 250 22               # compress.c:250:22
	movw	%dx, (%r15,%rax,2)
	.loc	14 250 31               # compress.c:250:31
	addl	$1, %eax
.Ltmp3717:
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 250 35               # compress.c:250:35
	movslq	%edi, %rdx
	.loc	14 250 50               # compress.c:250:50
	addl	$1, 676(%r13,%rdx,4)
.Ltmp3718:
	.loc	14 207 23 is_stmt 1     # compress.c:207:23
	movl	108(%r13), %edi
.Ltmp3719:
.LBB18_247:                             # %if.end82.i
                                        #   in Loop: Header=BB18_235 Depth=1
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:i <- $rsi
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 207 32 is_stmt 0     # compress.c:207:32
	addq	$1, %rsi
	.loc	14 207 18               # compress.c:207:18
	movslq	%edi, %rdx
	cmpq	%rdx, %rsi
.Ltmp3720:
	.loc	14 207 4                # compress.c:207:4
	jl	.LBB18_235
.Ltmp3721:
# %bb.248:                              # %for.end85.i
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 256 14 is_stmt 1     # compress.c:256:14
	testl	%ecx, %ecx
.Ltmp3722:
	.loc	14 256 8 is_stmt 0      # compress.c:256:8
	jle	.LBB18_254
.Ltmp3723:
# %bb.249:                              # %if.then88.i
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 257 12 is_stmt 1     # compress.c:257:12
	addl	$-1, %ecx
.Ltmp3724:
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	.loc	14 258 7                # compress.c:258:7
	movslq	%eax, %rdx
	leal	1(%rdx), %eax
.Ltmp3725:
	leaq	(%r15,%rdx,2), %rdx
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
.Ltmp3726:
	#DEBUG_VALUE: generateMTFValues:wr <- undef
	.loc	14 259 20               # compress.c:259:20
	testb	$1, %cl
.Ltmp3727:
	.loc	14 259 14 is_stmt 0     # compress.c:259:14
	je	.LBB18_251
.Ltmp3728:
	.p2align	4, 0x90
.LBB18_252:                             # %if.then94.i
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 260 22 is_stmt 1     # compress.c:260:22
	movw	$1, (%rdx)
	.loc	14 261 32               # compress.c:261:32
	addl	$1, 676(%r13)
.Ltmp3729:
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 266 20               # compress.c:266:20
	cmpl	$2, %ecx
.Ltmp3730:
	.loc	14 266 14 is_stmt 0     # compress.c:266:14
	jl	.LBB18_254
.Ltmp3731:
.LBB18_250:                             # %if.end112.i
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 267 25 is_stmt 1     # compress.c:267:25
	leal	-2(%rcx), %esi
	.loc	14 267 30 is_stmt 0     # compress.c:267:30
	shrl	$31, %esi
	leal	(%rcx,%rsi), %ecx
.Ltmp3732:
	addl	$-2, %ecx
	sarl	%ecx
.Ltmp3733:
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	.loc	14 258 7 is_stmt 1      # compress.c:258:7
	addl	$1, %eax
	addq	$2, %rdx
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
.Ltmp3734:
	#DEBUG_VALUE: generateMTFValues:wr <- undef
	.loc	14 259 20               # compress.c:259:20
	testb	$1, %cl
.Ltmp3735:
	.loc	14 259 14 is_stmt 0     # compress.c:259:14
	jne	.LBB18_252
.Ltmp3736:
.LBB18_251:                             # %if.else101.i
	#DEBUG_VALUE: generateMTFValues:zPend <- $ecx
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 263 22 is_stmt 1     # compress.c:263:22
	movw	$0, (%rdx)
	.loc	14 264 32               # compress.c:264:32
	addl	$1, 672(%r13)
.Ltmp3737:
	#DEBUG_VALUE: generateMTFValues:wr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 266 20               # compress.c:266:20
	cmpl	$2, %ecx
	jge	.LBB18_250
	jmp	.LBB18_254
.Ltmp3738:
.LBB18_253:
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 20 is_stmt 0       # compress.c:0:20
	xorl	%eax, %eax
.Ltmp3739:
.LBB18_254:                             # %generateMTFValues.exit
	#DEBUG_VALUE: generateMTFValues:mtfv <- $r15
	#DEBUG_VALUE: generateMTFValues:block <- $rbp
	#DEBUG_VALUE: generateMTFValues:ptr <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 272 4 is_stmt 1      # compress.c:272:4
	cltq
.Ltmp3740:
	.loc	14 272 13 is_stmt 0     # compress.c:272:13
	movw	%r14w, (%r15,%rax,2)
	.loc	14 272 22               # compress.c:272:22
	addl	$1, %eax
.Ltmp3741:
	#DEBUG_VALUE: generateMTFValues:wr <- $eax
	.loc	14 272 26               # compress.c:272:26
	movslq	%r14d, %rcx
	.loc	14 272 41               # compress.c:272:41
	addl	$1, 672(%r13,%rcx,4)
	.loc	14 274 12 is_stmt 1     # compress.c:274:12
	movl	%eax, 668(%r13)
.Ltmp3742:
	.loc	14 696 7                # compress.c:696:7
	movq	%r13, %rdi
	callq	sendMTFValues
.Ltmp3743:
.LBB18_255:                             # %if.end26
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 701 8                # compress.c:701:8
	cmpb	$0, 128(%rsp)           # 1-byte Folded Reload
.Ltmp3744:
	.loc	14 701 8 is_stmt 0      # compress.c:701:8
	je	.LBB18_279
.Ltmp3745:
# %bb.256:                              # %if.then27
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	#DEBUG_VALUE: bsPutUChar:c <- 23
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- 23
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	movl	644(%r13), %edx
	cmpl	$7, %edx
	jle	.LBB18_259
.Ltmp3746:
# %bb.257:                              # %while.body.lr.ph.i.i223
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	640(%r13), %esi
	movl	116(%r13), %eax
.Ltmp3747:
	.p2align	4, 0x90
.LBB18_258:                             # %while.body.i.i232
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3748:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_258
	jmp	.LBB18_260
.Ltmp3749:
.LBB18_259:                             # %entry.while.end_crit_edge.i.i218
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	640(%r13), %esi
.Ltmp3750:
.LBB18_260:                             # %bsPutUChar.exit238
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 14 is_stmt 0       # compress.c:0:14
	movb	$24, %al
	.loc	14 120 20               # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$23, %edi
	shll	%cl, %edi
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3751:
	#DEBUG_VALUE: bsW:v <- 114
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 114
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_263
.Ltmp3752:
# %bb.261:                              # %while.body.lr.ph.i.i198
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3753:
	.p2align	4, 0x90
.LBB18_262:                             # %while.body.i.i207
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3754:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_262
.Ltmp3755:
.LBB18_263:                             # %bsPutUChar.exit213
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$114, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3756:
	#DEBUG_VALUE: bsW:v <- 69
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 69
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_266
.Ltmp3757:
# %bb.264:                              # %while.body.lr.ph.i.i173
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %eax
.Ltmp3758:
	.p2align	4, 0x90
.LBB18_265:                             # %while.body.i.i182
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3759:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_265
.Ltmp3760:
.LBB18_266:                             # %bsPutUChar.exit188
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$24, %al
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$69, %edi
	shll	%cl, %edi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3761:
	#DEBUG_VALUE: bsW:v <- 56
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 56
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_269
.Ltmp3762:
# %bb.267:                              # %while.body.lr.ph.i.i148
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3763:
	.p2align	4, 0x90
.LBB18_268:                             # %while.body.i.i157
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3764:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_268
.Ltmp3765:
.LBB18_269:                             # %bsPutUChar.exit163
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$56, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3766:
	#DEBUG_VALUE: bsW:v <- 80
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- 80
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_272
.Ltmp3767:
# %bb.270:                              # %while.body.lr.ph.i.i123
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %eax
.Ltmp3768:
	.p2align	4, 0x90
.LBB18_271:                             # %while.body.i.i132
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %esi
	movq	80(%r13), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	movl	640(%r13), %esi
	shll	$8, %esi
	movl	%esi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3769:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_271
.Ltmp3770:
.LBB18_272:                             # %bsPutUChar.exit138
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$24, %al
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	movl	$80, %edi
	shll	%cl, %edi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%esi, %edi
	movl	%edi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3771:
	#DEBUG_VALUE: bsW:v <- 144
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsPutUChar:c <- -112
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB18_275
.Ltmp3772:
# %bb.273:                              # %while.body.lr.ph.i.i98
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%r13), %ecx
.Ltmp3773:
	.p2align	4, 0x90
.LBB18_274:                             # %while.body.i.i107
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	shrl	$24, %edi
	movq	80(%r13), %rdx
	movslq	%ecx, %rcx
	movb	%dil, (%rdx,%rcx)
	movl	116(%r13), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%r13)
	movl	640(%r13), %edi
	shll	$8, %edi
	movl	%edi, 640(%r13)
	movl	644(%r13), %edx
	addl	$-8, %edx
	movl	%edx, 644(%r13)
.Ltmp3774:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB18_274
.Ltmp3775:
.LBB18_275:                             # %bsPutUChar.exit113
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %al
	movl	$144, %esi
	movl	%eax, %ecx
	shll	%cl, %esi
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %esi
	movl	%esi, 640(%r13)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%r13)
.Ltmp3776:
	.loc	14 706 27               # compress.c:706:27
	movl	652(%r13), %esi
	.loc	14 706 7 is_stmt 0      # compress.c:706:7
	movq	%r13, %rdi
	callq	bsPutUInt32
.Ltmp3777:
	.loc	14 707 24 is_stmt 1     # compress.c:707:24
	cmpl	$2, 656(%r13)
.Ltmp3778:
	.loc	14 707 11 is_stmt 0     # compress.c:707:11
	jge	.LBB18_281
.Ltmp3779:
# %bb.276:                              # %if.end35
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 92 21 is_stmt 1      # compress.c:92:21
	cmpl	$0, 644(%r13)
	.loc	14 92 4 is_stmt 0       # compress.c:92:4
	jle	.LBB18_279
.Ltmp3780:
.LBB18_277:                             # %while.body.lr.ph.i
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 93 38 is_stmt 1      # compress.c:93:38
	movl	640(%r13), %ecx
	.loc	14 93 19 is_stmt 0      # compress.c:93:19
	movl	116(%r13), %eax
.Ltmp3781:
	.p2align	4, 0x90
.LBB18_278:                             # %while.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 93 45                # compress.c:93:45
	shrl	$24, %ecx
	.loc	14 93 10                # compress.c:93:10
	movq	80(%r13), %rdx
	.loc	14 93 7                 # compress.c:93:7
	cltq
	.loc	14 93 25                # compress.c:93:25
	movb	%cl, (%rdx,%rax)
	.loc	14 94 14 is_stmt 1      # compress.c:94:14
	movl	116(%r13), %eax
	addl	$1, %eax
	movl	%eax, 116(%r13)
	.loc	14 95 17                # compress.c:95:17
	movl	640(%r13), %ecx
	shll	$8, %ecx
	movl	%ecx, 640(%r13)
	.loc	14 96 17                # compress.c:96:17
	addl	$-8, 644(%r13)
.Ltmp3782:
	.loc	14 92 4                 # compress.c:92:4
	jg	.LBB18_278
.Ltmp3783:
.LBB18_279:                             # %if.end36
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 711 1                # compress.c:711:1
	addq	$4808, %rsp             # imm = 0x12C8
.Ltmp3784:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB18_280:                             # %if.then9
	.cfi_def_cfa_offset 4864
.Ltmp3785:
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 656 10               # compress.c:656:10
	movq	stderr(%rip), %rdi
	movl	$.L.str.53, %esi
                                        # kill: def $r9d killed $r9d killed $r9
	xorl	%eax, %eax
	callq	fprintf
.Ltmp3786:
	.loc	3 1083 24               # blocksort.c:1083:24
	movl	108(%r13), %r9d
	.loc	3 1084 24               # blocksort.c:1084:24
	movl	656(%r13), %ebp
	jmp	.LBB18_4
.Ltmp3787:
.LBB18_281:                             # %if.then32
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	14 708 10               # compress.c:708:10
	movq	stderr(%rip), %rdi
	movl	652(%r13), %edx
	movl	$.L.str.1.54, %esi
	xorl	%eax, %eax
	callq	fprintf
.Ltmp3788:
	.loc	14 92 21                # compress.c:92:21
	cmpl	$0, 644(%r13)
	.loc	14 92 4 is_stmt 0       # compress.c:92:4
	jg	.LBB18_277
	jmp	.LBB18_279
.Ltmp3789:
.LBB18_282:                             # %if.then.i.i22
	#DEBUG_VALUE: mainSort:block <- $r14
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:i <- $edx
	#DEBUG_VALUE: BZ2_blockSort:block <- $r14
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:nblock <- $r9d
	#DEBUG_VALUE: BZ2_blockSort:verb <- $ebp
	#DEBUG_VALUE: mainSort:nblock <- $r9d
	#DEBUG_VALUE: mainSort:verb <- $ebp
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 814 19 is_stmt 1      # blocksort.c:814:19
	movq	stderr(%rip), %rcx
	movl	$.L.str.6.1, %edi
	movl	$33, %esi
	movl	$1, %edx
.Ltmp3790:
	callq	fwrite
.Ltmp3791:
	.loc	3 0 19 is_stmt 0        # blocksort.c:0:19
	jmp	.LBB18_7
.Ltmp3792:
.LBB18_283:                             # %if.then96.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: mainSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_blockSort:ftab <- $r12
	#DEBUG_VALUE: BZ2_compressBlock:s <- $r13
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 847 19 is_stmt 1      # blocksort.c:847:19
	movq	stderr(%rip), %rcx
	movl	$.L.str.2, %edi
	movl	$27, %esi
	movl	$1, %edx
	callq	fwrite
	jmp	.LBB18_19
.Ltmp3793:
.LBB18_285:                             # %if.then27.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budget <- $ebp
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1124 13               # blocksort.c:1124:13
	movq	stderr(%rip), %rcx
	movl	$.L.str.1, %edi
	movl	$53, %esi
	movl	$1, %edx
	callq	fwrite
	jmp	.LBB18_170
.Ltmp3794:
.LBB18_286:                             # %if.then512.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1056 7                # blocksort.c:1056:7
	movq	stderr(%rip), %rdi
	movl	%r15d, %r8d
	movl	44(%rsp), %ecx          # 4-byte Reload
	subl	%ecx, %r8d
	movl	$.L.str.8, %esi
	movl	%r15d, %edx
	xorl	%eax, %eax
	callq	fprintf
	jmp	.LBB18_166
.Ltmp3795:
.LBB18_287:                             # %if.then.i.i.i
	#DEBUG_VALUE: mainSort:j <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainQSort3:sp <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: hi <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: lo <- [DW_OP_plus_uconst 60] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 693 7                 # blocksort.c:693:7
	movl	$1001, %edi             # imm = 0x3E9
	callq	BZ2_bz__AssertH__fail
.Ltmp3796:
.LBB18_288:                             # %if.then333.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 956 7                 # blocksort.c:956:7
	movl	$1006, %edi             # imm = 0x3EE
	callq	BZ2_bz__AssertH__fail
.Ltmp3797:
.LBB18_289:                             # %if.then442.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 984 7                 # blocksort.c:984:7
	movl	$1007, %edi             # imm = 0x3EF
	callq	BZ2_bz__AssertH__fail
.Ltmp3798:
.LBB18_290:                             # %if.then504.i.i
	#DEBUG_VALUE: BZ2_blockSort:block <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:quadrant <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: mainSort:numQSorted <- [DW_OP_plus_uconst 44] [$rsp+0]
	#DEBUG_VALUE: mainSort:i <- [DW_OP_plus_uconst 100] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:budgetInit <- [DW_OP_plus_uconst 144] [$rsp+0]
	#DEBUG_VALUE: mainSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_blockSort:ptr <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_compressBlock:is_last_block <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	3 1050 10               # blocksort.c:1050:10
	movl	$1002, %edi             # imm = 0x3EA
	callq	BZ2_bz__AssertH__fail
.Ltmp3799:
.Lfunc_end18:
	.size	BZ2_compressBlock, .Lfunc_end18-BZ2_compressBlock
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function bsPutUInt32
	.type	bsPutUInt32,@function
bsPutUInt32:                            # @bsPutUInt32
.Lfunc_begin19:
	.loc	14 128 0                # compress.c:128:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	.loc	14 129 19 prologue_end  # compress.c:129:19
	movl	%esi, %r8d
	shrl	$24, %r8d
.Ltmp3800:
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:s <- $rdi
	.loc	14 119 4                # compress.c:119:4
	movl	644(%rdi), %edx
	cmpl	$7, %edx
	jle	.LBB19_1
.Ltmp3801:
# %bb.2:                                # %while.body.lr.ph.i
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	640(%rdi), %eax
	movl	116(%rdi), %ecx
.Ltmp3802:
	.p2align	4, 0x90
.LBB19_3:                               # %while.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	shrl	$24, %eax
	movq	80(%rdi), %rdx
	movslq	%ecx, %rcx
	movb	%al, (%rdx,%rcx)
	movl	116(%rdi), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%rdi)
	movl	640(%rdi), %eax
	shll	$8, %eax
	movl	%eax, 640(%rdi)
	movl	644(%rdi), %edx
	addl	$-8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3803:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB19_3
	jmp	.LBB19_4
.Ltmp3804:
.LBB19_1:                               # %entry.while.end_crit_edge.i
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	640(%rdi), %eax
.Ltmp3805:
.LBB19_4:                               # %bsW.exit
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	14 120 20 is_stmt 0     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	shll	%cl, %r8d
.Ltmp3806:
	.loc	14 0 20                 # compress.c:0:20
	movb	$24, %cl
	.loc	14 120 14               # compress.c:120:14
	orl	%eax, %r8d
	movl	%r8d, 640(%rdi)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%rdi)
	movl	%esi, %r9d
.Ltmp3807:
	.loc	14 130 19               # compress.c:130:19
	movl	%esi, %eax
	shrl	$16, %eax
	.loc	14 130 26 is_stmt 0     # compress.c:130:26
	movzbl	%al, %eax
.Ltmp3808:
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- $eax
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB19_7
.Ltmp3809:
# %bb.5:                                # %while.body.lr.ph.i80
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%rdi), %ebx
.Ltmp3810:
	.p2align	4, 0x90
.LBB19_6:                               # %while.body.i89
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	shrl	$24, %r8d
	movq	80(%rdi), %rdx
	movslq	%ebx, %rbx
	movb	%r8b, (%rdx,%rbx)
	movl	116(%rdi), %ebx
	addl	$1, %ebx
	movl	%ebx, 116(%rdi)
	movl	640(%rdi), %r8d
	shll	$8, %r8d
	movl	%r8d, 640(%rdi)
	movl	644(%rdi), %edx
	addl	$-8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3811:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB19_6
.Ltmp3812:
.LBB19_7:                               # %bsW.exit96
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:u <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %cl
	shll	%cl, %eax
.Ltmp3813:
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%r8d, %eax
	movl	%eax, 640(%rdi)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%rdi)
	movl	%r9d, %ebx
.Ltmp3814:
	.loc	14 131 26               # compress.c:131:26
	movzbl	%bh, %esi
.Ltmp3815:
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- $esi
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB19_10
.Ltmp3816:
# %bb.8:                                # %while.body.lr.ph.i54
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%rdi), %ecx
.Ltmp3817:
	.p2align	4, 0x90
.LBB19_9:                               # %while.body.i63
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	shrl	$24, %eax
	movq	80(%rdi), %rdx
	movslq	%ecx, %rcx
	movb	%al, (%rdx,%rcx)
	movl	116(%rdi), %ecx
	addl	$1, %ecx
	movl	%ecx, 116(%rdi)
	movl	640(%rdi), %eax
	shll	$8, %eax
	movl	%eax, 640(%rdi)
	movl	644(%rdi), %edx
	addl	$-8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3818:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB19_9
.Ltmp3819:
.LBB19_10:                              # %bsW.exit70
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$24, %cl
	subb	%dl, %cl
	shll	%cl, %esi
.Ltmp3820:
	.loc	14 0 20 is_stmt 0       # compress.c:0:20
	movb	$24, %cl
	.loc	14 120 14               # compress.c:120:14
	orl	%eax, %esi
	movl	%esi, 640(%rdi)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3821:
	.loc	14 132 26               # compress.c:132:26
	movzbl	%bl, %eax
.Ltmp3822:
	#DEBUG_VALUE: bsW:n <- 8
	#DEBUG_VALUE: bsW:v <- $eax
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edx
	jl	.LBB19_13
.Ltmp3823:
# %bb.11:                               # %while.body.lr.ph.i28
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	movl	116(%rdi), %ebx
.Ltmp3824:
	.p2align	4, 0x90
.LBB19_12:                              # %while.body.i37
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	shrl	$24, %esi
	movq	80(%rdi), %rdx
	movslq	%ebx, %rbx
	movb	%sil, (%rdx,%rbx)
	movl	116(%rdi), %ebx
	addl	$1, %ebx
	movl	%ebx, 116(%rdi)
	movl	640(%rdi), %esi
	shll	$8, %esi
	movl	%esi, 640(%rdi)
	movl	644(%rdi), %edx
	addl	$-8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3825:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edx
	jg	.LBB19_12
.Ltmp3826:
.LBB19_13:                              # %bsW.exit44
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: bsPutUInt32:s <- $rdi
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%dl, %cl
	shll	%cl, %eax
.Ltmp3827:
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%esi, %eax
	movl	%eax, 640(%rdi)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$8, %edx
	movl	%edx, 644(%rdi)
.Ltmp3828:
	.loc	14 133 1                # compress.c:133:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp3829:
.Lfunc_end19:
	.size	bsPutUInt32, .Lfunc_end19-bsPutUInt32
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function sendMTFValues
.LCPI20_0:
	.quad	4636737291354636288     # double 100
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI20_1:
	.long	256                     # 0x100
	.long	256                     # 0x100
	.long	256                     # 0x100
	.long	256                     # 0x100
.LCPI20_2:
	.byte	0                       # 0x0
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	0                       # 0x0
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	0                       # 0x0
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	0                       # 0x0
	.byte	255                     # 0xff
	.byte	255                     # 0xff
	.byte	255                     # 0xff
.LCPI20_3:
	.long	32                      # 0x20
	.long	32                      # 0x20
	.long	32                      # 0x20
	.long	32                      # 0x20
.LCPI20_4:
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
	.long	2147483648              # 0x80000000
	.text
	.p2align	4, 0x90
	.type	sendMTFValues,@function
sendMTFValues:                          # @sendMTFValues
.Lfunc_begin20:
	.loc	14 284 0                # compress.c:284:0
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$5512, %rsp             # imm = 0x1588
	.cfi_def_cfa_offset 5568
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: sendMTFValues:s <- $rdi
.Ltmp3830:
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	#DEBUG_VALUE: bsW:s <- $rdi
	movq	%rdi, %r14
.Ltmp3831:
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: bsW:s <- $r14
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 303 22 prologue_end  # compress.c:303:22
	movq	72(%rdi), %rax
.Ltmp3832:
	#DEBUG_VALUE: sendMTFValues:mtfv <- undef
	.loc	14 0 22 is_stmt 0       # compress.c:0:22
	movq	%rax, 8(%rsp)           # 8-byte Spill
.Ltmp3833:
	.loc	14 305 21 is_stmt 1     # compress.c:305:21
	cmpl	$3, 656(%rdi)
.Ltmp3834:
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 305 8 is_stmt 0      # compress.c:305:8
	jge	.LBB20_384
.Ltmp3835:
.LBB20_1:                               # %if.end
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 310 19 is_stmt 1     # compress.c:310:19
	movslq	124(%r14), %rbx
	.loc	14 310 25 is_stmt 0     # compress.c:310:25
	leal	2(%rbx), %edx
.Ltmp3836:
	#DEBUG_VALUE: sendMTFValues:t <- 0
	#DEBUG_VALUE: sendMTFValues:alphaSize <- $edx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:alphaSize <- $edx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $edx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $edx
	#DEBUG_VALUE: BZ2_hbAssignCodes:alphaSize <- $edx
	.loc	14 0 25                 # compress.c:0:25
	testl	%edx, %edx
.Ltmp3837:
	#DEBUG_VALUE: sendMTFValues:v <- 0
	#DEBUG_VALUE: sendMTFValues:t <- undef
	movq	%rdx, 16(%rsp)          # 8-byte Spill
.Ltmp3838:
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	.loc	14 312 7 is_stmt 1      # compress.c:312:7
	jle	.LBB20_3
.Ltmp3839:
# %bb.2:                                # %for.body6.lr.ph.5
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	leaq	37708(%r14), %rdi
.Ltmp3840:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	callq	memset
.Ltmp3841:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- 0
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 312 7                # compress.c:312:7
	leaq	37966(%r14), %rdi
.Ltmp3842:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	movq	16(%rsp), %rdx          # 8-byte Reload
	callq	memset
.Ltmp3843:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 312 7                # compress.c:312:7
	leaq	38224(%r14), %rdi
.Ltmp3844:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	movq	16(%rsp), %rdx          # 8-byte Reload
	callq	memset
.Ltmp3845:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 312 7                # compress.c:312:7
	leaq	38482(%r14), %rdi
.Ltmp3846:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	movq	16(%rsp), %rdx          # 8-byte Reload
	callq	memset
.Ltmp3847:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 312 7                # compress.c:312:7
	leaq	38740(%r14), %rdi
.Ltmp3848:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	movq	16(%rsp), %rdx          # 8-byte Reload
	callq	memset
.Ltmp3849:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 312 7                # compress.c:312:7
	leaq	38998(%r14), %rdi
.Ltmp3850:
	.loc	14 313 23               # compress.c:313:23
	movl	$15, %esi
	movq	16(%rsp), %rdx          # 8-byte Reload
	callq	memset
.Ltmp3851:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
.LBB20_3:                               # %for.inc9.5
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 316 4                # compress.c:316:4
	movl	668(%r14), %r10d
.Ltmp3852:
	#DEBUG_VALUE: remF <- $r10d
	testl	%r10d, %r10d
.Ltmp3853:
	.loc	14 316 4 is_stmt 0      # compress.c:316:4
	jle	.LBB20_393
.Ltmp3854:
# %bb.4:                                # %if.end15
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 4                  # compress.c:0:4
	movq	%rbx, %r15
	movl	$2, %eax
.Ltmp3855:
	.loc	14 317 16 is_stmt 1     # compress.c:317:16
	cmpl	$200, %r10d
.Ltmp3856:
	.loc	14 317 8 is_stmt 0      # compress.c:317:8
	jl	.LBB20_8
.Ltmp3857:
# %bb.5:                                # %if.else
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 8                  # compress.c:0:8
	movl	$3, %eax
.Ltmp3858:
	.loc	14 318 16 is_stmt 1     # compress.c:318:16
	cmpl	$600, %r10d             # imm = 0x258
.Ltmp3859:
	.loc	14 318 8 is_stmt 0      # compress.c:318:8
	jl	.LBB20_8
.Ltmp3860:
# %bb.6:                                # %if.else22
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 8                  # compress.c:0:8
	movl	$4, %eax
.Ltmp3861:
	.loc	14 319 16 is_stmt 1     # compress.c:319:16
	cmpl	$1200, %r10d            # imm = 0x4B0
.Ltmp3862:
	.loc	14 319 8 is_stmt 0      # compress.c:319:8
	jl	.LBB20_8
.Ltmp3863:
# %bb.7:                                # %if.else26
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 320 16 is_stmt 1     # compress.c:320:16
	xorl	%ecx, %ecx
	cmpl	$2400, %r10d            # imm = 0x960
	setl	%cl
	movl	$6, %eax
	subl	%ecx, %eax
.Ltmp3864:
.LBB20_8:                               # %if.end34
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: bsW:v <- $eax
	#DEBUG_VALUE: nPart <- $eax
	#DEBUG_VALUE: sendMTFValues:nGroups <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- 0
	.loc	14 330 7                # compress.c:330:7
	movl	%eax, %r9d
	movq	16(%rsp), %rax          # 8-byte Reload
.Ltmp3865:
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	movq	%rax, %rcx
	movl	%ecx, %edx
	andl	$1, %edx
	.loc	14 330 7                # compress.c:330:7
	movq	%r9, %rax
	shlq	$8, %rax
	leaq	(%rax,%r9,2), %rax
	leaq	(%r14,%rax), %r12
	addq	$37451, %r12            # imm = 0x924B
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	subq	%rdx, %rcx
	movq	%rcx, 136(%rsp)         # 8-byte Spill
	xorl	%ecx, %ecx
	movq	%r9, %r11
	movq	%r9, 32(%rsp)           # 8-byte Spill
.Ltmp3866:
	.p2align	4, 0x90
.LBB20_11:                              # %while.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_14 Depth 2
                                        #     Child Loop BB20_27 Depth 2
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: remF <- $r10d
	.loc	14 331 23 is_stmt 1     # compress.c:331:23
	movl	%r10d, %eax
	cltd
	idivl	%r11d
.Ltmp3867:
	#DEBUG_VALUE: tFreq <- $eax
	.loc	14 332 17               # compress.c:332:17
	leal	-1(%rcx), %r13d
.Ltmp3868:
	#DEBUG_VALUE: aFreq <- 0
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	.loc	14 334 23               # compress.c:334:23
	testl	%eax, %eax
	.loc	14 334 10 is_stmt 0     # compress.c:334:10
	jle	.LBB20_9
.Ltmp3869:
# %bb.12:                               # %while.body
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpl	%r15d, %r13d
	jg	.LBB20_9
.Ltmp3870:
# %bb.13:                               # %while.body41.preheader
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 335 15 is_stmt 1     # compress.c:335:15
	movslq	%r13d, %rdx
	xorl	%ebp, %ebp
.Ltmp3871:
	.p2align	4, 0x90
.LBB20_14:                              # %while.body41
                                        #   Parent Loop BB20_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:ge <- $rdx
	#DEBUG_VALUE: aFreq <- $ebp
	leaq	1(%rdx), %r13
	.loc	14 336 19               # compress.c:336:19
	addl	676(%r14,%rdx,4), %ebp
.Ltmp3872:
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 334 23               # compress.c:334:23
	cmpl	%eax, %ebp
	.loc	14 334 10 is_stmt 0     # compress.c:334:10
	jge	.LBB20_16
.Ltmp3873:
# %bb.15:                               # %while.body41
                                        #   in Loop: Header=BB20_14 Depth=2
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpq	%r15, %rdx
	movq	%r13, %rdx
	jl	.LBB20_14
.Ltmp3874:
.LBB20_16:                              # %while.end
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 339 17 is_stmt 1     # compress.c:339:17
	cmpl	%ecx, %r13d
	.loc	14 340 14               # compress.c:340:14
	jle	.LBB20_22
.Ltmp3875:
.LBB20_17:                              # %land.lhs.true
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 340 23 is_stmt 0     # compress.c:340:23
	cmpl	%r11d, %r9d
	.loc	14 340 34               # compress.c:340:34
	je	.LBB20_22
.Ltmp3876:
# %bb.18:                               # %land.lhs.true
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpq	$1, %r11
	je	.LBB20_22
.Ltmp3877:
# %bb.19:                               # %land.lhs.true50
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 34                 # compress.c:0:34
	movl	%r9d, %eax
.Ltmp3878:
	subl	%r11d, %eax
	.loc	14 341 38 is_stmt 1     # compress.c:341:38
	testb	$1, %al
.Ltmp3879:
	.loc	14 339 14               # compress.c:339:14
	je	.LBB20_22
.Ltmp3880:
# %bb.20:                               # %if.then53
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 342 22               # compress.c:342:22
	movslq	%r13d, %rax
	.loc	14 342 19 is_stmt 0     # compress.c:342:19
	subl	672(%r14,%rax,4), %ebp
.Ltmp3881:
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 343 15 is_stmt 1     # compress.c:343:15
	addl	$-1, %r13d
.Ltmp3882:
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 346 27               # compress.c:346:27
	cmpl	$3, 656(%r14)
.Ltmp3883:
	.loc	14 346 14 is_stmt 0     # compress.c:346:14
	jl	.LBB20_23
.Ltmp3884:
.LBB20_10:                              # %if.then61
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 347 13 is_stmt 1     # compress.c:347:13
	xorps	%xmm0, %xmm0
	cvtsi2ssl	%ebp, %xmm0
	movq	stderr(%rip), %rdi
	xorps	%xmm1, %xmm1
	cvtsi2ssl	668(%r14), %xmm1
	cvtss2sd	%xmm0, %xmm0
	mulsd	.LCPI20_0(%rip), %xmm0
	cvtss2sd	%xmm1, %xmm1
	divsd	%xmm1, %xmm0
	movl	$.L.str.3.56, %esi
	movl	%r11d, %edx
	movl	%r13d, %r8d
	movl	%ebp, %r9d
	movb	$1, %al
	movl	%r10d, 56(%rsp)         # 4-byte Spill
.Ltmp3885:
	#DEBUG_VALUE: remF <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	14 0 13 is_stmt 0       # compress.c:0:13
	movq	%rcx, 64(%rsp)          # 8-byte Spill
	movq	%r11, %rbx
.Ltmp3886:
	#DEBUG_VALUE: nPart <- $rbx
	.loc	14 347 13               # compress.c:347:13
	callq	fprintf
.Ltmp3887:
	.loc	14 0 13                 # compress.c:0:13
	movq	%rbx, %r11
	movq	64(%rsp), %rcx          # 8-byte Reload
	movl	56(%rsp), %r10d         # 4-byte Reload
	movq	32(%rsp), %r9           # 8-byte Reload
	jmp	.LBB20_23
.Ltmp3888:
	.p2align	4, 0x90
.LBB20_9:                               #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: tFreq <- $eax
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	xorl	%ebp, %ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
.Ltmp3889:
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 339 17 is_stmt 1     # compress.c:339:17
	cmpl	%ecx, %r13d
	.loc	14 340 14               # compress.c:340:14
	jg	.LBB20_17
.Ltmp3890:
.LBB20_22:                              # %if.end58
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: nPart <- $r11
	#DEBUG_VALUE: remF <- $r10d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: aFreq <- $ebp
	.loc	14 346 27               # compress.c:346:27
	cmpl	$3, 656(%r14)
.Ltmp3891:
	.loc	14 346 14 is_stmt 0     # compress.c:346:14
	jge	.LBB20_10
.Ltmp3892:
.LBB20_23:                              # %if.end68
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:v <- 0
	.loc	14 0 14                 # compress.c:0:14
	addq	$-1, %r11
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp3893:
	.loc	14 352 10 is_stmt 1     # compress.c:352:10
	jle	.LBB20_42
.Ltmp3894:
# %bb.24:                               # %for.body72.lr.ph
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movslq	%r13d, %r8
	movslq	%ecx, %rcx
	cmpl	$1, 16(%rsp)            # 4-byte Folded Reload
	jne	.LBB20_26
.Ltmp3895:
# %bb.25:                               #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 10 is_stmt 0       # compress.c:0:10
	xorl	%eax, %eax
.Ltmp3896:
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	cmpq	$0, 120(%rsp)           # 8-byte Folded Reload
	.loc	14 352 10               # compress.c:352:10
	jne	.LBB20_37
	jmp	.LBB20_42
.Ltmp3897:
	.p2align	4, 0x90
.LBB20_26:                              # %for.body72.preheader
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 10                 # compress.c:0:10
	xorl	%eax, %eax
.Ltmp3898:
	.p2align	4, 0x90
.LBB20_27:                              # %for.body72
                                        #   Parent Loop BB20_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	movb	$15, %bl
	movb	$15, %dil
.Ltmp3899:
	.loc	14 353 30 is_stmt 1     # compress.c:353:30
	cmpq	%r8, %rax
	jg	.LBB20_29
.Ltmp3900:
# %bb.28:                               # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 30 is_stmt 0       # compress.c:0:30
	movl	$0, %edi
.Ltmp3901:
.LBB20_29:                              # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movb	$15, %sil
	jge	.LBB20_31
.Ltmp3902:
# %bb.30:                               # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	xorl	%esi, %esi
.Ltmp3903:
.LBB20_31:                              # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movb	$15, %dl
	.loc	14 353 19               # compress.c:353:19
	cmpq	%rcx, %rax
	jl	.LBB20_33
.Ltmp3904:
# %bb.32:                               # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 19                 # compress.c:0:19
	movl	%edi, %edx
.Ltmp3905:
.LBB20_33:                              # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movb	%dl, -1(%r12,%rax)
.Ltmp3906:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 353 19               # compress.c:353:19
	leaq	1(%rax), %rdx
	cmpq	%rcx, %rdx
	jl	.LBB20_35
.Ltmp3907:
# %bb.34:                               # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 19                 # compress.c:0:19
	movl	%esi, %ebx
.Ltmp3908:
.LBB20_35:                              # %for.body72
                                        #   in Loop: Header=BB20_27 Depth=2
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movb	%bl, (%r12,%rax)
.Ltmp3909:
	.loc	14 352 38 is_stmt 1     # compress.c:352:38
	addq	$2, %rax
.Ltmp3910:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 352 10 is_stmt 0     # compress.c:352:10
	cmpq	%rax, 136(%rsp)         # 8-byte Folded Reload
	jne	.LBB20_27
.Ltmp3911:
# %bb.36:                               # %for.end95.loopexit.unr-lcssa
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	.loc	14 0 10                 # compress.c:0:10
	cmpq	$0, 120(%rsp)           # 8-byte Folded Reload
	.loc	14 352 10               # compress.c:352:10
	je	.LBB20_42
.Ltmp3912:
.LBB20_37:                              # %for.body72.epil
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 0                  # compress.c:0:0
	movq	%r11, %rdx
	shlq	$8, %rdx
	leaq	(%rdx,%r11,2), %rsi
	movb	$15, %bl
	movb	$15, %dil
	.loc	14 353 30 is_stmt 1     # compress.c:353:30
	cmpq	%r8, %rax
	jg	.LBB20_39
.Ltmp3913:
# %bb.38:                               # %for.body72.epil
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 30 is_stmt 0       # compress.c:0:30
	xorl	%edi, %edi
.Ltmp3914:
.LBB20_39:                              # %for.body72.epil
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	addq	%r14, %rsi
	.loc	14 353 19               # compress.c:353:19
	cmpq	%rcx, %rax
	jl	.LBB20_41
.Ltmp3915:
# %bb.40:                               # %for.body72.epil
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 19                 # compress.c:0:19
	movl	%edi, %ebx
.Ltmp3916:
.LBB20_41:                              # %for.body72.epil
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: sendMTFValues:v <- $rax
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movb	%bl, 37708(%rax,%rsi)
.Ltmp3917:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB20_42:                              # %for.end95
                                        #   in Loop: Header=BB20_11 Depth=1
	#DEBUG_VALUE: aFreq <- $ebp
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 358 17 is_stmt 1     # compress.c:358:17
	addl	$1, %r13d
.Ltmp3918:
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	.loc	14 359 15               # compress.c:359:15
	subl	%ebp, %r10d
.Ltmp3919:
	#DEBUG_VALUE: nPart <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: remF <- $r10d
	.loc	14 330 7                # compress.c:330:7
	addq	$-258, %r12             # imm = 0xFEFE
	movl	%r13d, %ecx
	.loc	14 330 20 is_stmt 0     # compress.c:330:20
	testq	%r11, %r11
	.loc	14 330 7                # compress.c:330:7
	jg	.LBB20_11
.Ltmp3920:
# %bb.43:                               # %for.cond100.preheader
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:iter <- 0
	#DEBUG_VALUE: sendMTFValues:nSelectors <- undef
	.loc	14 0 7                  # compress.c:0:7
	cmpl	$6, %r9d
	sete	%dl
	setne	%bl
	movq	16(%rsp), %rcx          # 8-byte Reload
	testl	%ecx, %ecx
	setle	%al
.Ltmp3921:
	.loc	14 366 4 is_stmt 1      # compress.c:366:4
	leal	(,%r9,4), %esi
	movq	%rsi, 216(%rsp)         # 8-byte Spill
	leaq	(,%rcx,4), %rsi
	movq	%rsi, 72(%rsp)          # 8-byte Spill
	leal	(%r9,%r9), %esi
	movq	%rsi, 248(%rsp)         # 8-byte Spill
	orb	%al, %bl
	movb	%bl, 43(%rsp)           # 1-byte Spill
	leaq	45448(%r14), %rsi
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	orb	%al, %dl
	movb	%dl, 42(%rsp)           # 1-byte Spill
	movslq	%ecx, %rdx
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	andl	$-8, %ecx
	movq	%rcx, 96(%rsp)          # 8-byte Spill
	leaq	-8(%rcx), %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	shrq	$3, %rax
	leal	1(%rax), %ecx
	andl	$1, %ecx
	addl	$3, %r15d
	movl	%r15d, %esi
	notl	%esi
	leaq	-1(%r15), %rdi
	andl	$1, %esi
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	notq	%rsi
	movq	%r15, 104(%rsp)         # 8-byte Spill
	addq	%r15, %rsi
	movq	%rsi, 288(%rsp)         # 8-byte Spill
	movq	%rdx, 296(%rsp)         # 8-byte Spill
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	andl	$7, %edx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	subq	%rax, %rcx
	movq	%rdi, 64(%rsp)          # 8-byte Spill
	movq	%rdx, 280(%rsp)         # 8-byte Spill
	subq	%rdx, %rdi
	addq	$-1, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	leaq	46480(%r14), %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	47512(%r14), %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	48544(%r14), %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	49576(%r14), %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	leaq	50608(%r14), %rax
	movq	%rax, 152(%rsp)         # 8-byte Spill
	leaq	51640(%r14), %rax
	movq	%rax, 144(%rsp)         # 8-byte Spill
	movq	%rdi, 272(%rsp)         # 8-byte Spill
	leaq	1(%rdi), %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	51648(%r14), %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	leaq	(,%r9,4), %rax
	movq	%rax, 160(%rsp)         # 8-byte Spill
	leaq	45496(%r14), %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, 88(%rsp)          # 8-byte Spill
	movq	%r14, 112(%rsp)         # 8-byte Spill
	jmp	.LBB20_55
.Ltmp3922:
	.p2align	4, 0x90
.LBB20_44:                              # %for.cond117.preheader.3
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- undef
	#DEBUG_VALUE: sendMTFValues:v <- 0
	.loc	14 0 4 is_stmt 0        # compress.c:0:4
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp3923:
	.loc	14 371 10 is_stmt 1     # compress.c:371:10
	jle	.LBB20_46
.Ltmp3924:
# %bb.45:                               # %for.body120.lr.ph.3
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 10 is_stmt 0       # compress.c:0:10
	movq	176(%rsp), %rdi         # 8-byte Reload
.Ltmp3925:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rdx          # 8-byte Reload
	callq	memset
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	pxor	%xmm5, %xmm5
	movq	32(%rsp), %r9           # 8-byte Reload
.Ltmp3926:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
.LBB20_46:                              # %for.inc128.3
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 28 is_stmt 0       # compress.c:0:28
	cmpl	$4, %r9d
	.loc	14 370 7 is_stmt 1      # compress.c:370:7
	je	.LBB20_61
.Ltmp3927:
# %bb.47:                               # %for.inc128.3
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
	jle	.LBB20_61
.Ltmp3928:
# %bb.48:                               # %for.inc128.4
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	movq	168(%rsp), %rdi         # 8-byte Reload
.Ltmp3929:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rdx          # 8-byte Reload
	callq	memset
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	pxor	%xmm5, %xmm5
	movq	32(%rsp), %r9           # 8-byte Reload
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.Ltmp3930:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
	.loc	14 0 28 is_stmt 0       # compress.c:0:28
	cmpl	$5, %r9d
.Ltmp3931:
	.loc	14 370 7 is_stmt 1      # compress.c:370:7
	je	.LBB20_61
.Ltmp3932:
# %bb.49:                               # %for.inc128.4
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
	jle	.LBB20_61
.Ltmp3933:
# %bb.50:                               # %for.inc128.5
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	movq	152(%rsp), %rdi         # 8-byte Reload
.Ltmp3934:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rdx          # 8-byte Reload
	callq	memset
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	pxor	%xmm5, %xmm5
	movq	32(%rsp), %r9           # 8-byte Reload
.Ltmp3935:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
	.loc	14 370 7                # compress.c:370:7
	cmpb	$0, 42(%rsp)            # 1-byte Folded Reload
	jne	.LBB20_61
.Ltmp3936:
# %bb.51:                               # %for.body120.lr.ph.6
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	movq	144(%rsp), %rdi         # 8-byte Reload
.Ltmp3937:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rdx          # 8-byte Reload
	callq	memset
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	pxor	%xmm5, %xmm5
	movq	32(%rsp), %r9           # 8-byte Reload
.Ltmp3938:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
	.loc	14 0 28 is_stmt 0       # compress.c:0:28
	jmp	.LBB20_61
.Ltmp3939:
.LBB20_52:                              # %if.then1671
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- $r11d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 481 10 is_stmt 1     # compress.c:481:10
	movq	stderr(%rip), %rdi
	movq	88(%rsp), %rax          # 8-byte Reload
	leal	1(%rax), %edx
	movl	%r11d, %ecx
	sarl	$31, %ecx
	shrl	$29, %ecx
	addl	%r11d, %ecx
	sarl	$3, %ecx
	movl	$.L.str.4.57, %esi
	xorl	%eax, %eax
	callq	fprintf
.Ltmp3940:
	#DEBUG_VALUE: sendMTFValues:t <- 0
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movq	stderr(%rip), %rax
	xorl	%ebx, %ebx
.Ltmp3941:
.LBB20_53:                              # %for.body1678
                                        #   Parent Loop BB20_55 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 484 13 is_stmt 1     # compress.c:484:13
	movl	304(%rsp,%rbx), %edx
	movl	$.L.str.5.58, %esi
	movq	%rax, %rdi
	xorl	%eax, %eax
	callq	fprintf
.Ltmp3942:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movq	stderr(%rip), %rax
.Ltmp3943:
	.loc	14 483 24 is_stmt 1     # compress.c:483:24
	addq	$4, %rbx
	cmpq	%rbx, 160(%rsp)         # 8-byte Folded Reload
.Ltmp3944:
	.loc	14 483 10 is_stmt 0     # compress.c:483:10
	jne	.LBB20_53
.Ltmp3945:
# %bb.54:                               # %for.end1684
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 485 10 is_stmt 1     # compress.c:485:10
	movl	$10, %edi
	movq	%rax, %rsi
	callq	fputc
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	104(%rsp), %r9          # 8-byte Reload
	pxor	%xmm5, %xmm5
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movl	$256, %esi              # imm = 0x100
	jmp	.LBB20_95
.Ltmp3946:
	.p2align	4, 0x90
.LBB20_55:                              # %for.cond104.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_63 Depth 2
                                        #     Child Loop BB20_66 Depth 2
                                        #       Child Loop BB20_72 Depth 3
                                        #       Child Loop BB20_90 Depth 3
                                        #     Child Loop BB20_53 Depth 2
                                        #     Child Loop BB20_97 Depth 2
                                        #       Child Loop BB20_102 Depth 3
                                        #       Child Loop BB20_106 Depth 3
                                        #       Child Loop BB20_109 Depth 3
                                        #         Child Loop BB20_110 Depth 4
                                        #           Child Loop BB20_111 Depth 5
                                        #         Child Loop BB20_116 Depth 4
                                        #           Child Loop BB20_118 Depth 5
                                        #           Child Loop BB20_128 Depth 5
                                        #           Child Loop BB20_137 Depth 5
                                        #         Child Loop BB20_143 Depth 4
                                        #           Child Loop BB20_144 Depth 5
                                        #           Child Loop BB20_146 Depth 5
                                        #         Child Loop BB20_154 Depth 4
                                        #         Child Loop BB20_159 Depth 4
                                        #         Child Loop BB20_161 Depth 4
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 0
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	.loc	14 368 45               # compress.c:368:45
	leaq	304(%rsp), %rdi
	xorl	%esi, %esi
	movq	216(%rsp), %rdx         # 8-byte Reload
	callq	memset
.Ltmp3947:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- 0
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 0 45 is_stmt 0       # compress.c:0:45
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp3948:
	.loc	14 371 10 is_stmt 1     # compress.c:371:10
	jle	.LBB20_57
.Ltmp3949:
# %bb.56:                               # %for.body120.lr.ph
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 10 is_stmt 0       # compress.c:0:10
	movq	128(%rsp), %rdi         # 8-byte Reload
.Ltmp3950:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rbx          # 8-byte Reload
	movq	%rbx, %rdx
	callq	memset
.Ltmp3951:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- 0
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 0 28 is_stmt 0       # compress.c:0:28
	movq	200(%rsp), %rdi         # 8-byte Reload
	.loc	14 372 28               # compress.c:372:28
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset
.Ltmp3952:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
.LBB20_57:                              # %for.inc128.1
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 28                 # compress.c:0:28
	movq	32(%rsp), %r9           # 8-byte Reload
	cmpl	$2, %r9d
	pxor	%xmm5, %xmm5
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	.loc	14 370 7 is_stmt 1      # compress.c:370:7
	je	.LBB20_61
.Ltmp3953:
# %bb.58:                               # %for.cond117.preheader.2
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- undef
	#DEBUG_VALUE: sendMTFValues:v <- 0
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp3954:
	.loc	14 371 10 is_stmt 1     # compress.c:371:10
	jle	.LBB20_60
.Ltmp3955:
# %bb.59:                               # %for.body120.lr.ph.2
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 10 is_stmt 0       # compress.c:0:10
	movq	184(%rsp), %rdi         # 8-byte Reload
.Ltmp3956:
	.loc	14 372 28 is_stmt 1     # compress.c:372:28
	xorl	%esi, %esi
	movq	72(%rsp), %rdx          # 8-byte Reload
	callq	memset
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	pxor	%xmm5, %xmm5
	movq	32(%rsp), %r9           # 8-byte Reload
.Ltmp3957:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:v <- undef
.LBB20_60:                              # %for.inc128.2
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 28 is_stmt 0       # compress.c:0:28
	cmpl	$3, %r9d
	.loc	14 370 7 is_stmt 1      # compress.c:370:7
	jne	.LBB20_44
.Ltmp3958:
.LBB20_61:                              # %for.end130
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 378 11               # compress.c:378:11
	cmpb	$0, 43(%rsp)            # 1-byte Folded Reload
	movq	16(%rsp), %rdi          # 8-byte Reload
	jne	.LBB20_64
.Ltmp3959:
# %bb.62:                               # %for.body137.preheader
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 11 is_stmt 0       # compress.c:0:11
	movq	192(%rsp), %rax         # 8-byte Reload
	xorl	%ecx, %ecx
.Ltmp3960:
	.p2align	4, 0x90
.LBB20_63:                              # %for.body137
                                        #   Parent Loop BB20_55 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:v <- $rcx
	.loc	14 380 34 is_stmt 1     # compress.c:380:34
	movzbl	37966(%r14,%rcx), %edx
	.loc	14 380 47 is_stmt 0     # compress.c:380:47
	shll	$16, %edx
	.loc	14 380 56               # compress.c:380:56
	movzbl	37708(%r14,%rcx), %esi
	.loc	14 380 54               # compress.c:380:54
	orl	%edx, %esi
	.loc	14 380 31               # compress.c:380:31
	movl	%esi, -8(%rax)
	.loc	14 381 34 is_stmt 1     # compress.c:381:34
	movzbl	38482(%r14,%rcx), %edx
	.loc	14 381 47 is_stmt 0     # compress.c:381:47
	shll	$16, %edx
	.loc	14 381 56               # compress.c:381:56
	movzbl	38224(%r14,%rcx), %esi
	.loc	14 381 54               # compress.c:381:54
	orl	%edx, %esi
	.loc	14 381 31               # compress.c:381:31
	movl	%esi, -4(%rax)
	.loc	14 382 34 is_stmt 1     # compress.c:382:34
	movzbl	38998(%r14,%rcx), %edx
	.loc	14 382 47 is_stmt 0     # compress.c:382:47
	shll	$16, %edx
	.loc	14 382 56               # compress.c:382:56
	movzbl	38740(%r14,%rcx), %esi
	.loc	14 382 54               # compress.c:382:54
	orl	%edx, %esi
	.loc	14 382 31               # compress.c:382:31
	movl	%esi, (%rax)
.Ltmp3961:
	.loc	14 379 38 is_stmt 1     # compress.c:379:38
	addq	$1, %rcx
.Ltmp3962:
	#DEBUG_VALUE: sendMTFValues:v <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 379 24 is_stmt 0     # compress.c:379:24
	addq	$16, %rax
	cmpq	%rcx, %rdi
.Ltmp3963:
	.loc	14 379 10               # compress.c:379:10
	jne	.LBB20_63
.Ltmp3964:
.LBB20_64:                              # %if.end186
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:gs <- 0
	#DEBUG_VALUE: sendMTFValues:nSelectors <- 0
	#DEBUG_VALUE: sendMTFValues:totc <- 0
	.loc	14 392 23 is_stmt 1     # compress.c:392:23
	movl	668(%r14), %ebx
	.loc	14 392 17 is_stmt 0     # compress.c:392:17
	testl	%ebx, %ebx
.Ltmp3965:
	.loc	14 392 14               # compress.c:392:14
	jle	.LBB20_93
.Ltmp3966:
# %bb.65:                               # %if.end193.preheader
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 14                 # compress.c:0:14
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%r11d, %r11d
.Ltmp3967:
	.p2align	4, 0x90
.LBB20_66:                              # %if.end193
                                        #   Parent Loop BB20_55 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_72 Depth 3
                                        #       Child Loop BB20_90 Depth 3
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- $r15
	#DEBUG_VALUE: sendMTFValues:totc <- $r11d
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	movq	%r15, 24(%rsp)          # 8-byte Spill
.Ltmp3968:
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	movl	%r11d, 80(%rsp)         # 4-byte Spill
.Ltmp3969:
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	movl	%r9d, %ebp
	xorl	$6, %ebp
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	.loc	14 393 30 is_stmt 1     # compress.c:393:30
	leal	49(%r12), %r15d
.Ltmp3970:
	#DEBUG_VALUE: sendMTFValues:ge <- $r15d
	.loc	14 394 41               # compress.c:394:41
	leal	-1(%rbx), %r13d
.Ltmp3971:
	#DEBUG_VALUE: sendMTFValues:t <- 0
	.loc	14 400 48               # compress.c:400:48
	leaq	44(%rsp), %rdi
	xorl	%esi, %esi
	movq	248(%rsp), %rdx         # 8-byte Reload
	callq	memset
	movl	%r15d, %r10d
.Ltmp3972:
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:ge <- $r10d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- undef
	.loc	14 394 17               # compress.c:394:17
	cmpl	%ebx, %r15d
.Ltmp3973:
	.loc	14 394 14 is_stmt 0     # compress.c:394:14
	cmovll	%r15d, %r13d
.Ltmp3974:
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	.loc	14 402 38 is_stmt 1     # compress.c:402:38
	movl	%r13d, %eax
	subl	%r12d, %eax
	.loc	14 402 33 is_stmt 0     # compress.c:402:33
	xorl	$49, %eax
	.loc	14 402 27               # compress.c:402:27
	orl	%ebp, %eax
	sete	%al
	jne	.LBB20_68
.Ltmp3975:
# %bb.67:                               # %if.then219
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: cost45 <- 0
	#DEBUG_VALUE: cost23 <- 0
	#DEBUG_VALUE: cost01 <- 0
	.loc	14 414 13 is_stmt 1     # compress.c:414:13
	movslq	%r12d, %rdi
	movq	8(%rsp), %r8            # 8-byte Reload
	movzwl	(%r8,%rdi,2), %ebp
.Ltmp3976:
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
.Ltmp3977:
	#DEBUG_VALUE: cost01 <- undef
	#DEBUG_VALUE: cost23 <- undef
	#DEBUG_VALUE: cost45 <- undef
	.loc	14 414 26 is_stmt 0     # compress.c:414:26
	movzwl	2(%r8,%rdi,2), %edx
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rdx
	movl	51640(%r14,%rdx), %ecx
	movl	51644(%r14,%rdx), %esi
	addl	51640(%r14,%rbp), %ecx
.Ltmp3978:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3979:
	#DEBUG_VALUE: cost23 <- $esi
	movl	51648(%r14,%rdx), %edx
	addl	51648(%r14,%rbp), %edx
.Ltmp3980:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 414 39               # compress.c:414:39
	movzwl	4(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3981:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3982:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3983:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 414 52               # compress.c:414:52
	movzwl	6(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3984:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3985:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3986:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 414 65               # compress.c:414:65
	movzwl	8(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3987:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3988:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3989:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 415 13 is_stmt 1     # compress.c:415:13
	movzwl	10(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3990:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3991:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3992:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 415 26 is_stmt 0     # compress.c:415:26
	movzwl	12(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3993:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3994:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3995:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 415 39               # compress.c:415:39
	movzwl	14(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3996:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp3997:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp3998:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 415 52               # compress.c:415:52
	movzwl	16(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp3999:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4000:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4001:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 415 65               # compress.c:415:65
	movzwl	18(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4002:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4003:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4004:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 416 13 is_stmt 1     # compress.c:416:13
	movzwl	20(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4005:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4006:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4007:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 416 26 is_stmt 0     # compress.c:416:26
	movzwl	22(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4008:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4009:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4010:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 416 39               # compress.c:416:39
	movzwl	24(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4011:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4012:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4013:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 416 52               # compress.c:416:52
	movzwl	26(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4014:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4015:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4016:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 416 65               # compress.c:416:65
	movzwl	28(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4017:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4018:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4019:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 417 13 is_stmt 1     # compress.c:417:13
	movzwl	30(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4020:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4021:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4022:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 417 26 is_stmt 0     # compress.c:417:26
	movzwl	32(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4023:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4024:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4025:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 417 39               # compress.c:417:39
	movzwl	34(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4026:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4027:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4028:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 417 52               # compress.c:417:52
	movzwl	36(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4029:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4030:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4031:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 417 65               # compress.c:417:65
	movzwl	38(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4032:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4033:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4034:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 418 13 is_stmt 1     # compress.c:418:13
	movzwl	40(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4035:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4036:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4037:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 418 26 is_stmt 0     # compress.c:418:26
	movzwl	42(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4038:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4039:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4040:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 418 39               # compress.c:418:39
	movzwl	44(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4041:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4042:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4043:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 418 52               # compress.c:418:52
	movzwl	46(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4044:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4045:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4046:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 418 65               # compress.c:418:65
	movzwl	48(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4047:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4048:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4049:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 419 13 is_stmt 1     # compress.c:419:13
	movzwl	50(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4050:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4051:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4052:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 419 26 is_stmt 0     # compress.c:419:26
	movzwl	52(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4053:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4054:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4055:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 419 39               # compress.c:419:39
	movzwl	54(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4056:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4057:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4058:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 419 52               # compress.c:419:52
	movzwl	56(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4059:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4060:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4061:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 419 65               # compress.c:419:65
	movzwl	58(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4062:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4063:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4064:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 420 13 is_stmt 1     # compress.c:420:13
	movzwl	60(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4065:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4066:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4067:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 420 26 is_stmt 0     # compress.c:420:26
	movzwl	62(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4068:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4069:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4070:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 420 39               # compress.c:420:39
	movzwl	64(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4071:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4072:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4073:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 420 52               # compress.c:420:52
	movzwl	66(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4074:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4075:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4076:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 420 65               # compress.c:420:65
	movzwl	68(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4077:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4078:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4079:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 421 13 is_stmt 1     # compress.c:421:13
	movzwl	70(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4080:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4081:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4082:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 421 26 is_stmt 0     # compress.c:421:26
	movzwl	72(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4083:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4084:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4085:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 421 39               # compress.c:421:39
	movzwl	74(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4086:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4087:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4088:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 421 52               # compress.c:421:52
	movzwl	76(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4089:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4090:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4091:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 421 65               # compress.c:421:65
	movzwl	78(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4092:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4093:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4094:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 422 13 is_stmt 1     # compress.c:422:13
	movzwl	80(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4095:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4096:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4097:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 422 26 is_stmt 0     # compress.c:422:26
	movzwl	82(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4098:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4099:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4100:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 422 39               # compress.c:422:39
	movzwl	84(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4101:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4102:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4103:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 422 52               # compress.c:422:52
	movzwl	86(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4104:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4105:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4106:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 422 65               # compress.c:422:65
	movzwl	88(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4107:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4108:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4109:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 423 13 is_stmt 1     # compress.c:423:13
	movzwl	90(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4110:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4111:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4112:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 423 26 is_stmt 0     # compress.c:423:26
	movzwl	92(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4113:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4114:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4115:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 423 39               # compress.c:423:39
	movzwl	94(%r8,%rdi,2), %ebp
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rbp
	addl	51640(%r14,%rbp), %ecx
.Ltmp4116:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rbp), %esi
.Ltmp4117:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rbp), %edx
.Ltmp4118:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 423 52               # compress.c:423:52
	movzwl	96(%r8,%rdi,2), %edi
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rdi
	addl	51640(%r14,%rdi), %ecx
.Ltmp4119:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rdi), %esi
.Ltmp4120:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rdi), %edx
.Ltmp4121:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 423 65               # compress.c:423:65
	movslq	%r10d, %rdi
	movzwl	(%r8,%rdi,2), %edi
	#DEBUG_VALUE: icv <- undef
	shlq	$4, %rdi
	addl	51640(%r14,%rdi), %ecx
.Ltmp4122:
	#DEBUG_VALUE: cost01 <- $ecx
	addl	51644(%r14,%rdi), %esi
.Ltmp4123:
	#DEBUG_VALUE: cost23 <- $esi
	addl	51648(%r14,%rdi), %edx
.Ltmp4124:
	#DEBUG_VALUE: cost45 <- $edx
	.loc	14 427 21 is_stmt 1     # compress.c:427:21
	movw	%cx, 44(%rsp)
	.loc	14 427 57 is_stmt 0     # compress.c:427:57
	movl	%ecx, %edi
	shrl	$16, %edi
	.loc	14 427 48               # compress.c:427:48
	movw	%di, 46(%rsp)
	.loc	14 428 21 is_stmt 1     # compress.c:428:21
	movw	%si, 48(%rsp)
	.loc	14 428 57 is_stmt 0     # compress.c:428:57
	shrl	$16, %esi
.Ltmp4125:
	.loc	14 428 48               # compress.c:428:48
	movw	%si, 50(%rsp)
	.loc	14 429 21 is_stmt 1     # compress.c:429:21
	movw	%dx, 52(%rsp)
	.loc	14 429 57 is_stmt 0     # compress.c:429:57
	shrl	$16, %edx
.Ltmp4126:
	.loc	14 429 48               # compress.c:429:48
	movw	%dx, 54(%rsp)
	jmp	.LBB20_70
.Ltmp4127:
	.p2align	4, 0x90
.LBB20_68:                              # %for.cond1137.preheader
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 433 28 is_stmt 1     # compress.c:433:28
	cmpl	%r12d, %r13d
	movq	8(%rsp), %r8            # 8-byte Reload
.Ltmp4128:
	.loc	14 433 13 is_stmt 0     # compress.c:433:13
	jge	.LBB20_71
.Ltmp4129:
# %bb.69:                               # %for.cond1137.preheader.for.body1169_crit_edge
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 445 17 is_stmt 1     # compress.c:445:17
	movzwl	44(%rsp), %ecx
	movzwl	46(%rsp), %edi
.Ltmp4130:
.LBB20_70:                              # %for.body1169
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 17 is_stmt 0       # compress.c:0:17
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %r15          # 8-byte Reload
	pxor	%xmm5, %xmm5
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movl	80(%rsp), %r11d         # 4-byte Reload
	jmp	.LBB20_78
.Ltmp4131:
	.p2align	4, 0x90
.LBB20_71:                              # %for.body1140.preheader
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 434 29 is_stmt 1     # compress.c:434:29
	movslq	%r12d, %rdx
	movslq	%r13d, %rsi
.Ltmp4132:
	.loc	14 435 54               # compress.c:435:54
	movzwl	44(%rsp), %ecx
	movzwl	46(%rsp), %edi
.Ltmp4133:
	.loc	14 434 29               # compress.c:434:29
	addq	$-1, %rdx
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %r15          # 8-byte Reload
	pxor	%xmm5, %xmm5
	movdqa	.LCPI20_1(%rip), %xmm6  # xmm6 = [256,256,256,256]
	movdqa	.LCPI20_2(%rip), %xmm7  # xmm7 = [0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255]
	movl	80(%rsp), %r11d         # 4-byte Reload
.Ltmp4134:
	.p2align	4, 0x90
.LBB20_72:                              # %for.body1140
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_66 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r12d
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:i <- undef
	movzwl	2(%r8,%rdx,2), %ebp
.Ltmp4135:
	#DEBUG_VALUE: sendMTFValues:t <- 0
	.loc	14 435 57               # compress.c:435:57
	movzbl	37708(%r14,%rbp), %ebx
	.loc	14 435 54 is_stmt 0     # compress.c:435:54
	addl	%ebx, %ecx
	movw	%cx, 44(%rsp)
.Ltmp4136:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:t <- 1
	.loc	14 435 57               # compress.c:435:57
	movzbl	37966(%r14,%rbp), %ebx
	.loc	14 435 54               # compress.c:435:54
	addl	%ebx, %edi
.Ltmp4137:
	#DEBUG_VALUE: icv <- undef
	#DEBUG_VALUE: sendMTFValues:t <- 0
	movw	%di, 46(%rsp)
	cmpl	$2, %r9d
.Ltmp4138:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 435 16               # compress.c:435:16
	je	.LBB20_77
.Ltmp4139:
# %bb.73:                               # %for.body1147.2
                                        #   in Loop: Header=BB20_72 Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 2
	.loc	14 435 57               # compress.c:435:57
	movzbl	38224(%r14,%rbp), %ebx
	.loc	14 435 54               # compress.c:435:54
	addw	%bx, 48(%rsp)
.Ltmp4140:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 54                 # compress.c:0:54
	cmpl	$3, %r9d
.Ltmp4141:
	.loc	14 435 16               # compress.c:435:16
	je	.LBB20_77
.Ltmp4142:
# %bb.74:                               # %for.body1147.3
                                        #   in Loop: Header=BB20_72 Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 3
	.loc	14 435 57               # compress.c:435:57
	movzbl	38482(%r14,%rbp), %ebx
	.loc	14 435 54               # compress.c:435:54
	addw	%bx, 50(%rsp)
.Ltmp4143:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 54                 # compress.c:0:54
	cmpl	$4, %r9d
.Ltmp4144:
	.loc	14 435 16               # compress.c:435:16
	je	.LBB20_77
.Ltmp4145:
# %bb.75:                               # %for.body1147.4
                                        #   in Loop: Header=BB20_72 Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 4
	.loc	14 435 57               # compress.c:435:57
	movzbl	38740(%r14,%rbp), %ebx
	.loc	14 435 54               # compress.c:435:54
	addw	%bx, 52(%rsp)
.Ltmp4146:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 54                 # compress.c:0:54
	cmpl	$5, %r9d
.Ltmp4147:
	.loc	14 435 16               # compress.c:435:16
	je	.LBB20_77
.Ltmp4148:
# %bb.76:                               # %for.body1147.5
                                        #   in Loop: Header=BB20_72 Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 5
	.loc	14 435 57               # compress.c:435:57
	movzbl	38998(%r14,%rbp), %ebp
	.loc	14 435 54               # compress.c:435:54
	addw	%bp, 54(%rsp)
.Ltmp4149:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.p2align	4, 0x90
.LBB20_77:                              # %for.end1161
                                        #   in Loop: Header=BB20_72 Depth=3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 433 28 is_stmt 1     # compress.c:433:28
	addq	$1, %rdx
	cmpq	%rsi, %rdx
.Ltmp4150:
	.loc	14 433 13 is_stmt 0     # compress.c:433:13
	jl	.LBB20_72
.Ltmp4151:
.LBB20_78:                              # %for.body1169
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 1
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:bt <- 0
	#DEBUG_VALUE: sendMTFValues:bc <- 999999999
	.loc	14 445 25 is_stmt 1     # compress.c:445:25
	xorl	%edx, %edx
	cmpw	%di, %cx
	seta	%dl
.Ltmp4152:
	.loc	14 445 17 is_stmt 0     # compress.c:445:17
	cmovbl	%ecx, %edi
	cmpl	$2, %r9d
.Ltmp4153:
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 444 10 is_stmt 1     # compress.c:444:10
	je	.LBB20_83
.Ltmp4154:
# %bb.79:                               # %for.body1169.2
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 445 17               # compress.c:445:17
	movzwl	48(%rsp), %ecx
.Ltmp4155:
	#DEBUG_VALUE: sendMTFValues:t <- 2
	.loc	14 445 25 is_stmt 0     # compress.c:445:25
	cmpw	%cx, %di
.Ltmp4156:
	.loc	14 445 17               # compress.c:445:17
	cmovael	%ecx, %edi
	movl	$2, %ecx
	cmoval	%ecx, %edx
.Ltmp4157:
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	.loc	14 0 17                 # compress.c:0:17
	cmpl	$3, %r9d
.Ltmp4158:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 444 10 is_stmt 1     # compress.c:444:10
	je	.LBB20_83
.Ltmp4159:
# %bb.80:                               # %for.body1169.3
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 445 17               # compress.c:445:17
	movzwl	50(%rsp), %ecx
.Ltmp4160:
	#DEBUG_VALUE: sendMTFValues:t <- 3
	.loc	14 445 25 is_stmt 0     # compress.c:445:25
	cmpw	%cx, %di
.Ltmp4161:
	.loc	14 445 17               # compress.c:445:17
	cmovael	%ecx, %edi
	movl	$3, %ecx
	cmoval	%ecx, %edx
.Ltmp4162:
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	.loc	14 0 17                 # compress.c:0:17
	cmpl	$4, %r9d
.Ltmp4163:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 444 10 is_stmt 1     # compress.c:444:10
	je	.LBB20_83
.Ltmp4164:
# %bb.81:                               # %for.body1169.4
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 445 17               # compress.c:445:17
	movzwl	52(%rsp), %ecx
.Ltmp4165:
	#DEBUG_VALUE: sendMTFValues:t <- 4
	.loc	14 445 25 is_stmt 0     # compress.c:445:25
	cmpw	%cx, %di
.Ltmp4166:
	.loc	14 445 17               # compress.c:445:17
	cmovael	%ecx, %edi
	movl	$4, %ecx
	cmoval	%ecx, %edx
.Ltmp4167:
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	.loc	14 0 17                 # compress.c:0:17
	cmpl	$5, %r9d
.Ltmp4168:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 444 10 is_stmt 1     # compress.c:444:10
	je	.LBB20_83
.Ltmp4169:
# %bb.82:                               # %for.body1169.5
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- 5
	.loc	14 445 17               # compress.c:445:17
	movzwl	54(%rsp), %ecx
.Ltmp4170:
	.loc	14 445 25 is_stmt 0     # compress.c:445:25
	cmpw	%cx, %di
.Ltmp4171:
	.loc	14 445 17               # compress.c:445:17
	cmovael	%ecx, %edi
	movl	$5, %ecx
	cmoval	%ecx, %edx
.Ltmp4172:
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.p2align	4, 0x90
.LBB20_83:                              # %for.end1182
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	.loc	14 447 10 is_stmt 1     # compress.c:447:10
	movl	%edx, %ebp
	.loc	14 447 18 is_stmt 0     # compress.c:447:18
	addl	$1, 304(%rsp,%rbp,4)
.Ltmp4173:
	.loc	14 445 17 is_stmt 1     # compress.c:445:17
	movzwl	%di, %ecx
.Ltmp4174:
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	.loc	14 448 34               # compress.c:448:34
	movb	%dl, 1704(%r14,%r15)
.Ltmp4175:
	.loc	14 454 27               # compress.c:454:27
	testb	%al, %al
	je	.LBB20_85
.Ltmp4176:
# %bb.84:                               # %if.then1198
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 459 13               # compress.c:459:13
	movslq	%r12d, %rdx
.Ltmp4177:
	movzwl	(%r8,%rdx,2), %edi
	movq	%rbp, %rax
	shlq	$10, %rax
	leaq	(%rax,%rbp,8), %rax
	addq	%r14, %rax
	addl	$1, 45448(%rax,%rdi,4)
	.loc	14 459 26 is_stmt 0     # compress.c:459:26
	movzwl	2(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 459 39               # compress.c:459:39
	movzwl	4(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 459 52               # compress.c:459:52
	movzwl	6(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 459 65               # compress.c:459:65
	movzwl	8(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 460 13 is_stmt 1     # compress.c:460:13
	movzwl	10(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 460 26 is_stmt 0     # compress.c:460:26
	movzwl	12(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 460 39               # compress.c:460:39
	movzwl	14(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 460 52               # compress.c:460:52
	movzwl	16(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 460 65               # compress.c:460:65
	movzwl	18(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 461 13 is_stmt 1     # compress.c:461:13
	movzwl	20(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 461 26 is_stmt 0     # compress.c:461:26
	movzwl	22(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 461 39               # compress.c:461:39
	movzwl	24(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 461 52               # compress.c:461:52
	movzwl	26(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 461 65               # compress.c:461:65
	movzwl	28(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 462 13 is_stmt 1     # compress.c:462:13
	movzwl	30(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 462 26 is_stmt 0     # compress.c:462:26
	movzwl	32(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 462 39               # compress.c:462:39
	movzwl	34(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 462 52               # compress.c:462:52
	movzwl	36(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 462 65               # compress.c:462:65
	movzwl	38(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 463 13 is_stmt 1     # compress.c:463:13
	movzwl	40(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 463 26 is_stmt 0     # compress.c:463:26
	movzwl	42(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 463 39               # compress.c:463:39
	movzwl	44(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 463 52               # compress.c:463:52
	movzwl	46(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 463 65               # compress.c:463:65
	movzwl	48(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 464 13 is_stmt 1     # compress.c:464:13
	movzwl	50(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 464 26 is_stmt 0     # compress.c:464:26
	movzwl	52(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 464 39               # compress.c:464:39
	movzwl	54(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 464 52               # compress.c:464:52
	movzwl	56(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 464 65               # compress.c:464:65
	movzwl	58(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 465 13 is_stmt 1     # compress.c:465:13
	movzwl	60(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 465 26 is_stmt 0     # compress.c:465:26
	movzwl	62(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 465 39               # compress.c:465:39
	movzwl	64(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 465 52               # compress.c:465:52
	movzwl	66(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 465 65               # compress.c:465:65
	movzwl	68(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 466 13 is_stmt 1     # compress.c:466:13
	movzwl	70(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 466 26 is_stmt 0     # compress.c:466:26
	movzwl	72(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 466 39               # compress.c:466:39
	movzwl	74(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 466 52               # compress.c:466:52
	movzwl	76(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 466 65               # compress.c:466:65
	movzwl	78(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 467 13 is_stmt 1     # compress.c:467:13
	movzwl	80(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 467 26 is_stmt 0     # compress.c:467:26
	movzwl	82(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 467 39               # compress.c:467:39
	movzwl	84(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 467 52               # compress.c:467:52
	movzwl	86(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 467 65               # compress.c:467:65
	movzwl	88(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 468 13 is_stmt 1     # compress.c:468:13
	movzwl	90(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 468 26 is_stmt 0     # compress.c:468:26
	movzwl	92(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 468 39               # compress.c:468:39
	movzwl	94(%r8,%rdx,2), %esi
	addl	$1, 45448(%rax,%rsi,4)
	.loc	14 468 52               # compress.c:468:52
	movzwl	96(%r8,%rdx,2), %edx
	addl	$1, 45448(%rax,%rdx,4)
	.loc	14 468 65               # compress.c:468:65
	movslq	%r10d, %rdx
	movzwl	(%r8,%rdx,2), %edx
	addl	$1, 45448(%rax,%rdx,4)
	jmp	.LBB20_91
.Ltmp4178:
	.p2align	4, 0x90
.LBB20_85:                              # %for.cond1650.preheader
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 474 28 is_stmt 1     # compress.c:474:28
	cmpl	%r12d, %r13d
.Ltmp4179:
	.loc	14 474 13 is_stmt 0     # compress.c:474:13
	jl	.LBB20_91
.Ltmp4180:
# %bb.86:                               # %for.body1653.preheader
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:bt <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 475 30 is_stmt 1     # compress.c:475:30
	movslq	%r12d, %rax
.Ltmp4181:
	#DEBUG_VALUE: sendMTFValues:i <- $rax
	leal	1(%r13), %edx
.Ltmp4182:
	subl	%r12d, %edx
	testb	$1, %dl
	je	.LBB20_88
.Ltmp4183:
# %bb.87:                               # %for.body1653.prol
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:i <- $rax
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movzwl	(%r8,%rax,2), %edx
	.loc	14 475 16 is_stmt 0     # compress.c:475:16
	movq	%rbp, %rdi
	shlq	$10, %rdi
	leaq	(%rdi,%rbp,8), %rdi
	addq	%r14, %rdi
	.loc	14 475 39               # compress.c:475:39
	addl	$1, 45448(%rdi,%rdx,4)
.Ltmp4184:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 474 36 is_stmt 1     # compress.c:474:36
	addq	$1, %rax
.Ltmp4185:
.LBB20_88:                              # %for.body1653.prol.loopexit
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 475 30               # compress.c:475:30
	cmpl	%r12d, %r13d
	je	.LBB20_91
.Ltmp4186:
# %bb.89:                               # %for.body1653.preheader1
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movslq	%r13d, %rdx
	addq	$-1, %rax
.Ltmp4187:
	.p2align	4, 0x90
.LBB20_90:                              # %for.body1653
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_66 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:i <- undef
	movzwl	2(%r8,%rax,2), %edi
	.loc	14 475 16 is_stmt 0     # compress.c:475:16
	movq	%rbp, %rsi
	shlq	$10, %rsi
	leaq	(%rsi,%rbp,8), %rsi
	addq	%r14, %rsi
	.loc	14 475 39               # compress.c:475:39
	addl	$1, 45448(%rsi,%rdi,4)
.Ltmp4188:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 475 30               # compress.c:475:30
	movzwl	4(%r8,%rax,2), %edi
	.loc	14 475 39               # compress.c:475:39
	addl	$1, 45448(%rsi,%rdi,4)
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 474 28 is_stmt 1     # compress.c:474:28
	addq	$2, %rax
	cmpq	%rdx, %rax
.Ltmp4189:
	.loc	14 474 13 is_stmt 0     # compress.c:474:13
	jl	.LBB20_90
.Ltmp4190:
	.p2align	4, 0x90
.LBB20_91:                              # %if.end1665
                                        #   in Loop: Header=BB20_66 Depth=2
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r12d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:ge <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 0                  # compress.c:0:0
	addl	%ecx, %r11d
.Ltmp4191:
	#DEBUG_VALUE: sendMTFValues:totc <- $r11d
	addq	$1, %r15
	.loc	14 478 17 is_stmt 1     # compress.c:478:17
	addl	$1, %r13d
.Ltmp4192:
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	.loc	14 392 23               # compress.c:392:23
	movl	668(%r14), %ebx
	movl	%r13d, %r12d
	.loc	14 392 17 is_stmt 0     # compress.c:392:17
	cmpl	%ebx, %r13d
.Ltmp4193:
	.loc	14 392 14               # compress.c:392:14
	jl	.LBB20_66
.Ltmp4194:
# %bb.92:                               # %while.end1667.loopexit
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:bc <- $ecx
	#DEBUG_VALUE: sendMTFValues:totc <- $r11d
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $r13d
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 14                 # compress.c:0:14
	movq	%r15, 24(%rsp)          # 8-byte Spill
	jmp	.LBB20_94
.Ltmp4195:
	.p2align	4, 0x90
.LBB20_93:                              #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	xorl	%eax, %eax
	movq	%rax, 24(%rsp)          # 8-byte Spill
	xorl	%r11d, %r11d
.Ltmp4196:
.LBB20_94:                              # %while.end1667
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:totc <- $r11d
	#DEBUG_VALUE: bsW:v <- [DW_OP_plus_uconst 24] [$rsp+0]
	.loc	14 480 24 is_stmt 1     # compress.c:480:24
	cmpl	$3, 656(%r14)
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	104(%rsp), %r9          # 8-byte Reload
	movl	$256, %esi              # imm = 0x100
.Ltmp4197:
	.loc	14 480 11 is_stmt 0     # compress.c:480:11
	jge	.LBB20_52
.Ltmp4198:
.LBB20_95:                              # %for.body1690.preheader
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 0 11                 # compress.c:0:11
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rax         # 8-byte Reload
	xorl	%r10d, %r10d
	jmp	.LBB20_97
.Ltmp4199:
.LBB20_96:                              #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	xorl	%eax, %eax
	movq	96(%rsp), %rdx          # 8-byte Reload
	cmpq	$0, 232(%rsp)           # 8-byte Folded Reload
.Ltmp4200:
	.loc	13 120 15 is_stmt 1     # huffman.c:120:15
	jne	.LBB20_104
	jmp	.LBB20_105
.Ltmp4201:
	.p2align	4, 0x90
.LBB20_97:                              # %for.body1690
                                        #   Parent Loop BB20_55 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_102 Depth 3
                                        #       Child Loop BB20_106 Depth 3
                                        #       Child Loop BB20_109 Depth 3
                                        #         Child Loop BB20_110 Depth 4
                                        #           Child Loop BB20_111 Depth 5
                                        #         Child Loop BB20_116 Depth 4
                                        #           Child Loop BB20_118 Depth 5
                                        #           Child Loop BB20_128 Depth 5
                                        #           Child Loop BB20_137 Depth 5
                                        #         Child Loop BB20_143 Depth 4
                                        #           Child Loop BB20_144 Depth 5
                                        #           Child Loop BB20_146 Depth 5
                                        #         Child Loop BB20_154 Depth 4
                                        #         Child Loop BB20_159 Depth 4
                                        #         Child Loop BB20_161 Depth 4
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	.loc	13 0 15 is_stmt 0       # huffman.c:0:15
	movq	%rax, 80(%rsp)          # 8-byte Spill
	testl	%r8d, %r8d
.Ltmp4202:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- 0
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:maxLen <- 17
	.loc	13 119 4 is_stmt 1      # huffman.c:119:4
	jle	.LBB20_107
.Ltmp4203:
# %bb.98:                               # %for.body.preheader.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 4 is_stmt 0        # huffman.c:0:4
	cmpl	$7, %r8d
.Ltmp4204:
	.loc	13 120 22 is_stmt 1     # huffman.c:120:22
	ja	.LBB20_100
.Ltmp4205:
# %bb.99:                               #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 22 is_stmt 0       # huffman.c:0:22
	xorl	%eax, %eax
	jmp	.LBB20_106
.Ltmp4206:
	.p2align	4, 0x90
.LBB20_100:                             # %vector.ph.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	cmpq	$0, 240(%rsp)           # 8-byte Folded Reload
	.loc	13 120 22               # huffman.c:120:22
	je	.LBB20_96
.Ltmp4207:
# %bb.101:                              # %vector.body.i.preheader
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 22                 # huffman.c:0:22
	movq	224(%rsp), %rcx         # 8-byte Reload
	.loc	13 120 15               # huffman.c:120:15
	xorl	%eax, %eax
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rbp          # 8-byte Reload
.Ltmp4208:
	.p2align	4, 0x90
.LBB20_102:                             # %vector.body.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 120 22               # huffman.c:120:22
	movdqu	-48(%rbp,%rax,4), %xmm0
	movdqu	-32(%rbp,%rax,4), %xmm1
	.loc	13 120 30               # huffman.c:120:30
	movdqa	%xmm0, %xmm2
	pcmpeqd	%xmm5, %xmm2
	movdqa	%xmm1, %xmm3
	pcmpeqd	%xmm5, %xmm3
	.loc	13 120 50               # huffman.c:120:50
	pslld	$8, %xmm0
	pslld	$8, %xmm1
	movdqa	%xmm2, %xmm4
	pandn	%xmm0, %xmm4
	pand	%xmm6, %xmm2
	por	%xmm4, %xmm2
	movdqa	%xmm3, %xmm0
	pandn	%xmm1, %xmm0
	pand	%xmm6, %xmm3
	por	%xmm0, %xmm3
	.loc	13 120 19               # huffman.c:120:19
	movdqu	%xmm2, 1380(%rsp,%rax,4)
	movdqu	%xmm3, 1396(%rsp,%rax,4)
	.loc	13 120 22               # huffman.c:120:22
	movdqu	-16(%rbp,%rax,4), %xmm0
	movdqu	(%rbp,%rax,4), %xmm1
	.loc	13 120 30               # huffman.c:120:30
	movdqa	%xmm0, %xmm2
	pcmpeqd	%xmm5, %xmm2
	movdqa	%xmm1, %xmm3
	pcmpeqd	%xmm5, %xmm3
	.loc	13 120 50               # huffman.c:120:50
	pslld	$8, %xmm0
	pslld	$8, %xmm1
	movdqa	%xmm2, %xmm4
	pandn	%xmm0, %xmm4
	pand	%xmm6, %xmm2
	por	%xmm4, %xmm2
	movdqa	%xmm3, %xmm0
	pandn	%xmm1, %xmm0
	pand	%xmm6, %xmm3
	por	%xmm0, %xmm3
	.loc	13 120 19               # huffman.c:120:19
	movdqu	%xmm2, 1412(%rsp,%rax,4)
	movdqu	%xmm3, 1428(%rsp,%rax,4)
	.loc	13 120 15               # huffman.c:120:15
	addq	$16, %rax
	addq	$2, %rcx
	jne	.LBB20_102
.Ltmp4209:
# %bb.103:                              # %middle.block.unr-lcssa.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 15                 # huffman.c:0:15
	cmpq	$0, 232(%rsp)           # 8-byte Folded Reload
	.loc	13 120 15               # huffman.c:120:15
	je	.LBB20_105
.Ltmp4210:
.LBB20_104:                             # %vector.body.epil.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 120 22               # huffman.c:120:22
	movq	%r10, %rcx
	shlq	$10, %rcx
	leaq	(%rcx,%r10,8), %rcx
	addq	%r14, %rcx
	movdqu	45448(%rcx,%rax,4), %xmm0
	movdqu	45464(%rcx,%rax,4), %xmm1
	leaq	(,%rax,4), %rax
	.loc	13 120 30               # huffman.c:120:30
	movdqa	%xmm0, %xmm2
	pcmpeqd	%xmm5, %xmm2
	movdqa	%xmm1, %xmm3
	pcmpeqd	%xmm5, %xmm3
	.loc	13 120 50               # huffman.c:120:50
	pslld	$8, %xmm0
	pslld	$8, %xmm1
	movdqa	%xmm2, %xmm4
	pandn	%xmm0, %xmm4
	pand	%xmm6, %xmm2
	por	%xmm4, %xmm2
	movdqa	%xmm3, %xmm0
	pandn	%xmm1, %xmm0
	pand	%xmm6, %xmm3
	por	%xmm0, %xmm3
	.loc	13 120 7                # huffman.c:120:7
	orq	$4, %rax
	.loc	13 120 19               # huffman.c:120:19
	movdqu	%xmm2, 1376(%rsp,%rax)
	movdqu	%xmm3, 1392(%rsp,%rax)
.Ltmp4211:
.LBB20_105:                             # %middle.block.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 19                 # huffman.c:0:19
	movq	%rdx, %rax
	cmpq	%r8, %rdx
	.loc	13 120 22               # huffman.c:120:22
	je	.LBB20_107
.Ltmp4212:
	.p2align	4, 0x90
.LBB20_106:                             # %for.body.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	movl	(%rdi,%rax,4), %ecx
	.loc	13 120 50               # huffman.c:120:50
	movl	%ecx, %edx
	shll	$8, %edx
	.loc	13 120 30               # huffman.c:120:30
	testl	%ecx, %ecx
	.loc	13 120 50               # huffman.c:120:50
	cmovel	%esi, %edx
	.loc	13 120 19               # huffman.c:120:19
	movl	%edx, 1380(%rsp,%rax,4)
	.loc	13 120 15               # huffman.c:120:15
	addq	$1, %rax
.Ltmp4213:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 119 18 is_stmt 1     # huffman.c:119:18
	cmpq	%rax, %r8
.Ltmp4214:
	.loc	13 119 4 is_stmt 0      # huffman.c:119:4
	jne	.LBB20_106
.Ltmp4215:
.LBB20_107:                             # %while.cond.preheader.i
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 4                  # huffman.c:0:4
	movq	%rdi, 256(%rsp)         # 8-byte Spill
.Ltmp4216:
	.loc	13 127 15 is_stmt 1     # huffman.c:127:15
	movl	$0, 336(%rsp)
	.loc	13 128 17               # huffman.c:128:17
	movl	$0, 1376(%rsp)
.Ltmp4217:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- 1
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- 0
	.loc	13 129 17               # huffman.c:129:17
	movl	$-2, 3440(%rsp)
	testl	%r8d, %r8d
.Ltmp4218:
	.loc	13 131 7                # huffman.c:131:7
	jg	.LBB20_109
	jmp	.LBB20_162
.Ltmp4219:
	.p2align	4, 0x90
.LBB20_108:                             # %while.cond.loopexit.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- 0
	.loc	13 127 15               # huffman.c:127:15
	movl	$0, 336(%rsp)
	.loc	13 128 17               # huffman.c:128:17
	movl	$0, 1376(%rsp)
	.loc	13 129 17               # huffman.c:129:17
	movl	$-2, 3440(%rsp)
.Ltmp4220:
.LBB20_109:                             # %for.body11.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB20_110 Depth 4
                                        #           Child Loop BB20_111 Depth 5
                                        #         Child Loop BB20_116 Depth 4
                                        #           Child Loop BB20_118 Depth 5
                                        #           Child Loop BB20_128 Depth 5
                                        #           Child Loop BB20_137 Depth 5
                                        #         Child Loop BB20_143 Depth 4
                                        #           Child Loop BB20_144 Depth 5
                                        #           Child Loop BB20_146 Depth 5
                                        #         Child Loop BB20_154 Depth 4
                                        #         Child Loop BB20_159 Depth 4
                                        #         Child Loop BB20_161 Depth 4
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 17 is_stmt 0       # huffman.c:0:17
	movl	$1, %eax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- 1
	xorl	%ecx, %ecx
.Ltmp4221:
.LBB20_110:                             # %for.body11.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB20_111 Depth 5
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rcx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	.loc	13 132 20 is_stmt 1     # huffman.c:132:20
	movl	$-1, 3440(%rsp,%rax,4)
	.loc	13 134 10               # huffman.c:134:10
	leaq	(%rsp,%rcx,4), %rdx
	addq	$340, %rdx              # imm = 0x154
	.loc	13 134 22 is_stmt 0     # huffman.c:134:22
	movl	%eax, 340(%rsp,%rcx,4)
	.loc	13 133 15 is_stmt 1     # huffman.c:133:15
	leaq	1(%rcx), %rcx
.Ltmp4222:
	#DEBUG_VALUE: zz <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: tmp <- $rax
	.loc	13 135 10               # huffman.c:135:10
	movl	1376(%rsp,%rax,4), %esi
	movl	%ecx, %edi
	shrl	%edi
	movslq	336(%rsp,%rdi,4), %rbp
	cmpl	1376(%rsp,%rbp,4), %esi
	jge	.LBB20_112
.Ltmp4223:
	.p2align	4, 0x90
.LBB20_111:                             # %while.body27.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_110 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: tmp <- $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: zz <- $edi
	.loc	13 135 10 is_stmt 0     # huffman.c:135:10
	movl	%ebp, (%rdx)
.Ltmp4224:
	.loc	13 0 0                  # huffman.c:0:0
	movslq	%edi, %rdx
	.loc	13 135 10               # huffman.c:135:10
	sarl	%edi
.Ltmp4225:
	movslq	%edi, %rbp
	movslq	336(%rsp,%rbp,4), %rbp
	.loc	13 0 0                  # huffman.c:0:0
	leaq	(%rsp,%rdx,4), %rdx
	addq	$336, %rdx              # imm = 0x150
	.loc	13 135 10               # huffman.c:135:10
	cmpl	1376(%rsp,%rbp,4), %esi
	jl	.LBB20_111
.Ltmp4226:
.LBB20_112:                             # %while.end.i
                                        #   in Loop: Header=BB20_110 Depth=4
	#DEBUG_VALUE: tmp <- $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	movl	%eax, (%rdx)
.Ltmp4227:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 131 36 is_stmt 1     # huffman.c:131:36
	addq	$1, %rax
.Ltmp4228:
	.loc	13 131 21 is_stmt 0     # huffman.c:131:21
	cmpq	%r8, %rcx
.Ltmp4229:
	.loc	13 131 7                # huffman.c:131:7
	jne	.LBB20_110
.Ltmp4230:
# %bb.113:                              # %for.end38.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 7                  # huffman.c:0:7
	cmpl	$260, %r8d              # imm = 0x104
.Ltmp4231:
	.loc	13 138 7 is_stmt 1      # huffman.c:138:7
	jae	.LBB20_388
.Ltmp4232:
# %bb.114:                              # %if.end.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 7 is_stmt 0        # huffman.c:0:7
	cmpl	$2, %r8d
	.loc	13 140 7 is_stmt 1      # huffman.c:140:7
	jl	.LBB20_140
.Ltmp4233:
# %bb.115:                              # %while.body42.i.preheader
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 0 7 is_stmt 0        # huffman.c:0:7
	movq	%r8, %rsi
	movq	296(%rsp), %r9          # 8-byte Reload
.Ltmp4234:
	.p2align	4, 0x90
.LBB20_116:                             # %while.body42.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB20_118 Depth 5
                                        #           Child Loop BB20_128 Depth 5
                                        #           Child Loop BB20_137 Depth 5
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:n1 <- undef
	.loc	13 141 15 is_stmt 1     # huffman.c:141:15
	movslq	340(%rsp), %r11
	.loc	13 141 34 is_stmt 0     # huffman.c:141:34
	movl	336(%rsp,%rsi,4), %r8d
	.loc	13 141 32               # huffman.c:141:32
	movl	%r8d, 340(%rsp)
	.loc	13 141 52               # huffman.c:141:52
	leaq	-1(%rsi), %r14
.Ltmp4235:
	.loc	13 0 52                 # huffman.c:0:52
	movl	$1, %ecx
.Ltmp4236:
	#DEBUG_VALUE: yy <- 2
	#DEBUG_VALUE: zz <- 1
	#DEBUG_VALUE: tmp <- $r8d
	movl	$1, %ebp
.Ltmp4237:
	.loc	13 141 56               # huffman.c:141:56
	cmpq	$3, %rsi
.Ltmp4238:
	.loc	13 141 56               # huffman.c:141:56
	jl	.LBB20_126
.Ltmp4239:
# %bb.117:                              # %if.end56.lr.ph.i
                                        #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 56                 # huffman.c:0:56
	movslq	%r8d, %rax
	movl	1376(%rsp,%rax,4), %r13d
	movl	$1, %ebx
	movl	$2, %eax
.Ltmp4240:
	.p2align	4, 0x90
.LBB20_118:                             # %if.end56.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_116 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $ebx
	.loc	13 141 56               # huffman.c:141:56
	movslq	%eax, %rdi
	cmpq	%rdi, %r14
	jle	.LBB20_122
.Ltmp4241:
# %bb.119:                              # %land.lhs.true.i
                                        #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: zz <- $ebx
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%edi, %ebp
	orl	$1, %ebp
	movslq	%ebp, %rdx
	movslq	336(%rsp,%rdx,4), %rdx
	movl	1376(%rsp,%rdx,4), %edx
	movslq	336(%rsp,%rdi,4), %rdi
	cmpl	1376(%rsp,%rdi,4), %edx
.Ltmp4242:
	.loc	13 141 56               # huffman.c:141:56
	jl	.LBB20_121
.Ltmp4243:
# %bb.120:                              # %land.lhs.true.i
                                        #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: zz <- $ebx
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%eax, %ebp
.Ltmp4244:
.LBB20_121:                             # %land.lhs.true.i
                                        #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: zz <- $ebx
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 141 56               # huffman.c:141:56
	movslq	%ebp, %rdi
	jmp	.LBB20_123
.Ltmp4245:
	.p2align	4, 0x90
.LBB20_122:                             #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: zz <- $ebx
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 0                  # huffman.c:0:0
	movl	%eax, %ebp
.Ltmp4246:
.LBB20_123:                             # %if.end70.i
                                        #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: zz <- $ebx
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $ebp
	#DEBUG_VALUE: yy <- $ebp
	.loc	13 141 56               # huffman.c:141:56
	movslq	336(%rsp,%rdi,4), %rax
	cmpl	1376(%rsp,%rax,4), %r13d
.Ltmp4247:
	.loc	13 141 56               # huffman.c:141:56
	jl	.LBB20_125
.Ltmp4248:
# %bb.124:                              # %if.end79.i
                                        #   in Loop: Header=BB20_118 Depth=5
	#DEBUG_VALUE: yy <- $ebp
	#DEBUG_VALUE: zz <- $ebp
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movslq	%ebx, %rdx
	movl	%eax, 336(%rsp,%rdx,4)
	leal	(%rbp,%rbp), %eax
.Ltmp4249:
	#DEBUG_VALUE: yy <- $eax
	.loc	13 141 56               # huffman.c:141:56
	movslq	%eax, %rdx
	movl	%ebp, %ebx
	cmpq	%rdx, %rsi
.Ltmp4250:
	.loc	13 141 56               # huffman.c:141:56
	jg	.LBB20_118
	jmp	.LBB20_126
.Ltmp4251:
	.p2align	4, 0x90
.LBB20_125:                             #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: yy <- $ebp
	#DEBUG_VALUE: zz <- $ebp
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 0                  # huffman.c:0:0
	movl	%ebx, %ebp
.Ltmp4252:
.LBB20_126:                             # %while.end84.i
                                        #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- $rsi
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $ebp
	.loc	13 141 56               # huffman.c:141:56
	movslq	%ebp, %rax
	movl	%r8d, 336(%rsp,%rax,4)
.Ltmp4253:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:n2 <- undef
	.loc	13 142 15 is_stmt 1     # huffman.c:142:15
	movslq	340(%rsp), %r15
	.loc	13 142 34 is_stmt 0     # huffman.c:142:34
	leaq	(%rsp,%r14,4), %rax
	addq	$336, %rax              # imm = 0x150
	movl	332(%rsp,%rsi,4), %ebx
	.loc	13 142 32               # huffman.c:142:32
	movl	%ebx, 340(%rsp)
	.loc	13 142 52               # huffman.c:142:52
	addq	$-2, %rsi
.Ltmp4254:
	#DEBUG_VALUE: yy <- 2
	#DEBUG_VALUE: zz <- 1
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- [DW_OP_constu 2, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: tmp <- $ebx
	.loc	13 142 56               # huffman.c:142:56
	cmpq	$2, %rsi
.Ltmp4255:
	.loc	13 142 56               # huffman.c:142:56
	jl	.LBB20_136
.Ltmp4256:
# %bb.127:                              # %if.end102.lr.ph.i
                                        #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: zz <- $ebp
	#DEBUG_VALUE: tmp <- $r8d
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 56                 # huffman.c:0:56
	movslq	%ebx, %rcx
	movl	1376(%rsp,%rcx,4), %r13d
	movl	$1, %r8d
.Ltmp4257:
	movl	$2, %edi
.Ltmp4258:
	.p2align	4, 0x90
.LBB20_128:                             # %if.end102.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_116 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $r8d
	.loc	13 142 56               # huffman.c:142:56
	movslq	%edi, %rbp
	cmpq	%rbp, %rsi
	jle	.LBB20_132
.Ltmp4259:
# %bb.129:                              # %land.lhs.true104.i
                                        #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: zz <- $r8d
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%ebp, %ecx
	orl	$1, %ecx
	movslq	%ecx, %r12
	movslq	336(%rsp,%r12,4), %rdx
	movl	1376(%rsp,%rdx,4), %edx
	movslq	336(%rsp,%rbp,4), %rbp
	cmpl	1376(%rsp,%rbp,4), %edx
.Ltmp4260:
	.loc	13 142 56               # huffman.c:142:56
	jl	.LBB20_131
.Ltmp4261:
# %bb.130:                              # %land.lhs.true104.i
                                        #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: zz <- $r8d
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%edi, %ecx
.Ltmp4262:
.LBB20_131:                             # %land.lhs.true104.i
                                        #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: zz <- $r8d
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 142 56               # huffman.c:142:56
	movslq	%ecx, %rbp
	jmp	.LBB20_133
.Ltmp4263:
	.p2align	4, 0x90
.LBB20_132:                             #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: zz <- $r8d
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 0                  # huffman.c:0:0
	movl	%edi, %ecx
.Ltmp4264:
.LBB20_133:                             # %if.end117.i
                                        #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: zz <- $r8d
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $ecx
	#DEBUG_VALUE: yy <- $ecx
	.loc	13 142 56               # huffman.c:142:56
	movslq	336(%rsp,%rbp,4), %rdi
	cmpl	1376(%rsp,%rdi,4), %r13d
.Ltmp4265:
	.loc	13 142 56               # huffman.c:142:56
	jl	.LBB20_135
.Ltmp4266:
# %bb.134:                              # %if.end126.i
                                        #   in Loop: Header=BB20_128 Depth=5
	#DEBUG_VALUE: yy <- $ecx
	#DEBUG_VALUE: zz <- $ecx
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movslq	%r8d, %rdx
	movl	%edi, 336(%rsp,%rdx,4)
	leal	(%rcx,%rcx), %edi
.Ltmp4267:
	#DEBUG_VALUE: yy <- $edi
	.loc	13 142 56               # huffman.c:142:56
	movslq	%edi, %rdx
	movl	%ecx, %r8d
	cmpq	%rdx, %rsi
.Ltmp4268:
	.loc	13 142 56               # huffman.c:142:56
	jge	.LBB20_128
	jmp	.LBB20_136
.Ltmp4269:
	.p2align	4, 0x90
.LBB20_135:                             #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: yy <- $ecx
	#DEBUG_VALUE: zz <- $ecx
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 0                  # huffman.c:0:0
	movl	%r8d, %ecx
.Ltmp4270:
.LBB20_136:                             # %while.end131.i
                                        #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: tmp <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $r9
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $ecx
	.loc	13 142 56               # huffman.c:142:56
	movslq	%ecx, %rcx
.Ltmp4271:
	movl	%ebx, 336(%rsp,%rcx,4)
.Ltmp4272:
	.loc	13 145 27 is_stmt 1     # huffman.c:145:27
	movl	1376(%rsp,%r11,4), %ecx
	movzbl	%cl, %edx
	andl	$-256, %ecx
	movl	1376(%rsp,%r15,4), %edi
	movzbl	%dil, %esi
	andl	$-256, %edi
	addl	%ecx, %edi
	cmpl	%esi, %edx
	cmoval	%edx, %esi
	.loc	13 143 16               # huffman.c:143:16
	leaq	1(%r9), %rcx
.Ltmp4273:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $ecx
	.loc	13 144 34               # huffman.c:144:34
	movl	%ecx, 3440(%rsp,%r15,4)
	.loc	13 144 21 is_stmt 0     # huffman.c:144:21
	movl	%ecx, 3440(%rsp,%r11,4)
	.loc	13 145 27 is_stmt 1     # huffman.c:145:27
	addl	$1, %esi
	orl	%edi, %esi
	.loc	13 145 25 is_stmt 0     # huffman.c:145:25
	movl	%esi, 1380(%rsp,%r9,4)
	.loc	13 146 25 is_stmt 1     # huffman.c:146:25
	movl	$-1, 3444(%rsp,%r9,4)
.Ltmp4274:
	#DEBUG_VALUE: tmp <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: zz <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	13 148 22               # huffman.c:148:22
	movl	%ecx, (%rax)
.Ltmp4275:
	.loc	13 149 10               # huffman.c:149:10
	movl	%r14d, %edx
	sarl	%edx
	movslq	%edx, %rdi
	movslq	336(%rsp,%rdi,4), %rdi
	cmpl	1376(%rsp,%rdi,4), %esi
	jge	.LBB20_138
.Ltmp4276:
	.p2align	4, 0x90
.LBB20_137:                             # %while.body183.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_116 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $ecx
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: zz <- $edx
	.loc	13 149 10 is_stmt 0     # huffman.c:149:10
	movl	%edi, (%rax)
.Ltmp4277:
	.loc	13 0 0                  # huffman.c:0:0
	movslq	%edx, %rax
	.loc	13 149 10               # huffman.c:149:10
	sarl	%edx
.Ltmp4278:
	movslq	%edx, %rdi
	movslq	336(%rsp,%rdi,4), %rdi
	.loc	13 0 0                  # huffman.c:0:0
	leaq	(%rsp,%rax,4), %rax
	addq	$336, %rax              # imm = 0x150
	.loc	13 149 10               # huffman.c:149:10
	cmpl	1376(%rsp,%rdi,4), %esi
	jl	.LBB20_137
.Ltmp4279:
.LBB20_138:                             # %while.end190.i
                                        #   in Loop: Header=BB20_116 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- $ecx
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nNodes <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:nHeap <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	movl	%ecx, (%rax)
	movq	%r14, %rsi
	movq	%rcx, %r9
.Ltmp4280:
	.loc	13 140 20 is_stmt 1     # huffman.c:140:20
	cmpq	$1, %r14
	.loc	13 140 7 is_stmt 0      # huffman.c:140:7
	jg	.LBB20_116
.Ltmp4281:
# %bb.139:                              # %while.end193.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 152 7 is_stmt 1      # huffman.c:152:7
	cmpl	$516, %ecx              # imm = 0x204
	movq	112(%rsp), %r14         # 8-byte Reload
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	104(%rsp), %r9          # 8-byte Reload
.Ltmp4282:
	.loc	13 152 7 is_stmt 0      # huffman.c:152:7
	jge	.LBB20_389
.Ltmp4283:
.LBB20_140:                             # %while.cond200.preheader.preheader.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- 1
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- 0
	.loc	13 0 7                  # huffman.c:0:7
	movl	$1, %eax
	cmpl	$2, %r9d
.Ltmp4284:
	.loc	13 158 17 is_stmt 1     # huffman.c:158:17
	jne	.LBB20_142
.Ltmp4285:
# %bb.141:                              #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 17 is_stmt 0       # huffman.c:0:17
	xorl	%edx, %edx
.Ltmp4286:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	cmpl	$0, 56(%rsp)            # 4-byte Folded Reload
	.loc	13 158 17               # huffman.c:158:17
	jne	.LBB20_153
	jmp	.LBB20_156
.Ltmp4287:
	.p2align	4, 0x90
.LBB20_142:                             # %while.cond200.preheader.i.preheader
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 17                 # huffman.c:0:17
	xorl	%esi, %esi
	movq	288(%rsp), %rcx         # 8-byte Reload
.Ltmp4288:
	.p2align	4, 0x90
.LBB20_143:                             # %while.cond200.preheader.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Loop Header: Depth=4
                                        #           Child Loop BB20_144 Depth 5
                                        #           Child Loop BB20_146 Depth 5
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	movl	$-1, %edi
	movl	%eax, %edx
.Ltmp4289:
	.p2align	4, 0x90
.LBB20_144:                             # %while.cond200.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_143 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $edx
	.loc	13 158 17               # huffman.c:158:17
	movslq	%edx, %rdx
.Ltmp4290:
	movl	3440(%rsp,%rdx,4), %edx
.Ltmp4291:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $edx
	.loc	13 158 10               # huffman.c:158:10
	addl	$1, %edi
	.loc	13 158 27               # huffman.c:158:27
	testl	%edx, %edx
	.loc	13 158 10               # huffman.c:158:10
	jns	.LBB20_144
.Ltmp4292:
# %bb.145:                              # %while.end208.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $edx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	.loc	13 159 10 is_stmt 1     # huffman.c:159:10
	movq	%r10, %rdx
.Ltmp4293:
	shlq	$8, %rdx
	leaq	(%rdx,%r10,2), %rdx
	addq	%r14, %rdx
.Ltmp4294:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 159 19 is_stmt 0     # huffman.c:159:19
	movb	%dil, 37707(%rax,%rdx)
	.loc	13 158 17 is_stmt 1     # huffman.c:158:17
	leal	1(%rax), %ebx
	movl	$-1, %ebp
.Ltmp4295:
	.p2align	4, 0x90
.LBB20_146:                             # %while.cond200.1.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        #         Parent Loop BB20_143 Depth=4
                                        # =>        This Inner Loop Header: Depth=5
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $ebx
	movslq	%ebx, %rbx
.Ltmp4296:
	movl	3440(%rsp,%rbx,4), %ebx
.Ltmp4297:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $ebx
	.loc	13 158 10 is_stmt 0     # huffman.c:158:10
	addl	$1, %ebp
	.loc	13 158 27               # huffman.c:158:27
	testl	%ebx, %ebx
	.loc	13 158 10               # huffman.c:158:10
	jns	.LBB20_146
.Ltmp4298:
# %bb.147:                              # %while.end208.1.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $ebx
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	.loc	13 159 19 is_stmt 1     # huffman.c:159:19
	movb	%bpl, 37708(%rax,%rdx)
	movb	$1, %dl
	.loc	13 160 14               # huffman.c:160:14
	movb	$1, %bl
.Ltmp4299:
	.loc	13 160 16 is_stmt 0     # huffman.c:160:16
	cmpl	$17, %edi
.Ltmp4300:
	.loc	13 160 14               # huffman.c:160:14
	ja	.LBB20_149
.Ltmp4301:
# %bb.148:                              # %while.end208.1.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%esi, %ebx
.Ltmp4302:
.LBB20_149:                             # %while.end208.1.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 160 16               # huffman.c:160:16
	cmpl	$17, %ebp
.Ltmp4303:
	.loc	13 160 14               # huffman.c:160:14
	ja	.LBB20_151
.Ltmp4304:
# %bb.150:                              # %while.end208.1.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%ebx, %edx
.Ltmp4305:
.LBB20_151:                             # %while.end208.1.i
                                        #   in Loop: Header=BB20_143 Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $sil
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	.loc	13 155 36 is_stmt 1     # huffman.c:155:36
	addq	$2, %rax
	movl	%edx, %esi
.Ltmp4306:
	.loc	13 155 7 is_stmt 0      # huffman.c:155:7
	addq	$-2, %rcx
	jne	.LBB20_143
.Ltmp4307:
# %bb.152:                              # %for.end217.unr-lcssa.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	.loc	13 0 7                  # huffman.c:0:7
	cmpl	$0, 56(%rsp)            # 4-byte Folded Reload
.Ltmp4308:
	.loc	13 158 17 is_stmt 1     # huffman.c:158:17
	je	.LBB20_156
.Ltmp4309:
.LBB20_153:                             # %while.cond200.preheader.epil.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 17 is_stmt 0       # huffman.c:0:17
	movl	$-1, %ecx
	movl	%eax, %esi
.Ltmp4310:
	.p2align	4, 0x90
.LBB20_154:                             # %while.cond200.epil.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $esi
	.loc	13 158 17               # huffman.c:158:17
	movslq	%esi, %rsi
.Ltmp4311:
	movl	3440(%rsp,%rsi,4), %esi
.Ltmp4312:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $esi
	.loc	13 158 10               # huffman.c:158:10
	addl	$1, %ecx
	.loc	13 158 27               # huffman.c:158:27
	testl	%esi, %esi
	.loc	13 158 10               # huffman.c:158:10
	jns	.LBB20_154
.Ltmp4313:
# %bb.155:                              # %while.end208.epil.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:k <- $esi
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- undef
	.loc	13 159 10 is_stmt 1     # huffman.c:159:10
	movq	%r10, %rsi
.Ltmp4314:
	shlq	$8, %rsi
	leaq	(%rsi,%r10,2), %rsi
	addq	%r14, %rsi
	.loc	13 159 19 is_stmt 0     # huffman.c:159:19
	movb	%cl, 37707(%rax,%rsi)
.Ltmp4315:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 160 16 is_stmt 1     # huffman.c:160:16
	cmpl	$17, %ecx
	ja	.LBB20_157
.Ltmp4316:
.LBB20_156:                             # %for.end217.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	.loc	13 163 13               # huffman.c:163:13
	testb	%dl, %dl
.Ltmp4317:
	.loc	13 163 11 is_stmt 0     # huffman.c:163:11
	je	.LBB20_162
.Ltmp4318:
.LBB20_157:                             # %for.body223.preheader.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 11                 # huffman.c:0:11
	movl	$1, %eax
.Ltmp4319:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- 1
	cmpq	$8, 64(%rsp)            # 8-byte Folded Reload
.Ltmp4320:
	.loc	13 183 14 is_stmt 1     # huffman.c:183:14
	jb	.LBB20_161
.Ltmp4321:
# %bb.158:                              # %vector.body425.i.preheader
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 14 is_stmt 0       # huffman.c:0:14
	xorl	%eax, %eax
	movq	272(%rsp), %rcx         # 8-byte Reload
.Ltmp4322:
	.p2align	4, 0x90
.LBB20_159:                             # %vector.body425.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 183 14               # huffman.c:183:14
	movdqu	1380(%rsp,%rax,4), %xmm0
	movdqu	1396(%rsp,%rax,4), %xmm1
	.loc	13 183 24               # huffman.c:183:24
	movdqa	%xmm0, %xmm2
	psrad	$8, %xmm2
	movdqa	%xmm1, %xmm3
	psrad	$8, %xmm3
	.loc	13 184 21 is_stmt 1     # huffman.c:184:21
	psrld	$31, %xmm0
	paddd	%xmm2, %xmm0
	.loc	13 185 24               # huffman.c:185:24
	pslld	$7, %xmm0
	.loc	13 184 21               # huffman.c:184:21
	pand	%xmm7, %xmm0
	psrld	$31, %xmm1
	paddd	%xmm3, %xmm1
	.loc	13 185 24               # huffman.c:185:24
	pslld	$7, %xmm1
	.loc	13 184 21               # huffman.c:184:21
	pand	%xmm7, %xmm1
	.loc	13 185 24               # huffman.c:185:24
	paddd	%xmm6, %xmm0
	paddd	%xmm6, %xmm1
	.loc	13 185 20 is_stmt 0     # huffman.c:185:20
	movdqu	%xmm0, 1380(%rsp,%rax,4)
	movdqu	%xmm1, 1396(%rsp,%rax,4)
	addq	$8, %rax
	cmpq	%rax, %rcx
	jne	.LBB20_159
.Ltmp4323:
# %bb.160:                              # %middle.block426.i
                                        #   in Loop: Header=BB20_109 Depth=3
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 20                 # huffman.c:0:20
	movq	264(%rsp), %rax         # 8-byte Reload
	cmpl	$0, 280(%rsp)           # 4-byte Folded Reload
	.loc	13 183 14 is_stmt 1     # huffman.c:183:14
	je	.LBB20_108
.Ltmp4324:
	.p2align	4, 0x90
.LBB20_161:                             # %for.body223.i
                                        #   Parent Loop BB20_55 Depth=1
                                        #     Parent Loop BB20_97 Depth=2
                                        #       Parent Loop BB20_109 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:tooLong <- $dl
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- $rax
	movl	1376(%rsp,%rax,4), %ecx
	.loc	13 183 24 is_stmt 0     # huffman.c:183:24
	movl	%ecx, %edx
.Ltmp4325:
	sarl	$8, %edx
.Ltmp4326:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- $edx
	.loc	13 184 21 is_stmt 1     # huffman.c:184:21
	shrl	$31, %ecx
	addl	%edx, %ecx
	andl	$-2, %ecx
	shll	$7, %ecx
.Ltmp4327:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 185 24               # huffman.c:185:24
	addl	$256, %ecx              # imm = 0x100
	.loc	13 185 20 is_stmt 0     # huffman.c:185:20
	movl	%ecx, 1376(%rsp,%rax,4)
.Ltmp4328:
	#DEBUG_VALUE: BZ2_hbMakeCodeLengths:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 182 36 is_stmt 1     # huffman.c:182:36
	addq	$1, %rax
	.loc	13 182 21 is_stmt 0     # huffman.c:182:21
	cmpq	%rax, %r9
.Ltmp4329:
	.loc	13 182 7                # huffman.c:182:7
	jne	.LBB20_161
	jmp	.LBB20_108
.Ltmp4330:
	.p2align	4, 0x90
.LBB20_162:                             # %BZ2_hbMakeCodeLengths.exit
                                        #   in Loop: Header=BB20_97 Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 493 33 is_stmt 1     # compress.c:493:33
	addq	$1, %r10
	movq	80(%rsp), %rax          # 8-byte Reload
.Ltmp4331:
	.loc	14 493 7 is_stmt 0      # compress.c:493:7
	addq	$1032, %rax             # imm = 0x408
	movq	256(%rsp), %rdi         # 8-byte Reload
	addq	$1032, %rdi             # imm = 0x408
.Ltmp4332:
	.loc	14 493 21               # compress.c:493:21
	cmpq	32(%rsp), %r10          # 8-byte Folded Reload
	movl	$256, %esi              # imm = 0x100
.Ltmp4333:
	.loc	14 493 7                # compress.c:493:7
	jne	.LBB20_97
.Ltmp4334:
# %bb.163:                              # %for.inc1702
                                        #   in Loop: Header=BB20_55 Depth=1
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7                  # compress.c:0:7
	movq	88(%rsp), %rax          # 8-byte Reload
	.loc	14 366 42 is_stmt 1     # compress.c:366:42
	addl	$1, %eax
.Ltmp4335:
	#DEBUG_VALUE: sendMTFValues:iter <- $eax
	.loc	14 0 42 is_stmt 0       # compress.c:0:42
	movq	%rax, 88(%rsp)          # 8-byte Spill
.Ltmp4336:
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	.loc	14 366 24               # compress.c:366:24
	cmpl	$4, %eax
.Ltmp4337:
	.loc	14 366 4                # compress.c:366:4
	jne	.LBB20_55
.Ltmp4338:
# %bb.164:                              # %if.end1708
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 500 4 is_stmt 1      # compress.c:500:4
	cmpl	$18003, 24(%rsp)        # 4-byte Folded Reload
                                        # imm = 0x4653
	jge	.LBB20_394
.Ltmp4339:
# %bb.165:                              # %if.end1715
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 508 44               # compress.c:508:44
	movw	$256, 1376(%rsp)        # imm = 0x100
	movq	32(%rsp), %r10          # 8-byte Reload
	cmpl	$2, %r10d
.Ltmp4340:
	#DEBUG_VALUE: sendMTFValues:i <- 2
	.loc	14 508 7 is_stmt 0      # compress.c:508:7
	je	.LBB20_171
.Ltmp4341:
# %bb.166:                              # %for.body1719.2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 508 44               # compress.c:508:44
	movb	$2, 1378(%rsp)
	cmpl	$3, %r10d
.Ltmp4342:
	#DEBUG_VALUE: sendMTFValues:i <- 3
	.loc	14 508 7                # compress.c:508:7
	je	.LBB20_171
.Ltmp4343:
# %bb.167:                              # %for.body1719.3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 508 44               # compress.c:508:44
	movb	$3, 1379(%rsp)
	cmpl	$4, %r10d
.Ltmp4344:
	#DEBUG_VALUE: sendMTFValues:i <- 4
	.loc	14 508 7                # compress.c:508:7
	je	.LBB20_171
.Ltmp4345:
# %bb.168:                              # %for.body1719.4
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 508 44               # compress.c:508:44
	movb	$4, 1380(%rsp)
	cmpl	$5, %r10d
.Ltmp4346:
	#DEBUG_VALUE: sendMTFValues:i <- 5
	.loc	14 508 7                # compress.c:508:7
	je	.LBB20_171
.Ltmp4347:
# %bb.169:                              # %for.body1719.5
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 508 44               # compress.c:508:44
	movb	$5, 1381(%rsp)
	cmpl	$6, %r10d
.Ltmp4348:
	#DEBUG_VALUE: sendMTFValues:i <- 6
	.loc	14 508 7                # compress.c:508:7
	je	.LBB20_171
.Ltmp4349:
# %bb.170:                              # %for.body1719.6
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- 6
	.loc	14 508 44               # compress.c:508:44
	movb	$6, 1382(%rsp)
.Ltmp4350:
	#DEBUG_VALUE: sendMTFValues:i <- 7
.LBB20_171:                             # %for.cond1726.preheader
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- 0
	.loc	14 509 21 is_stmt 1     # compress.c:509:21
	cmpl	$0, 24(%rsp)            # 4-byte Folded Reload
	movq	120(%rsp), %r11         # 8-byte Reload
	movq	136(%rsp), %r15         # 8-byte Reload
.Ltmp4351:
	.loc	14 509 7 is_stmt 0      # compress.c:509:7
	jle	.LBB20_178
.Ltmp4352:
# %bb.172:                              # %for.body1729.lr.ph
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7                  # compress.c:0:7
	movl	24(%rsp), %edi          # 4-byte Reload
	xorl	%ecx, %ecx
	xorl	%edx, %edx
.Ltmp4353:
	.p2align	4, 0x90
.LBB20_173:                             # %for.body1729
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_174 Depth 2
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: tmp <- $dl
	.loc	14 510 17 is_stmt 1     # compress.c:510:17
	movb	1704(%r14,%rcx), %bl
.Ltmp4354:
	#DEBUG_VALUE: sendMTFValues:j <- 0
	#DEBUG_VALUE: ll_i <- $bl
	.loc	14 0 17 is_stmt 0       # compress.c:0:17
	xorl	%esi, %esi
	.loc	14 513 23 is_stmt 1     # compress.c:513:23
	cmpb	%dl, %bl
	.loc	14 513 10 is_stmt 0     # compress.c:513:10
	je	.LBB20_176
.Ltmp4355:
	.p2align	4, 0x90
.LBB20_174:                             # %while.body1740
                                        #   Parent Loop BB20_173 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: ll_i <- $bl
	#DEBUG_VALUE: tmp <- $dl
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: tmp <- $dl
	#DEBUG_VALUE: sendMTFValues:j <- $rsi
	#DEBUG_VALUE: tmp2 <- $dl
	.loc	14 516 19 is_stmt 1     # compress.c:516:19
	movzbl	1377(%rsp,%rsi), %eax
.Ltmp4356:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: tmp <- $al
	.loc	14 517 20               # compress.c:517:20
	movb	%dl, 1377(%rsp,%rsi)
	.loc	14 514 14               # compress.c:514:14
	leaq	1(%rsi), %rsi
	movl	%eax, %edx
.Ltmp4357:
	.loc	14 513 23               # compress.c:513:23
	cmpb	%al, %bl
.Ltmp4358:
	#DEBUG_VALUE: tmp <- $dl
	.loc	14 513 10 is_stmt 0     # compress.c:513:10
	jne	.LBB20_174
.Ltmp4359:
# %bb.175:                              # %while.end1746.loopexit
                                        #   in Loop: Header=BB20_173 Depth=1
	#DEBUG_VALUE: ll_i <- $bl
	#DEBUG_VALUE: tmp <- $dl
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	movl	%ebx, %edx
.Ltmp4360:
.LBB20_176:                             # %while.end1746
                                        #   in Loop: Header=BB20_173 Depth=1
	#DEBUG_VALUE: ll_i <- $bl
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: tmp <- $dl
	.loc	14 520 28 is_stmt 1     # compress.c:520:28
	movb	%sil, 19706(%r14,%rcx)
.Ltmp4361:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 509 36               # compress.c:509:36
	addq	$1, %rcx
	.loc	14 509 21 is_stmt 0     # compress.c:509:21
	cmpq	%rdi, %rcx
.Ltmp4362:
	.loc	14 509 7                # compress.c:509:7
	jne	.LBB20_173
.Ltmp4363:
# %bb.177:                              # %for.cond1726.for.end1753_crit_edge
	#DEBUG_VALUE: ll_i <- $bl
	#DEBUG_VALUE: tmp <- $dl
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 512 16 is_stmt 1     # compress.c:512:16
	movb	%dl, 1376(%rsp)
.Ltmp4364:
.LBB20_178:                             # %for.end1753
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- 0
	.loc	14 525 4                # compress.c:525:4
	leaq	37712(%r14), %r9
	leaq	37708(%r14), %rcx
	leaq	39260(%r14), %rdx
	xorl	%r8d, %r8d
	movdqa	.LCPI20_3(%rip), %xmm8  # xmm8 = [32,32,32,32]
	pxor	%xmm9, %xmm9
	movapd	.LCPI20_4(%rip), %xmm10 # xmm10 = [2147483648,2147483648,2147483648,2147483648]
.Ltmp4365:
	.p2align	4, 0x90
.LBB20_179:                             # %for.cond1758.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_183 Depth 2
                                        #     Child Loop BB20_185 Depth 2
                                        #     Child Loop BB20_190 Depth 2
                                        #       Child Loop BB20_193 Depth 3
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- 0
	#DEBUG_VALUE: sendMTFValues:minLen <- 32
	#DEBUG_VALUE: sendMTFValues:maxLen <- 0
	.loc	14 0 4 is_stmt 0        # compress.c:0:4
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp4366:
	.loc	14 528 7 is_stmt 1      # compress.c:528:7
	jle	.LBB20_202
.Ltmp4367:
# %bb.180:                              # %for.body1761.preheader
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	cmpl	$8, 16(%rsp)            # 4-byte Folded Reload
.Ltmp4368:
	.loc	14 529 14 is_stmt 1     # compress.c:529:14
	jae	.LBB20_182
.Ltmp4369:
# %bb.181:                              #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 14 is_stmt 0       # compress.c:0:14
	xorl	%esi, %esi
	movl	$32, %ebp
	xorl	%edi, %edi
	movq	16(%rsp), %rax          # 8-byte Reload
	jmp	.LBB20_185
.Ltmp4370:
	.p2align	4, 0x90
.LBB20_182:                             # %vector.body.preheader
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	xorpd	%xmm1, %xmm1
	.loc	14 528 35 is_stmt 1     # compress.c:528:35
	xorl	%edi, %edi
	movdqa	%xmm8, %xmm3
	movdqa	%xmm8, %xmm4
	pxor	%xmm6, %xmm6
	movq	96(%rsp), %rbx          # 8-byte Reload
.Ltmp4371:
	.p2align	4, 0x90
.LBB20_183:                             # %vector.body
                                        #   Parent Loop BB20_179 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 529 14               # compress.c:529:14
	movd	-4(%r9,%rdi), %xmm2     # xmm2 = mem[0],zero,zero,zero
	movd	(%r9,%rdi), %xmm7       # xmm7 = mem[0],zero,zero,zero
	punpcklbw	%xmm9, %xmm2    # xmm2 = xmm2[0],xmm9[0],xmm2[1],xmm9[1],xmm2[2],xmm9[2],xmm2[3],xmm9[3],xmm2[4],xmm9[4],xmm2[5],xmm9[5],xmm2[6],xmm9[6],xmm2[7],xmm9[7]
	punpcklwd	%xmm9, %xmm2    # xmm2 = xmm2[0],xmm9[0],xmm2[1],xmm9[1],xmm2[2],xmm9[2],xmm2[3],xmm9[3]
	punpcklbw	%xmm9, %xmm7    # xmm7 = xmm7[0],xmm9[0],xmm7[1],xmm9[1],xmm7[2],xmm9[2],xmm7[3],xmm9[3],xmm7[4],xmm9[4],xmm7[5],xmm9[5],xmm7[6],xmm9[6],xmm7[7],xmm9[7]
	punpcklwd	%xmm9, %xmm7    # xmm7 = xmm7[0],xmm9[0],xmm7[1],xmm9[1],xmm7[2],xmm9[2],xmm7[3],xmm9[3]
.Ltmp4372:
	.loc	14 529 14 is_stmt 0     # compress.c:529:14
	movapd	%xmm1, %xmm5
	xorpd	%xmm10, %xmm1
	movdqa	%xmm2, %xmm0
	por	%xmm10, %xmm0
	pcmpgtd	%xmm0, %xmm1
	andpd	%xmm1, %xmm5
	pandn	%xmm2, %xmm1
	por	%xmm5, %xmm1
	movdqa	%xmm6, %xmm0
	pxor	%xmm10, %xmm6
	movdqa	%xmm7, %xmm5
	por	%xmm10, %xmm5
	pcmpgtd	%xmm5, %xmm6
	pand	%xmm6, %xmm0
	pandn	%xmm7, %xmm6
	por	%xmm0, %xmm6
	.loc	14 530 14 is_stmt 1     # compress.c:530:14
	movdqa	%xmm2, %xmm0
	pcmpgtd	%xmm3, %xmm0
	movdqa	%xmm3, %xmm5
	pand	%xmm0, %xmm5
	pandn	%xmm2, %xmm0
	movdqa	%xmm0, %xmm3
	por	%xmm5, %xmm3
	movdqa	%xmm7, %xmm0
	pcmpgtd	%xmm4, %xmm0
	movdqa	%xmm4, %xmm2
	pand	%xmm0, %xmm2
	pandn	%xmm7, %xmm0
	movdqa	%xmm0, %xmm4
	por	%xmm2, %xmm4
.Ltmp4373:
	.loc	14 528 35               # compress.c:528:35
	addq	$8, %rdi
	cmpq	%rdi, %rbx
	jne	.LBB20_183
.Ltmp4374:
# %bb.184:                              # %middle.block
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 529 14               # compress.c:529:14
	movdqa	%xmm6, %xmm0
	pxor	%xmm10, %xmm0
	movdqa	%xmm1, %xmm2
	pxor	%xmm10, %xmm2
	pcmpgtd	%xmm0, %xmm2
	pand	%xmm2, %xmm1
	pandn	%xmm6, %xmm2
	por	%xmm1, %xmm2
	pshufd	$78, %xmm2, %xmm0       # xmm0 = xmm2[2,3,0,1]
	movdqa	%xmm2, %xmm1
	pxor	%xmm10, %xmm1
	movdqa	%xmm0, %xmm5
	pxor	%xmm10, %xmm5
	pcmpgtd	%xmm5, %xmm1
	pand	%xmm1, %xmm2
	pandn	%xmm0, %xmm1
	por	%xmm2, %xmm1
	pshufd	$229, %xmm1, %xmm0      # xmm0 = xmm1[1,1,2,3]
	movdqa	%xmm1, %xmm2
	pxor	%xmm10, %xmm2
	movdqa	%xmm0, %xmm5
	pxor	%xmm10, %xmm5
	pcmpgtd	%xmm5, %xmm2
	pand	%xmm2, %xmm1
	pandn	%xmm0, %xmm2
	por	%xmm1, %xmm2
	movd	%xmm2, %edi
	.loc	14 530 14               # compress.c:530:14
	movdqa	%xmm4, %xmm0
	pcmpgtd	%xmm3, %xmm0
	pand	%xmm0, %xmm3
	pandn	%xmm4, %xmm0
	por	%xmm3, %xmm0
	pshufd	$78, %xmm0, %xmm1       # xmm1 = xmm0[2,3,0,1]
	movdqa	%xmm1, %xmm2
	pcmpgtd	%xmm0, %xmm2
	pand	%xmm2, %xmm0
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pshufd	$229, %xmm2, %xmm0      # xmm0 = xmm2[1,1,2,3]
	movdqa	%xmm0, %xmm1
	pcmpgtd	%xmm2, %xmm1
	pand	%xmm1, %xmm2
	pandn	%xmm0, %xmm1
	por	%xmm2, %xmm1
	movd	%xmm1, %ebp
	movq	%rbx, %rsi
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	%rax, %rbx
.Ltmp4375:
	.loc	14 529 14               # compress.c:529:14
	je	.LBB20_186
.Ltmp4376:
	.p2align	4, 0x90
.LBB20_185:                             # %for.body1761
                                        #   Parent Loop BB20_179 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $rsi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	movzbl	(%rcx,%rsi), %ebx
	.loc	14 529 27 is_stmt 0     # compress.c:529:27
	cmpl	%ebx, %edi
.Ltmp4377:
	.loc	14 529 14               # compress.c:529:14
	cmovbl	%ebx, %edi
.Ltmp4378:
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	.loc	14 530 27 is_stmt 1     # compress.c:530:27
	cmpl	%ebx, %ebp
.Ltmp4379:
	.loc	14 530 14 is_stmt 0     # compress.c:530:14
	cmovgl	%ebx, %ebp
.Ltmp4380:
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 528 35 is_stmt 1     # compress.c:528:35
	addq	$1, %rsi
	.loc	14 528 21 is_stmt 0     # compress.c:528:21
	cmpq	%rsi, %rax
.Ltmp4381:
	.loc	14 528 7                # compress.c:528:7
	jne	.LBB20_185
.Ltmp4382:
.LBB20_186:                             # %for.end1796
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: BZ2_hbAssignCodes:maxLen <- $edi
	#DEBUG_VALUE: BZ2_hbAssignCodes:minLen <- $ebp
	.loc	14 532 7 is_stmt 1      # compress.c:532:7
	cmpl	$18, %edi
.Ltmp4383:
	.loc	14 532 7 is_stmt 0      # compress.c:532:7
	jge	.LBB20_390
.Ltmp4384:
# %bb.187:                              # %if.end1800
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 533 7 is_stmt 1      # compress.c:533:7
	testl	%ebp, %ebp
.Ltmp4385:
	.loc	14 533 7 is_stmt 0      # compress.c:533:7
	jle	.LBB20_391
.Ltmp4386:
# %bb.188:                              # %if.end1804
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- 0
	.loc	13 201 23 is_stmt 1     # huffman.c:201:23
	cmpl	%edi, %ebp
.Ltmp4387:
	.loc	13 201 4 is_stmt 0      # huffman.c:201:4
	jg	.LBB20_202
.Ltmp4388:
# %bb.189:                              # %for.cond1.preheader.i.preheader
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 4                  # huffman.c:0:4
	xorl	%ebx, %ebx
.Ltmp4389:
	.p2align	4, 0x90
.LBB20_190:                             # %for.cond1.preheader.i
                                        #   Parent Loop BB20_179 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_193 Depth 3
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- 0
	cmpl	$1, 16(%rsp)            # 4-byte Folded Reload
.Ltmp4390:
	.loc	13 203 14 is_stmt 1     # huffman.c:203:14
	jne	.LBB20_192
.Ltmp4391:
# %bb.191:                              #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 14 is_stmt 0       # huffman.c:0:14
	xorl	%esi, %esi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
.Ltmp4392:
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	testq	%r11, %r11
	.loc	13 203 14               # huffman.c:203:14
	jne	.LBB20_199
	jmp	.LBB20_201
.Ltmp4393:
	.p2align	4, 0x90
.LBB20_192:                             # %for.body3.i.preheader
                                        #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 0 14                 # huffman.c:0:14
	xorl	%esi, %esi
.Ltmp4394:
	.p2align	4, 0x90
.LBB20_193:                             # %for.body3.i
                                        #   Parent Loop BB20_179 Depth=1
                                        #     Parent Loop BB20_190 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	.loc	13 203 14               # huffman.c:203:14
	movzbl	(%rcx,%rsi), %eax
	.loc	13 203 24               # huffman.c:203:24
	cmpl	%eax, %ebp
.Ltmp4395:
	.loc	13 203 14               # huffman.c:203:14
	jne	.LBB20_195
.Ltmp4396:
# %bb.194:                              # %if.then.i34
                                        #   in Loop: Header=BB20_193 Depth=3
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 203 40               # huffman.c:203:40
	movl	%ebx, -4(%rdx,%rsi,4)
	.loc	13 203 50               # huffman.c:203:50
	addl	$1, %ebx
.Ltmp4397:
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
.LBB20_195:                             # %for.inc.i
                                        #   in Loop: Header=BB20_193 Depth=3
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 203 14               # huffman.c:203:14
	movzbl	1(%rcx,%rsi), %eax
	.loc	13 203 24               # huffman.c:203:24
	cmpl	%eax, %ebp
.Ltmp4398:
	.loc	13 203 14               # huffman.c:203:14
	jne	.LBB20_197
.Ltmp4399:
# %bb.196:                              # %if.then.1.i
                                        #   in Loop: Header=BB20_193 Depth=3
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 203 40               # huffman.c:203:40
	movl	%ebx, (%rdx,%rsi,4)
	.loc	13 203 50               # huffman.c:203:50
	addl	$1, %ebx
.Ltmp4400:
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
.LBB20_197:                             # %for.inc.1.i
                                        #   in Loop: Header=BB20_193 Depth=3
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	13 202 35 is_stmt 1     # huffman.c:202:35
	addq	$2, %rsi
.Ltmp4401:
	.loc	13 202 7 is_stmt 0      # huffman.c:202:7
	cmpq	%rsi, %r15
	jne	.LBB20_193
.Ltmp4402:
# %bb.198:                              # %for.end.loopexit.unr-lcssa.i
                                        #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	.loc	13 0 7                  # huffman.c:0:7
	testq	%r11, %r11
.Ltmp4403:
	.loc	13 203 14 is_stmt 1     # huffman.c:203:14
	je	.LBB20_201
.Ltmp4404:
.LBB20_199:                             # %for.body3.epil.i
                                        #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 203 14 is_stmt 0     # huffman.c:203:14
	movq	%r8, %rax
	shlq	$8, %rax
	leaq	(%rax,%r8,2), %rax
	addq	%r14, %rax
	movzbl	37708(%rsi,%rax), %eax
	.loc	13 203 24               # huffman.c:203:24
	cmpl	%eax, %ebp
.Ltmp4405:
	.loc	13 203 14               # huffman.c:203:14
	jne	.LBB20_201
.Ltmp4406:
# %bb.200:                              # %if.then.epil.i
                                        #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 203 32               # huffman.c:203:32
	movq	%r8, %rax
	shlq	$10, %rax
	leaq	(%rax,%r8,8), %rax
	addq	%r14, %rax
	.loc	13 203 40               # huffman.c:203:40
	movl	%ebx, 39256(%rax,%rsi,4)
	.loc	13 203 50               # huffman.c:203:50
	addl	$1, %ebx
.Ltmp4407:
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
.LBB20_201:                             # %for.end.i
                                        #   in Loop: Header=BB20_190 Depth=2
	#DEBUG_VALUE: BZ2_hbAssignCodes:i <- $rsi
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	.loc	13 204 11 is_stmt 1     # huffman.c:204:11
	addl	%ebx, %ebx
.Ltmp4408:
	#DEBUG_VALUE: BZ2_hbAssignCodes:vec <- $ebx
	.loc	13 201 35               # huffman.c:201:35
	leal	1(%rbp), %eax
.Ltmp4409:
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $eax
	.loc	13 201 23 is_stmt 0     # huffman.c:201:23
	cmpl	%edi, %ebp
	movl	%eax, %ebp
.Ltmp4410:
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	#DEBUG_VALUE: BZ2_hbAssignCodes:n <- $ebp
	.loc	13 201 4                # huffman.c:201:4
	jl	.LBB20_190
.Ltmp4411:
.LBB20_202:                             # %BZ2_hbAssignCodes.exit
                                        #   in Loop: Header=BB20_179 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 525 30 is_stmt 1     # compress.c:525:30
	addq	$1, %r8
.Ltmp4412:
	.loc	14 525 4 is_stmt 0      # compress.c:525:4
	addq	$258, %r9               # imm = 0x102
	addq	$258, %rcx              # imm = 0x102
	addq	$1032, %rdx             # imm = 0x408
.Ltmp4413:
	.loc	14 525 18               # compress.c:525:18
	cmpq	%r10, %r8
.Ltmp4414:
	.loc	14 525 4                # compress.c:525:4
	jne	.LBB20_179
.Ltmp4415:
# %bb.203:                              # %for.end1814
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- 0
	.loc	14 541 7 is_stmt 1      # compress.c:541:7
	leaq	143(%r14), %rax
	xorl	%ecx, %ecx
.Ltmp4416:
	.p2align	4, 0x90
.LBB20_204:                             # %for.body1818
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:j <- 1
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 544 18               # compress.c:544:18
	movd	-15(%rax), %xmm0        # xmm0 = mem[0],zero,zero,zero
	punpcklbw	%xmm0, %xmm0    # xmm0 = xmm0[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7]
	punpcklwd	%xmm0, %xmm0    # xmm0 = xmm0[0,0,1,1,2,2,3,3]
.Ltmp4417:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 6
	.loc	14 544 18 is_stmt 0     # compress.c:544:18
	pshufd	$78, %xmm0, %xmm1       # xmm1 = xmm0[2,3,0,1]
	por	%xmm0, %xmm1
	pshufd	$229, %xmm1, %xmm0      # xmm0 = xmm1[1,1,2,3]
	por	%xmm1, %xmm0
	movd	%xmm0, %edx
.Ltmp4418:
	.loc	14 544 18               # compress.c:544:18
	orb	-11(%rax), %dl
	orb	-10(%rax), %dl
	orb	-9(%rax), %dl
.Ltmp4419:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 7
	.loc	14 544 18               # compress.c:544:18
	orb	-8(%rax), %dl
.Ltmp4420:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 8
	orb	-7(%rax), %dl
.Ltmp4421:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 9
	orb	-6(%rax), %dl
.Ltmp4422:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 10
	orb	-5(%rax), %dl
.Ltmp4423:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 11
	orb	-4(%rax), %dl
.Ltmp4424:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 12
	orb	-3(%rax), %dl
.Ltmp4425:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 13
	orb	-2(%rax), %dl
.Ltmp4426:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 14
	orb	-1(%rax), %dl
.Ltmp4427:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:j <- 15
	orb	(%rax), %dl
	.loc	14 0 0                  # compress.c:0:0
	setne	1376(%rsp,%rcx)
.Ltmp4428:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 541 28 is_stmt 1     # compress.c:541:28
	addq	$1, %rcx
.Ltmp4429:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 541 21 is_stmt 0     # compress.c:541:21
	addq	$16, %rax
	cmpq	$16, %rcx
.Ltmp4430:
	.loc	14 541 7                # compress.c:541:7
	jne	.LBB20_204
.Ltmp4431:
# %bb.205:                              # %for.end1838
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 547 19 is_stmt 1     # compress.c:547:19
	leaq	116(%r14), %rbp
	movl	116(%r14), %r8d
.Ltmp4432:
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- 0
	.loc	14 0 19 is_stmt 0       # compress.c:0:19
	leaq	644(%r14), %r13
	leaq	640(%r14), %r15
	leaq	80(%r14), %r12
.Ltmp4433:
	movl	644(%r14), %esi
	movl	640(%r14), %edi
	xorl	%ecx, %ecx
	movl	%r8d, %edx
.Ltmp4434:
	.p2align	4, 0x90
.LBB20_206:                             # %for.body1842
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_208 Depth 2
                                        #     Child Loop BB20_211 Depth 2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: bsW:n <- 1
	#DEBUG_VALUE: bsW:n <- 1
	.loc	14 549 14 is_stmt 1     # compress.c:549:14
	cmpb	$0, 1376(%rsp,%rcx)
.Ltmp4435:
	.loc	14 549 14 is_stmt 0     # compress.c:549:14
	je	.LBB20_210
.Ltmp4436:
# %bb.207:                              # %if.then1846
                                        #   in Loop: Header=BB20_206 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$8, %esi
.Ltmp4437:
	#DEBUG_VALUE: bsW:v <- 1
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	jl	.LBB20_209
.Ltmp4438:
	.p2align	4, 0x90
.LBB20_208:                             # %while.body.i
                                        #   Parent Loop BB20_206 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %edi
	movq	(%r12), %rax
	movslq	%edx, %rdx
	movb	%dil, (%rax,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %edi
	shll	$8, %edi
	movl	%edi, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4439:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_208
.Ltmp4440:
.LBB20_209:                             # %bsW.exit
                                        #   in Loop: Header=BB20_206 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$31, %al
	subb	%sil, %al
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	btsl	%eax, %edi
	jmp	.LBB20_212
.Ltmp4441:
	.p2align	4, 0x90
.LBB20_210:                             # %if.else1847
                                        #   in Loop: Header=BB20_206 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$8, %esi
.Ltmp4442:
	#DEBUG_VALUE: bsW:v <- 0
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	jl	.LBB20_212
.Ltmp4443:
	.p2align	4, 0x90
.LBB20_211:                             # %while.body.i5555
                                        #   Parent Loop BB20_206 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %edi
	movq	(%r12), %rax
	movslq	%edx, %rdx
	movb	%dil, (%rax,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %edi
	shll	$8, %edi
	movl	%edi, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4444:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_211
.Ltmp4445:
	.p2align	4, 0x90
.LBB20_212:                             # %for.inc1849
                                        #   in Loop: Header=BB20_206 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:i <- $rcx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	movl	%edi, (%r15)
	addl	$1, %esi
	movl	%esi, (%r13)
.Ltmp4446:
	.loc	14 548 28 is_stmt 1     # compress.c:548:28
	addq	$1, %rcx
.Ltmp4447:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 548 21 is_stmt 0     # compress.c:548:21
	cmpq	$16, %rcx
.Ltmp4448:
	.loc	14 548 7                # compress.c:548:7
	jne	.LBB20_206
.Ltmp4449:
# %bb.213:                              # %for.body1855.preheader
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7                  # compress.c:0:7
	xorl	%r9d, %r9d
.Ltmp4450:
	.p2align	4, 0x90
.LBB20_214:                             # %for.body1855
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_216 Depth 2
                                        #       Child Loop BB20_218 Depth 3
                                        #       Child Loop BB20_221 Depth 3
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	.loc	14 552 14 is_stmt 1     # compress.c:552:14
	cmpb	$0, 1376(%rsp,%r9)
.Ltmp4451:
	.loc	14 552 14 is_stmt 0     # compress.c:552:14
	je	.LBB20_223
.Ltmp4452:
# %bb.215:                              # %for.cond1860.preheader
                                        #   in Loop: Header=BB20_214 Depth=1
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:j <- 0
	.loc	14 0 14                 # compress.c:0:14
	movq	%r9, %rcx
	shlq	$4, %rcx
	xorl	%eax, %eax
.Ltmp4453:
	.p2align	4, 0x90
.LBB20_216:                             # %for.body1863
                                        #   Parent Loop BB20_214 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_218 Depth 3
                                        #       Child Loop BB20_221 Depth 3
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	.loc	14 554 36 is_stmt 1     # compress.c:554:36
	leaq	(%rax,%rcx), %rbx
.Ltmp4454:
	#DEBUG_VALUE: bsW:n <- 1
	#DEBUG_VALUE: bsW:n <- 1
	.loc	14 554 20 is_stmt 0     # compress.c:554:20
	cmpb	$0, 128(%r14,%rbx)
.Ltmp4455:
	.loc	14 554 20               # compress.c:554:20
	je	.LBB20_220
.Ltmp4456:
# %bb.217:                              # %if.then1870
                                        #   in Loop: Header=BB20_216 Depth=2
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$8, %esi
.Ltmp4457:
	#DEBUG_VALUE: bsW:v <- 1
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	jl	.LBB20_219
.Ltmp4458:
	.p2align	4, 0x90
.LBB20_218:                             # %while.body.i5529
                                        #   Parent Loop BB20_214 Depth=1
                                        #     Parent Loop BB20_216 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %edi
	movq	(%r12), %rsi
	movslq	%edx, %rdx
	movb	%dil, (%rsi,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %edi
	shll	$8, %edi
	movl	%edi, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4459:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_218
.Ltmp4460:
.LBB20_219:                             # %bsW.exit5536
                                        #   in Loop: Header=BB20_216 Depth=2
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$31, %bl
	subb	%sil, %bl
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	btsl	%ebx, %edi
	jmp	.LBB20_222
.Ltmp4461:
	.p2align	4, 0x90
.LBB20_220:                             # %if.else1871
                                        #   in Loop: Header=BB20_216 Depth=2
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$8, %esi
.Ltmp4462:
	#DEBUG_VALUE: bsW:v <- 0
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	jl	.LBB20_222
.Ltmp4463:
	.p2align	4, 0x90
.LBB20_221:                             # %while.body.i5505
                                        #   Parent Loop BB20_214 Depth=1
                                        #     Parent Loop BB20_216 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %edi
	movq	(%r12), %rsi
	movslq	%edx, %rdx
	movb	%dil, (%rsi,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %edi
	shll	$8, %edi
	movl	%edi, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4464:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_221
.Ltmp4465:
	.p2align	4, 0x90
.LBB20_222:                             # %for.inc1873
                                        #   in Loop: Header=BB20_216 Depth=2
	#DEBUG_VALUE: sendMTFValues:j <- $rax
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0                  # compress.c:0:0
	movl	%edi, (%r15)
	addl	$1, %esi
	movl	%esi, (%r13)
.Ltmp4466:
	.loc	14 553 34 is_stmt 1     # compress.c:553:34
	addq	$1, %rax
.Ltmp4467:
	#DEBUG_VALUE: sendMTFValues:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 553 27 is_stmt 0     # compress.c:553:27
	cmpq	$16, %rax
.Ltmp4468:
	.loc	14 553 13               # compress.c:553:13
	jne	.LBB20_216
.Ltmp4469:
.LBB20_223:                             # %for.inc1877
                                        #   in Loop: Header=BB20_214 Depth=1
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 551 28 is_stmt 1     # compress.c:551:28
	addq	$1, %r9
	.loc	14 551 21 is_stmt 0     # compress.c:551:21
	cmpq	$16, %r9
.Ltmp4470:
	.loc	14 551 7                # compress.c:551:7
	jne	.LBB20_214
.Ltmp4471:
# %bb.224:                              # %for.end1879
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 557 24 is_stmt 1     # compress.c:557:24
	cmpl	$3, 656(%r14)
.Ltmp4472:
	.loc	14 557 11 is_stmt 0     # compress.c:557:11
	jge	.LBB20_385
.Ltmp4473:
.LBB20_225:                             # %if.end1887
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: bsW:n <- 3
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	movl	%edx, %r10d
.Ltmp4474:
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	cmpl	$8, %esi
	jl	.LBB20_227
.Ltmp4475:
	.p2align	4, 0x90
.LBB20_226:                             # %while.body.i5479
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4                # compress.c:119:4
	shrl	$24, %edi
	movq	(%r12), %rax
	movslq	%r10d, %rcx
	movb	%dil, (%rax,%rcx)
	movl	(%rbp), %r10d
	addl	$1, %r10d
	movl	%r10d, (%rbp)
	movl	(%r15), %edi
	shll	$8, %edi
	movl	%edi, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4476:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_226
.Ltmp4477:
.LBB20_227:                             # %bsW.exit5486
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$29, %cl
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%sil, %cl
	movq	32(%rsp), %rax          # 8-byte Reload
	movl	%eax, %ebx
	shll	%cl, %ebx
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%edi, %ebx
	movl	%ebx, (%r15)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$3, %esi
	movl	%esi, (%r13)
.Ltmp4478:
	#DEBUG_VALUE: bsW:n <- 15
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %esi
	jl	.LBB20_229
.Ltmp4479:
	.p2align	4, 0x90
.LBB20_228:                             # %while.body.i5453
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rax
	movslq	%r10d, %rcx
	movb	%bl, (%rax,%rcx)
	movl	(%rbp), %r10d
	addl	$1, %r10d
	movl	%r10d, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4480:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_228
.Ltmp4481:
.LBB20_229:                             # %bsW.exit5460
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movb	$17, %cl
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	subb	%sil, %cl
	movq	24(%rsp), %rdi          # 8-byte Reload
	movl	%edi, %eax
	shll	%cl, %eax
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%ebx, %eax
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$15, %esi
	.loc	14 120 14               # compress.c:120:14
	movl	%eax, (%r15)
.Ltmp4482:
	#DEBUG_VALUE: sendMTFValues:i <- 0
	.loc	14 121 14               # compress.c:121:14
	movl	%esi, (%r13)
.Ltmp4483:
	.loc	14 509 21               # compress.c:509:21
	testl	%edi, %edi
.Ltmp4484:
	.loc	14 565 4                # compress.c:565:4
	jle	.LBB20_382
.Ltmp4485:
# %bb.230:                              # %for.cond1893.preheader.lr.ph
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4 is_stmt 0        # compress.c:0:4
	movl	%edi, %r8d
	xorl	%r9d, %r9d
	jmp	.LBB20_232
.Ltmp4486:
	.p2align	4, 0x90
.LBB20_231:                             #   in Loop: Header=BB20_232 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movl	%esi, %edi
.Ltmp4487:
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	testb	%bl, %bl
.Ltmp4488:
	#DEBUG_VALUE: bsW:v <- 0
	jne	.LBB20_238
	jmp	.LBB20_239
.Ltmp4489:
	.p2align	4, 0x90
.LBB20_232:                             # %for.cond1893.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_234 Depth 2
                                        #       Child Loop BB20_235 Depth 3
                                        #     Child Loop BB20_238 Depth 2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:j <- 0
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	cmpl	$7, %esi
	setg	%bl
.Ltmp4490:
	#DEBUG_VALUE: bsW:n <- 1
	#DEBUG_VALUE: bsW:n <- 1
	.loc	14 566 21 is_stmt 1     # compress.c:566:21
	cmpb	$0, 19706(%r14,%r9)
.Ltmp4491:
	.loc	14 566 7 is_stmt 0      # compress.c:566:7
	je	.LBB20_231
.Ltmp4492:
# %bb.233:                              # %for.body1900.preheader
                                        #   in Loop: Header=BB20_232 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7                  # compress.c:0:7
	xorl	%ecx, %ecx
.Ltmp4493:
	.p2align	4, 0x90
.LBB20_234:                             # %for.body1900
                                        #   Parent Loop BB20_232 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_235 Depth 3
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	testb	$1, %bl
.Ltmp4494:
	#DEBUG_VALUE: bsW:v <- 1
	#DEBUG_VALUE: sendMTFValues:j <- $ecx
	je	.LBB20_236
.Ltmp4495:
	.p2align	4, 0x90
.LBB20_235:                             # %while.body.i5427
                                        #   Parent Loop BB20_232 Depth=1
                                        #     Parent Loop BB20_234 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:j <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %eax
	movq	(%r12), %rsi
	movslq	%r10d, %rdi
	movb	%al, (%rsi,%rdi)
	movl	(%rbp), %r10d
	addl	$1, %r10d
	movl	%r10d, (%rbp)
	movl	(%r15), %eax
	shll	$8, %eax
	movl	%eax, (%r15)
	movl	(%r13), %esi
	addl	$-8, %esi
	movl	%esi, (%r13)
.Ltmp4496:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %esi
	jg	.LBB20_235
.Ltmp4497:
.LBB20_236:                             # %bsW.exit5434
                                        #   in Loop: Header=BB20_234 Depth=2
	#DEBUG_VALUE: sendMTFValues:j <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$31, %dil
	subb	%sil, %dil
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	btsl	%edi, %eax
	movl	%eax, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	leal	1(%rsi), %edi
	movl	%edi, 644(%r14)
.Ltmp4498:
	.loc	14 566 43               # compress.c:566:43
	addl	$1, %ecx
.Ltmp4499:
	#DEBUG_VALUE: sendMTFValues:j <- $ecx
	.loc	14 566 23 is_stmt 0     # compress.c:566:23
	movzbl	19706(%r14,%r9), %r11d
.Ltmp4500:
	#DEBUG_VALUE: bsW:n <- 1
	#DEBUG_VALUE: bsW:n <- 1
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$6, %esi
	setg	%bl
	movl	%edi, %esi
.Ltmp4501:
	.loc	14 566 21               # compress.c:566:21
	cmpl	%r11d, %ecx
.Ltmp4502:
	.loc	14 566 7                # compress.c:566:7
	jb	.LBB20_234
.Ltmp4503:
# %bb.237:                              # %for.end1903
                                        #   in Loop: Header=BB20_232 Depth=1
	#DEBUG_VALUE: sendMTFValues:j <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	testb	%bl, %bl
	#DEBUG_VALUE: bsW:v <- 0
	je	.LBB20_239
.Ltmp4504:
	.p2align	4, 0x90
.LBB20_238:                             # %while.body.i5403
                                        #   Parent Loop BB20_232 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %eax
	movq	(%r12), %rcx
	movslq	%r10d, %rsi
	movb	%al, (%rcx,%rsi)
	movl	(%rbp), %r10d
	addl	$1, %r10d
	movl	%r10d, (%rbp)
	movl	(%r15), %eax
	shll	$8, %eax
	movl	%eax, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4505:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_238
.Ltmp4506:
.LBB20_239:                             # %bsW.exit5408
                                        #   in Loop: Header=BB20_232 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	%eax, (%r15)
	.loc	14 121 14               # compress.c:121:14
	addl	$1, %edi
	movl	%edi, (%r13)
.Ltmp4507:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 565 33               # compress.c:565:33
	addq	$1, %r9
.Ltmp4508:
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	%edi, %esi
.Ltmp4509:
	.loc	14 565 18               # compress.c:565:18
	cmpq	%r8, %r9
.Ltmp4510:
	.loc	14 565 4                # compress.c:565:4
	jne	.LBB20_232
.Ltmp4511:
# %bb.240:                              # %for.end1906
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 569 21 is_stmt 1     # compress.c:569:21
	cmpl	$3, 656(%r14)
.Ltmp4512:
	.loc	14 569 8 is_stmt 0      # compress.c:569:8
	jge	.LBB20_383
.Ltmp4513:
.LBB20_241:                             # %if.end1914
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 8                  # compress.c:0:8
	xorl	%esi, %esi
.Ltmp4514:
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:t <- 0
	movl	%r10d, %edx
.Ltmp4515:
	.p2align	4, 0x90
.LBB20_242:                             # %for.body1919
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_243 Depth 2
                                        #     Child Loop BB20_246 Depth 2
                                        #       Child Loop BB20_248 Depth 3
                                        #         Child Loop BB20_249 Depth 4
                                        #       Child Loop BB20_251 Depth 3
                                        #         Child Loop BB20_252 Depth 4
                                        #       Child Loop BB20_256 Depth 3
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- $rsi
	.loc	14 576 20 is_stmt 1     # compress.c:576:20
	movq	%rsi, %rcx
	shlq	$8, %rcx
	movq	%rsi, 56(%rsp)          # 8-byte Spill
.Ltmp4516:
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	leaq	(%rcx,%rsi,2), %r9
.Ltmp4517:
	#DEBUG_VALUE: bsW:v <- undef
	#DEBUG_VALUE: curr <- undef
	movzbl	37708(%r14,%r9), %esi
.Ltmp4518:
	#DEBUG_VALUE: bsW:n <- 5
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_244
.Ltmp4519:
	.p2align	4, 0x90
.LBB20_243:                             # %while.body.i5377
                                        #   Parent Loop BB20_242 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %eax
	movq	(%r12), %rcx
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %eax
	shll	$8, %eax
	movl	%eax, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4520:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_243
.Ltmp4521:
.LBB20_244:                             # %bsW.exit5384
                                        #   in Loop: Header=BB20_242 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$27, %cl
	subb	%dil, %cl
	movl	%esi, %ebx
	shll	%cl, %ebx
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%eax, %ebx
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$5, %edi
	.loc	14 120 14               # compress.c:120:14
	movl	%ebx, (%r15)
.Ltmp4522:
	#DEBUG_VALUE: sendMTFValues:i <- 0
	.loc	14 121 14               # compress.c:121:14
	movl	%edi, (%r13)
	cmpl	$0, 16(%rsp)            # 4-byte Folded Reload
.Ltmp4523:
	.loc	14 578 7                # compress.c:578:7
	jle	.LBB20_259
.Ltmp4524:
# %bb.245:                              # %while.cond1929.preheader.preheader
                                        #   in Loop: Header=BB20_242 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	xorl	%r11d, %r11d
.Ltmp4525:
	.p2align	4, 0x90
.LBB20_246:                             # %while.cond1929.preheader
                                        #   Parent Loop BB20_242 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_248 Depth 3
                                        #         Child Loop BB20_249 Depth 4
                                        #       Child Loop BB20_251 Depth 3
                                        #         Child Loop BB20_252 Depth 4
                                        #       Child Loop BB20_256 Depth 3
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: curr <- $esi
	.loc	14 579 24 is_stmt 1     # compress.c:579:24
	leaq	(%r14,%r9), %rcx
	leaq	(%r11,%rcx), %r14
	addq	$37708, %r14            # imm = 0x934C
	movzbl	37708(%r11,%rcx), %r8d
	.loc	14 579 22 is_stmt 0     # compress.c:579:22
	cmpl	%r8d, %esi
	.loc	14 579 10               # compress.c:579:10
	jge	.LBB20_250
.Ltmp4526:
	.p2align	4, 0x90
.LBB20_248:                             # %while.body1938
                                        #   Parent Loop BB20_242 Depth=1
                                        #     Parent Loop BB20_246 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB20_249 Depth 4
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: bsW:n <- 2
	#DEBUG_VALUE: bsW:v <- 2
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_247
.Ltmp4527:
	.p2align	4, 0x90
.LBB20_249:                             # %while.body.i5351
                                        #   Parent Loop BB20_242 Depth=1
                                        #     Parent Loop BB20_246 Depth=2
                                        #       Parent Loop BB20_248 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	movslq	%edx, %rdx
	movb	%bl, (%rcx,%rdx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4528:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_249
.Ltmp4529:
.LBB20_247:                             # %bsW.exit5358
                                        #   in Loop: Header=BB20_248 Depth=3
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$30, %cl
	subb	%dil, %cl
	movl	$2, %eax
	shll	%cl, %eax
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%eax, %ebx
	movl	%ebx, (%r15)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$2, %edi
	movl	%edi, (%r13)
.Ltmp4530:
	.loc	14 579 56               # compress.c:579:56
	addl	$1, %esi
.Ltmp4531:
	#DEBUG_VALUE: curr <- $esi
	.loc	14 579 24 is_stmt 0     # compress.c:579:24
	movzbl	(%r14), %r8d
	.loc	14 579 22               # compress.c:579:22
	cmpl	%r8d, %esi
	.loc	14 579 10               # compress.c:579:10
	jl	.LBB20_248
.Ltmp4532:
.LBB20_250:                             # %while.cond1941.preheader
                                        #   in Loop: Header=BB20_246 Depth=2
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: curr <- $esi
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$7, %edi
	setg	%cl
	.loc	14 580 22 is_stmt 1     # compress.c:580:22
	cmpl	%r8d, %esi
	.loc	14 580 10 is_stmt 0     # compress.c:580:10
	jle	.LBB20_254
.Ltmp4533:
	.p2align	4, 0x90
.LBB20_251:                             # %while.body1950
                                        #   Parent Loop BB20_242 Depth=1
                                        #     Parent Loop BB20_246 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB20_252 Depth 4
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	testb	$1, %cl
.Ltmp4534:
	#DEBUG_VALUE: bsW:v <- 3
	#DEBUG_VALUE: bsW:n <- 2
	#DEBUG_VALUE: curr <- $esi
	je	.LBB20_253
.Ltmp4535:
	.p2align	4, 0x90
.LBB20_252:                             # %while.body.i5325
                                        #   Parent Loop BB20_242 Depth=1
                                        #     Parent Loop BB20_246 Depth=2
                                        #       Parent Loop BB20_251 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rax
	movslq	%edx, %rcx
	movb	%bl, (%rax,%rcx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4536:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_252
.Ltmp4537:
.LBB20_253:                             # %bsW.exit5332
                                        #   in Loop: Header=BB20_251 Depth=3
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 20 is_stmt 1     # compress.c:120:20
	movb	$30, %cl
	subb	%dil, %cl
	movl	$3, %eax
	shll	%cl, %eax
	.loc	14 120 14 is_stmt 0     # compress.c:120:14
	orl	%eax, %ebx
	movl	%ebx, (%r15)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	$2, %edi
	movl	%edi, (%r13)
.Ltmp4538:
	.loc	14 580 56               # compress.c:580:56
	addl	$-1, %esi
.Ltmp4539:
	#DEBUG_VALUE: curr <- $esi
	.loc	14 580 24 is_stmt 0     # compress.c:580:24
	movzbl	(%r14), %eax
	.loc	14 0 0                  # compress.c:0:0
	cmpl	$7, %edi
	setg	%cl
	.loc	14 580 22               # compress.c:580:22
	cmpl	%eax, %esi
	.loc	14 580 10               # compress.c:580:10
	jg	.LBB20_251
.Ltmp4540:
.LBB20_254:                             # %while.end1952
                                        #   in Loop: Header=BB20_246 Depth=2
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	testb	%cl, %cl
.Ltmp4541:
	#DEBUG_VALUE: bsW:v <- 0
	#DEBUG_VALUE: bsW:n <- 1
	#DEBUG_VALUE: curr <- $esi
	je	.LBB20_257
.Ltmp4542:
# %bb.255:                              # %while.body.i5301.preheader
                                        #   in Loop: Header=BB20_246 Depth=2
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4 is_stmt 0        # compress.c:0:4
	movq	112(%rsp), %r14         # 8-byte Reload
.Ltmp4543:
	.p2align	4, 0x90
.LBB20_256:                             # %while.body.i5301
                                        #   Parent Loop BB20_242 Depth=1
                                        #     Parent Loop BB20_246 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4                # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rax
	movslq	%edx, %rcx
	movb	%bl, (%rax,%rcx)
	movl	(%rbp), %edx
	addl	$1, %edx
	movl	%edx, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4544:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_256
	jmp	.LBB20_258
.Ltmp4545:
	.p2align	4, 0x90
.LBB20_257:                             #   in Loop: Header=BB20_246 Depth=2
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4                  # compress.c:0:4
	movq	112(%rsp), %r14         # 8-byte Reload
.Ltmp4546:
.LBB20_258:                             # %bsW.exit5306
                                        #   in Loop: Header=BB20_246 Depth=2
	#DEBUG_VALUE: curr <- $esi
	#DEBUG_VALUE: sendMTFValues:i <- $r11
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	%ebx, (%r15)
	.loc	14 121 14               # compress.c:121:14
	addl	$1, %edi
	movl	%edi, (%r13)
.Ltmp4547:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 578 35               # compress.c:578:35
	addq	$1, %r11
	.loc	14 578 21 is_stmt 0     # compress.c:578:21
	cmpq	16(%rsp), %r11          # 8-byte Folded Reload
.Ltmp4548:
	.loc	14 578 7                # compress.c:578:7
	jne	.LBB20_246
.Ltmp4549:
.LBB20_259:                             # %for.end1955
                                        #   in Loop: Header=BB20_242 Depth=1
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:t <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	14 0 7                  # compress.c:0:7
	movq	56(%rsp), %rsi          # 8-byte Reload
	.loc	14 575 30 is_stmt 1     # compress.c:575:30
	addq	$1, %rsi
.Ltmp4550:
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	%ebx, %eax
.Ltmp4551:
	.loc	14 575 18               # compress.c:575:18
	cmpq	32(%rsp), %rsi          # 8-byte Folded Reload
.Ltmp4552:
	.loc	14 575 4                # compress.c:575:4
	jne	.LBB20_242
.Ltmp4553:
# %bb.260:                              # %for.end1958
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 585 21 is_stmt 1     # compress.c:585:21
	cmpl	$3, 656(%r14)
.Ltmp4554:
	.loc	14 585 8 is_stmt 0      # compress.c:585:8
	jge	.LBB20_386
.Ltmp4555:
.LBB20_261:                             # %if.end1966
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 8                  # compress.c:0:8
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp4556:
	#DEBUG_VALUE: sendMTFValues:gs <- 0
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:selCtr <- 0
	.loc	14 593 20 is_stmt 1     # compress.c:593:20
	movl	668(%r14), %esi
	xorl	%r8d, %r8d
	movl	%edx, %eax
	.loc	14 593 14 is_stmt 0     # compress.c:593:14
	testl	%esi, %esi
.Ltmp4557:
	.loc	14 593 11               # compress.c:593:11
	jle	.LBB20_379
.Ltmp4558:
# %bb.262:                              # %if.end1974.preheader
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 11                 # compress.c:0:11
	xorl	%ecx, %ecx
.Ltmp4559:
	.p2align	4, 0x90
.LBB20_263:                             # %if.end1974
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_371 Depth 2
                                        #       Child Loop BB20_372 Depth 3
                                        #     Child Loop BB20_267 Depth 2
                                        #     Child Loop BB20_269 Depth 2
                                        #     Child Loop BB20_271 Depth 2
                                        #     Child Loop BB20_273 Depth 2
                                        #     Child Loop BB20_275 Depth 2
                                        #     Child Loop BB20_277 Depth 2
                                        #     Child Loop BB20_279 Depth 2
                                        #     Child Loop BB20_281 Depth 2
                                        #     Child Loop BB20_283 Depth 2
                                        #     Child Loop BB20_285 Depth 2
                                        #     Child Loop BB20_287 Depth 2
                                        #     Child Loop BB20_289 Depth 2
                                        #     Child Loop BB20_291 Depth 2
                                        #     Child Loop BB20_293 Depth 2
                                        #     Child Loop BB20_295 Depth 2
                                        #     Child Loop BB20_297 Depth 2
                                        #     Child Loop BB20_299 Depth 2
                                        #     Child Loop BB20_301 Depth 2
                                        #     Child Loop BB20_303 Depth 2
                                        #     Child Loop BB20_305 Depth 2
                                        #     Child Loop BB20_307 Depth 2
                                        #     Child Loop BB20_309 Depth 2
                                        #     Child Loop BB20_311 Depth 2
                                        #     Child Loop BB20_313 Depth 2
                                        #     Child Loop BB20_315 Depth 2
                                        #     Child Loop BB20_317 Depth 2
                                        #     Child Loop BB20_319 Depth 2
                                        #     Child Loop BB20_321 Depth 2
                                        #     Child Loop BB20_323 Depth 2
                                        #     Child Loop BB20_325 Depth 2
                                        #     Child Loop BB20_327 Depth 2
                                        #     Child Loop BB20_329 Depth 2
                                        #     Child Loop BB20_331 Depth 2
                                        #     Child Loop BB20_333 Depth 2
                                        #     Child Loop BB20_335 Depth 2
                                        #     Child Loop BB20_337 Depth 2
                                        #     Child Loop BB20_339 Depth 2
                                        #     Child Loop BB20_341 Depth 2
                                        #     Child Loop BB20_343 Depth 2
                                        #     Child Loop BB20_345 Depth 2
                                        #     Child Loop BB20_347 Depth 2
                                        #     Child Loop BB20_349 Depth 2
                                        #     Child Loop BB20_351 Depth 2
                                        #     Child Loop BB20_353 Depth 2
                                        #     Child Loop BB20_355 Depth 2
                                        #     Child Loop BB20_357 Depth 2
                                        #     Child Loop BB20_359 Depth 2
                                        #     Child Loop BB20_361 Depth 2
                                        #     Child Loop BB20_363 Depth 2
                                        #     Child Loop BB20_366 Depth 2
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	.loc	14 594 27 is_stmt 1     # compress.c:594:27
	leal	49(%rcx), %edi
.Ltmp4560:
	#DEBUG_VALUE: sendMTFValues:ge <- $edi
	.loc	14 595 38               # compress.c:595:38
	leal	-1(%rsi), %ebx
	.loc	14 595 14 is_stmt 0     # compress.c:595:14
	cmpl	%esi, %edi
.Ltmp4561:
	.loc	14 595 11               # compress.c:595:11
	cmovll	%edi, %ebx
.Ltmp4562:
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	.loc	14 596 7 is_stmt 1      # compress.c:596:7
	movzbl	1704(%r14,%r8), %r10d
	movq	32(%rsp), %rsi          # 8-byte Reload
	cmpl	%r10d, %esi
.Ltmp4563:
	.loc	14 596 7 is_stmt 0      # compress.c:596:7
	jbe	.LBB20_392
.Ltmp4564:
# %bb.264:                              # %if.end1991
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 7                  # compress.c:0:7
	cmpl	$6, %esi
.Ltmp4565:
	.loc	14 598 24 is_stmt 1     # compress.c:598:24
	jne	.LBB20_367
.Ltmp4566:
# %bb.265:                              # %if.end1991
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	%ebx, %esi
	subl	%ecx, %esi
	.loc	14 598 24               # compress.c:598:24
	cmpl	$49, %esi
	jne	.LBB20_367
.Ltmp4567:
# %bb.266:                              # %if.then1999
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 24                 # compress.c:0:24
	movl	%edi, 16(%rsp)          # 4-byte Spill
	movl	%ebx, 64(%rsp)          # 4-byte Spill
.Ltmp4568:
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%r8, 56(%rsp)           # 8-byte Spill
.Ltmp4569:
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	14 612 13 is_stmt 1     # compress.c:612:13
	movslq	%ecx, %r11
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4570:
	movzwl	(%rcx,%r11,2), %ecx
.Ltmp4571:
	#DEBUG_VALUE: mtfv_i <- undef
	movq	%r10, %rsi
	shlq	$8, %rsi
	leaq	(%rsi,%r10,2), %r9
	addq	%r14, %r9
	movzbl	37708(%rcx,%r9), %esi
	movq	%r10, %rdi
	shlq	$10, %rdi
	leaq	(%rdi,%r10,8), %r10
	addq	%r14, %r10
	movl	39256(%r10,%rcx,4), %r8d
.Ltmp4572:
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: bsW:n <- $esi
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	640(%r14), %ebx
.Ltmp4573:
	.loc	14 119 4 is_stmt 1      # compress.c:119:4
	movl	644(%r14), %edi
	cmpl	$8, %edi
	jl	.LBB20_268
.Ltmp4574:
	.p2align	4, 0x90
.LBB20_267:                             # %while.body.i5274
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $esi
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4575:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_267
.Ltmp4576:
.LBB20_268:                             # %bsW.exit5282
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $esi
	#DEBUG_VALUE: bsW:v <- $r8d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%esi, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %r8d
.Ltmp4577:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %r8d
	movl	%r8d, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%esi, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4578:
	.loc	14 612 26               # compress.c:612:26
	movzwl	2(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %esi
.Ltmp4579:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4580:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $esi
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_270
.Ltmp4581:
	.p2align	4, 0x90
.LBB20_269:                             # %while.body.i5247
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $esi
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %r8d
	movq	(%r12), %rcx
	cltq
	movb	%r8b, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %r8d
	shll	$8, %r8d
	movl	%r8d, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4582:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_269
.Ltmp4583:
.LBB20_270:                             # %bsW.exit5255
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $esi
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%esi, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4584:
	.loc	14 120 14               # compress.c:120:14
	orl	%r8d, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%esi, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4585:
	.loc	14 612 39               # compress.c:612:39
	movzwl	4(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4586:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_272
.Ltmp4587:
	.p2align	4, 0x90
.LBB20_271:                             # %while.body.i5220
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4588:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_271
.Ltmp4589:
.LBB20_272:                             # %bsW.exit5228
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4590:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4591:
	.loc	14 612 52               # compress.c:612:52
	movzwl	6(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4592:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4593:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_274
.Ltmp4594:
	.p2align	4, 0x90
.LBB20_273:                             # %while.body.i5193
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4595:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_273
.Ltmp4596:
.LBB20_274:                             # %bsW.exit5201
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4597:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4598:
	.loc	14 612 65               # compress.c:612:65
	movzwl	8(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4599:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4600:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_276
.Ltmp4601:
	.p2align	4, 0x90
.LBB20_275:                             # %while.body.i5166
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4602:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_275
.Ltmp4603:
.LBB20_276:                             # %bsW.exit5174
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4604:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4605:
	.loc	14 613 13               # compress.c:613:13
	movzwl	10(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4606:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4607:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_278
.Ltmp4608:
	.p2align	4, 0x90
.LBB20_277:                             # %while.body.i5139
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4609:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_277
.Ltmp4610:
.LBB20_278:                             # %bsW.exit5147
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4611:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4612:
	.loc	14 613 26               # compress.c:613:26
	movzwl	12(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4613:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4614:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_280
.Ltmp4615:
	.p2align	4, 0x90
.LBB20_279:                             # %while.body.i5112
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4616:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_279
.Ltmp4617:
.LBB20_280:                             # %bsW.exit5120
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4618:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4619:
	.loc	14 613 39               # compress.c:613:39
	movzwl	14(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4620:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4621:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_282
.Ltmp4622:
	.p2align	4, 0x90
.LBB20_281:                             # %while.body.i5085
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4623:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_281
.Ltmp4624:
.LBB20_282:                             # %bsW.exit5093
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4625:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4626:
	.loc	14 613 52               # compress.c:613:52
	movzwl	16(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4627:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4628:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_284
.Ltmp4629:
	.p2align	4, 0x90
.LBB20_283:                             # %while.body.i5058
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4630:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_283
.Ltmp4631:
.LBB20_284:                             # %bsW.exit5066
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4632:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4633:
	.loc	14 613 65               # compress.c:613:65
	movzwl	18(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4634:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4635:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_286
.Ltmp4636:
	.p2align	4, 0x90
.LBB20_285:                             # %while.body.i5031
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4637:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_285
.Ltmp4638:
.LBB20_286:                             # %bsW.exit5039
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4639:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4640:
	.loc	14 614 13               # compress.c:614:13
	movzwl	20(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4641:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4642:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_288
.Ltmp4643:
	.p2align	4, 0x90
.LBB20_287:                             # %while.body.i5004
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4644:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_287
.Ltmp4645:
.LBB20_288:                             # %bsW.exit5012
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4646:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4647:
	.loc	14 614 26               # compress.c:614:26
	movzwl	22(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4648:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4649:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_290
.Ltmp4650:
	.p2align	4, 0x90
.LBB20_289:                             # %while.body.i4977
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4651:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_289
.Ltmp4652:
.LBB20_290:                             # %bsW.exit4985
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4653:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4654:
	.loc	14 614 39               # compress.c:614:39
	movzwl	24(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4655:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4656:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_292
.Ltmp4657:
	.p2align	4, 0x90
.LBB20_291:                             # %while.body.i4950
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4658:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_291
.Ltmp4659:
.LBB20_292:                             # %bsW.exit4958
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4660:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4661:
	.loc	14 614 52               # compress.c:614:52
	movzwl	26(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4662:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4663:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_294
.Ltmp4664:
	.p2align	4, 0x90
.LBB20_293:                             # %while.body.i4923
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4665:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_293
.Ltmp4666:
.LBB20_294:                             # %bsW.exit4931
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4667:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4668:
	.loc	14 614 65               # compress.c:614:65
	movzwl	28(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4669:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4670:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_296
.Ltmp4671:
	.p2align	4, 0x90
.LBB20_295:                             # %while.body.i4896
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4672:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_295
.Ltmp4673:
.LBB20_296:                             # %bsW.exit4904
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4674:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4675:
	.loc	14 615 13               # compress.c:615:13
	movzwl	30(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4676:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4677:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_298
.Ltmp4678:
	.p2align	4, 0x90
.LBB20_297:                             # %while.body.i4869
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4679:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_297
.Ltmp4680:
.LBB20_298:                             # %bsW.exit4877
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4681:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4682:
	.loc	14 615 26               # compress.c:615:26
	movzwl	32(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4683:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4684:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_300
.Ltmp4685:
	.p2align	4, 0x90
.LBB20_299:                             # %while.body.i4842
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4686:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_299
.Ltmp4687:
.LBB20_300:                             # %bsW.exit4850
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4688:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4689:
	.loc	14 615 39               # compress.c:615:39
	movzwl	34(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4690:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4691:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_302
.Ltmp4692:
	.p2align	4, 0x90
.LBB20_301:                             # %while.body.i4815
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4693:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_301
.Ltmp4694:
.LBB20_302:                             # %bsW.exit4823
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4695:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4696:
	.loc	14 615 52               # compress.c:615:52
	movzwl	36(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4697:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4698:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_304
.Ltmp4699:
	.p2align	4, 0x90
.LBB20_303:                             # %while.body.i4788
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4700:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_303
.Ltmp4701:
.LBB20_304:                             # %bsW.exit4796
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4702:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4703:
	.loc	14 615 65               # compress.c:615:65
	movzwl	38(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4704:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4705:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_306
.Ltmp4706:
	.p2align	4, 0x90
.LBB20_305:                             # %while.body.i4761
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4707:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_305
.Ltmp4708:
.LBB20_306:                             # %bsW.exit4769
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4709:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4710:
	.loc	14 616 13               # compress.c:616:13
	movzwl	40(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4711:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4712:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_308
.Ltmp4713:
	.p2align	4, 0x90
.LBB20_307:                             # %while.body.i4734
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4714:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_307
.Ltmp4715:
.LBB20_308:                             # %bsW.exit4742
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4716:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4717:
	.loc	14 616 26               # compress.c:616:26
	movzwl	42(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4718:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4719:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_310
.Ltmp4720:
	.p2align	4, 0x90
.LBB20_309:                             # %while.body.i4707
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4721:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_309
.Ltmp4722:
.LBB20_310:                             # %bsW.exit4715
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4723:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4724:
	.loc	14 616 39               # compress.c:616:39
	movzwl	44(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4725:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4726:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_312
.Ltmp4727:
	.p2align	4, 0x90
.LBB20_311:                             # %while.body.i4680
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4728:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_311
.Ltmp4729:
.LBB20_312:                             # %bsW.exit4688
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4730:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4731:
	.loc	14 616 52               # compress.c:616:52
	movzwl	46(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4732:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4733:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_314
.Ltmp4734:
	.p2align	4, 0x90
.LBB20_313:                             # %while.body.i4653
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4735:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_313
.Ltmp4736:
.LBB20_314:                             # %bsW.exit4661
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4737:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4738:
	.loc	14 616 65               # compress.c:616:65
	movzwl	48(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4739:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4740:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_316
.Ltmp4741:
	.p2align	4, 0x90
.LBB20_315:                             # %while.body.i4626
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4742:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_315
.Ltmp4743:
.LBB20_316:                             # %bsW.exit4634
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4744:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4745:
	.loc	14 617 13               # compress.c:617:13
	movzwl	50(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4746:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4747:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_318
.Ltmp4748:
	.p2align	4, 0x90
.LBB20_317:                             # %while.body.i4599
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4749:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_317
.Ltmp4750:
.LBB20_318:                             # %bsW.exit4607
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4751:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4752:
	.loc	14 617 26               # compress.c:617:26
	movzwl	52(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4753:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4754:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_320
.Ltmp4755:
	.p2align	4, 0x90
.LBB20_319:                             # %while.body.i4572
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4756:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_319
.Ltmp4757:
.LBB20_320:                             # %bsW.exit4580
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4758:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4759:
	.loc	14 617 39               # compress.c:617:39
	movzwl	54(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4760:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4761:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_322
.Ltmp4762:
	.p2align	4, 0x90
.LBB20_321:                             # %while.body.i4545
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4763:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_321
.Ltmp4764:
.LBB20_322:                             # %bsW.exit4553
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4765:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4766:
	.loc	14 617 52               # compress.c:617:52
	movzwl	56(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4767:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4768:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_324
.Ltmp4769:
	.p2align	4, 0x90
.LBB20_323:                             # %while.body.i4518
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4770:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_323
.Ltmp4771:
.LBB20_324:                             # %bsW.exit4526
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4772:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4773:
	.loc	14 617 65               # compress.c:617:65
	movzwl	58(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4774:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4775:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_326
.Ltmp4776:
	.p2align	4, 0x90
.LBB20_325:                             # %while.body.i4491
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4777:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_325
.Ltmp4778:
.LBB20_326:                             # %bsW.exit4499
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4779:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4780:
	.loc	14 618 13               # compress.c:618:13
	movzwl	60(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4781:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4782:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_328
.Ltmp4783:
	.p2align	4, 0x90
.LBB20_327:                             # %while.body.i4464
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4784:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_327
.Ltmp4785:
.LBB20_328:                             # %bsW.exit4472
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4786:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4787:
	.loc	14 618 26               # compress.c:618:26
	movzwl	62(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4788:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4789:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_330
.Ltmp4790:
	.p2align	4, 0x90
.LBB20_329:                             # %while.body.i4437
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4791:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_329
.Ltmp4792:
.LBB20_330:                             # %bsW.exit4445
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4793:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4794:
	.loc	14 618 39               # compress.c:618:39
	movzwl	64(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4795:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4796:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_332
.Ltmp4797:
	.p2align	4, 0x90
.LBB20_331:                             # %while.body.i4410
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4798:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_331
.Ltmp4799:
.LBB20_332:                             # %bsW.exit4418
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4800:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4801:
	.loc	14 618 52               # compress.c:618:52
	movzwl	66(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4802:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4803:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_334
.Ltmp4804:
	.p2align	4, 0x90
.LBB20_333:                             # %while.body.i4383
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4805:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_333
.Ltmp4806:
.LBB20_334:                             # %bsW.exit4391
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4807:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4808:
	.loc	14 618 65               # compress.c:618:65
	movzwl	68(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4809:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4810:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_336
.Ltmp4811:
	.p2align	4, 0x90
.LBB20_335:                             # %while.body.i4356
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4812:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_335
.Ltmp4813:
.LBB20_336:                             # %bsW.exit4364
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4814:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4815:
	.loc	14 619 13               # compress.c:619:13
	movzwl	70(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4816:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4817:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_338
.Ltmp4818:
	.p2align	4, 0x90
.LBB20_337:                             # %while.body.i4329
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4819:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_337
.Ltmp4820:
.LBB20_338:                             # %bsW.exit4337
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4821:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4822:
	.loc	14 619 26               # compress.c:619:26
	movzwl	72(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4823:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4824:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_340
.Ltmp4825:
	.p2align	4, 0x90
.LBB20_339:                             # %while.body.i4302
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4826:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_339
.Ltmp4827:
.LBB20_340:                             # %bsW.exit4310
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4828:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4829:
	.loc	14 619 39               # compress.c:619:39
	movzwl	74(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4830:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4831:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_342
.Ltmp4832:
	.p2align	4, 0x90
.LBB20_341:                             # %while.body.i4275
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4833:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_341
.Ltmp4834:
.LBB20_342:                             # %bsW.exit4283
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4835:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4836:
	.loc	14 619 52               # compress.c:619:52
	movzwl	76(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4837:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4838:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_344
.Ltmp4839:
	.p2align	4, 0x90
.LBB20_343:                             # %while.body.i4248
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4840:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_343
.Ltmp4841:
.LBB20_344:                             # %bsW.exit4256
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4842:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4843:
	.loc	14 619 65               # compress.c:619:65
	movzwl	78(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4844:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4845:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_346
.Ltmp4846:
	.p2align	4, 0x90
.LBB20_345:                             # %while.body.i4221
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4847:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_345
.Ltmp4848:
.LBB20_346:                             # %bsW.exit4229
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4849:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4850:
	.loc	14 620 13               # compress.c:620:13
	movzwl	80(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4851:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4852:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_348
.Ltmp4853:
	.p2align	4, 0x90
.LBB20_347:                             # %while.body.i4194
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4854:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_347
.Ltmp4855:
.LBB20_348:                             # %bsW.exit4202
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4856:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4857:
	.loc	14 620 26               # compress.c:620:26
	movzwl	82(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4858:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4859:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_350
.Ltmp4860:
	.p2align	4, 0x90
.LBB20_349:                             # %while.body.i4167
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4861:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_349
.Ltmp4862:
.LBB20_350:                             # %bsW.exit4175
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4863:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4864:
	.loc	14 620 39               # compress.c:620:39
	movzwl	84(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4865:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4866:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_352
.Ltmp4867:
	.p2align	4, 0x90
.LBB20_351:                             # %while.body.i4140
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4868:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_351
.Ltmp4869:
.LBB20_352:                             # %bsW.exit4148
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4870:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4871:
	.loc	14 620 52               # compress.c:620:52
	movzwl	86(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4872:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4873:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_354
.Ltmp4874:
	.p2align	4, 0x90
.LBB20_353:                             # %while.body.i4113
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4875:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_353
.Ltmp4876:
.LBB20_354:                             # %bsW.exit4121
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4877:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4878:
	.loc	14 620 65               # compress.c:620:65
	movzwl	88(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4879:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4880:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_356
.Ltmp4881:
	.p2align	4, 0x90
.LBB20_355:                             # %while.body.i4086
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4882:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_355
.Ltmp4883:
.LBB20_356:                             # %bsW.exit4094
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4884:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4885:
	.loc	14 621 13               # compress.c:621:13
	movzwl	90(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4886:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4887:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_358
.Ltmp4888:
	.p2align	4, 0x90
.LBB20_357:                             # %while.body.i4059
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4889:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_357
.Ltmp4890:
.LBB20_358:                             # %bsW.exit4067
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4891:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4892:
	.loc	14 621 26               # compress.c:621:26
	movzwl	92(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4893:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4894:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_360
.Ltmp4895:
	.p2align	4, 0x90
.LBB20_359:                             # %while.body.i4032
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4896:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_359
.Ltmp4897:
.LBB20_360:                             # %bsW.exit4040
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4898:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4899:
	.loc	14 621 39               # compress.c:621:39
	movzwl	94(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4900:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4901:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_362
.Ltmp4902:
	.p2align	4, 0x90
.LBB20_361:                             # %while.body.i4005
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4903:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_361
.Ltmp4904:
.LBB20_362:                             # %bsW.exit4013
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4905:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
	movq	8(%rsp), %rcx           # 8-byte Reload
.Ltmp4906:
	.loc	14 621 52               # compress.c:621:52
	movzwl	96(%rcx,%r11,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4907:
	movl	39256(%r10,%rcx,4), %esi
.Ltmp4908:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_364
.Ltmp4909:
	.p2align	4, 0x90
.LBB20_363:                             # %while.body.i3978
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ebx
	movq	(%r12), %rcx
	cltq
	movb	%bl, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ebx
	shll	$8, %ebx
	movl	%ebx, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4910:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_363
.Ltmp4911:
.LBB20_364:                             # %bsW.exit3986
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4912:
	.loc	14 120 14               # compress.c:120:14
	orl	%ebx, %esi
	movl	%esi, 640(%r14)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, 644(%r14)
.Ltmp4913:
	.loc	14 621 65               # compress.c:621:65
	movslq	16(%rsp), %rcx          # 4-byte Folded Reload
	movq	8(%rsp), %rbx           # 8-byte Reload
	movzwl	(%rbx,%rcx,2), %ecx
	#DEBUG_VALUE: mtfv_i <- undef
	movzbl	37708(%rcx,%r9), %r8d
.Ltmp4914:
	movl	39256(%r10,%rcx,4), %ebx
.Ltmp4915:
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: bsW:n <- $r8d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %edi
	jl	.LBB20_375
.Ltmp4916:
# %bb.365:                              # %while.body.i3951.preheader
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 4 is_stmt 0        # compress.c:0:4
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp4917:
	.p2align	4, 0x90
.LBB20_366:                             # %while.body.i3951
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4                # compress.c:119:4
	shrl	$24, %esi
	movq	(%r12), %rcx
	cltq
	movb	%sil, (%rcx,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %esi
	shll	$8, %esi
	movl	%esi, (%r15)
	movl	(%r13), %edi
	addl	$-8, %edi
	movl	%edi, (%r13)
.Ltmp4918:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %edi
	jg	.LBB20_366
	jmp	.LBB20_376
.Ltmp4919:
	.p2align	4, 0x90
.LBB20_367:                             # %for.cond2415.preheader
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 627 25 is_stmt 1     # compress.c:627:25
	cmpl	%ecx, %ebx
.Ltmp4920:
	.loc	14 627 10 is_stmt 0     # compress.c:627:10
	jge	.LBB20_369
.Ltmp4921:
# %bb.368:                              #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 10                 # compress.c:0:10
	movq	24(%rsp), %r9           # 8-byte Reload
	jmp	.LBB20_378
.Ltmp4922:
	.p2align	4, 0x90
.LBB20_369:                             # %for.body2418.preheader
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%r8, 56(%rsp)           # 8-byte Spill
.Ltmp4923:
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	14 629 28 is_stmt 1     # compress.c:629:28
	movslq	%ecx, %r9
	movl	%ebx, 64(%rsp)          # 4-byte Spill
.Ltmp4924:
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	movslq	%ebx, %r8
.Ltmp4925:
	.loc	14 119 4                # compress.c:119:4
	movl	(%r13), %ebx
.Ltmp4926:
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	(%r15), %ecx
.Ltmp4927:
	jmp	.LBB20_371
.Ltmp4928:
	.p2align	4, 0x90
.LBB20_370:                             # %bsW.exit3932.for.body2418_crit_edge
                                        #   in Loop: Header=BB20_371 Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 627 33 is_stmt 1     # compress.c:627:33
	addq	$1, %r9
	movq	56(%rsp), %rsi          # 8-byte Reload
.Ltmp4929:
	.loc	14 629 28               # compress.c:629:28
	movb	1704(%r14,%rsi), %r10b
.Ltmp4930:
.LBB20_371:                             # %for.body2418
                                        #   Parent Loop BB20_263 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB20_372 Depth 3
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	.loc	14 629 19 is_stmt 0     # compress.c:629:19
	movzbl	%r10b, %edi
	movq	8(%rsp), %rsi           # 8-byte Reload
	.loc	14 629 50               # compress.c:629:50
	movzwl	(%rsi,%r9,2), %r11d
	.loc	14 629 19               # compress.c:629:19
	movq	%rdi, %rsi
	shlq	$8, %rsi
	leaq	(%rsi,%rdi,2), %rsi
	addq	%r14, %rsi
	movzbl	37708(%r11,%rsi), %r10d
	.loc	14 630 19 is_stmt 1     # compress.c:630:19
	movq	%rdi, %rsi
	shlq	$10, %rsi
	leaq	(%rsi,%rdi,8), %rsi
	addq	%r14, %rsi
	movl	39256(%rsi,%r11,4), %esi
.Ltmp4931:
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: bsW:n <- $r10d
	.loc	14 119 4                # compress.c:119:4
	cmpl	$8, %ebx
	jl	.LBB20_373
.Ltmp4932:
	.p2align	4, 0x90
.LBB20_372:                             # %while.body.i3925
                                        #   Parent Loop BB20_263 Depth=1
                                        #     Parent Loop BB20_371 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r10d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 119 4 is_stmt 0      # compress.c:119:4
	shrl	$24, %ecx
	movq	(%r12), %rdi
	cltq
	movb	%cl, (%rdi,%rax)
	movl	(%rbp), %eax
	addl	$1, %eax
	movl	%eax, (%rbp)
	movl	(%r15), %ecx
	shll	$8, %ecx
	movl	%ecx, (%r15)
	movl	(%r13), %ebx
	addl	$-8, %ebx
	movl	%ebx, (%r13)
.Ltmp4933:
	.loc	14 119 4                # compress.c:119:4
	cmpl	$7, %ebx
	jg	.LBB20_372
.Ltmp4934:
.LBB20_373:                             # %bsW.exit3932
                                        #   in Loop: Header=BB20_371 Depth=2
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r10d
	#DEBUG_VALUE: bsW:v <- $esi
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:i <- $r9
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 14 is_stmt 1     # compress.c:120:14
	movl	%ecx, %edi
	.loc	14 120 27 is_stmt 0     # compress.c:120:27
	movl	$32, %ecx
	subl	%r10d, %ecx
	.loc	14 120 39               # compress.c:120:39
	subl	%ebx, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %esi
.Ltmp4935:
	.loc	14 120 14               # compress.c:120:14
	movl	%esi, %ecx
	orl	%edi, %ecx
	movl	%ecx, (%r15)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r10d, %ebx
.Ltmp4936:
	#DEBUG_VALUE: sendMTFValues:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	movl	%ebx, (%r13)
.Ltmp4937:
	.loc	14 627 25               # compress.c:627:25
	cmpq	%r8, %r9
.Ltmp4938:
	.loc	14 627 10 is_stmt 0     # compress.c:627:10
	jl	.LBB20_370
.Ltmp4939:
# %bb.374:                              #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r10d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 10                 # compress.c:0:10
	movq	24(%rsp), %r9           # 8-byte Reload
	jmp	.LBB20_377
.Ltmp4940:
	.p2align	4, 0x90
.LBB20_375:                             #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	24(%rsp), %r9           # 8-byte Reload
.Ltmp4941:
.LBB20_376:                             # %bsW.exit3959
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: bsW:n <- $r8d
	#DEBUG_VALUE: bsW:v <- $ebx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 120 27 is_stmt 1     # compress.c:120:27
	movl	$32, %ecx
	subl	%r8d, %ecx
	.loc	14 120 39 is_stmt 0     # compress.c:120:39
	subl	%edi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	.loc	14 120 20               # compress.c:120:20
	shll	%cl, %ebx
.Ltmp4942:
	.loc	14 120 14               # compress.c:120:14
	orl	%esi, %ebx
	movl	%ebx, (%r15)
	.loc	14 121 14 is_stmt 1     # compress.c:121:14
	addl	%r8d, %edi
	movl	%edi, (%r13)
.Ltmp4943:
.LBB20_377:                             # %if.end2443
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:ge <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 14 is_stmt 0       # compress.c:0:14
	movq	56(%rsp), %r8           # 8-byte Reload
	movl	64(%rsp), %ebx          # 4-byte Reload
.Ltmp4944:
.LBB20_378:                             # %if.end2443
                                        #   in Loop: Header=BB20_263 Depth=1
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 635 14 is_stmt 1     # compress.c:635:14
	addl	$1, %ebx
.Ltmp4945:
	#DEBUG_VALUE: sendMTFValues:selCtr <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: sendMTFValues:gs <- $ebx
	.loc	14 636 13               # compress.c:636:13
	addq	$1, %r8
.Ltmp4946:
	.loc	14 593 20               # compress.c:593:20
	movl	668(%r14), %esi
	movl	%ebx, %ecx
	.loc	14 593 14 is_stmt 0     # compress.c:593:14
	cmpl	%esi, %ebx
.Ltmp4947:
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	.loc	14 593 11               # compress.c:593:11
	jl	.LBB20_263
.Ltmp4948:
.LBB20_379:                             # %while.end2446
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8d
	.loc	14 638 4 is_stmt 1      # compress.c:638:4
	cmpl	%r9d, %r8d
.Ltmp4949:
	.loc	14 638 4 is_stmt 0      # compress.c:638:4
	jne	.LBB20_395
.Ltmp4950:
# %bb.380:                              # %if.end2450
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 640 21 is_stmt 1     # compress.c:640:21
	cmpl	$3, 656(%r14)
.Ltmp4951:
	.loc	14 640 8 is_stmt 0      # compress.c:640:8
	jge	.LBB20_387
.Ltmp4952:
.LBB20_381:                             # %if.end2458
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 642 1 is_stmt 1      # compress.c:642:1
	addq	$5512, %rsp             # imm = 0x1588
.Ltmp4953:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB20_382:
	.cfi_def_cfa_offset 5568
.Ltmp4954:
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 0 1 is_stmt 0        # compress.c:0:1
	movl	%esi, %edi
.Ltmp4955:
	.loc	14 569 21 is_stmt 1     # compress.c:569:21
	cmpl	$3, 656(%r14)
.Ltmp4956:
	.loc	14 569 8 is_stmt 0      # compress.c:569:8
	jl	.LBB20_241
.Ltmp4957:
.LBB20_383:                             # %if.then1910
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 570 7 is_stmt 1      # compress.c:570:7
	movq	stderr(%rip), %rdi
	subl	%edx, %r10d
	movl	$.L.str.8.60, %esi
	movl	%r10d, %edx
.Ltmp4958:
	xorl	%eax, %eax
	callq	fprintf
.Ltmp4959:
	.loc	14 573 16               # compress.c:573:16
	movl	(%rbp), %r10d
.Ltmp4960:
	.loc	14 119 4                # compress.c:119:4
	movl	(%r13), %edi
.Ltmp4961:
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	(%r15), %eax
	jmp	.LBB20_241
.Ltmp4962:
.LBB20_384:                             # %if.then
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 306 7 is_stmt 1      # compress.c:306:7
	movq	stderr(%rip), %rdi
	movl	668(%r14), %ecx
	movl	108(%r14), %edx
	movl	124(%r14), %r8d
	movl	$.L.str.2.55, %esi
	xorl	%eax, %eax
	callq	fprintf
	jmp	.LBB20_1
.Ltmp4963:
.LBB20_385:                             # %if.then1883
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r8d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 558 10               # compress.c:558:10
	movq	stderr(%rip), %rdi
	subl	%r8d, %edx
	movl	$.L.str.7.59, %esi
	xorl	%eax, %eax
	callq	fprintf
.Ltmp4964:
	.loc	14 562 16               # compress.c:562:16
	movl	(%rbp), %edx
.Ltmp4965:
	.loc	14 119 4                # compress.c:119:4
	movl	(%r13), %esi
.Ltmp4966:
	.loc	14 0 0 is_stmt 0        # compress.c:0:0
	movl	(%r15), %edi
	jmp	.LBB20_225
.Ltmp4967:
.LBB20_386:                             # %if.then1962
	#DEBUG_VALUE: sendMTFValues:nBytes <- $r10d
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 586 7 is_stmt 1      # compress.c:586:7
	movq	stderr(%rip), %rdi
	subl	%r10d, %edx
	movl	$.L.str.9.61, %esi
	xorl	%eax, %eax
	callq	fprintf
.Ltmp4968:
	.loc	14 589 16               # compress.c:589:16
	movl	(%rbp), %edx
	jmp	.LBB20_261
.Ltmp4969:
.LBB20_387:                             # %if.then2454
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 641 7                # compress.c:641:7
	movq	stderr(%rip), %rdi
	subl	%edx, %eax
	movl	$.L.str.10.62, %esi
	movl	%eax, %edx
.Ltmp4970:
	xorl	%eax, %eax
	callq	fprintf
.Ltmp4971:
	.loc	14 0 7 is_stmt 0        # compress.c:0:7
	jmp	.LBB20_381
.Ltmp4972:
.LBB20_388:                             # %if.then.i
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	13 138 7 is_stmt 1      # huffman.c:138:7
	movl	$2001, %edi             # imm = 0x7D1
	callq	BZ2_bz__AssertH__fail
.Ltmp4973:
.LBB20_389:                             # %if.then195.i
	#DEBUG_VALUE: sendMTFValues:t <- $r10
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	13 152 7                # huffman.c:152:7
	movl	$2002, %edi             # imm = 0x7D2
	callq	BZ2_bz__AssertH__fail
.Ltmp4974:
.LBB20_390:                             # %if.then1799
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 532 7                # compress.c:532:7
	movl	$3004, %edi             # imm = 0xBBC
.Ltmp4975:
	callq	BZ2_bz__AssertH__fail
.Ltmp4976:
.LBB20_391:                             # %if.then1803
	#DEBUG_VALUE: sendMTFValues:maxLen <- $edi
	#DEBUG_VALUE: sendMTFValues:minLen <- $ebp
	#DEBUG_VALUE: sendMTFValues:t <- $r8
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 533 7                # compress.c:533:7
	movl	$3005, %edi             # imm = 0xBBD
.Ltmp4977:
	callq	BZ2_bz__AssertH__fail
.Ltmp4978:
.LBB20_392:                             # %if.then1990
	#DEBUG_VALUE: sendMTFValues:ge <- $ebx
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8
	#DEBUG_VALUE: sendMTFValues:i <- $ecx
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:gs <- $ecx
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 596 7                # compress.c:596:7
	movl	$3006, %edi             # imm = 0xBBE
	callq	BZ2_bz__AssertH__fail
.Ltmp4979:
.LBB20_393:                             # %if.then14
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:s <- $r14
	.loc	14 316 4                # compress.c:316:4
	movl	$3001, %edi             # imm = 0xBB9
	callq	BZ2_bz__AssertH__fail
.Ltmp4980:
.LBB20_394:                             # %if.then1714
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 500 4                # compress.c:500:4
	movl	$3003, %edi             # imm = 0xBBB
	callq	BZ2_bz__AssertH__fail
.Ltmp4981:
.LBB20_395:                             # %if.then2449
	#DEBUG_VALUE: sendMTFValues:selCtr <- $r8d
	#DEBUG_VALUE: sendMTFValues:nBytes <- $edx
	#DEBUG_VALUE: sendMTFValues:nSelectors <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:iter <- [DW_OP_plus_uconst 88] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:alphaSize <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: sendMTFValues:mtfv <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	14 638 4                # compress.c:638:4
	movl	$3007, %edi             # imm = 0xBBF
	callq	BZ2_bz__AssertH__fail
.Ltmp4982:
.Lfunc_end20:
	.size	sendMTFValues, .Lfunc_end20-sendMTFValues
	.cfi_endproc
                                        # -- End function
	.type	.Lstr.34,@object        # @str.34
	.section	.rodata.str1.1,"aMS",@progbits,1
.Lstr.34:
	.asciz	"spec_init"
	.size	.Lstr.34, 10

	.type	spec_fd,@object         # @spec_fd
	.local	spec_fd
	.comm	spec_fd,72,16
	.type	.Lstr,@object           # @str
.Lstr:
	.asciz	"spec_init: Error mallocing memory!"
	.size	.Lstr, 35

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"Can't open file %s: %s\n"
	.size	.L.str.5, 24

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"Error reading from %s: %s\n"
	.size	.L.str.6, 27

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"Duplicating %d bytes\n"
	.size	.L.str.7, 22

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"spec_fread: fd=%d, > MAX_SPEC_FD!\n"
	.size	.L.str.13, 35

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"spec_read: fd=%d, > MAX_SPEC_FD!\n"
	.size	.L.str.9, 34

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"spec_ungetc: pos %d <= 0\n"
	.size	.L.str.16, 26

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"spec_ungetc: can't unget something that wasn't what was in the buffer!\n"
	.size	.L.str.17, 72

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"spec_fwrite: fd=%d, > MAX_SPEC_FD!\n"
	.size	.L.str.21, 36

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"input.combined"
	.size	.L.str.23, 15

	.type	.Lstr.43,@object        # @str.43
.Lstr.43:
	.asciz	"Loading Input Data"
	.size	.Lstr.43, 19

	.type	.L.str.25,@object       # @.str.25
.L.str.25:
	.asciz	"Input data %d bytes in length\n"
	.size	.L.str.25, 31

	.type	.Lstr.42,@object        # @str.42
.Lstr.42:
	.asciz	"main: Error mallocing memory!"
	.size	.Lstr.42, 30

	.type	.L.str.27,@object       # @.str.27
.L.str.27:
	.asciz	"Compressing Input Data, level %d\n"
	.size	.L.str.27, 34

	.type	.L.str.28,@object       # @.str.28
.L.str.28:
	.asciz	"Compressed data %d bytes in length\n"
	.size	.L.str.28, 36

	.type	.Lstr.41,@object        # @str.41
.Lstr.41:
	.asciz	"Uncompressing Data"
	.size	.Lstr.41, 19

	.type	.L.str.30,@object       # @.str.30
.L.str.30:
	.asciz	"Uncompressed data %d bytes in length\n"
	.size	.L.str.30, 38

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"Tested %dMB buffer: Miscompared!!\n"
	.size	.L.str.31, 35

	.type	.Lstr.40,@object        # @str.40
.Lstr.40:
	.asciz	"Uncompressed data compared correctly"
	.size	.Lstr.40, 37

	.type	.L.str.33,@object       # @.str.33
.L.str.33:
	.asciz	"Tested %dMB buffer: OK!\n"
	.size	.L.str.33, 25

	.type	.L.str.6.1,@object      # @.str.6.1
.L.str.6.1:
	.asciz	"        main sort initialise ...\n"
	.size	.L.str.6.1, 34

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"        bucket sorting ...\n"
	.size	.L.str.2, 28

	.type	.L.str.7.2,@object      # @.str.7.2
.L.str.7.2:
	.asciz	"        qsort [0x%x, 0x%x]   done %d   this %d\n"
	.size	.L.str.7.2, 48

	.type	incs,@object            # @incs
	.section	.rodata,"a",@progbits
	.p2align	4
incs:
	.long	1                       # 0x1
	.long	4                       # 0x4
	.long	13                      # 0xd
	.long	40                      # 0x28
	.long	121                     # 0x79
	.long	364                     # 0x16c
	.long	1093                    # 0x445
	.long	3280                    # 0xcd0
	.long	9841                    # 0x2671
	.long	29524                   # 0x7354
	.long	88573                   # 0x159fd
	.long	265720                  # 0x40df8
	.long	797161                  # 0xc29e9
	.long	2391484                 # 0x247dbc
	.size	incs, 56

	.type	.L.str.8,@object        # @.str.8
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.8:
	.asciz	"        %d pointers, %d sorted, %d scanned\n"
	.size	.L.str.8, 44

	.type	.L.str,@object          # @.str
.L.str:
	.asciz	"      %d work, %d block, ratio %5.2f\n"
	.size	.L.str, 38

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"    too repetitive; using fallback sorting algorithm\n"
	.size	.L.str.1, 54

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"        depth %6d has "
	.size	.L.str.3, 23

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"%6d unresolved strings\n"
	.size	.L.str.4, 24

	.type	.L.str.5.3,@object      # @.str.5.3
.L.str.5.3:
	.asciz	"        reconstructing block ...\n"
	.size	.L.str.5.3, 34

	.type	blockSize100k,@object   # @blockSize100k
	.local	blockSize100k
	.comm	blockSize100k,4,4
	.type	workFactor,@object      # @workFactor
	.local	workFactor
	.comm	workFactor,1,4
	.type	.L.str.3.14,@object     # @.str.3.14
.L.str.3.14:
	.asciz	"compress:unexpected error"
	.size	.L.str.3.14, 26

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"\n%s: PANIC -- internal consistency error:\n\t%s\n\tThis is probably a BUG, but it may be in your COMPILER.  Please do not bother\n\tthe original author.\n"
	.size	.L.str.10, 148

	.type	.L.str.15.16,@object    # @.str.15.16
.L.str.15.16:
	.asciz	"\n%s: I/O or other error, bailing out.  Possible reason follows.\n"
	.size	.L.str.15.16, 65

	.type	.L.str.16.17,@object    # @.str.16.17
.L.str.16.17:
	.asciz	"\n%s: couldn't allocate enough memory\n"
	.size	.L.str.16.17, 38

	.type	.L.str.17.18,@object    # @.str.17.18
.L.str.17.18:
	.asciz	"bzip2: I'm not configured correctly for this platform!\n\tI require Int32, Int16 and Char to have sizes\n\tof 4, 2 and 1 bytes to run properly, and they don't.\n\tProbably you can fix this by defining them correctly,\n\tand recompiling.  Bye!\n"
	.size	.L.str.17.18, 236

	.type	.L.str.5.23,@object     # @.str.5.23
.L.str.5.23:
	.asciz	"decompress:bzReadGetUnused"
	.size	.L.str.5.23, 27

	.type	.L.str.8.26,@object     # @.str.8.26
.L.str.8.26:
	.asciz	"decompress:unexpected error"
	.size	.L.str.8.26, 28

	.type	.L.str.12.29,@object    # @.str.12.29
.L.str.12.29:
	.asciz	"\n%s: Data integrity error when decompressing.\n"
	.size	.L.str.12.29, 47

	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	"\n\nbzip2/libbzip2: internal error number %d.\nThis may be a bug in bzip2/libbzip2, %s.\nIt may also be a bug in your compiler.  Please do not bother the\noriginal author of bzip2 with a bug report for this.  He\ndoesn't know anything about bzip2 as it appears in CPU2006.\n\n"
	.size	.L.str.32, 269

	.type	.L.str.5.33,@object     # @.str.5.33
.L.str.5.33:
	.asciz	"1.0.3, 15-Feb-2005"
	.size	.L.str.5.33, 19

	.type	.L.str.1.34,@object     # @.str.1.34
.L.str.1.34:
	.asciz	"\n*** A special note about internal error number 1007 ***\n\nExperience suggests that a common cause of i.e. 1007\nis unreliable memory or other hardware.  The 1007 assertion\njust happens to cross-check the results of huge numbers of\nmemory reads/writes, and so acts (unintendedly) as a stress\ntest of your memory system.\n\nI suggest the following: try compressing the file again,\npossibly monitoring progress in detail with the -vv flag.\n\n* If the error cannot be reproduced, and/or happens at different\n  points in compression, you may have a flaky memory system.\n  Try a memory-test program.  I have used Memtest86\n  (www.memtest86.com).  At the time of writing it is free (GPLd).\n  Memtest86 tests memory much more thorougly than your BIOSs\n  power-on test, and may find failures that the BIOS doesn't.\n\n* If the error can be repeatably reproduced, this is a bug in\n  bzip2, and I would very much like to hear about it.  Please\n  let me know, and, ideally, save a copy of the file causing the\n  problem -- without which I will be unable to investigate it.\n\n"
	.size	.L.str.1.34, 1057

	.type	.L.str.2.35,@object     # @.str.2.35
.L.str.2.35:
	.asciz	" {0x%08x, 0x%08x}"
	.size	.L.str.2.35, 18

	.type	.L.str.4.36,@object     # @.str.4.36
.L.str.4.36:
	.asciz	"\n    combined CRCs: stored = 0x%08x, computed = 0x%08x"
	.size	.L.str.4.36, 55

	.type	.L.str.53,@object       # @.str.53
.L.str.53:
	.asciz	"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\n"
	.size	.L.str.53, 62

	.type	.L.str.1.54,@object     # @.str.1.54
.L.str.1.54:
	.asciz	"    final combined CRC = 0x%08x\n   "
	.size	.L.str.1.54, 36

	.type	.L.str.2.55,@object     # @.str.2.55
.L.str.2.55:
	.asciz	"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\n"
	.size	.L.str.2.55, 64

	.type	.L.str.3.56,@object     # @.str.3.56
.L.str.3.56:
	.asciz	"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\n"
	.size	.L.str.3.56, 59

	.type	.L.str.4.57,@object     # @.str.4.57
.L.str.4.57:
	.asciz	"      pass %d: size is %d, grp uses are "
	.size	.L.str.4.57, 41

	.type	.L.str.5.58,@object     # @.str.5.58
.L.str.5.58:
	.asciz	"%d "
	.size	.L.str.5.58, 4

	.type	.L.str.7.59,@object     # @.str.7.59
.L.str.7.59:
	.asciz	"      bytes: mapping %d, "
	.size	.L.str.7.59, 26

	.type	.L.str.8.60,@object     # @.str.8.60
.L.str.8.60:
	.asciz	"selectors %d, "
	.size	.L.str.8.60, 15

	.type	.L.str.9.61,@object     # @.str.9.61
.L.str.9.61:
	.asciz	"code lengths %d, "
	.size	.L.str.9.61, 18

	.type	.L.str.10.62,@object    # @.str.10.62
.L.str.10.62:
	.asciz	"codes %d\n"
	.size	.L.str.10.62, 10

	.type	BZ2_crc32Table,@object  # @BZ2_crc32Table
	.section	.rodata,"a",@progbits
	.p2align	4
BZ2_crc32Table:
	.long	0                       # 0x0
	.long	79764919                # 0x4c11db7
	.long	159529838               # 0x9823b6e
	.long	222504665               # 0xd4326d9
	.long	319059676               # 0x130476dc
	.long	398814059               # 0x17c56b6b
	.long	445009330               # 0x1a864db2
	.long	507990021               # 0x1e475005
	.long	638119352               # 0x2608edb8
	.long	583659535               # 0x22c9f00f
	.long	797628118               # 0x2f8ad6d6
	.long	726387553               # 0x2b4bcb61
	.long	890018660               # 0x350c9b64
	.long	835552979               # 0x31cd86d3
	.long	1015980042              # 0x3c8ea00a
	.long	944750013               # 0x384fbdbd
	.long	1276238704              # 0x4c11db70
	.long	1221641927              # 0x48d0c6c7
	.long	1167319070              # 0x4593e01e
	.long	1095957929              # 0x4152fda9
	.long	1595256236              # 0x5f15adac
	.long	1540665371              # 0x5bd4b01b
	.long	1452775106              # 0x569796c2
	.long	1381403509              # 0x52568b75
	.long	1780037320              # 0x6a1936c8
	.long	1859660671              # 0x6ed82b7f
	.long	1671105958              # 0x639b0da6
	.long	1733955601              # 0x675a1011
	.long	2031960084              # 0x791d4014
	.long	2111593891              # 0x7ddc5da3
	.long	1889500026              # 0x709f7b7a
	.long	1952343757              # 0x745e66cd
	.long	2552477408              # 0x9823b6e0
	.long	2632100695              # 0x9ce2ab57
	.long	2443283854              # 0x91a18d8e
	.long	2506133561              # 0x95609039
	.long	2334638140              # 0x8b27c03c
	.long	2414271883              # 0x8fe6dd8b
	.long	2191915858              # 0x82a5fb52
	.long	2254759653              # 0x8664e6e5
	.long	3190512472              # 0xbe2b5b58
	.long	3135915759              # 0xbaea46ef
	.long	3081330742              # 0xb7a96036
	.long	3009969537              # 0xb3687d81
	.long	2905550212              # 0xad2f2d84
	.long	2850959411              # 0xa9ee3033
	.long	2762807018              # 0xa4ad16ea
	.long	2691435357              # 0xa06c0b5d
	.long	3560074640              # 0xd4326d90
	.long	3505614887              # 0xd0f37027
	.long	3719321342              # 0xddb056fe
	.long	3648080713              # 0xd9714b49
	.long	3342211916              # 0xc7361b4c
	.long	3287746299              # 0xc3f706fb
	.long	3467911202              # 0xceb42022
	.long	3396681109              # 0xca753d95
	.long	4063920168              # 0xf23a8028
	.long	4143685023              # 0xf6fb9d9f
	.long	4223187782              # 0xfbb8bb46
	.long	4286162673              # 0xff79a6f1
	.long	3779000052              # 0xe13ef6f4
	.long	3858754371              # 0xe5ffeb43
	.long	3904687514              # 0xe8bccd9a
	.long	3967668269              # 0xec7dd02d
	.long	881225847               # 0x34867077
	.long	809987520               # 0x30476dc0
	.long	1023691545              # 0x3d044b19
	.long	969234094               # 0x39c556ae
	.long	662832811               # 0x278206ab
	.long	591600412               # 0x23431b1c
	.long	771767749               # 0x2e003dc5
	.long	717299826               # 0x2ac12072
	.long	311336399               # 0x128e9dcf
	.long	374308984               # 0x164f8078
	.long	453813921               # 0x1b0ca6a1
	.long	533576470               # 0x1fcdbb16
	.long	25881363                # 0x18aeb13
	.long	88864420                # 0x54bf6a4
	.long	134795389               # 0x808d07d
	.long	214552010               # 0xcc9cdca
	.long	2023205639              # 0x7897ab07
	.long	2086057648              # 0x7c56b6b0
	.long	1897238633              # 0x71159069
	.long	1976864222              # 0x75d48dde
	.long	1804852699              # 0x6b93dddb
	.long	1867694188              # 0x6f52c06c
	.long	1645340341              # 0x6211e6b5
	.long	1724971778              # 0x66d0fb02
	.long	1587496639              # 0x5e9f46bf
	.long	1516133128              # 0x5a5e5b08
	.long	1461550545              # 0x571d7dd1
	.long	1406951526              # 0x53dc6066
	.long	1302016099              # 0x4d9b3063
	.long	1230646740              # 0x495a2dd4
	.long	1142491917              # 0x44190b0d
	.long	1087903418              # 0x40d816ba
	.long	2896545431              # 0xaca5c697
	.long	2825181984              # 0xa864db20
	.long	2770861561              # 0xa527fdf9
	.long	2716262478              # 0xa1e6e04e
	.long	3215044683              # 0xbfa1b04b
	.long	3143675388              # 0xbb60adfc
	.long	3055782693              # 0xb6238b25
	.long	3001194130              # 0xb2e29692
	.long	2326604591              # 0x8aad2b2f
	.long	2389456536              # 0x8e6c3698
	.long	2200899649              # 0x832f1041
	.long	2280525302              # 0x87ee0df6
	.long	2578013683              # 0x99a95df3
	.long	2640855108              # 0x9d684044
	.long	2418763421              # 0x902b669d
	.long	2498394922              # 0x94ea7b2a
	.long	3769900519              # 0xe0b41de7
	.long	3832873040              # 0xe4750050
	.long	3912640137              # 0xe9362689
	.long	3992402750              # 0xedf73b3e
	.long	4088425275              # 0xf3b06b3b
	.long	4151408268              # 0xf771768c
	.long	4197601365              # 0xfa325055
	.long	4277358050              # 0xfef34de2
	.long	3334271071              # 0xc6bcf05f
	.long	3263032808              # 0xc27dede8
	.long	3476998961              # 0xcf3ecb31
	.long	3422541446              # 0xcbffd686
	.long	3585640067              # 0xd5b88683
	.long	3514407732              # 0xd1799b34
	.long	3694837229              # 0xdc3abded
	.long	3640369242              # 0xd8fba05a
	.long	1762451694              # 0x690ce0ee
	.long	1842216281              # 0x6dcdfd59
	.long	1619975040              # 0x608edb80
	.long	1682949687              # 0x644fc637
	.long	2047383090              # 0x7a089632
	.long	2127137669              # 0x7ec98b85
	.long	1938468188              # 0x738aad5c
	.long	2001449195              # 0x774bb0eb
	.long	1325665622              # 0x4f040d56
	.long	1271206113              # 0x4bc510e1
	.long	1183200824              # 0x46863638
	.long	1111960463              # 0x42472b8f
	.long	1543535498              # 0x5c007b8a
	.long	1489069629              # 0x58c1663d
	.long	1434599652              # 0x558240e4
	.long	1363369299              # 0x51435d53
	.long	622672798               # 0x251d3b9e
	.long	568075817               # 0x21dc2629
	.long	748617968               # 0x2c9f00f0
	.long	677256519               # 0x285e1d47
	.long	907627842               # 0x36194d42
	.long	853037301               # 0x32d850f5
	.long	1067152940              # 0x3f9b762c
	.long	995781531               # 0x3b5a6b9b
	.long	51762726                # 0x315d626
	.long	131386257               # 0x7d4cb91
	.long	177728840               # 0xa97ed48
	.long	240578815               # 0xe56f0ff
	.long	269590778               # 0x1011a0fa
	.long	349224269               # 0x14d0bd4d
	.long	429104020               # 0x19939b94
	.long	491947555               # 0x1d528623
	.long	4046411278              # 0xf12f560e
	.long	4126034873              # 0xf5ee4bb9
	.long	4172115296              # 0xf8ad6d60
	.long	4234965207              # 0xfc6c70d7
	.long	3794477266              # 0xe22b20d2
	.long	3874110821              # 0xe6ea3d65
	.long	3953728444              # 0xeba91bbc
	.long	4016571915              # 0xef68060b
	.long	3609705398              # 0xd727bbb6
	.long	3555108353              # 0xd3e6a601
	.long	3735388376              # 0xdea580d8
	.long	3664026991              # 0xda649d6f
	.long	3290680682              # 0xc423cd6a
	.long	3236090077              # 0xc0e2d0dd
	.long	3449943556              # 0xcda1f604
	.long	3378572211              # 0xc960ebb3
	.long	3174993278              # 0xbd3e8d7e
	.long	3120533705              # 0xb9ff90c9
	.long	3032266256              # 0xb4bcb610
	.long	2961025959              # 0xb07daba7
	.long	2923101090              # 0xae3afba2
	.long	2868635157              # 0xaafbe615
	.long	2813903052              # 0xa7b8c0cc
	.long	2742672763              # 0xa379dd7b
	.long	2604032198              # 0x9b3660c6
	.long	2683796849              # 0x9ff77d71
	.long	2461293480              # 0x92b45ba8
	.long	2524268063              # 0x9675461f
	.long	2284983834              # 0x8832161a
	.long	2364738477              # 0x8cf30bad
	.long	2175806836              # 0x81b02d74
	.long	2238787779              # 0x857130c3
	.long	1569362073              # 0x5d8a9099
	.long	1498123566              # 0x594b8d2e
	.long	1409854455              # 0x5408abf7
	.long	1355396672              # 0x50c9b640
	.long	1317987909              # 0x4e8ee645
	.long	1246755826              # 0x4a4ffbf2
	.long	1192025387              # 0x470cdd2b
	.long	1137557660              # 0x43cdc09c
	.long	2072149281              # 0x7b827d21
	.long	2135122070              # 0x7f436096
	.long	1912620623              # 0x7200464f
	.long	1992383480              # 0x76c15bf8
	.long	1753615357              # 0x68860bfd
	.long	1816598090              # 0x6c47164a
	.long	1627664531              # 0x61043093
	.long	1707420964              # 0x65c52d24
	.long	295390185               # 0x119b4be9
	.long	358241886               # 0x155a565e
	.long	404320391               # 0x18197087
	.long	483945776               # 0x1cd86d30
	.long	43990325                # 0x29f3d35
	.long	106832002               # 0x65e2082
	.long	186451547               # 0xb1d065b
	.long	266083308               # 0xfdc1bec
	.long	932423249               # 0x3793a651
	.long	861060070               # 0x3352bbe6
	.long	1041341759              # 0x3e119d3f
	.long	986742920               # 0x3ad08088
	.long	613929101               # 0x2497d08d
	.long	542559546               # 0x2056cd3a
	.long	756411363               # 0x2d15ebe3
	.long	701822548               # 0x29d4f654
	.long	3316196985              # 0xc5a92679
	.long	3244833742              # 0xc1683bce
	.long	3425377559              # 0xcc2b1d17
	.long	3370778784              # 0xc8ea00a0
	.long	3601682597              # 0xd6ad50a5
	.long	3530312978              # 0xd26c4d12
	.long	3744426955              # 0xdf2f6bcb
	.long	3689838204              # 0xdbee767c
	.long	3819031489              # 0xe3a1cbc1
	.long	3881883254              # 0xe760d676
	.long	3928223919              # 0xea23f0af
	.long	4007849240              # 0xeee2ed18
	.long	4037393693              # 0xf0a5bd1d
	.long	4100235434              # 0xf464a0aa
	.long	4180117107              # 0xf9278673
	.long	4259748804              # 0xfde69bc4
	.long	2310601993              # 0x89b8fd09
	.long	2373574846              # 0x8d79e0be
	.long	2151335527              # 0x803ac667
	.long	2231098320              # 0x84fbdbd0
	.long	2596047829              # 0x9abc8bd5
	.long	2659030626              # 0x9e7d9662
	.long	2470359227              # 0x933eb0bb
	.long	2550115596              # 0x97ffad0c
	.long	2947551409              # 0xafb010b1
	.long	2876312838              # 0xab710d06
	.long	2788305887              # 0xa6322bdf
	.long	2733848168              # 0xa2f33668
	.long	3165939309              # 0xbcb4666d
	.long	3094707162              # 0xb8757bda
	.long	3040238851              # 0xb5365d03
	.long	2985771188              # 0xb1f740b4
	.size	BZ2_crc32Table, 1024

	.type	.L.str.67,@object       # @.str.67
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.67:
	.asciz	"\n    [%d: huff+mtf "
	.size	.L.str.67, 20

	.type	.L.str.1.68,@object     # @.str.1.68
.L.str.1.68:
	.asciz	"rt+rld"
	.size	.L.str.1.68, 7

	.type	BZ2_rNums,@object       # @BZ2_rNums
	.section	.rodata,"a",@progbits
	.p2align	4
BZ2_rNums:
	.long	619                     # 0x26b
	.long	720                     # 0x2d0
	.long	127                     # 0x7f
	.long	481                     # 0x1e1
	.long	931                     # 0x3a3
	.long	816                     # 0x330
	.long	813                     # 0x32d
	.long	233                     # 0xe9
	.long	566                     # 0x236
	.long	247                     # 0xf7
	.long	985                     # 0x3d9
	.long	724                     # 0x2d4
	.long	205                     # 0xcd
	.long	454                     # 0x1c6
	.long	863                     # 0x35f
	.long	491                     # 0x1eb
	.long	741                     # 0x2e5
	.long	242                     # 0xf2
	.long	949                     # 0x3b5
	.long	214                     # 0xd6
	.long	733                     # 0x2dd
	.long	859                     # 0x35b
	.long	335                     # 0x14f
	.long	708                     # 0x2c4
	.long	621                     # 0x26d
	.long	574                     # 0x23e
	.long	73                      # 0x49
	.long	654                     # 0x28e
	.long	730                     # 0x2da
	.long	472                     # 0x1d8
	.long	419                     # 0x1a3
	.long	436                     # 0x1b4
	.long	278                     # 0x116
	.long	496                     # 0x1f0
	.long	867                     # 0x363
	.long	210                     # 0xd2
	.long	399                     # 0x18f
	.long	680                     # 0x2a8
	.long	480                     # 0x1e0
	.long	51                      # 0x33
	.long	878                     # 0x36e
	.long	465                     # 0x1d1
	.long	811                     # 0x32b
	.long	169                     # 0xa9
	.long	869                     # 0x365
	.long	675                     # 0x2a3
	.long	611                     # 0x263
	.long	697                     # 0x2b9
	.long	867                     # 0x363
	.long	561                     # 0x231
	.long	862                     # 0x35e
	.long	687                     # 0x2af
	.long	507                     # 0x1fb
	.long	283                     # 0x11b
	.long	482                     # 0x1e2
	.long	129                     # 0x81
	.long	807                     # 0x327
	.long	591                     # 0x24f
	.long	733                     # 0x2dd
	.long	623                     # 0x26f
	.long	150                     # 0x96
	.long	238                     # 0xee
	.long	59                      # 0x3b
	.long	379                     # 0x17b
	.long	684                     # 0x2ac
	.long	877                     # 0x36d
	.long	625                     # 0x271
	.long	169                     # 0xa9
	.long	643                     # 0x283
	.long	105                     # 0x69
	.long	170                     # 0xaa
	.long	607                     # 0x25f
	.long	520                     # 0x208
	.long	932                     # 0x3a4
	.long	727                     # 0x2d7
	.long	476                     # 0x1dc
	.long	693                     # 0x2b5
	.long	425                     # 0x1a9
	.long	174                     # 0xae
	.long	647                     # 0x287
	.long	73                      # 0x49
	.long	122                     # 0x7a
	.long	335                     # 0x14f
	.long	530                     # 0x212
	.long	442                     # 0x1ba
	.long	853                     # 0x355
	.long	695                     # 0x2b7
	.long	249                     # 0xf9
	.long	445                     # 0x1bd
	.long	515                     # 0x203
	.long	909                     # 0x38d
	.long	545                     # 0x221
	.long	703                     # 0x2bf
	.long	919                     # 0x397
	.long	874                     # 0x36a
	.long	474                     # 0x1da
	.long	882                     # 0x372
	.long	500                     # 0x1f4
	.long	594                     # 0x252
	.long	612                     # 0x264
	.long	641                     # 0x281
	.long	801                     # 0x321
	.long	220                     # 0xdc
	.long	162                     # 0xa2
	.long	819                     # 0x333
	.long	984                     # 0x3d8
	.long	589                     # 0x24d
	.long	513                     # 0x201
	.long	495                     # 0x1ef
	.long	799                     # 0x31f
	.long	161                     # 0xa1
	.long	604                     # 0x25c
	.long	958                     # 0x3be
	.long	533                     # 0x215
	.long	221                     # 0xdd
	.long	400                     # 0x190
	.long	386                     # 0x182
	.long	867                     # 0x363
	.long	600                     # 0x258
	.long	782                     # 0x30e
	.long	382                     # 0x17e
	.long	596                     # 0x254
	.long	414                     # 0x19e
	.long	171                     # 0xab
	.long	516                     # 0x204
	.long	375                     # 0x177
	.long	682                     # 0x2aa
	.long	485                     # 0x1e5
	.long	911                     # 0x38f
	.long	276                     # 0x114
	.long	98                      # 0x62
	.long	553                     # 0x229
	.long	163                     # 0xa3
	.long	354                     # 0x162
	.long	666                     # 0x29a
	.long	933                     # 0x3a5
	.long	424                     # 0x1a8
	.long	341                     # 0x155
	.long	533                     # 0x215
	.long	870                     # 0x366
	.long	227                     # 0xe3
	.long	730                     # 0x2da
	.long	475                     # 0x1db
	.long	186                     # 0xba
	.long	263                     # 0x107
	.long	647                     # 0x287
	.long	537                     # 0x219
	.long	686                     # 0x2ae
	.long	600                     # 0x258
	.long	224                     # 0xe0
	.long	469                     # 0x1d5
	.long	68                      # 0x44
	.long	770                     # 0x302
	.long	919                     # 0x397
	.long	190                     # 0xbe
	.long	373                     # 0x175
	.long	294                     # 0x126
	.long	822                     # 0x336
	.long	808                     # 0x328
	.long	206                     # 0xce
	.long	184                     # 0xb8
	.long	943                     # 0x3af
	.long	795                     # 0x31b
	.long	384                     # 0x180
	.long	383                     # 0x17f
	.long	461                     # 0x1cd
	.long	404                     # 0x194
	.long	758                     # 0x2f6
	.long	839                     # 0x347
	.long	887                     # 0x377
	.long	715                     # 0x2cb
	.long	67                      # 0x43
	.long	618                     # 0x26a
	.long	276                     # 0x114
	.long	204                     # 0xcc
	.long	918                     # 0x396
	.long	873                     # 0x369
	.long	777                     # 0x309
	.long	604                     # 0x25c
	.long	560                     # 0x230
	.long	951                     # 0x3b7
	.long	160                     # 0xa0
	.long	578                     # 0x242
	.long	722                     # 0x2d2
	.long	79                      # 0x4f
	.long	804                     # 0x324
	.long	96                      # 0x60
	.long	409                     # 0x199
	.long	713                     # 0x2c9
	.long	940                     # 0x3ac
	.long	652                     # 0x28c
	.long	934                     # 0x3a6
	.long	970                     # 0x3ca
	.long	447                     # 0x1bf
	.long	318                     # 0x13e
	.long	353                     # 0x161
	.long	859                     # 0x35b
	.long	672                     # 0x2a0
	.long	112                     # 0x70
	.long	785                     # 0x311
	.long	645                     # 0x285
	.long	863                     # 0x35f
	.long	803                     # 0x323
	.long	350                     # 0x15e
	.long	139                     # 0x8b
	.long	93                      # 0x5d
	.long	354                     # 0x162
	.long	99                      # 0x63
	.long	820                     # 0x334
	.long	908                     # 0x38c
	.long	609                     # 0x261
	.long	772                     # 0x304
	.long	154                     # 0x9a
	.long	274                     # 0x112
	.long	580                     # 0x244
	.long	184                     # 0xb8
	.long	79                      # 0x4f
	.long	626                     # 0x272
	.long	630                     # 0x276
	.long	742                     # 0x2e6
	.long	653                     # 0x28d
	.long	282                     # 0x11a
	.long	762                     # 0x2fa
	.long	623                     # 0x26f
	.long	680                     # 0x2a8
	.long	81                      # 0x51
	.long	927                     # 0x39f
	.long	626                     # 0x272
	.long	789                     # 0x315
	.long	125                     # 0x7d
	.long	411                     # 0x19b
	.long	521                     # 0x209
	.long	938                     # 0x3aa
	.long	300                     # 0x12c
	.long	821                     # 0x335
	.long	78                      # 0x4e
	.long	343                     # 0x157
	.long	175                     # 0xaf
	.long	128                     # 0x80
	.long	250                     # 0xfa
	.long	170                     # 0xaa
	.long	774                     # 0x306
	.long	972                     # 0x3cc
	.long	275                     # 0x113
	.long	999                     # 0x3e7
	.long	639                     # 0x27f
	.long	495                     # 0x1ef
	.long	78                      # 0x4e
	.long	352                     # 0x160
	.long	126                     # 0x7e
	.long	857                     # 0x359
	.long	956                     # 0x3bc
	.long	358                     # 0x166
	.long	619                     # 0x26b
	.long	580                     # 0x244
	.long	124                     # 0x7c
	.long	737                     # 0x2e1
	.long	594                     # 0x252
	.long	701                     # 0x2bd
	.long	612                     # 0x264
	.long	669                     # 0x29d
	.long	112                     # 0x70
	.long	134                     # 0x86
	.long	694                     # 0x2b6
	.long	363                     # 0x16b
	.long	992                     # 0x3e0
	.long	809                     # 0x329
	.long	743                     # 0x2e7
	.long	168                     # 0xa8
	.long	974                     # 0x3ce
	.long	944                     # 0x3b0
	.long	375                     # 0x177
	.long	748                     # 0x2ec
	.long	52                      # 0x34
	.long	600                     # 0x258
	.long	747                     # 0x2eb
	.long	642                     # 0x282
	.long	182                     # 0xb6
	.long	862                     # 0x35e
	.long	81                      # 0x51
	.long	344                     # 0x158
	.long	805                     # 0x325
	.long	988                     # 0x3dc
	.long	739                     # 0x2e3
	.long	511                     # 0x1ff
	.long	655                     # 0x28f
	.long	814                     # 0x32e
	.long	334                     # 0x14e
	.long	249                     # 0xf9
	.long	515                     # 0x203
	.long	897                     # 0x381
	.long	955                     # 0x3bb
	.long	664                     # 0x298
	.long	981                     # 0x3d5
	.long	649                     # 0x289
	.long	113                     # 0x71
	.long	974                     # 0x3ce
	.long	459                     # 0x1cb
	.long	893                     # 0x37d
	.long	228                     # 0xe4
	.long	433                     # 0x1b1
	.long	837                     # 0x345
	.long	553                     # 0x229
	.long	268                     # 0x10c
	.long	926                     # 0x39e
	.long	240                     # 0xf0
	.long	102                     # 0x66
	.long	654                     # 0x28e
	.long	459                     # 0x1cb
	.long	51                      # 0x33
	.long	686                     # 0x2ae
	.long	754                     # 0x2f2
	.long	806                     # 0x326
	.long	760                     # 0x2f8
	.long	493                     # 0x1ed
	.long	403                     # 0x193
	.long	415                     # 0x19f
	.long	394                     # 0x18a
	.long	687                     # 0x2af
	.long	700                     # 0x2bc
	.long	946                     # 0x3b2
	.long	670                     # 0x29e
	.long	656                     # 0x290
	.long	610                     # 0x262
	.long	738                     # 0x2e2
	.long	392                     # 0x188
	.long	760                     # 0x2f8
	.long	799                     # 0x31f
	.long	887                     # 0x377
	.long	653                     # 0x28d
	.long	978                     # 0x3d2
	.long	321                     # 0x141
	.long	576                     # 0x240
	.long	617                     # 0x269
	.long	626                     # 0x272
	.long	502                     # 0x1f6
	.long	894                     # 0x37e
	.long	679                     # 0x2a7
	.long	243                     # 0xf3
	.long	440                     # 0x1b8
	.long	680                     # 0x2a8
	.long	879                     # 0x36f
	.long	194                     # 0xc2
	.long	572                     # 0x23c
	.long	640                     # 0x280
	.long	724                     # 0x2d4
	.long	926                     # 0x39e
	.long	56                      # 0x38
	.long	204                     # 0xcc
	.long	700                     # 0x2bc
	.long	707                     # 0x2c3
	.long	151                     # 0x97
	.long	457                     # 0x1c9
	.long	449                     # 0x1c1
	.long	797                     # 0x31d
	.long	195                     # 0xc3
	.long	791                     # 0x317
	.long	558                     # 0x22e
	.long	945                     # 0x3b1
	.long	679                     # 0x2a7
	.long	297                     # 0x129
	.long	59                      # 0x3b
	.long	87                      # 0x57
	.long	824                     # 0x338
	.long	713                     # 0x2c9
	.long	663                     # 0x297
	.long	412                     # 0x19c
	.long	693                     # 0x2b5
	.long	342                     # 0x156
	.long	606                     # 0x25e
	.long	134                     # 0x86
	.long	108                     # 0x6c
	.long	571                     # 0x23b
	.long	364                     # 0x16c
	.long	631                     # 0x277
	.long	212                     # 0xd4
	.long	174                     # 0xae
	.long	643                     # 0x283
	.long	304                     # 0x130
	.long	329                     # 0x149
	.long	343                     # 0x157
	.long	97                      # 0x61
	.long	430                     # 0x1ae
	.long	751                     # 0x2ef
	.long	497                     # 0x1f1
	.long	314                     # 0x13a
	.long	983                     # 0x3d7
	.long	374                     # 0x176
	.long	822                     # 0x336
	.long	928                     # 0x3a0
	.long	140                     # 0x8c
	.long	206                     # 0xce
	.long	73                      # 0x49
	.long	263                     # 0x107
	.long	980                     # 0x3d4
	.long	736                     # 0x2e0
	.long	876                     # 0x36c
	.long	478                     # 0x1de
	.long	430                     # 0x1ae
	.long	305                     # 0x131
	.long	170                     # 0xaa
	.long	514                     # 0x202
	.long	364                     # 0x16c
	.long	692                     # 0x2b4
	.long	829                     # 0x33d
	.long	82                      # 0x52
	.long	855                     # 0x357
	.long	953                     # 0x3b9
	.long	676                     # 0x2a4
	.long	246                     # 0xf6
	.long	369                     # 0x171
	.long	970                     # 0x3ca
	.long	294                     # 0x126
	.long	750                     # 0x2ee
	.long	807                     # 0x327
	.long	827                     # 0x33b
	.long	150                     # 0x96
	.long	790                     # 0x316
	.long	288                     # 0x120
	.long	923                     # 0x39b
	.long	804                     # 0x324
	.long	378                     # 0x17a
	.long	215                     # 0xd7
	.long	828                     # 0x33c
	.long	592                     # 0x250
	.long	281                     # 0x119
	.long	565                     # 0x235
	.long	555                     # 0x22b
	.long	710                     # 0x2c6
	.long	82                      # 0x52
	.long	896                     # 0x380
	.long	831                     # 0x33f
	.long	547                     # 0x223
	.long	261                     # 0x105
	.long	524                     # 0x20c
	.long	462                     # 0x1ce
	.long	293                     # 0x125
	.long	465                     # 0x1d1
	.long	502                     # 0x1f6
	.long	56                      # 0x38
	.long	661                     # 0x295
	.long	821                     # 0x335
	.long	976                     # 0x3d0
	.long	991                     # 0x3df
	.long	658                     # 0x292
	.long	869                     # 0x365
	.long	905                     # 0x389
	.long	758                     # 0x2f6
	.long	745                     # 0x2e9
	.long	193                     # 0xc1
	.long	768                     # 0x300
	.long	550                     # 0x226
	.long	608                     # 0x260
	.long	933                     # 0x3a5
	.long	378                     # 0x17a
	.long	286                     # 0x11e
	.long	215                     # 0xd7
	.long	979                     # 0x3d3
	.long	792                     # 0x318
	.long	961                     # 0x3c1
	.long	61                      # 0x3d
	.long	688                     # 0x2b0
	.long	793                     # 0x319
	.long	644                     # 0x284
	.long	986                     # 0x3da
	.long	403                     # 0x193
	.long	106                     # 0x6a
	.long	366                     # 0x16e
	.long	905                     # 0x389
	.long	644                     # 0x284
	.long	372                     # 0x174
	.long	567                     # 0x237
	.long	466                     # 0x1d2
	.long	434                     # 0x1b2
	.long	645                     # 0x285
	.long	210                     # 0xd2
	.long	389                     # 0x185
	.long	550                     # 0x226
	.long	919                     # 0x397
	.long	135                     # 0x87
	.long	780                     # 0x30c
	.long	773                     # 0x305
	.long	635                     # 0x27b
	.long	389                     # 0x185
	.long	707                     # 0x2c3
	.long	100                     # 0x64
	.long	626                     # 0x272
	.long	958                     # 0x3be
	.long	165                     # 0xa5
	.long	504                     # 0x1f8
	.long	920                     # 0x398
	.long	176                     # 0xb0
	.long	193                     # 0xc1
	.long	713                     # 0x2c9
	.long	857                     # 0x359
	.long	265                     # 0x109
	.long	203                     # 0xcb
	.long	50                      # 0x32
	.long	668                     # 0x29c
	.long	108                     # 0x6c
	.long	645                     # 0x285
	.long	990                     # 0x3de
	.long	626                     # 0x272
	.long	197                     # 0xc5
	.long	510                     # 0x1fe
	.long	357                     # 0x165
	.long	358                     # 0x166
	.long	850                     # 0x352
	.long	858                     # 0x35a
	.long	364                     # 0x16c
	.long	936                     # 0x3a8
	.long	638                     # 0x27e
	.size	BZ2_rNums, 2048

	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 8.0.0 (tags/RELEASE_800/final)" # string offset=0
.Linfo_string1:
	.asciz	"spec.c"                # string offset=45
.Linfo_string2:
	.asciz	"/home/readm/fast-cfi/401.bzip2" # string offset=52
.Linfo_string3:
	.asciz	"dbglvl"                # string offset=83
.Linfo_string4:
	.asciz	"int"                   # string offset=90
.Linfo_string5:
	.asciz	"spec_fd"               # string offset=94
.Linfo_string6:
	.asciz	"limit"                 # string offset=102
.Linfo_string7:
	.asciz	"len"                   # string offset=108
.Linfo_string8:
	.asciz	"pos"                   # string offset=112
.Linfo_string9:
	.asciz	"buf"                   # string offset=116
.Linfo_string10:
	.asciz	"unsigned char"         # string offset=120
.Linfo_string11:
	.asciz	"spec_fd_t"             # string offset=134
.Linfo_string12:
	.asciz	"__ARRAY_SIZE_TYPE__"   # string offset=144
.Linfo_string13:
	.asciz	"seedi"                 # string offset=164
.Linfo_string14:
	.asciz	"long int"              # string offset=170
.Linfo_string15:
	.asciz	"float"                 # string offset=179
.Linfo_string16:
	.asciz	"char"                  # string offset=185
.Linfo_string17:
	.asciz	"blocksort.c"           # string offset=190
.Linfo_string18:
	.asciz	"incs"                  # string offset=202
.Linfo_string19:
	.asciz	"Int32"                 # string offset=207
.Linfo_string20:
	.asciz	"unsigned short"        # string offset=213
.Linfo_string21:
	.asciz	"UInt16"                # string offset=228
.Linfo_string22:
	.asciz	"UChar"                 # string offset=235
.Linfo_string23:
	.asciz	"Bool"                  # string offset=241
.Linfo_string24:
	.asciz	"unsigned int"          # string offset=246
.Linfo_string25:
	.asciz	"bzip2.c"               # string offset=259
.Linfo_string26:
	.asciz	"verbosity"             # string offset=267
.Linfo_string27:
	.asciz	"keepInputFiles"        # string offset=277
.Linfo_string28:
	.asciz	"smallMode"             # string offset=292
.Linfo_string29:
	.asciz	"deleteOutputOnInterrupt" # string offset=302
.Linfo_string30:
	.asciz	"forceOverwrite"        # string offset=326
.Linfo_string31:
	.asciz	"testFailsExist"        # string offset=341
.Linfo_string32:
	.asciz	"unzFailsExist"         # string offset=356
.Linfo_string33:
	.asciz	"noisy"                 # string offset=370
.Linfo_string34:
	.asciz	"numFileNames"          # string offset=376
.Linfo_string35:
	.asciz	"numFilesProcessed"     # string offset=389
.Linfo_string36:
	.asciz	"blockSize100k"         # string offset=407
.Linfo_string37:
	.asciz	"exitValue"             # string offset=421
.Linfo_string38:
	.asciz	"opMode"                # string offset=431
.Linfo_string39:
	.asciz	"srcMode"               # string offset=438
.Linfo_string40:
	.asciz	"longestFileName"       # string offset=446
.Linfo_string41:
	.asciz	"inName"                # string offset=462
.Linfo_string42:
	.asciz	"Char"                  # string offset=469
.Linfo_string43:
	.asciz	"outName"               # string offset=474
.Linfo_string44:
	.asciz	"tmpName"               # string offset=482
.Linfo_string45:
	.asciz	"progName"              # string offset=490
.Linfo_string46:
	.asciz	"progNameReally"        # string offset=499
.Linfo_string47:
	.asciz	"outputHandleJustInCase" # string offset=514
.Linfo_string48:
	.asciz	"workFactor"            # string offset=537
.Linfo_string49:
	.asciz	"double"                # string offset=548
.Linfo_string50:
	.asciz	"bzlib.c"               # string offset=555
.Linfo_string51:
	.asciz	"bzerrorstrings"        # string offset=563
.Linfo_string52:
	.asciz	"_ISupper"              # string offset=578
.Linfo_string53:
	.asciz	"_ISlower"              # string offset=587
.Linfo_string54:
	.asciz	"_ISalpha"              # string offset=596
.Linfo_string55:
	.asciz	"_ISdigit"              # string offset=605
.Linfo_string56:
	.asciz	"_ISxdigit"             # string offset=614
.Linfo_string57:
	.asciz	"_ISspace"              # string offset=624
.Linfo_string58:
	.asciz	"_ISprint"              # string offset=633
.Linfo_string59:
	.asciz	"_ISgraph"              # string offset=642
.Linfo_string60:
	.asciz	"_ISblank"              # string offset=651
.Linfo_string61:
	.asciz	"_IScntrl"              # string offset=660
.Linfo_string62:
	.asciz	"_ISpunct"              # string offset=669
.Linfo_string63:
	.asciz	"_ISalnum"              # string offset=678
.Linfo_string64:
	.asciz	"UInt32"                # string offset=687
.Linfo_string65:
	.asciz	"handle"                # string offset=694
.Linfo_string66:
	.asciz	"bufN"                  # string offset=701
.Linfo_string67:
	.asciz	"writing"               # string offset=706
.Linfo_string68:
	.asciz	"strm"                  # string offset=714
.Linfo_string69:
	.asciz	"next_in"               # string offset=719
.Linfo_string70:
	.asciz	"avail_in"              # string offset=727
.Linfo_string71:
	.asciz	"total_in_lo32"         # string offset=736
.Linfo_string72:
	.asciz	"total_in_hi32"         # string offset=750
.Linfo_string73:
	.asciz	"next_out"              # string offset=764
.Linfo_string74:
	.asciz	"avail_out"             # string offset=773
.Linfo_string75:
	.asciz	"total_out_lo32"        # string offset=783
.Linfo_string76:
	.asciz	"total_out_hi32"        # string offset=798
.Linfo_string77:
	.asciz	"state"                 # string offset=813
.Linfo_string78:
	.asciz	"bzalloc"               # string offset=819
.Linfo_string79:
	.asciz	"bzfree"                # string offset=827
.Linfo_string80:
	.asciz	"opaque"                # string offset=834
.Linfo_string81:
	.asciz	"bz_stream"             # string offset=841
.Linfo_string82:
	.asciz	"lastErr"               # string offset=851
.Linfo_string83:
	.asciz	"initialisedOk"         # string offset=859
.Linfo_string84:
	.asciz	"bzFile"                # string offset=873
.Linfo_string85:
	.asciz	"long unsigned int"     # string offset=880
.Linfo_string86:
	.asciz	"size_t"                # string offset=898
.Linfo_string87:
	.asciz	"compress.c"            # string offset=905
.Linfo_string88:
	.asciz	"crctable.c"            # string offset=916
.Linfo_string89:
	.asciz	"BZ2_crc32Table"        # string offset=927
.Linfo_string90:
	.asciz	"decompress.c"          # string offset=942
.Linfo_string91:
	.asciz	"huffman.c"             # string offset=955
.Linfo_string92:
	.asciz	"randtable.c"           # string offset=965
.Linfo_string93:
	.asciz	"BZ2_rNums"             # string offset=977
.Linfo_string94:
	.asciz	"spec_init"             # string offset=987
.Linfo_string95:
	.asciz	"i"                     # string offset=997
.Linfo_string96:
	.asciz	"j"                     # string offset=999
.Linfo_string97:
	.asciz	"spec_load"             # string offset=1001
.Linfo_string98:
	.asciz	"num"                   # string offset=1011
.Linfo_string99:
	.asciz	"filename"              # string offset=1015
.Linfo_string100:
	.asciz	"size"                  # string offset=1024
.Linfo_string101:
	.asciz	"fd"                    # string offset=1029
.Linfo_string102:
	.asciz	"rc"                    # string offset=1032
.Linfo_string103:
	.asciz	"tmp"                   # string offset=1035
.Linfo_string104:
	.asciz	"spec_initbufs"         # string offset=1039
.Linfo_string105:
	.asciz	"atoi"                  # string offset=1053
.Linfo_string106:
	.asciz	"__nptr"                # string offset=1058
.Linfo_string107:
	.asciz	"BZ2_bzReadOpen"        # string offset=1065
.Linfo_string108:
	.asciz	"BZFILE"                # string offset=1080
.Linfo_string109:
	.asciz	"bzerror"               # string offset=1087
.Linfo_string110:
	.asciz	"f"                     # string offset=1095
.Linfo_string111:
	.asciz	"small"                 # string offset=1097
.Linfo_string112:
	.asciz	"unused"                # string offset=1103
.Linfo_string113:
	.asciz	"nUnused"               # string offset=1110
.Linfo_string114:
	.asciz	"bzf"                   # string offset=1118
.Linfo_string115:
	.asciz	"ret"                   # string offset=1122
.Linfo_string116:
	.asciz	"uncompressStream"      # string offset=1126
.Linfo_string117:
	.asciz	"zStream"               # string offset=1143
.Linfo_string118:
	.asciz	"stream"                # string offset=1151
.Linfo_string119:
	.asciz	"obuf"                  # string offset=1158
.Linfo_string120:
	.asciz	"bzerr"                 # string offset=1163
.Linfo_string121:
	.asciz	"streamNo"              # string offset=1169
.Linfo_string122:
	.asciz	"nread"                 # string offset=1178
.Linfo_string123:
	.asciz	"unusedTmpV"            # string offset=1184
.Linfo_string124:
	.asciz	"unusedTmp"             # string offset=1195
.Linfo_string125:
	.asciz	"bzerr_dummy"           # string offset=1205
.Linfo_string126:
	.asciz	"spec_uncompress"       # string offset=1217
.Linfo_string127:
	.asciz	"in"                    # string offset=1233
.Linfo_string128:
	.asciz	"out"                   # string offset=1236
.Linfo_string129:
	.asciz	"lev"                   # string offset=1240
.Linfo_string130:
	.asciz	"spec_compress"         # string offset=1244
.Linfo_string131:
	.asciz	"BZ2_bzWriteOpen"       # string offset=1258
.Linfo_string132:
	.asciz	"compressStream"        # string offset=1274
.Linfo_string133:
	.asciz	"ibuf"                  # string offset=1289
.Linfo_string134:
	.asciz	"nIbuf"                 # string offset=1294
.Linfo_string135:
	.asciz	"nbytes_in_lo32"        # string offset=1300
.Linfo_string136:
	.asciz	"nbytes_in_hi32"        # string offset=1315
.Linfo_string137:
	.asciz	"nbytes_out_lo32"       # string offset=1330
.Linfo_string138:
	.asciz	"nbytes_out_hi32"       # string offset=1346
.Linfo_string139:
	.asciz	"buf_nin"               # string offset=1362
.Linfo_string140:
	.asciz	"buf_nout"              # string offset=1370
.Linfo_string141:
	.asciz	"nbytes_in"             # string offset=1379
.Linfo_string142:
	.asciz	"b"                     # string offset=1389
.Linfo_string143:
	.asciz	"UInt64"                # string offset=1391
.Linfo_string144:
	.asciz	"nbytes_out"            # string offset=1398
.Linfo_string145:
	.asciz	"nbytes_in_d"           # string offset=1409
.Linfo_string146:
	.asciz	"nbytes_out_d"          # string offset=1421
.Linfo_string147:
	.asciz	"BZ2_bzCompressInit"    # string offset=1434
.Linfo_string148:
	.asciz	"s"                     # string offset=1453
.Linfo_string149:
	.asciz	"mode"                  # string offset=1455
.Linfo_string150:
	.asciz	"avail_in_expect"       # string offset=1460
.Linfo_string151:
	.asciz	"arr1"                  # string offset=1476
.Linfo_string152:
	.asciz	"arr2"                  # string offset=1481
.Linfo_string153:
	.asciz	"ftab"                  # string offset=1486
.Linfo_string154:
	.asciz	"origPtr"               # string offset=1491
.Linfo_string155:
	.asciz	"ptr"                   # string offset=1499
.Linfo_string156:
	.asciz	"block"                 # string offset=1503
.Linfo_string157:
	.asciz	"mtfv"                  # string offset=1509
.Linfo_string158:
	.asciz	"zbits"                 # string offset=1514
.Linfo_string159:
	.asciz	"state_in_ch"           # string offset=1520
.Linfo_string160:
	.asciz	"state_in_len"          # string offset=1532
.Linfo_string161:
	.asciz	"rNToGo"                # string offset=1545
.Linfo_string162:
	.asciz	"rTPos"                 # string offset=1552
.Linfo_string163:
	.asciz	"nblock"                # string offset=1558
.Linfo_string164:
	.asciz	"nblockMAX"             # string offset=1565
.Linfo_string165:
	.asciz	"numZ"                  # string offset=1575
.Linfo_string166:
	.asciz	"state_out_pos"         # string offset=1580
.Linfo_string167:
	.asciz	"nInUse"                # string offset=1594
.Linfo_string168:
	.asciz	"inUse"                 # string offset=1601
.Linfo_string169:
	.asciz	"unseqToSeq"            # string offset=1607
.Linfo_string170:
	.asciz	"bsBuff"                # string offset=1618
.Linfo_string171:
	.asciz	"bsLive"                # string offset=1625
.Linfo_string172:
	.asciz	"blockCRC"              # string offset=1632
.Linfo_string173:
	.asciz	"combinedCRC"           # string offset=1641
.Linfo_string174:
	.asciz	"blockNo"               # string offset=1653
.Linfo_string175:
	.asciz	"nMTF"                  # string offset=1661
.Linfo_string176:
	.asciz	"mtfFreq"               # string offset=1666
.Linfo_string177:
	.asciz	"selector"              # string offset=1674
.Linfo_string178:
	.asciz	"selectorMtf"           # string offset=1683
.Linfo_string179:
	.asciz	"code"                  # string offset=1695
.Linfo_string180:
	.asciz	"rfreq"                 # string offset=1700
.Linfo_string181:
	.asciz	"len_pack"              # string offset=1706
.Linfo_string182:
	.asciz	"EState"                # string offset=1715
.Linfo_string183:
	.asciz	"n"                     # string offset=1722
.Linfo_string184:
	.asciz	"init_RL"               # string offset=1724
.Linfo_string185:
	.asciz	"prepare_new_block"     # string offset=1732
.Linfo_string186:
	.asciz	"spec_getc"             # string offset=1750
.Linfo_string187:
	.asciz	"myfeof"                # string offset=1760
.Linfo_string188:
	.asciz	"c"                     # string offset=1767
.Linfo_string189:
	.asciz	"spec_ungetc"           # string offset=1769
.Linfo_string190:
	.asciz	"ch"                    # string offset=1781
.Linfo_string191:
	.asciz	"spec_fread"            # string offset=1784
.Linfo_string192:
	.asciz	"BZ2_bzWrite"           # string offset=1795
.Linfo_string193:
	.asciz	"n2"                    # string offset=1807
.Linfo_string194:
	.asciz	"BZ2_bzCompress"        # string offset=1810
.Linfo_string195:
	.asciz	"action"                # string offset=1825
.Linfo_string196:
	.asciz	"progress"              # string offset=1832
.Linfo_string197:
	.asciz	"spec_fwrite"           # string offset=1841
.Linfo_string198:
	.asciz	"BZ2_bzWriteClose64"    # string offset=1853
.Linfo_string199:
	.asciz	"abandon"               # string offset=1872
.Linfo_string200:
	.asciz	"BZ2_bzCompressEnd"     # string offset=1880
.Linfo_string201:
	.asciz	"isempty_RL"            # string offset=1898
.Linfo_string202:
	.asciz	"spec_reset"            # string offset=1909
.Linfo_string203:
	.asciz	"spec_rewind"           # string offset=1920
.Linfo_string204:
	.asciz	"BZ2_bzDecompressInit"  # string offset=1932
.Linfo_string205:
	.asciz	"state_out_ch"          # string offset=1953
.Linfo_string206:
	.asciz	"state_out_len"         # string offset=1966
.Linfo_string207:
	.asciz	"blockRandomised"       # string offset=1980
.Linfo_string208:
	.asciz	"smallDecompress"       # string offset=1996
.Linfo_string209:
	.asciz	"currBlockNo"           # string offset=2012
.Linfo_string210:
	.asciz	"tPos"                  # string offset=2024
.Linfo_string211:
	.asciz	"k0"                    # string offset=2029
.Linfo_string212:
	.asciz	"unzftab"               # string offset=2032
.Linfo_string213:
	.asciz	"nblock_used"           # string offset=2040
.Linfo_string214:
	.asciz	"cftab"                 # string offset=2052
.Linfo_string215:
	.asciz	"cftabCopy"             # string offset=2058
.Linfo_string216:
	.asciz	"tt"                    # string offset=2068
.Linfo_string217:
	.asciz	"ll16"                  # string offset=2071
.Linfo_string218:
	.asciz	"ll4"                   # string offset=2076
.Linfo_string219:
	.asciz	"storedBlockCRC"        # string offset=2080
.Linfo_string220:
	.asciz	"storedCombinedCRC"     # string offset=2095
.Linfo_string221:
	.asciz	"calculatedBlockCRC"    # string offset=2113
.Linfo_string222:
	.asciz	"calculatedCombinedCRC" # string offset=2132
.Linfo_string223:
	.asciz	"inUse16"               # string offset=2154
.Linfo_string224:
	.asciz	"seqToUnseq"            # string offset=2162
.Linfo_string225:
	.asciz	"mtfa"                  # string offset=2173
.Linfo_string226:
	.asciz	"mtfbase"               # string offset=2178
.Linfo_string227:
	.asciz	"base"                  # string offset=2186
.Linfo_string228:
	.asciz	"perm"                  # string offset=2191
.Linfo_string229:
	.asciz	"minLens"               # string offset=2196
.Linfo_string230:
	.asciz	"save_i"                # string offset=2204
.Linfo_string231:
	.asciz	"save_j"                # string offset=2211
.Linfo_string232:
	.asciz	"save_t"                # string offset=2218
.Linfo_string233:
	.asciz	"save_alphaSize"        # string offset=2225
.Linfo_string234:
	.asciz	"save_nGroups"          # string offset=2240
.Linfo_string235:
	.asciz	"save_nSelectors"       # string offset=2253
.Linfo_string236:
	.asciz	"save_EOB"              # string offset=2269
.Linfo_string237:
	.asciz	"save_groupNo"          # string offset=2278
.Linfo_string238:
	.asciz	"save_groupPos"         # string offset=2291
.Linfo_string239:
	.asciz	"save_nextSym"          # string offset=2305
.Linfo_string240:
	.asciz	"save_nblockMAX"        # string offset=2318
.Linfo_string241:
	.asciz	"save_nblock"           # string offset=2333
.Linfo_string242:
	.asciz	"save_es"               # string offset=2345
.Linfo_string243:
	.asciz	"save_N"                # string offset=2353
.Linfo_string244:
	.asciz	"save_curr"             # string offset=2360
.Linfo_string245:
	.asciz	"save_zt"               # string offset=2370
.Linfo_string246:
	.asciz	"save_zn"               # string offset=2378
.Linfo_string247:
	.asciz	"save_zvec"             # string offset=2386
.Linfo_string248:
	.asciz	"save_zj"               # string offset=2396
.Linfo_string249:
	.asciz	"save_gSel"             # string offset=2404
.Linfo_string250:
	.asciz	"save_gMinlen"          # string offset=2414
.Linfo_string251:
	.asciz	"save_gLimit"           # string offset=2427
.Linfo_string252:
	.asciz	"save_gBase"            # string offset=2439
.Linfo_string253:
	.asciz	"save_gPerm"            # string offset=2450
.Linfo_string254:
	.asciz	"DState"                # string offset=2461
.Linfo_string255:
	.asciz	"default_bzalloc"       # string offset=2468
.Linfo_string256:
	.asciz	"items"                 # string offset=2484
.Linfo_string257:
	.asciz	"v"                     # string offset=2490
.Linfo_string258:
	.asciz	"BZ2_bzRead"            # string offset=2492
.Linfo_string259:
	.asciz	"BZ2_bzReadGetUnused"   # string offset=2503
.Linfo_string260:
	.asciz	"fallbackQSort3"        # string offset=2523
.Linfo_string261:
	.asciz	"fmap"                  # string offset=2538
.Linfo_string262:
	.asciz	"eclass"                # string offset=2543
.Linfo_string263:
	.asciz	"loSt"                  # string offset=2550
.Linfo_string264:
	.asciz	"hiSt"                  # string offset=2555
.Linfo_string265:
	.asciz	"stackLo"               # string offset=2560
.Linfo_string266:
	.asciz	"stackHi"               # string offset=2568
.Linfo_string267:
	.asciz	"sp"                    # string offset=2576
.Linfo_string268:
	.asciz	"r"                     # string offset=2579
.Linfo_string269:
	.asciz	"unHi"                  # string offset=2581
.Linfo_string270:
	.asciz	"med"                   # string offset=2586
.Linfo_string271:
	.asciz	"hi"                    # string offset=2590
.Linfo_string272:
	.asciz	"m"                     # string offset=2593
.Linfo_string273:
	.asciz	"lo"                    # string offset=2595
.Linfo_string274:
	.asciz	"ltLo"                  # string offset=2598
.Linfo_string275:
	.asciz	"unLo"                  # string offset=2603
.Linfo_string276:
	.asciz	"gtHi"                  # string offset=2608
.Linfo_string277:
	.asciz	"r3"                    # string offset=2613
.Linfo_string278:
	.asciz	"yyn"                   # string offset=2616
.Linfo_string279:
	.asciz	"yyp1"                  # string offset=2620
.Linfo_string280:
	.asciz	"yyp2"                  # string offset=2625
.Linfo_string281:
	.asciz	"zztmp"                 # string offset=2630
.Linfo_string282:
	.asciz	"fallbackSimpleSort"    # string offset=2636
.Linfo_string283:
	.asciz	"ec_tmp"                # string offset=2655
.Linfo_string284:
	.asciz	"BZ2_decompress"        # string offset=2662
.Linfo_string285:
	.asciz	"retVal"                # string offset=2677
.Linfo_string286:
	.asciz	"uc"                    # string offset=2684
.Linfo_string287:
	.asciz	"t"                     # string offset=2687
.Linfo_string288:
	.asciz	"alphaSize"             # string offset=2689
.Linfo_string289:
	.asciz	"nGroups"               # string offset=2699
.Linfo_string290:
	.asciz	"nSelectors"            # string offset=2707
.Linfo_string291:
	.asciz	"EOB"                   # string offset=2718
.Linfo_string292:
	.asciz	"groupNo"               # string offset=2722
.Linfo_string293:
	.asciz	"groupPos"              # string offset=2730
.Linfo_string294:
	.asciz	"nextSym"               # string offset=2739
.Linfo_string295:
	.asciz	"es"                    # string offset=2747
.Linfo_string296:
	.asciz	"N"                     # string offset=2750
.Linfo_string297:
	.asciz	"curr"                  # string offset=2752
.Linfo_string298:
	.asciz	"zt"                    # string offset=2757
.Linfo_string299:
	.asciz	"zn"                    # string offset=2760
.Linfo_string300:
	.asciz	"zvec"                  # string offset=2763
.Linfo_string301:
	.asciz	"zj"                    # string offset=2768
.Linfo_string302:
	.asciz	"gSel"                  # string offset=2771
.Linfo_string303:
	.asciz	"gMinlen"               # string offset=2776
.Linfo_string304:
	.asciz	"gLimit"                # string offset=2784
.Linfo_string305:
	.asciz	"gBase"                 # string offset=2791
.Linfo_string306:
	.asciz	"gPerm"                 # string offset=2797
.Linfo_string307:
	.asciz	"minLen"                # string offset=2803
.Linfo_string308:
	.asciz	"maxLen"                # string offset=2810
.Linfo_string309:
	.asciz	"nn"                    # string offset=2817
.Linfo_string310:
	.asciz	"pp"                    # string offset=2820
.Linfo_string311:
	.asciz	"lno"                   # string offset=2823
.Linfo_string312:
	.asciz	"off"                   # string offset=2827
.Linfo_string313:
	.asciz	"kk"                    # string offset=2831
.Linfo_string314:
	.asciz	"ii"                    # string offset=2834
.Linfo_string315:
	.asciz	"jj"                    # string offset=2837
.Linfo_string316:
	.asciz	"z"                     # string offset=2840
.Linfo_string317:
	.asciz	"unRLE_obuf_to_output_SMALL" # string offset=2842
.Linfo_string318:
	.asciz	"k1"                    # string offset=2869
.Linfo_string319:
	.asciz	"unRLE_obuf_to_output_FAST" # string offset=2872
.Linfo_string320:
	.asciz	"c_calculatedBlockCRC"  # string offset=2898
.Linfo_string321:
	.asciz	"c_state_out_ch"        # string offset=2919
.Linfo_string322:
	.asciz	"c_state_out_len"       # string offset=2934
.Linfo_string323:
	.asciz	"c_nblock_used"         # string offset=2950
.Linfo_string324:
	.asciz	"c_k0"                  # string offset=2964
.Linfo_string325:
	.asciz	"c_tt"                  # string offset=2969
.Linfo_string326:
	.asciz	"c_tPos"                # string offset=2974
.Linfo_string327:
	.asciz	"cs_next_out"           # string offset=2981
.Linfo_string328:
	.asciz	"avail_out_INIT"        # string offset=2993
.Linfo_string329:
	.asciz	"cs_avail_out"          # string offset=3008
.Linfo_string330:
	.asciz	"s_save_nblockPP"       # string offset=3021
.Linfo_string331:
	.asciz	"total_out_lo32_old"    # string offset=3037
.Linfo_string332:
	.asciz	"BZ2_indexIntoF"        # string offset=3056
.Linfo_string333:
	.asciz	"indx"                  # string offset=3071
.Linfo_string334:
	.asciz	"na"                    # string offset=3076
.Linfo_string335:
	.asciz	"nb"                    # string offset=3079
.Linfo_string336:
	.asciz	"mid"                   # string offset=3082
.Linfo_string337:
	.asciz	"BZ2_hbCreateDecodeTables" # string offset=3086
.Linfo_string338:
	.asciz	"length"                # string offset=3111
.Linfo_string339:
	.asciz	"vec"                   # string offset=3118
.Linfo_string340:
	.asciz	"makeMaps_d"            # string offset=3122
.Linfo_string341:
	.asciz	"copy_output_until_stop" # string offset=3133
.Linfo_string342:
	.asciz	"progress_out"          # string offset=3156
.Linfo_string343:
	.asciz	"copy_input_until_stop" # string offset=3169
.Linfo_string344:
	.asciz	"progress_in"           # string offset=3191
.Linfo_string345:
	.asciz	"zchh"                  # string offset=3203
.Linfo_string346:
	.asciz	"flush_RL"              # string offset=3208
.Linfo_string347:
	.asciz	"BZ2_bzDecompressEnd"   # string offset=3217
.Linfo_string348:
	.asciz	"BZ2_blockSort"         # string offset=3237
.Linfo_string349:
	.asciz	"verb"                  # string offset=3251
.Linfo_string350:
	.asciz	"wfact"                 # string offset=3256
.Linfo_string351:
	.asciz	"budget"                # string offset=3262
.Linfo_string352:
	.asciz	"budgetInit"            # string offset=3269
.Linfo_string353:
	.asciz	"quadrant"              # string offset=3280
.Linfo_string354:
	.asciz	"mainSort"              # string offset=3289
.Linfo_string355:
	.asciz	"runningOrder"          # string offset=3298
.Linfo_string356:
	.asciz	"bigDone"               # string offset=3311
.Linfo_string357:
	.asciz	"copyStart"             # string offset=3319
.Linfo_string358:
	.asciz	"copyEnd"               # string offset=3329
.Linfo_string359:
	.asciz	"numQSorted"            # string offset=3337
.Linfo_string360:
	.asciz	"ss"                    # string offset=3348
.Linfo_string361:
	.asciz	"k"                     # string offset=3351
.Linfo_string362:
	.asciz	"c1"                    # string offset=3353
.Linfo_string363:
	.asciz	"sb"                    # string offset=3356
.Linfo_string364:
	.asciz	"h"                     # string offset=3359
.Linfo_string365:
	.asciz	"vv"                    # string offset=3361
.Linfo_string366:
	.asciz	"bbStart"               # string offset=3364
.Linfo_string367:
	.asciz	"shifts"                # string offset=3372
.Linfo_string368:
	.asciz	"bbSize"                # string offset=3379
.Linfo_string369:
	.asciz	"qVal"                  # string offset=3386
.Linfo_string370:
	.asciz	"a2update"              # string offset=3391
.Linfo_string371:
	.asciz	"mainQSort3"            # string offset=3400
.Linfo_string372:
	.asciz	"dSt"                   # string offset=3411
.Linfo_string373:
	.asciz	"stackD"                # string offset=3415
.Linfo_string374:
	.asciz	"nextD"                 # string offset=3422
.Linfo_string375:
	.asciz	"d"                     # string offset=3428
.Linfo_string376:
	.asciz	"nextHi"                # string offset=3430
.Linfo_string377:
	.asciz	"nextLo"                # string offset=3437
.Linfo_string378:
	.asciz	"tz"                    # string offset=3444
.Linfo_string379:
	.asciz	"mmed3"                 # string offset=3447
.Linfo_string380:
	.asciz	"a"                     # string offset=3453
.Linfo_string381:
	.asciz	"mainSimpleSort"        # string offset=3455
.Linfo_string382:
	.asciz	"bigN"                  # string offset=3470
.Linfo_string383:
	.asciz	"hp"                    # string offset=3475
.Linfo_string384:
	.asciz	"bsW"                   # string offset=3478
.Linfo_string385:
	.asciz	"bsPutUChar"            # string offset=3482
.Linfo_string386:
	.asciz	"generateMTFValues"     # string offset=3493
.Linfo_string387:
	.asciz	"yy"                    # string offset=3511
.Linfo_string388:
	.asciz	"zPend"                 # string offset=3514
.Linfo_string389:
	.asciz	"wr"                    # string offset=3520
.Linfo_string390:
	.asciz	"ll_i"                  # string offset=3523
.Linfo_string391:
	.asciz	"ryy_j"                 # string offset=3528
.Linfo_string392:
	.asciz	"rll_i"                 # string offset=3534
.Linfo_string393:
	.asciz	"rtmp"                  # string offset=3540
.Linfo_string394:
	.asciz	"rtmp2"                 # string offset=3545
.Linfo_string395:
	.asciz	"makeMaps_e"            # string offset=3551
.Linfo_string396:
	.asciz	"bsFinishWrite"         # string offset=3562
.Linfo_string397:
	.asciz	"BZ2_hbMakeCodeLengths" # string offset=3576
.Linfo_string398:
	.asciz	"freq"                  # string offset=3598
.Linfo_string399:
	.asciz	"heap"                  # string offset=3603
.Linfo_string400:
	.asciz	"weight"                # string offset=3608
.Linfo_string401:
	.asciz	"parent"                # string offset=3615
.Linfo_string402:
	.asciz	"nNodes"                # string offset=3622
.Linfo_string403:
	.asciz	"nHeap"                 # string offset=3629
.Linfo_string404:
	.asciz	"n1"                    # string offset=3635
.Linfo_string405:
	.asciz	"tooLong"               # string offset=3638
.Linfo_string406:
	.asciz	"zz"                    # string offset=3646
.Linfo_string407:
	.asciz	"BZ2_hbAssignCodes"     # string offset=3649
.Linfo_string408:
	.asciz	"main"                  # string offset=3667
.Linfo_string409:
	.asciz	"fallbackSort"          # string offset=3672
.Linfo_string410:
	.asciz	"mainGtU"               # string offset=3685
.Linfo_string411:
	.asciz	"configError"           # string offset=3693
.Linfo_string412:
	.asciz	"outOfMemory"           # string offset=3705
.Linfo_string413:
	.asciz	"ioError"               # string offset=3717
.Linfo_string414:
	.asciz	"panic"                 # string offset=3725
.Linfo_string415:
	.asciz	"cleanUpAndFail"        # string offset=3731
.Linfo_string416:
	.asciz	"crcError"              # string offset=3746
.Linfo_string417:
	.asciz	"compressedStreamEOF"   # string offset=3755
.Linfo_string418:
	.asciz	"BZ2_bz__AssertH__fail" # string offset=3775
.Linfo_string419:
	.asciz	"default_bzfree"        # string offset=3797
.Linfo_string420:
	.asciz	"BZ2_bzDecompress"      # string offset=3812
.Linfo_string421:
	.asciz	"handle_compress"       # string offset=3829
.Linfo_string422:
	.asciz	"add_pair_to_block"     # string offset=3845
.Linfo_string423:
	.asciz	"BZ2_bzReadClose"       # string offset=3863
.Linfo_string424:
	.asciz	"BZ2_compressBlock"     # string offset=3879
.Linfo_string425:
	.asciz	"bsPutUInt32"           # string offset=3897
.Linfo_string426:
	.asciz	"sendMTFValues"         # string offset=3909
.Linfo_string427:
	.asciz	"argc"                  # string offset=3923
.Linfo_string428:
	.asciz	"argv"                  # string offset=3928
.Linfo_string429:
	.asciz	"input_size"            # string offset=3933
.Linfo_string430:
	.asciz	"input_name"            # string offset=3944
.Linfo_string431:
	.asciz	"compressed_size"       # string offset=3955
.Linfo_string432:
	.asciz	"validate_array"        # string offset=3971
.Linfo_string433:
	.asciz	"level"                 # string offset=3986
.Linfo_string434:
	.asciz	"ftabCopy"              # string offset=3992
.Linfo_string435:
	.asciz	"bhtab"                 # string offset=4001
.Linfo_string436:
	.asciz	"eclass8"               # string offset=4007
.Linfo_string437:
	.asciz	"nBhtab"                # string offset=4015
.Linfo_string438:
	.asciz	"H"                     # string offset=4022
.Linfo_string439:
	.asciz	"nNotDone"              # string offset=4024
.Linfo_string440:
	.asciz	"cc"                    # string offset=4033
.Linfo_string441:
	.asciz	"cc1"                   # string offset=4036
.Linfo_string442:
	.asciz	"l"                     # string offset=4040
.Linfo_string443:
	.asciz	"i1"                    # string offset=4042
.Linfo_string444:
	.asciz	"i2"                    # string offset=4045
.Linfo_string445:
	.asciz	"c2"                    # string offset=4048
.Linfo_string446:
	.asciz	"s1"                    # string offset=4051
.Linfo_string447:
	.asciz	"s2"                    # string offset=4054
.Linfo_string448:
	.asciz	"ec"                    # string offset=4057
.Linfo_string449:
	.asciz	"IntNative"             # string offset=4060
.Linfo_string450:
	.asciz	"errcode"               # string offset=4070
.Linfo_string451:
	.asciz	"addr"                  # string offset=4078
.Linfo_string452:
	.asciz	"corrupt"               # string offset=4083
.Linfo_string453:
	.asciz	"is_last_block"         # string offset=4091
.Linfo_string454:
	.asciz	"u"                     # string offset=4105
.Linfo_string455:
	.asciz	"cost"                  # string offset=4107
.Linfo_string456:
	.asciz	"fave"                  # string offset=4112
.Linfo_string457:
	.asciz	"remF"                  # string offset=4117
.Linfo_string458:
	.asciz	"nPart"                 # string offset=4122
.Linfo_string459:
	.asciz	"gs"                    # string offset=4128
.Linfo_string460:
	.asciz	"tFreq"                 # string offset=4131
.Linfo_string461:
	.asciz	"aFreq"                 # string offset=4137
.Linfo_string462:
	.asciz	"ge"                    # string offset=4143
.Linfo_string463:
	.asciz	"iter"                  # string offset=4146
.Linfo_string464:
	.asciz	"totc"                  # string offset=4151
.Linfo_string465:
	.asciz	"cost45"                # string offset=4156
.Linfo_string466:
	.asciz	"cost23"                # string offset=4163
.Linfo_string467:
	.asciz	"cost01"                # string offset=4170
.Linfo_string468:
	.asciz	"icv"                   # string offset=4177
.Linfo_string469:
	.asciz	"bt"                    # string offset=4181
.Linfo_string470:
	.asciz	"bc"                    # string offset=4184
.Linfo_string471:
	.asciz	"tmp2"                  # string offset=4187
.Linfo_string472:
	.asciz	"nBytes"                # string offset=4192
.Linfo_string473:
	.asciz	"selCtr"                # string offset=4199
.Linfo_string474:
	.asciz	"mtfv_i"                # string offset=4206
.Linfo_string475:
	.asciz	"s_len_sel_selCtr"      # string offset=4213
.Linfo_string476:
	.asciz	"s_code_sel_selCtr"     # string offset=4230
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp5-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	.Ltmp10-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp14-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp0-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp0-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	.Ltmp11-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin1-.Lfunc_begin0
	.quad	.Ltmp23-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp131-.Lfunc_begin0
	.quad	.Ltmp132-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp132-.Lfunc_begin0
	.quad	.Ltmp139-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin1-.Lfunc_begin0
	.quad	.Ltmp20-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp20-.Lfunc_begin0
	.quad	.Ltmp22-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp131-.Lfunc_begin0
	.quad	.Ltmp142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp17-.Lfunc_begin0
	.quad	.Ltmp135-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	192                     # 64
	.byte	0                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp135-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp21-.Lfunc_begin0
	.quad	.Ltmp22-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp131-.Lfunc_begin0
	.quad	.Ltmp142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp23-.Lfunc_begin0
	.quad	.Ltmp25-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp141-.Lfunc_begin0
	.quad	.Ltmp142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp23-.Lfunc_begin0
	.quad	.Ltmp31-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp24-.Lfunc_begin0
	.quad	.Ltmp31-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp46-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp28-.Lfunc_begin0
	.quad	.Ltmp37-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp47-.Lfunc_begin0
	.quad	.Ltmp56-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp66-.Lfunc_begin0
	.quad	.Ltmp75-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp537-.Lfunc_begin0
	.quad	.Ltmp538-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp31-.Lfunc_begin0
	.quad	.Ltmp34-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp43-.Lfunc_begin0
	.quad	.Ltmp44-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp50-.Lfunc_begin0
	.quad	.Ltmp53-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp62-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp69-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp81-.Lfunc_begin0
	.quad	.Ltmp82-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp88-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp88-.Lfunc_begin0
	.quad	.Ltmp92-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp92-.Lfunc_begin0
	.quad	.Ltmp100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp93-.Lfunc_begin0
	.quad	.Ltmp100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	.Ltmp535-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp110-.Lfunc_begin0
	.quad	.Ltmp111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp111-.Lfunc_begin0
	.quad	.Ltmp131-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp471-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp540-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp113-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp455-.Lfunc_begin0
	.quad	.Ltmp459-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp130-.Lfunc_begin0
	.quad	.Ltmp142-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp166-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp166-.Lfunc_begin0
	.quad	.Ltmp468-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	.Ltmp468-.Lfunc_begin0
	.quad	.Ltmp472-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp516-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp526-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp133-.Lfunc_begin0
	.quad	.Ltmp134-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp386-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp386-.Lfunc_begin0
	.quad	.Ltmp418-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp293-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp293-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp450-.Lfunc_begin0
	.quad	.Ltmp451-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp528-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp149-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp149-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp478-.Lfunc_begin0
	.quad	.Ltmp479-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp486-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp515-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp151-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	30                      # 30
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp162-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp165-.Lfunc_begin0
	.quad	.Ltmp167-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp171-.Lfunc_begin0
	.quad	.Ltmp173-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp174-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp175-.Lfunc_begin0
	.quad	.Ltmp223-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp223-.Lfunc_begin0
	.quad	.Ltmp225-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp246-.Lfunc_begin0
	.quad	.Ltmp488-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp488-.Lfunc_begin0
	.quad	.Ltmp490-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp492-.Lfunc_begin0
	.quad	.Ltmp511-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp176-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp176-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	.Ltmp186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp186-.Lfunc_begin0
	.quad	.Ltmp188-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp188-.Lfunc_begin0
	.quad	.Ltmp192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp188-.Lfunc_begin0
	.quad	.Ltmp197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp188-.Lfunc_begin0
	.quad	.Ltmp197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp189-.Lfunc_begin0
	.quad	.Ltmp192-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp196-.Lfunc_begin0
	.quad	.Ltmp223-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp199-.Lfunc_begin0
	.quad	.Ltmp205-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp207-.Lfunc_begin0
	.quad	.Ltmp208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp208-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp215-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp215-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp215-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp231-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp247-.Lfunc_begin0
	.quad	.Ltmp251-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp268-.Lfunc_begin0
	.quad	.Ltmp272-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp247-.Lfunc_begin0
	.quad	.Ltmp254-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp256-.Lfunc_begin0
	.quad	.Ltmp272-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp486-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp255-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp256-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Ltmp282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp279-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp279-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp279-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp287-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp287-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp293-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp293-.Lfunc_begin0
	.quad	.Ltmp306-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp392-.Lfunc_begin0
	.quad	.Ltmp393-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp305-.Lfunc_begin0
	.quad	.Ltmp315-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp315-.Lfunc_begin0
	.quad	.Ltmp316-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp343-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp363-.Lfunc_begin0
	.quad	.Ltmp370-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp378-.Lfunc_begin0
	.quad	.Ltmp387-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp387-.Lfunc_begin0
	.quad	.Ltmp406-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp406-.Lfunc_begin0
	.quad	.Ltmp407-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp453-.Lfunc_begin0
	.quad	.Ltmp454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp482-.Lfunc_begin0
	.quad	.Ltmp483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp528-.Lfunc_begin0
	.quad	.Ltmp530-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp293-.Lfunc_begin0
	.quad	.Ltmp301-.Lfunc_begin0
	.short	5                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	224                     # 5088
	.byte	39                      # 
	.byte	6                       # DW_OP_deref
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp299-.Lfunc_begin0
	.quad	.Ltmp301-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp299-.Lfunc_begin0
	.quad	.Ltmp304-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp303-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	125                     # -3
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp306-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Ltmp425-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp425-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Ltmp311-.Lfunc_begin0
	.quad	.Ltmp312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp316-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	136                     # 5000
	.byte	39                      # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp322-.Lfunc_begin0
	.quad	.Ltmp362-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	.Ltmp363-.Lfunc_begin0
	.quad	.Ltmp371-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	.Ltmp374-.Lfunc_begin0
	.quad	.Ltmp378-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp333-.Lfunc_begin0
	.quad	.Ltmp340-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp340-.Lfunc_begin0
	.quad	.Ltmp341-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp341-.Lfunc_begin0
	.quad	.Ltmp342-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp343-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp363-.Lfunc_begin0
	.quad	.Ltmp370-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp361-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp372-.Lfunc_begin0
	.quad	.Ltmp374-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 5072
	.byte	39                      # 
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp389-.Lfunc_begin0
	.quad	.Ltmp406-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp386-.Lfunc_begin0
	.quad	.Ltmp388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp387-.Lfunc_begin0
	.quad	.Ltmp403-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp403-.Lfunc_begin0
	.quad	.Ltmp404-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp389-.Lfunc_begin0
	.quad	.Ltmp406-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp418-.Lfunc_begin0
	.quad	.Ltmp420-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp428-.Lfunc_begin0
	.quad	.Ltmp431-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp431-.Lfunc_begin0
	.quad	.Ltmp435-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp437-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp437-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp442-.Lfunc_begin0
	.quad	.Ltmp447-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp445-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp446-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	125                     # -3
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp452-.Lfunc_begin0
	.quad	.Ltmp454-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp482-.Lfunc_begin0
	.quad	.Ltmp486-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp526-.Lfunc_begin0
	.quad	.Ltmp528-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp494-.Lfunc_begin0
	.quad	.Ltmp509-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp496-.Lfunc_begin0
	.quad	.Ltmp509-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Lfunc_begin2-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp869-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin2-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp866-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Lfunc_begin2-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp868-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Lfunc_begin2-.Lfunc_begin2
	.quad	.Ltmp543-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp546-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp546-.Lfunc_begin2
	.quad	.Ltmp866-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin2-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp625-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp635-.Lfunc_begin2
	.quad	.Ltmp636-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp796-.Lfunc_begin2
	.quad	.Ltmp867-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Ltmp875-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp876-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Ltmp542-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp866-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp870-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp542-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp547-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp542-.Lfunc_begin2
	.quad	.Ltmp544-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp544-.Lfunc_begin2
	.quad	.Ltmp547-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp542-.Lfunc_begin2
	.quad	.Ltmp545-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp545-.Lfunc_begin2
	.quad	.Ltmp547-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp542-.Lfunc_begin2
	.quad	.Ltmp544-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp544-.Lfunc_begin2
	.quad	.Ltmp547-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp548-.Lfunc_begin2
	.quad	.Ltmp550-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp556-.Lfunc_begin2
	.quad	.Ltmp557-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp564-.Lfunc_begin2
	.quad	.Ltmp566-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp569-.Lfunc_begin2
	.quad	.Ltmp574-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp574-.Lfunc_begin2
	.quad	.Ltmp575-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp576-.Lfunc_begin2
	.quad	.Ltmp579-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp585-.Lfunc_begin2
	.quad	.Ltmp589-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp590-.Lfunc_begin2
	.quad	.Ltmp593-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp594-.Lfunc_begin2
	.quad	.Ltmp595-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp604-.Lfunc_begin2
	.quad	.Ltmp607-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp607-.Lfunc_begin2
	.quad	.Ltmp612-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp620-.Lfunc_begin2
	.quad	.Ltmp623-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp790-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp790-.Lfunc_begin2
	.quad	.Ltmp795-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp832-.Lfunc_begin2
	.quad	.Ltmp842-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp842-.Lfunc_begin2
	.quad	.Ltmp843-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp844-.Lfunc_begin2
	.quad	.Ltmp849-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp849-.Lfunc_begin2
	.quad	.Ltmp854-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp857-.Lfunc_begin2
	.quad	.Ltmp863-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp873-.Lfunc_begin2
	.quad	.Ltmp875-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp577-.Lfunc_begin2
	.quad	.Ltmp582-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp587-.Lfunc_begin2
	.quad	.Ltmp589-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp604-.Lfunc_begin2
	.quad	.Ltmp607-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp607-.Lfunc_begin2
	.quad	.Ltmp614-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp832-.Lfunc_begin2
	.quad	.Ltmp846-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp863-.Lfunc_begin2
	.quad	.Ltmp865-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp873-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp876-.Lfunc_begin2
	.quad	.Ltmp877-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp578-.Lfunc_begin2
	.quad	.Ltmp586-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp588-.Lfunc_begin2
	.quad	.Ltmp589-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp610-.Lfunc_begin2
	.quad	.Ltmp611-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp611-.Lfunc_begin2
	.quad	.Ltmp614-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp616-.Lfunc_begin2
	.quad	.Ltmp790-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp797-.Lfunc_begin2
	.quad	.Ltmp799-.Lfunc_begin2
	.short	10                      # Loc expr size
	.byte	123                     # DW_OP_breg11
	.byte	1                       # 1
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp799-.Lfunc_begin2
	.quad	.Ltmp803-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp807-.Lfunc_begin2
	.quad	.Ltmp811-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp811-.Lfunc_begin2
	.quad	.Ltmp819-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp823-.Lfunc_begin2
	.quad	.Ltmp825-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp590-.Lfunc_begin2
	.quad	.Ltmp591-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp602-.Lfunc_begin2
	.quad	.Ltmp606-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp828-.Lfunc_begin2
	.quad	.Ltmp831-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp831-.Lfunc_begin2
	.quad	.Ltmp834-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp836-.Lfunc_begin2
	.quad	.Ltmp840-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp871-.Lfunc_begin2
	.quad	.Ltmp872-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp615-.Lfunc_begin2
	.quad	.Ltmp622-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp622-.Lfunc_begin2
	.quad	.Ltmp623-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp830-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp834-.Lfunc_begin2
	.quad	.Ltmp866-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp871-.Lfunc_begin2
	.quad	.Lfunc_end2-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp616-.Lfunc_begin2
	.quad	.Ltmp625-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp635-.Lfunc_begin2
	.quad	.Ltmp659-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp754-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp797-.Lfunc_begin2
	.quad	.Ltmp827-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp834-.Lfunc_begin2
	.quad	.Ltmp835-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp617-.Lfunc_begin2
	.quad	.Ltmp625-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp635-.Lfunc_begin2
	.quad	.Ltmp659-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp754-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp624-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp624-.Lfunc_begin2
	.quad	.Ltmp625-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp635-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp636-.Lfunc_begin2
	.quad	.Ltmp653-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp695-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp695-.Lfunc_begin2
	.quad	.Ltmp701-.Lfunc_begin2
	.short	10                      # Loc expr size
	.byte	124                     # DW_OP_breg12
	.byte	1                       # 1
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp701-.Lfunc_begin2
	.quad	.Ltmp784-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp784-.Lfunc_begin2
	.quad	.Ltmp786-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp786-.Lfunc_begin2
	.quad	.Ltmp787-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp625-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp635-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	196                     # 68
	.byte	0                       # 
	.quad	.Ltmp636-.Lfunc_begin2
	.quad	.Ltmp688-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	196                     # 68
	.byte	0                       # 
	.quad	.Ltmp688-.Lfunc_begin2
	.quad	.Ltmp689-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp689-.Lfunc_begin2
	.quad	.Ltmp787-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	196                     # 68
	.byte	0                       # 
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	196                     # 68
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp787-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp629-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp704-.Lfunc_begin2
	.quad	.Ltmp705-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp733-.Lfunc_begin2
	.quad	.Ltmp734-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp751-.Lfunc_begin2
	.quad	.Ltmp758-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp777-.Lfunc_begin2
	.quad	.Ltmp785-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp629-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp751-.Lfunc_begin2
	.quad	.Ltmp758-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp759-.Lfunc_begin2
	.quad	.Ltmp762-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp630-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp640-.Lfunc_begin2
	.quad	.Ltmp699-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp699-.Lfunc_begin2
	.quad	.Ltmp717-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp722-.Lfunc_begin2
	.quad	.Ltmp730-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp730-.Lfunc_begin2
	.quad	.Ltmp731-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp746-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp747-.Lfunc_begin2
	.quad	.Ltmp766-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp635-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	.Ltmp697-.Lfunc_begin2
	.quad	.Ltmp787-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp635-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp640-.Lfunc_begin2
	.quad	.Ltmp783-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Ltmp630-.Lfunc_begin2
	.quad	.Ltmp634-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp764-.Lfunc_begin2
	.quad	.Ltmp770-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp778-.Lfunc_begin2
	.quad	.Ltmp782-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Ltmp630-.Lfunc_begin2
	.quad	.Ltmp634-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp764-.Lfunc_begin2
	.quad	.Ltmp770-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp771-.Lfunc_begin2
	.quad	.Ltmp775-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp639-.Lfunc_begin2
	.quad	.Ltmp651-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp701-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp724-.Lfunc_begin2
	.quad	.Ltmp728-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp747-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp639-.Lfunc_begin2
	.quad	.Ltmp651-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp639-.Lfunc_begin2
	.quad	.Ltmp651-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp699-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp699-.Lfunc_begin2
	.quad	.Ltmp702-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp703-.Lfunc_begin2
	.quad	.Ltmp712-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp722-.Lfunc_begin2
	.quad	.Ltmp730-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp745-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp639-.Lfunc_begin2
	.quad	.Ltmp651-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp686-.Lfunc_begin2
	.quad	.Ltmp699-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp699-.Lfunc_begin2
	.quad	.Ltmp703-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp703-.Lfunc_begin2
	.quad	.Ltmp708-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp710-.Lfunc_begin2
	.quad	.Ltmp716-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp721-.Lfunc_begin2
	.quad	.Ltmp732-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp747-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Ltmp639-.Lfunc_begin2
	.quad	.Ltmp642-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Ltmp640-.Lfunc_begin2
	.quad	.Ltmp685-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Ltmp640-.Lfunc_begin2
	.quad	.Ltmp648-.Lfunc_begin2
	.short	12                      # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp648-.Lfunc_begin2
	.quad	.Ltmp652-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp652-.Lfunc_begin2
	.quad	.Ltmp665-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp672-.Lfunc_begin2
	.quad	.Ltmp685-.Lfunc_begin2
	.short	12                      # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp640-.Lfunc_begin2
	.quad	.Ltmp699-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp699-.Lfunc_begin2
	.quad	.Ltmp717-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp717-.Lfunc_begin2
	.quad	.Ltmp718-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp718-.Lfunc_begin2
	.quad	.Ltmp729-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp729-.Lfunc_begin2
	.quad	.Ltmp740-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp747-.Lfunc_begin2
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp652-.Lfunc_begin2
	.quad	.Ltmp653-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	118                     # DW_OP_breg6
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp658-.Lfunc_begin2
	.quad	.Ltmp663-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp671-.Lfunc_begin2
	.quad	.Ltmp676-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp676-.Lfunc_begin2
	.quad	.Ltmp679-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp680-.Lfunc_begin2
	.quad	.Ltmp681-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Ltmp653-.Lfunc_begin2
	.quad	.Ltmp668-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp673-.Lfunc_begin2
	.quad	.Ltmp685-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp657-.Lfunc_begin2
	.quad	.Ltmp664-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp676-.Lfunc_begin2
	.quad	.Ltmp682-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Ltmp691-.Lfunc_begin2
	.quad	.Ltmp693-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp694-.Lfunc_begin2
	.quad	.Ltmp695-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp710-.Lfunc_begin2
	.quad	.Ltmp715-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Ltmp719-.Lfunc_begin2
	.quad	.Ltmp724-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Ltmp724-.Lfunc_begin2
	.quad	.Ltmp727-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp744-.Lfunc_begin2
	.quad	.Ltmp747-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp732-.Lfunc_begin2
	.quad	.Ltmp735-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp739-.Lfunc_begin2
	.quad	.Ltmp743-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Ltmp760-.Lfunc_begin2
	.quad	.Ltmp763-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp772-.Lfunc_begin2
	.quad	.Ltmp776-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp787-.Lfunc_begin2
	.quad	.Ltmp790-.Lfunc_begin2
	.short	3                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	32                      # DW_OP_not
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp790-.Lfunc_begin2
	.quad	.Ltmp791-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp791-.Lfunc_begin2
	.quad	.Ltmp795-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp795-.Lfunc_begin2
	.quad	.Ltmp796-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp791-.Lfunc_begin2
	.quad	.Ltmp796-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Lfunc_begin3-.Lfunc_begin2
	.quad	.Ltmp883-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp883-.Lfunc_begin2
	.quad	.Ltmp938-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp938-.Lfunc_begin2
	.quad	.Ltmp941-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp949-.Lfunc_begin2
	.quad	.Ltmp1005-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1005-.Lfunc_begin2
	.quad	.Ltmp1018-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1018-.Lfunc_begin2
	.quad	.Ltmp1040-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1044-.Lfunc_begin2
	.quad	.Lfunc_end3-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Lfunc_begin3-.Lfunc_begin2
	.quad	.Ltmp884-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp884-.Lfunc_begin2
	.quad	.Ltmp885-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp889-.Lfunc_begin2
	.quad	.Ltmp890-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp894-.Lfunc_begin2
	.quad	.Ltmp895-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp899-.Lfunc_begin2
	.quad	.Ltmp900-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp904-.Lfunc_begin2
	.quad	.Ltmp905-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp909-.Lfunc_begin2
	.quad	.Ltmp910-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp914-.Lfunc_begin2
	.quad	.Ltmp915-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp919-.Lfunc_begin2
	.quad	.Ltmp920-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp924-.Lfunc_begin2
	.quad	.Ltmp925-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp929-.Lfunc_begin2
	.quad	.Ltmp930-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp934-.Lfunc_begin2
	.quad	.Ltmp935-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp939-.Lfunc_begin2
	.quad	.Ltmp942-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp950-.Lfunc_begin2
	.quad	.Ltmp954-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp958-.Lfunc_begin2
	.quad	.Ltmp962-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp966-.Lfunc_begin2
	.quad	.Ltmp970-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp974-.Lfunc_begin2
	.quad	.Ltmp978-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp982-.Lfunc_begin2
	.quad	.Ltmp986-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp990-.Lfunc_begin2
	.quad	.Ltmp994-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp998-.Lfunc_begin2
	.quad	.Ltmp1002-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1006-.Lfunc_begin2
	.quad	.Ltmp1018-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1044-.Lfunc_begin2
	.quad	.Ltmp1045-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1050-.Lfunc_begin2
	.quad	.Ltmp1051-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1056-.Lfunc_begin2
	.quad	.Ltmp1057-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1062-.Lfunc_begin2
	.quad	.Ltmp1063-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1068-.Lfunc_begin2
	.quad	.Ltmp1069-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1074-.Lfunc_begin2
	.quad	.Ltmp1075-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1080-.Lfunc_begin2
	.quad	.Ltmp1081-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Lfunc_begin3-.Lfunc_begin2
	.quad	.Lfunc_end3-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp880-.Lfunc_begin2
	.quad	.Ltmp884-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp885-.Lfunc_begin2
	.quad	.Ltmp889-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp890-.Lfunc_begin2
	.quad	.Ltmp894-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp895-.Lfunc_begin2
	.quad	.Ltmp899-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp900-.Lfunc_begin2
	.quad	.Ltmp904-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp905-.Lfunc_begin2
	.quad	.Ltmp909-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp910-.Lfunc_begin2
	.quad	.Ltmp914-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp915-.Lfunc_begin2
	.quad	.Ltmp919-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp920-.Lfunc_begin2
	.quad	.Ltmp924-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp925-.Lfunc_begin2
	.quad	.Ltmp929-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp930-.Lfunc_begin2
	.quad	.Ltmp934-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp935-.Lfunc_begin2
	.quad	.Ltmp946-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp951-.Lfunc_begin2
	.quad	.Ltmp1009-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1016-.Lfunc_begin2
	.quad	.Ltmp1017-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1018-.Lfunc_begin2
	.quad	.Ltmp1019-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1020-.Lfunc_begin2
	.quad	.Ltmp1021-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1022-.Lfunc_begin2
	.quad	.Ltmp1023-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1024-.Lfunc_begin2
	.quad	.Ltmp1025-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1026-.Lfunc_begin2
	.quad	.Ltmp1027-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1028-.Lfunc_begin2
	.quad	.Ltmp1029-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1030-.Lfunc_begin2
	.quad	.Ltmp1031-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1032-.Lfunc_begin2
	.quad	.Ltmp1033-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1034-.Lfunc_begin2
	.quad	.Ltmp1035-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1036-.Lfunc_begin2
	.quad	.Ltmp1037-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1038-.Lfunc_begin2
	.quad	.Ltmp1039-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1040-.Lfunc_begin2
	.quad	.Ltmp1041-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1044-.Lfunc_begin2
	.quad	.Ltmp1046-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1047-.Lfunc_begin2
	.quad	.Ltmp1049-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1050-.Lfunc_begin2
	.quad	.Ltmp1052-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1053-.Lfunc_begin2
	.quad	.Ltmp1055-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1056-.Lfunc_begin2
	.quad	.Ltmp1058-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1059-.Lfunc_begin2
	.quad	.Ltmp1061-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1062-.Lfunc_begin2
	.quad	.Ltmp1064-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1065-.Lfunc_begin2
	.quad	.Ltmp1067-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1068-.Lfunc_begin2
	.quad	.Ltmp1070-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1071-.Lfunc_begin2
	.quad	.Ltmp1073-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1074-.Lfunc_begin2
	.quad	.Ltmp1076-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1077-.Lfunc_begin2
	.quad	.Ltmp1079-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1080-.Lfunc_begin2
	.quad	.Ltmp1082-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1083-.Lfunc_begin2
	.quad	.Ltmp1085-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Ltmp940-.Lfunc_begin2
	.quad	.Ltmp1014-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1040-.Lfunc_begin2
	.quad	.Lfunc_end3-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp946-.Lfunc_begin2
	.quad	.Ltmp950-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp954-.Lfunc_begin2
	.quad	.Ltmp958-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp962-.Lfunc_begin2
	.quad	.Ltmp966-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp970-.Lfunc_begin2
	.quad	.Ltmp974-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp978-.Lfunc_begin2
	.quad	.Ltmp982-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp986-.Lfunc_begin2
	.quad	.Ltmp990-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp994-.Lfunc_begin2
	.quad	.Ltmp998-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1002-.Lfunc_begin2
	.quad	.Ltmp1007-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1042-.Lfunc_begin2
	.quad	.Ltmp1043-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1047-.Lfunc_begin2
	.quad	.Ltmp1048-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1053-.Lfunc_begin2
	.quad	.Ltmp1054-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1059-.Lfunc_begin2
	.quad	.Ltmp1060-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1065-.Lfunc_begin2
	.quad	.Ltmp1066-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1071-.Lfunc_begin2
	.quad	.Ltmp1072-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1077-.Lfunc_begin2
	.quad	.Ltmp1078-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1083-.Lfunc_begin2
	.quad	.Ltmp1084-.Lfunc_begin2
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Lfunc_begin7-.Lfunc_begin4
	.quad	.Ltmp1094-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1094-.Lfunc_begin4
	.quad	.Ltmp1095-.Lfunc_begin4
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Lfunc_begin11-.Lfunc_begin11
	.quad	.Ltmp1103-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1103-.Lfunc_begin11
	.quad	.Lfunc_end11-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Lfunc_begin12-.Lfunc_begin11
	.quad	.Ltmp1110-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Lfunc_begin12-.Lfunc_begin11
	.quad	.Ltmp1109-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Lfunc_begin14-.Lfunc_begin11
	.quad	.Ltmp1132-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1136-.Lfunc_begin11
	.quad	.Ltmp1144-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1160-.Lfunc_begin11
	.quad	.Ltmp1169-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1210-.Lfunc_begin11
	.quad	.Ltmp1213-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1249-.Lfunc_begin11
	.quad	.Ltmp1254-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1266-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1279-.Lfunc_begin11
	.quad	.Ltmp1284-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1285-.Lfunc_begin11
	.quad	.Ltmp1298-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1345-.Lfunc_begin11
	.quad	.Ltmp1353-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1464-.Lfunc_begin11
	.quad	.Ltmp1470-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1482-.Lfunc_begin11
	.quad	.Ltmp1489-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1498-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2862-.Lfunc_begin11
	.quad	.Ltmp2863-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp2863-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2864-.Lfunc_begin11
	.quad	.Lfunc_end14-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp1119-.Lfunc_begin11
	.quad	.Ltmp1121-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	200                     # 1096
	.byte	8                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp1129-.Lfunc_begin11
	.quad	.Ltmp1132-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp1131-.Lfunc_begin11
	.quad	.Ltmp2124-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2124-.Lfunc_begin11
	.quad	.Ltmp2810-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp1153-.Lfunc_begin11
	.quad	.Ltmp1156-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Ltmp1153-.Lfunc_begin11
	.quad	.Ltmp1156-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1263-.Lfunc_begin11
	.quad	.Ltmp1266-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1622-.Lfunc_begin11
	.quad	.Ltmp1625-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1758-.Lfunc_begin11
	.quad	.Ltmp1761-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1778-.Lfunc_begin11
	.quad	.Ltmp1781-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1794-.Lfunc_begin11
	.quad	.Ltmp1797-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1810-.Lfunc_begin11
	.quad	.Ltmp1813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1826-.Lfunc_begin11
	.quad	.Ltmp1829-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1842-.Lfunc_begin11
	.quad	.Ltmp1846-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1992-.Lfunc_begin11
	.quad	.Ltmp1995-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2008-.Lfunc_begin11
	.quad	.Ltmp2011-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2024-.Lfunc_begin11
	.quad	.Ltmp2027-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2040-.Lfunc_begin11
	.quad	.Ltmp2043-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2056-.Lfunc_begin11
	.quad	.Ltmp2060-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2564-.Lfunc_begin11
	.quad	.Ltmp2579-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	199                     # 71
	.byte	0                       # 
	.quad	.Ltmp2584-.Lfunc_begin11
	.quad	.Ltmp2589-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2646-.Lfunc_begin11
	.quad	.Ltmp2653-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	199                     # 71
	.byte	0                       # 
	.quad	.Ltmp2653-.Lfunc_begin11
	.quad	.Ltmp2684-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2684-.Lfunc_begin11
	.quad	.Ltmp2694-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	199                     # 71
	.byte	0                       # 
	.quad	.Ltmp2694-.Lfunc_begin11
	.quad	.Ltmp2700-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2748-.Lfunc_begin11
	.quad	.Ltmp2752-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	199                     # 71
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Ltmp1169-.Lfunc_begin11
	.quad	.Ltmp1172-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1178-.Lfunc_begin11
	.quad	.Ltmp1187-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1208-.Lfunc_begin11
	.quad	.Ltmp1210-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1224-.Lfunc_begin11
	.quad	.Ltmp1233-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1239-.Lfunc_begin11
	.quad	.Ltmp1248-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Ltmp1172-.Lfunc_begin11
	.quad	.Ltmp1173-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1173-.Lfunc_begin11
	.quad	.Ltmp1181-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Ltmp1172-.Lfunc_begin11
	.quad	.Ltmp1173-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1173-.Lfunc_begin11
	.quad	.Ltmp1176-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1177-.Lfunc_begin11
	.quad	.Ltmp1181-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Ltmp1174-.Lfunc_begin11
	.quad	.Ltmp1179-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp1188-.Lfunc_begin11
	.quad	.Ltmp1196-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp1188-.Lfunc_begin11
	.quad	.Ltmp1191-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1192-.Lfunc_begin11
	.quad	.Ltmp1196-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Ltmp1189-.Lfunc_begin11
	.quad	.Ltmp1194-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Ltmp1197-.Lfunc_begin11
	.quad	.Ltmp1207-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp1198-.Lfunc_begin11
	.quad	.Ltmp1199-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1199-.Lfunc_begin11
	.quad	.Ltmp1207-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp1198-.Lfunc_begin11
	.quad	.Ltmp1199-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1199-.Lfunc_begin11
	.quad	.Ltmp1202-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1203-.Lfunc_begin11
	.quad	.Ltmp1207-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp1200-.Lfunc_begin11
	.quad	.Ltmp1205-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Ltmp1218-.Lfunc_begin11
	.quad	.Ltmp1219-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1219-.Lfunc_begin11
	.quad	.Ltmp1226-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp1218-.Lfunc_begin11
	.quad	.Ltmp1219-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1219-.Lfunc_begin11
	.quad	.Ltmp1222-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1223-.Lfunc_begin11
	.quad	.Ltmp1226-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Ltmp1220-.Lfunc_begin11
	.quad	.Ltmp1226-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Ltmp1227-.Lfunc_begin11
	.quad	.Ltmp1230-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp1233-.Lfunc_begin11
	.quad	.Ltmp1234-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1234-.Lfunc_begin11
	.quad	.Ltmp1242-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp1233-.Lfunc_begin11
	.quad	.Ltmp1234-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1234-.Lfunc_begin11
	.quad	.Ltmp1237-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1238-.Lfunc_begin11
	.quad	.Ltmp1242-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp1235-.Lfunc_begin11
	.quad	.Ltmp1240-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp1243-.Lfunc_begin11
	.quad	.Ltmp1246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp1263-.Lfunc_begin11
	.quad	.Ltmp1266-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp1267-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1494-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1496-.Lfunc_begin11
	.quad	.Ltmp1507-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1508-.Lfunc_begin11
	.quad	.Ltmp1512-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1512-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Ltmp1268-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1499-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1499-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp1501-.Lfunc_begin11
	.quad	.Ltmp1511-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1512-.Lfunc_begin11
	.quad	.Ltmp1516-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp1516-.Lfunc_begin11
	.quad	.Ltmp1549-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1549-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1739-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1739-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Ltmp1269-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1477-.Lfunc_begin11
	.quad	.Ltmp1485-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1485-.Lfunc_begin11
	.quad	.Ltmp1490-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp1498-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1526-.Lfunc_begin11
	.quad	.Ltmp1537-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1537-.Lfunc_begin11
	.quad	.Ltmp1549-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1549-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Ltmp1270-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1481-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1481-.Lfunc_begin11
	.quad	.Ltmp1482-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1482-.Lfunc_begin11
	.quad	.Ltmp1499-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1499-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	10                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	4                       # 4
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1501-.Lfunc_begin11
	.quad	.Ltmp1512-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1512-.Lfunc_begin11
	.quad	.Ltmp1514-.Lfunc_begin11
	.short	10                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	4                       # 4
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1514-.Lfunc_begin11
	.quad	.Ltmp1520-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1520-.Lfunc_begin11
	.quad	.Ltmp1525-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1526-.Lfunc_begin11
	.quad	.Ltmp1529-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1529-.Lfunc_begin11
	.quad	.Ltmp1535-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1535-.Lfunc_begin11
	.quad	.Ltmp1540-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1540-.Lfunc_begin11
	.quad	.Ltmp1546-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1546-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1739-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp1739-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Ltmp1271-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1479-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1479-.Lfunc_begin11
	.quad	.Ltmp1499-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1499-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1501-.Lfunc_begin11
	.quad	.Ltmp1512-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1512-.Lfunc_begin11
	.quad	.Ltmp1548-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1548-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1739-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1739-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Ltmp1272-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1482-.Lfunc_begin11
	.quad	.Ltmp1495-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1498-.Lfunc_begin11
	.quad	.Ltmp1503-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Ltmp1273-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1475-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1478-.Lfunc_begin11
	.quad	.Ltmp1527-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1528-.Lfunc_begin11
	.quad	.Ltmp1533-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1533-.Lfunc_begin11
	.quad	.Ltmp1538-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1539-.Lfunc_begin11
	.quad	.Ltmp1544-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1544-.Lfunc_begin11
	.quad	.Ltmp1548-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1548-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Ltmp1274-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1490-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1498-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1503-.Lfunc_begin11
	.quad	.Ltmp1548-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1549-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Ltmp1275-.Lfunc_begin11
	.quad	.Ltmp1277-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1277-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Ltmp1275-.Lfunc_begin11
	.quad	.Ltmp1277-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1277-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1488-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1498-.Lfunc_begin11
	.quad	.Ltmp1501-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1503-.Lfunc_begin11
	.quad	.Ltmp1548-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1549-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1737-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1739-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2139-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc217:
	.quad	.Ltmp1276-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1549-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp1736-.Lfunc_begin11
	.quad	.Ltmp1740-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp1740-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc218:
	.quad	.Ltmp1353-.Lfunc_begin11
	.quad	.Ltmp1354-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1354-.Lfunc_begin11
	.quad	.Ltmp1362-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc219:
	.quad	.Ltmp1353-.Lfunc_begin11
	.quad	.Ltmp1354-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1354-.Lfunc_begin11
	.quad	.Ltmp1357-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1358-.Lfunc_begin11
	.quad	.Ltmp1362-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc220:
	.quad	.Ltmp1355-.Lfunc_begin11
	.quad	.Ltmp1360-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc221:
	.quad	.Ltmp1363-.Lfunc_begin11
	.quad	.Ltmp1366-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc222:
	.quad	.Ltmp1376-.Lfunc_begin11
	.quad	.Ltmp1377-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1377-.Lfunc_begin11
	.quad	.Ltmp1385-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc223:
	.quad	.Ltmp1376-.Lfunc_begin11
	.quad	.Ltmp1377-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1377-.Lfunc_begin11
	.quad	.Ltmp1380-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1381-.Lfunc_begin11
	.quad	.Ltmp1385-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc224:
	.quad	.Ltmp1378-.Lfunc_begin11
	.quad	.Ltmp1383-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc225:
	.quad	.Ltmp1386-.Lfunc_begin11
	.quad	.Ltmp1389-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc226:
	.quad	.Ltmp1405-.Lfunc_begin11
	.quad	.Ltmp1406-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1406-.Lfunc_begin11
	.quad	.Ltmp1414-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc227:
	.quad	.Ltmp1405-.Lfunc_begin11
	.quad	.Ltmp1406-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1406-.Lfunc_begin11
	.quad	.Ltmp1409-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1410-.Lfunc_begin11
	.quad	.Ltmp1414-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc228:
	.quad	.Ltmp1407-.Lfunc_begin11
	.quad	.Ltmp1412-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc229:
	.quad	.Ltmp1427-.Lfunc_begin11
	.quad	.Ltmp1435-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc230:
	.quad	.Ltmp1427-.Lfunc_begin11
	.quad	.Ltmp1430-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1431-.Lfunc_begin11
	.quad	.Ltmp1435-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc231:
	.quad	.Ltmp1428-.Lfunc_begin11
	.quad	.Ltmp1433-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc232:
	.quad	.Ltmp1436-.Lfunc_begin11
	.quad	.Ltmp1439-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc233:
	.quad	.Ltmp1443-.Lfunc_begin11
	.quad	.Ltmp1444-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1444-.Lfunc_begin11
	.quad	.Ltmp1452-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc234:
	.quad	.Ltmp1443-.Lfunc_begin11
	.quad	.Ltmp1444-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1444-.Lfunc_begin11
	.quad	.Ltmp1447-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1448-.Lfunc_begin11
	.quad	.Ltmp1452-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc235:
	.quad	.Ltmp1445-.Lfunc_begin11
	.quad	.Ltmp1450-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc236:
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1474-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1533-.Lfunc_begin11
	.quad	.Ltmp1538-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1544-.Lfunc_begin11
	.quad	.Ltmp1548-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc237:
	.quad	.Ltmp1566-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1678-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp1678-.Lfunc_begin11
	.quad	.Ltmp1679-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1679-.Lfunc_begin11
	.quad	.Ltmp1713-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp1713-.Lfunc_begin11
	.quad	.Ltmp1718-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1718-.Lfunc_begin11
	.quad	.Ltmp1731-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1735-.Lfunc_begin11
	.quad	.Ltmp1736-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2125-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	.Ltmp2143-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2143-.Lfunc_begin11
	.quad	.Ltmp2144-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2177-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2177-.Lfunc_begin11
	.quad	.Ltmp2179-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2179-.Lfunc_begin11
	.quad	.Ltmp2184-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2184-.Lfunc_begin11
	.quad	.Ltmp2200-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2200-.Lfunc_begin11
	.quad	.Ltmp2204-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2302-.Lfunc_begin11
	.quad	.Ltmp2303-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2304-.Lfunc_begin11
	.quad	.Ltmp2306-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2307-.Lfunc_begin11
	.quad	.Ltmp2338-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2362-.Lfunc_begin11
	.quad	.Ltmp2364-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2365-.Lfunc_begin11
	.quad	.Ltmp2369-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2369-.Lfunc_begin11
	.quad	.Ltmp2371-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2372-.Lfunc_begin11
	.quad	.Ltmp2383-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2383-.Lfunc_begin11
	.quad	.Ltmp2384-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2413-.Lfunc_begin11
	.quad	.Ltmp2416-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2417-.Lfunc_begin11
	.quad	.Ltmp2418-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2431-.Lfunc_begin11
	.quad	.Ltmp2447-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2448-.Lfunc_begin11
	.quad	.Ltmp2456-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2456-.Lfunc_begin11
	.quad	.Ltmp2458-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2458-.Lfunc_begin11
	.quad	.Ltmp2474-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2478-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2480-.Lfunc_begin11
	.quad	.Ltmp2516-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2516-.Lfunc_begin11
	.quad	.Ltmp2517-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2527-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2527-.Lfunc_begin11
	.quad	.Ltmp2531-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2536-.Lfunc_begin11
	.quad	.Ltmp2538-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2541-.Lfunc_begin11
	.quad	.Ltmp2542-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2542-.Lfunc_begin11
	.quad	.Ltmp2545-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2545-.Lfunc_begin11
	.quad	.Ltmp2546-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2546-.Lfunc_begin11
	.quad	.Ltmp2548-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2552-.Lfunc_begin11
	.quad	.Ltmp2589-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2594-.Lfunc_begin11
	.quad	.Ltmp2597-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2597-.Lfunc_begin11
	.quad	.Ltmp2598-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2598-.Lfunc_begin11
	.quad	.Ltmp2602-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2602-.Lfunc_begin11
	.quad	.Ltmp2610-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2613-.Lfunc_begin11
	.quad	.Ltmp2616-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2617-.Lfunc_begin11
	.quad	.Ltmp2623-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2624-.Lfunc_begin11
	.quad	.Ltmp2625-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2646-.Lfunc_begin11
	.quad	.Ltmp2738-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2748-.Lfunc_begin11
	.quad	.Ltmp2752-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2755-.Lfunc_begin11
	.quad	.Ltmp2765-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2765-.Lfunc_begin11
	.quad	.Ltmp2766-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2769-.Lfunc_begin11
	.quad	.Ltmp2772-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2774-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc238:
	.quad	.Ltmp1567-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1683-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp1683-.Lfunc_begin11
	.quad	.Ltmp1684-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1684-.Lfunc_begin11
	.quad	.Ltmp1700-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp1700-.Lfunc_begin11
	.quad	.Ltmp1704-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1704-.Lfunc_begin11
	.quad	.Ltmp1736-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2125-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	.Ltmp2144-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2362-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2448-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2448-.Lfunc_begin11
	.quad	.Ltmp2449-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2449-.Lfunc_begin11
	.quad	.Ltmp2472-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2472-.Lfunc_begin11
	.quad	.Ltmp2473-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2473-.Lfunc_begin11
	.quad	.Ltmp2474-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2614-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2614-.Lfunc_begin11
	.quad	.Ltmp2615-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2615-.Lfunc_begin11
	.quad	.Ltmp2616-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2616-.Lfunc_begin11
	.quad	.Ltmp2617-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2617-.Lfunc_begin11
	.quad	.Ltmp2618-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2618-.Lfunc_begin11
	.quad	.Ltmp2622-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2622-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc239:
	.quad	.Ltmp1568-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp1735-.Lfunc_begin11
	.quad	.Ltmp2145-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2159-.Lfunc_begin11
	.quad	.Ltmp2162-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2162-.Lfunc_begin11
	.quad	.Ltmp2179-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2179-.Lfunc_begin11
	.quad	.Ltmp2184-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2184-.Lfunc_begin11
	.quad	.Ltmp2185-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2185-.Lfunc_begin11
	.quad	.Ltmp2187-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2187-.Lfunc_begin11
	.quad	.Ltmp2297-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2303-.Lfunc_begin11
	.quad	.Ltmp2362-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2479-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2479-.Lfunc_begin11
	.quad	.Ltmp2480-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2480-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # 136
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc240:
	.quad	.Ltmp1569-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1736-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2125-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	.Ltmp2144-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2362-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2431-.Lfunc_begin11
	.quad	.Ltmp2447-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc241:
	.quad	.Ltmp1570-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1725-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2125-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	.Ltmp2144-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2210-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2302-.Lfunc_begin11
	.quad	.Ltmp2303-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2444-.Lfunc_begin11
	.quad	.Ltmp2447-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2553-.Lfunc_begin11
	.quad	.Ltmp2560-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2589-.Lfunc_begin11
	.quad	.Ltmp2596-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2738-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2752-.Lfunc_begin11
	.quad	.Ltmp2753-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2780-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc242:
	.quad	.Ltmp1571-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp1673-.Lfunc_begin11
	.quad	.Ltmp1675-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1678-.Lfunc_begin11
	.quad	.Ltmp1681-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1681-.Lfunc_begin11
	.quad	.Ltmp1736-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2126-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	.Ltmp2144-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2159-.Lfunc_begin11
	.quad	.Ltmp2161-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp2161-.Lfunc_begin11
	.quad	.Ltmp2362-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	0
	.quad	0
.Ldebug_loc243:
	.quad	.Ltmp1572-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	0
	.quad	0
.Ldebug_loc244:
	.quad	.Ltmp1573-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2304-.Lfunc_begin11
	.quad	.Ltmp2327-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	32                      # DW_OP_not
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2327-.Lfunc_begin11
	.quad	.Ltmp2338-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2706-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2706-.Lfunc_begin11
	.quad	.Ltmp2710-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2712-.Lfunc_begin11
	.quad	.Ltmp2792-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2792-.Lfunc_begin11
	.quad	.Ltmp2796-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2798-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2837-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp2837-.Lfunc_begin11
	.quad	.Ltmp2838-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2839-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc245:
	.quad	.Ltmp1574-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2304-.Lfunc_begin11
	.quad	.Ltmp2330-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2330-.Lfunc_begin11
	.quad	.Ltmp2335-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	50                      # 50
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2335-.Lfunc_begin11
	.quad	.Ltmp2338-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	49                      # 49
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2709-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2709-.Lfunc_begin11
	.quad	.Ltmp2712-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	50                      # 50
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2712-.Lfunc_begin11
	.quad	.Ltmp2714-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2714-.Lfunc_begin11
	.quad	.Ltmp2782-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2782-.Lfunc_begin11
	.quad	.Ltmp2794-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2794-.Lfunc_begin11
	.quad	.Ltmp2798-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	50                      # 50
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2798-.Lfunc_begin11
	.quad	.Ltmp2800-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2800-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2837-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp2837-.Lfunc_begin11
	.quad	.Ltmp2839-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2839-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc246:
	.quad	.Ltmp1575-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2522-.Lfunc_begin11
	.quad	.Ltmp2552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2553-.Lfunc_begin11
	.quad	.Ltmp2572-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2579-.Lfunc_begin11
	.quad	.Ltmp2596-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2653-.Lfunc_begin11
	.quad	.Ltmp2684-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2738-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2752-.Lfunc_begin11
	.quad	.Ltmp2754-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2780-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc247:
	.quad	.Ltmp1576-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2553-.Lfunc_begin11
	.quad	.Ltmp2571-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2579-.Lfunc_begin11
	.quad	.Ltmp2584-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2589-.Lfunc_begin11
	.quad	.Ltmp2596-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2738-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2752-.Lfunc_begin11
	.quad	.Ltmp2754-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2780-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc248:
	.quad	.Ltmp1577-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2327-.Lfunc_begin11
	.quad	.Ltmp2338-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2701-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2701-.Lfunc_begin11
	.quad	.Ltmp2715-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2782-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2782-.Lfunc_begin11
	.quad	.Ltmp2801-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2801-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2837-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2837-.Lfunc_begin11
	.quad	.Ltmp2839-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2839-.Lfunc_begin11
	.quad	.Ltmp2846-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2846-.Lfunc_begin11
	.quad	.Ltmp2849-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2851-.Lfunc_begin11
	.quad	.Ltmp2853-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp2853-.Lfunc_begin11
	.quad	.Ltmp2856-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2860-.Lfunc_begin11
	.quad	.Ltmp2861-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2861-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	0
	.quad	0
.Ldebug_loc249:
	.quad	.Ltmp1578-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2522-.Lfunc_begin11
	.quad	.Ltmp2782-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2782-.Lfunc_begin11
	.quad	.Ltmp2791-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2801-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2837-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2839-.Lfunc_begin11
	.quad	.Ltmp2840-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp2840-.Lfunc_begin11
	.quad	.Ltmp2850-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2851-.Lfunc_begin11
	.quad	.Ltmp2857-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2860-.Lfunc_begin11
	.quad	.Ltmp2861-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc250:
	.quad	.Ltmp1579-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2522-.Lfunc_begin11
	.quad	.Ltmp2552-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2553-.Lfunc_begin11
	.quad	.Ltmp2555-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2556-.Lfunc_begin11
	.quad	.Ltmp2596-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2646-.Lfunc_begin11
	.quad	.Ltmp2687-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2738-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2748-.Lfunc_begin11
	.quad	.Ltmp2754-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2782-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc251:
	.quad	.Ltmp1580-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2159-.Lfunc_begin11
	.quad	.Ltmp2163-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2163-.Lfunc_begin11
	.quad	.Ltmp2176-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2176-.Lfunc_begin11
	.quad	.Ltmp2178-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2178-.Lfunc_begin11
	.quad	.Ltmp2183-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2302-.Lfunc_begin11
	.quad	.Ltmp2303-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2474-.Lfunc_begin11
	.quad	.Ltmp2481-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2481-.Lfunc_begin11
	.quad	.Ltmp2512-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2512-.Lfunc_begin11
	.quad	.Ltmp2513-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2513-.Lfunc_begin11
	.quad	.Ltmp2514-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2514-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # 168
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc252:
	.quad	.Ltmp1581-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	212                     # 212
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	212                     # 212
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	212                     # 212
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	212                     # 212
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc253:
	.quad	.Ltmp1582-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2331-.Lfunc_begin11
	.quad	.Ltmp2336-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2336-.Lfunc_begin11
	.quad	.Ltmp2338-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2338-.Lfunc_begin11
	.quad	.Ltmp2351-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2351-.Lfunc_begin11
	.quad	.Ltmp2360-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2360-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2518-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2518-.Lfunc_begin11
	.quad	.Ltmp2519-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2519-.Lfunc_begin11
	.quad	.Ltmp2520-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2520-.Lfunc_begin11
	.quad	.Ltmp2712-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2712-.Lfunc_begin11
	.quad	.Ltmp2715-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2715-.Lfunc_begin11
	.quad	.Ltmp2728-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2728-.Lfunc_begin11
	.quad	.Ltmp2737-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2737-.Lfunc_begin11
	.quad	.Ltmp2798-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2798-.Lfunc_begin11
	.quad	.Ltmp2801-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2801-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2818-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2818-.Lfunc_begin11
	.quad	.Ltmp2827-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2827-.Lfunc_begin11
	.quad	.Ltmp2828-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp2828-.Lfunc_begin11
	.quad	.Ltmp2829-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2829-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc254:
	.quad	.Ltmp1583-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2158-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2158-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2350-.Lfunc_begin11
	.quad	.Ltmp2356-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2397-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2397-.Lfunc_begin11
	.quad	.Ltmp2398-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2398-.Lfunc_begin11
	.quad	.Ltmp2411-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2411-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2519-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2522-.Lfunc_begin11
	.quad	.Ltmp2727-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2727-.Lfunc_begin11
	.quad	.Ltmp2733-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2738-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2817-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	.Ltmp2817-.Lfunc_begin11
	.quad	.Ltmp2823-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2837-.Lfunc_begin11
	.quad	.Ltmp2839-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	240                     # 112
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc255:
	.quad	.Ltmp1584-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2156-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2156-.Lfunc_begin11
	.quad	.Ltmp2158-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2351-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2395-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2395-.Lfunc_begin11
	.quad	.Ltmp2397-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2398-.Lfunc_begin11
	.quad	.Ltmp2409-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2409-.Lfunc_begin11
	.quad	.Ltmp2411-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc256:
	.quad	.Ltmp1585-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2335-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2710-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2710-.Lfunc_begin11
	.quad	.Ltmp2711-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2711-.Lfunc_begin11
	.quad	.Ltmp2795-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2795-.Lfunc_begin11
	.quad	.Ltmp2797-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2797-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	200                     # 200
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc257:
	.quad	.Ltmp1586-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2331-.Lfunc_begin11
	.quad	.Ltmp2336-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2336-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc258:
	.quad	.Ltmp1587-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2334-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # 160
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc259:
	.quad	.Ltmp1588-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2332-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc260:
	.quad	.Ltmp1589-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1599-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1609-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp1646-.Lfunc_begin11
	.quad	.Ltmp1664-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2145-.Lfunc_begin11
	.quad	.Ltmp2159-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2333-.Lfunc_begin11
	.quad	.Ltmp2361-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2384-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2517-.Lfunc_begin11
	.quad	.Ltmp2809-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2813-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2862-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc261:
	.quad	.Ltmp1622-.Lfunc_begin11
	.quad	.Ltmp1625-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc262:
	.quad	.Ltmp1638-.Lfunc_begin11
	.quad	.Ltmp1640-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc263:
	.quad	.Ltmp1673-.Lfunc_begin11
	.quad	.Ltmp1675-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc264:
	.quad	.Ltmp1705-.Lfunc_begin11
	.quad	.Ltmp1709-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1709-.Lfunc_begin11
	.quad	.Ltmp1710-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1711-.Lfunc_begin11
	.quad	.Ltmp1713-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1724-.Lfunc_begin11
	.quad	.Ltmp1726-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1728-.Lfunc_begin11
	.quad	.Ltmp1729-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc265:
	.quad	.Ltmp1720-.Lfunc_begin11
	.quad	.Ltmp1734-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc266:
	.quad	.Ltmp1758-.Lfunc_begin11
	.quad	.Ltmp1760-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc267:
	.quad	.Ltmp1778-.Lfunc_begin11
	.quad	.Ltmp1781-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc268:
	.quad	.Ltmp1794-.Lfunc_begin11
	.quad	.Ltmp1797-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc269:
	.quad	.Ltmp1810-.Lfunc_begin11
	.quad	.Ltmp1813-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc270:
	.quad	.Ltmp1826-.Lfunc_begin11
	.quad	.Ltmp1829-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc271:
	.quad	.Ltmp1842-.Lfunc_begin11
	.quad	.Ltmp1845-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc272:
	.quad	.Ltmp1864-.Lfunc_begin11
	.quad	.Ltmp1866-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc273:
	.quad	.Ltmp1880-.Lfunc_begin11
	.quad	.Ltmp1882-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc274:
	.quad	.Ltmp1896-.Lfunc_begin11
	.quad	.Ltmp1898-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc275:
	.quad	.Ltmp1912-.Lfunc_begin11
	.quad	.Ltmp1914-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc276:
	.quad	.Ltmp1928-.Lfunc_begin11
	.quad	.Ltmp1929-.Lfunc_begin11
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc277:
	.quad	.Ltmp1944-.Lfunc_begin11
	.quad	.Ltmp1946-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc278:
	.quad	.Ltmp1960-.Lfunc_begin11
	.quad	.Ltmp1962-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc279:
	.quad	.Ltmp1976-.Lfunc_begin11
	.quad	.Ltmp1980-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc280:
	.quad	.Ltmp1992-.Lfunc_begin11
	.quad	.Ltmp1995-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc281:
	.quad	.Ltmp2008-.Lfunc_begin11
	.quad	.Ltmp2011-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc282:
	.quad	.Ltmp2024-.Lfunc_begin11
	.quad	.Ltmp2027-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc283:
	.quad	.Ltmp2040-.Lfunc_begin11
	.quad	.Ltmp2043-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc284:
	.quad	.Ltmp2056-.Lfunc_begin11
	.quad	.Ltmp2059-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc285:
	.quad	.Ltmp2073-.Lfunc_begin11
	.quad	.Ltmp2075-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc286:
	.quad	.Ltmp2089-.Lfunc_begin11
	.quad	.Ltmp2091-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc287:
	.quad	.Ltmp2105-.Lfunc_begin11
	.quad	.Ltmp2107-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc288:
	.quad	.Ltmp2121-.Lfunc_begin11
	.quad	.Ltmp2123-.Lfunc_begin11
	.short	14                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	16                      # DW_OP_constu
	.byte	255                     # 255
	.byte	1                       # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc289:
	.quad	.Ltmp2156-.Lfunc_begin11
	.quad	.Ltmp2158-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc290:
	.quad	.Ltmp2159-.Lfunc_begin11
	.quad	.Ltmp2163-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	220                     # 92
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc291:
	.quad	.Ltmp2176-.Lfunc_begin11
	.quad	.Ltmp2178-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2178-.Lfunc_begin11
	.quad	.Ltmp2179-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc292:
	.quad	.Ltmp2184-.Lfunc_begin11
	.quad	.Ltmp2200-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	32                      # 32
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2200-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc293:
	.quad	.Ltmp2184-.Lfunc_begin11
	.quad	.Ltmp2200-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2200-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc294:
	.quad	.Ltmp2191-.Lfunc_begin11
	.quad	.Ltmp2192-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2207-.Lfunc_begin11
	.quad	.Ltmp2209-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2209-.Lfunc_begin11
	.quad	.Ltmp2210-.Lfunc_begin11
	.short	10                      # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	1                       # 1
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2210-.Lfunc_begin11
	.quad	.Ltmp2230-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2230-.Lfunc_begin11
	.quad	.Ltmp2231-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2231-.Lfunc_begin11
	.quad	.Ltmp2233-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2234-.Lfunc_begin11
	.quad	.Ltmp2235-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2238-.Lfunc_begin11
	.quad	.Ltmp2239-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2240-.Lfunc_begin11
	.quad	.Ltmp2241-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2243-.Lfunc_begin11
	.quad	.Ltmp2245-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2247-.Lfunc_begin11
	.quad	.Ltmp2248-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2248-.Lfunc_begin11
	.quad	.Ltmp2249-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2249-.Lfunc_begin11
	.quad	.Ltmp2250-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2250-.Lfunc_begin11
	.quad	.Ltmp2251-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2251-.Lfunc_begin11
	.quad	.Ltmp2252-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2252-.Lfunc_begin11
	.quad	.Ltmp2253-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2253-.Lfunc_begin11
	.quad	.Ltmp2254-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2254-.Lfunc_begin11
	.quad	.Ltmp2255-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	58                      # DW_OP_lit10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2255-.Lfunc_begin11
	.quad	.Ltmp2256-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	59                      # DW_OP_lit11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2256-.Lfunc_begin11
	.quad	.Ltmp2257-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	60                      # DW_OP_lit12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2257-.Lfunc_begin11
	.quad	.Ltmp2258-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	61                      # DW_OP_lit13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2258-.Lfunc_begin11
	.quad	.Ltmp2259-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	62                      # DW_OP_lit14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2259-.Lfunc_begin11
	.quad	.Ltmp2260-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	63                      # DW_OP_lit15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2260-.Lfunc_begin11
	.quad	.Ltmp2261-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	64                      # DW_OP_lit16
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2261-.Lfunc_begin11
	.quad	.Ltmp2262-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	65                      # DW_OP_lit17
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2262-.Lfunc_begin11
	.quad	.Ltmp2263-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	66                      # DW_OP_lit18
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2263-.Lfunc_begin11
	.quad	.Ltmp2264-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	67                      # DW_OP_lit19
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2264-.Lfunc_begin11
	.quad	.Ltmp2265-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	68                      # DW_OP_lit20
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2265-.Lfunc_begin11
	.quad	.Ltmp2266-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	69                      # DW_OP_lit21
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2266-.Lfunc_begin11
	.quad	.Ltmp2267-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	70                      # DW_OP_lit22
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc295:
	.quad	.Ltmp2191-.Lfunc_begin11
	.quad	.Ltmp2210-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2210-.Lfunc_begin11
	.quad	.Ltmp2215-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2216-.Lfunc_begin11
	.quad	.Ltmp2219-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2220-.Lfunc_begin11
	.quad	.Ltmp2228-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2229-.Lfunc_begin11
	.quad	.Ltmp2233-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc296:
	.quad	.Ltmp2207-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc297:
	.quad	.Ltmp2207-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc298:
	.quad	.Ltmp2207-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc299:
	.quad	.Ltmp2210-.Lfunc_begin11
	.quad	.Ltmp2212-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2212-.Lfunc_begin11
	.quad	.Ltmp2216-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2222-.Lfunc_begin11
	.quad	.Ltmp2233-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc300:
	.quad	.Ltmp2234-.Lfunc_begin11
	.quad	.Ltmp2246-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc301:
	.quad	.Ltmp2268-.Lfunc_begin11
	.quad	.Ltmp2271-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2271-.Lfunc_begin11
	.quad	.Ltmp2272-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2272-.Lfunc_begin11
	.quad	.Ltmp2275-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2275-.Lfunc_begin11
	.quad	.Ltmp2277-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc302:
	.quad	.Ltmp2307-.Lfunc_begin11
	.quad	.Ltmp2308-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	63                      # DW_OP_lit15
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc303:
	.quad	.Ltmp2307-.Lfunc_begin11
	.quad	.Ltmp2308-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4095
	.byte	31                      # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc304:
	.quad	.Ltmp2309-.Lfunc_begin11
	.quad	.Ltmp2310-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2310-.Lfunc_begin11
	.quad	.Ltmp2311-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	62                      # DW_OP_lit14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2311-.Lfunc_begin11
	.quad	.Ltmp2312-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	61                      # DW_OP_lit13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2312-.Lfunc_begin11
	.quad	.Ltmp2313-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	60                      # DW_OP_lit12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2313-.Lfunc_begin11
	.quad	.Ltmp2314-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	59                      # DW_OP_lit11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2314-.Lfunc_begin11
	.quad	.Ltmp2315-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	58                      # DW_OP_lit10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2315-.Lfunc_begin11
	.quad	.Ltmp2316-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2316-.Lfunc_begin11
	.quad	.Ltmp2317-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2317-.Lfunc_begin11
	.quad	.Ltmp2318-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2318-.Lfunc_begin11
	.quad	.Ltmp2319-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2319-.Lfunc_begin11
	.quad	.Ltmp2320-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2320-.Lfunc_begin11
	.quad	.Ltmp2321-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2321-.Lfunc_begin11
	.quad	.Ltmp2322-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2322-.Lfunc_begin11
	.quad	.Ltmp2323-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2323-.Lfunc_begin11
	.quad	.Ltmp2324-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2324-.Lfunc_begin11
	.quad	.Lfunc_end14-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	32                      # DW_OP_not
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc305:
	.quad	.Ltmp2350-.Lfunc_begin11
	.quad	.Ltmp2351-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc306:
	.quad	.Ltmp2395-.Lfunc_begin11
	.quad	.Ltmp2397-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc307:
	.quad	.Ltmp2409-.Lfunc_begin11
	.quad	.Ltmp2412-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2412-.Lfunc_begin11
	.quad	.Ltmp2413-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	252                     # 124
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc308:
	.quad	.Ltmp2418-.Lfunc_begin11
	.quad	.Ltmp2419-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2419-.Lfunc_begin11
	.quad	.Ltmp2424-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc309:
	.quad	.Ltmp2444-.Lfunc_begin11
	.quad	.Ltmp2447-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc310:
	.quad	.Ltmp2560-.Lfunc_begin11
	.quad	.Ltmp2566-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2579-.Lfunc_begin11
	.quad	.Ltmp2581-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc311:
	.quad	.Ltmp2563-.Lfunc_begin11
	.quad	.Ltmp2579-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp2582-.Lfunc_begin11
	.quad	.Ltmp2583-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2585-.Lfunc_begin11
	.quad	.Ltmp2586-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2646-.Lfunc_begin11
	.quad	.Ltmp2653-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp2684-.Lfunc_begin11
	.quad	.Ltmp2692-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp2748-.Lfunc_begin11
	.quad	.Ltmp2752-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc312:
	.quad	.Ltmp2580-.Lfunc_begin11
	.quad	.Ltmp2589-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2653-.Lfunc_begin11
	.quad	.Ltmp2654-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2655-.Lfunc_begin11
	.quad	.Ltmp2656-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc313:
	.quad	.Ltmp2581-.Lfunc_begin11
	.quad	.Ltmp2589-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2653-.Lfunc_begin11
	.quad	.Ltmp2654-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2655-.Lfunc_begin11
	.quad	.Ltmp2657-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc314:
	.quad	.Ltmp2616-.Lfunc_begin11
	.quad	.Ltmp2617-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp2627-.Lfunc_begin11
	.quad	.Ltmp2630-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc315:
	.quad	.Ltmp2617-.Lfunc_begin11
	.quad	.Ltmp2618-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2618-.Lfunc_begin11
	.quad	.Ltmp2622-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc316:
	.quad	.Ltmp2634-.Lfunc_begin11
	.quad	.Ltmp2635-.Lfunc_begin11
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 256
	.byte	2                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2635-.Lfunc_begin11
	.quad	.Ltmp2643-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc317:
	.quad	.Ltmp2634-.Lfunc_begin11
	.quad	.Ltmp2635-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2635-.Lfunc_begin11
	.quad	.Ltmp2638-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2639-.Lfunc_begin11
	.quad	.Ltmp2643-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc318:
	.quad	.Ltmp2636-.Lfunc_begin11
	.quad	.Ltmp2641-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc319:
	.quad	.Ltmp2664-.Lfunc_begin11
	.quad	.Ltmp2665-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	63                      # DW_OP_lit15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2665-.Lfunc_begin11
	.quad	.Ltmp2666-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	62                      # DW_OP_lit14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2666-.Lfunc_begin11
	.quad	.Ltmp2667-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	61                      # DW_OP_lit13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2667-.Lfunc_begin11
	.quad	.Ltmp2668-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	60                      # DW_OP_lit12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2668-.Lfunc_begin11
	.quad	.Ltmp2669-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	59                      # DW_OP_lit11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2669-.Lfunc_begin11
	.quad	.Ltmp2670-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	58                      # DW_OP_lit10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2670-.Lfunc_begin11
	.quad	.Ltmp2671-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2671-.Lfunc_begin11
	.quad	.Ltmp2672-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2672-.Lfunc_begin11
	.quad	.Ltmp2673-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2673-.Lfunc_begin11
	.quad	.Ltmp2674-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2674-.Lfunc_begin11
	.quad	.Ltmp2675-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2675-.Lfunc_begin11
	.quad	.Ltmp2676-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2676-.Lfunc_begin11
	.quad	.Ltmp2677-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2677-.Lfunc_begin11
	.quad	.Ltmp2678-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2678-.Lfunc_begin11
	.quad	.Ltmp2679-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2679-.Lfunc_begin11
	.quad	.Ltmp2680-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2680-.Lfunc_begin11
	.quad	.Lfunc_end14-.Lfunc_begin11
	.short	3                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	32                      # DW_OP_not
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc320:
	.quad	.Ltmp2727-.Lfunc_begin11
	.quad	.Ltmp2728-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc321:
	.quad	.Ltmp2739-.Lfunc_begin11
	.quad	.Ltmp2747-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc322:
	.quad	.Ltmp2739-.Lfunc_begin11
	.quad	.Ltmp2742-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2743-.Lfunc_begin11
	.quad	.Ltmp2747-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc323:
	.quad	.Ltmp2740-.Lfunc_begin11
	.quad	.Ltmp2745-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc324:
	.quad	.Ltmp2810-.Lfunc_begin11
	.quad	.Ltmp2815-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2865-.Lfunc_begin11
	.quad	.Ltmp2867-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2869-.Lfunc_begin11
	.quad	.Ltmp2870-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc325:
	.quad	.Ltmp2817-.Lfunc_begin11
	.quad	.Ltmp2818-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc326:
	.quad	.Lfunc_begin15-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2877-.Lfunc_begin11
	.quad	.Ltmp2925-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2945-.Lfunc_begin11
	.quad	.Ltmp2966-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2977-.Lfunc_begin11
	.quad	.Ltmp2978-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2979-.Lfunc_begin11
	.quad	.Ltmp2980-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc327:
	.quad	.Ltmp2873-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2875-.Lfunc_begin11
	.quad	.Ltmp2998-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc328:
	.quad	.Ltmp2873-.Lfunc_begin11
	.quad	.Ltmp2877-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2877-.Lfunc_begin11
	.quad	.Ltmp2895-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2895-.Lfunc_begin11
	.quad	.Ltmp2918-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp2995-.Lfunc_begin11
	.quad	.Ltmp2996-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc329:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2997-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc330:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc331:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc332:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc333:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc334:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc335:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc336:
	.quad	.Ltmp2874-.Lfunc_begin11
	.quad	.Ltmp2875-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc337:
	.quad	.Ltmp2880-.Lfunc_begin11
	.quad	.Ltmp2886-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2886-.Lfunc_begin11
	.quad	.Ltmp2894-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2894-.Lfunc_begin11
	.quad	.Ltmp2895-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc338:
	.quad	.Ltmp2904-.Lfunc_begin11
	.quad	.Ltmp2906-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc339:
	.quad	.Ltmp2913-.Lfunc_begin11
	.quad	.Ltmp2926-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2926-.Lfunc_begin11
	.quad	.Ltmp2949-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2949-.Lfunc_begin11
	.quad	.Ltmp2954-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2954-.Lfunc_begin11
	.quad	.Ltmp2980-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2980-.Lfunc_begin11
	.quad	.Ltmp2982-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc340:
	.quad	.Ltmp2927-.Lfunc_begin11
	.quad	.Ltmp2939-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc341:
	.quad	.Ltmp2933-.Lfunc_begin11
	.quad	.Ltmp2935-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc342:
	.quad	.Ltmp2955-.Lfunc_begin11
	.quad	.Ltmp2968-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc343:
	.quad	.Ltmp2961-.Lfunc_begin11
	.quad	.Ltmp2963-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc344:
	.quad	.Lfunc_begin16-.Lfunc_begin11
	.quad	.Ltmp3017-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3018-.Lfunc_begin11
	.quad	.Ltmp3019-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3020-.Lfunc_begin11
	.quad	.Ltmp3021-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3022-.Lfunc_begin11
	.quad	.Ltmp3024-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc345:
	.quad	.Ltmp3000-.Lfunc_begin11
	.quad	.Ltmp3006-.Lfunc_begin11
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc346:
	.quad	.Ltmp3013-.Lfunc_begin11
	.quad	.Ltmp3023-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc347:
	.quad	.Lfunc_begin17-.Lfunc_begin11
	.quad	.Ltmp3056-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc348:
	.quad	.Lfunc_begin17-.Lfunc_begin11
	.quad	.Ltmp3028-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3028-.Lfunc_begin11
	.quad	.Ltmp3044-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3045-.Lfunc_begin11
	.quad	.Ltmp3065-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc349:
	.quad	.Ltmp3027-.Lfunc_begin11
	.quad	.Ltmp3028-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3028-.Lfunc_begin11
	.quad	.Ltmp3044-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3045-.Lfunc_begin11
	.quad	.Ltmp3065-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc350:
	.quad	.Ltmp3048-.Lfunc_begin11
	.quad	.Ltmp3064-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc351:
	.quad	.Ltmp3051-.Lfunc_begin11
	.quad	.Ltmp3057-.Lfunc_begin11
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc352:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp3237-.Lfunc_begin18
	.quad	.Ltmp3240-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp3785-.Lfunc_begin18
	.quad	.Ltmp3787-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3793-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc353:
	.quad	.Lfunc_begin18-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3784-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	.Ltmp3785-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	128                     # 128
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc354:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc355:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc356:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc357:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc358:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc359:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc360:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc361:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc362:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc363:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc364:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc365:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc366:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc367:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc368:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc369:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc370:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc371:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc372:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc373:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc374:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc375:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc376:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc377:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc378:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc379:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc380:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc381:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc382:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc383:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc384:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc385:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc386:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc387:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc388:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc389:
	.quad	.Ltmp3067-.Lfunc_begin18
	.quad	.Ltmp3068-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3068-.Lfunc_begin18
	.quad	.Ltmp3070-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc390:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc391:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc392:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3104-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3792-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc393:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3791-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc394:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3104-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3792-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc395:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3791-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc396:
	.quad	.Ltmp3080-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3237-.Lfunc_begin18
	.quad	.Ltmp3267-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3399-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3793-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc397:
	.quad	.Ltmp3080-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3237-.Lfunc_begin18
	.quad	.Ltmp3267-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3399-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3793-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc398:
	.quad	.Ltmp3081-.Lfunc_begin18
	.quad	.Ltmp3569-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc399:
	.quad	.Ltmp3081-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3544-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3793-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3794-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc400:
	.quad	.Ltmp3081-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc401:
	.quad	.Ltmp3081-.Lfunc_begin18
	.quad	.Ltmp3084-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp3085-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc402:
	.quad	.Ltmp3086-.Lfunc_begin18
	.quad	.Ltmp3104-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3104-.Lfunc_begin18
	.quad	.Ltmp3130-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3130-.Lfunc_begin18
	.quad	.Ltmp3558-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3792-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3792-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	32                      # 32
	.quad	0
	.quad	0
.Ldebug_loc403:
	.quad	.Ltmp3086-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc404:
	.quad	.Ltmp3086-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc405:
	.quad	.Ltmp3087-.Lfunc_begin18
	.quad	.Ltmp3091-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3091-.Lfunc_begin18
	.quad	.Ltmp3092-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3092-.Lfunc_begin18
	.quad	.Ltmp3093-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc406:
	.quad	.Ltmp3088-.Lfunc_begin18
	.quad	.Ltmp3090-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3090-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3560-.Lfunc_begin18
	.quad	.Ltmp3563-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3563-.Lfunc_begin18
	.quad	.Ltmp3565-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3568-.Lfunc_begin18
	.quad	.Ltmp3569-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3790-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc407:
	.quad	.Ltmp3094-.Lfunc_begin18
	.quad	.Ltmp3095-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3095-.Lfunc_begin18
	.quad	.Ltmp3096-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp3545-.Lfunc_begin18
	.quad	.Ltmp3550-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3551-.Lfunc_begin18
	.quad	.Ltmp3558-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3793-.Lfunc_begin18
	.quad	.Ltmp3794-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc408:
	.quad	.Ltmp3094-.Lfunc_begin18
	.quad	.Ltmp3095-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3095-.Lfunc_begin18
	.quad	.Ltmp3558-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	144                     # 144
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc409:
	.quad	.Ltmp3097-.Lfunc_begin18
	.quad	.Ltmp3106-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3792-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc410:
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3101-.Lfunc_begin18
	.short	5                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	128                     # 65536
	.byte	128                     # 
	.byte	4                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3103-.Lfunc_begin18
	.quad	.Ltmp3105-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3105-.Lfunc_begin18
	.quad	.Ltmp3107-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	228                     # 100
	.byte	0                       # 
	.quad	.Ltmp3107-.Lfunc_begin18
	.quad	.Ltmp3117-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3127-.Lfunc_begin18
	.quad	.Ltmp3135-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3141-.Lfunc_begin18
	.quad	.Ltmp3142-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3178-.Lfunc_begin18
	.quad	.Ltmp3180-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3180-.Lfunc_begin18
	.quad	.Ltmp3183-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp3183-.Lfunc_begin18
	.quad	.Ltmp3192-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp3198-.Lfunc_begin18
	.quad	.Ltmp3200-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3200-.Lfunc_begin18
	.quad	.Ltmp3201-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3201-.Lfunc_begin18
	.quad	.Ltmp3204-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp3204-.Lfunc_begin18
	.quad	.Ltmp3205-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3205-.Lfunc_begin18
	.quad	.Ltmp3206-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # 152
	.byte	1                       # 
	.quad	.Ltmp3206-.Lfunc_begin18
	.quad	.Ltmp3540-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	228                     # 100
	.byte	0                       # 
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	228                     # 100
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc411:
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3128-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3128-.Lfunc_begin18
	.quad	.Ltmp3558-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	.Ltmp3792-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	48                      # 48
	.quad	0
	.quad	0
.Ldebug_loc412:
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3140-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc413:
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3107-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc414:
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3107-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc415:
	.quad	.Ltmp3102-.Lfunc_begin18
	.quad	.Ltmp3108-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3109-.Lfunc_begin18
	.quad	.Ltmp3110-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3111-.Lfunc_begin18
	.quad	.Ltmp3112-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3113-.Lfunc_begin18
	.quad	.Ltmp3114-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3115-.Lfunc_begin18
	.quad	.Ltmp3123-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3124-.Lfunc_begin18
	.quad	.Ltmp3129-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3150-.Lfunc_begin18
	.quad	.Ltmp3151-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3154-.Lfunc_begin18
	.quad	.Ltmp3156-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3158-.Lfunc_begin18
	.quad	.Ltmp3159-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3162-.Lfunc_begin18
	.quad	.Ltmp3163-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3173-.Lfunc_begin18
	.quad	.Ltmp3174-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3183-.Lfunc_begin18
	.quad	.Ltmp3185-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp3202-.Lfunc_begin18
	.quad	.Ltmp3206-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3206-.Lfunc_begin18
	.quad	.Ltmp3207-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 208
	.byte	1                       # 
	.quad	.Ltmp3207-.Lfunc_begin18
	.quad	.Ltmp3212-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3212-.Lfunc_begin18
	.quad	.Ltmp3453-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 208
	.byte	1                       # 
	.quad	.Ltmp3459-.Lfunc_begin18
	.quad	.Ltmp3460-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3465-.Lfunc_begin18
	.quad	.Ltmp3467-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3467-.Lfunc_begin18
	.quad	.Ltmp3476-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3481-.Lfunc_begin18
	.quad	.Ltmp3482-.Lfunc_begin18
	.short	12                      # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3482-.Lfunc_begin18
	.quad	.Ltmp3484-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3484-.Lfunc_begin18
	.quad	.Ltmp3490-.Lfunc_begin18
	.short	12                      # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3490-.Lfunc_begin18
	.quad	.Ltmp3493-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3514-.Lfunc_begin18
	.quad	.Ltmp3519-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3519-.Lfunc_begin18
	.quad	.Ltmp3523-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3532-.Lfunc_begin18
	.quad	.Ltmp3536-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 208
	.byte	1                       # 
	.quad	0
	.quad	0
.Ldebug_loc416:
	.quad	.Ltmp3146-.Lfunc_begin18
	.quad	.Ltmp3148-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3149-.Lfunc_begin18
	.quad	.Ltmp3152-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3153-.Lfunc_begin18
	.quad	.Ltmp3155-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3157-.Lfunc_begin18
	.quad	.Ltmp3160-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3161-.Lfunc_begin18
	.quad	.Ltmp3171-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3172-.Lfunc_begin18
	.quad	.Ltmp3186-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc417:
	.quad	.Ltmp3179-.Lfunc_begin18
	.quad	.Ltmp3180-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3180-.Lfunc_begin18
	.quad	.Ltmp3198-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc418:
	.quad	.Ltmp3184-.Lfunc_begin18
	.quad	.Ltmp3196-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc419:
	.quad	.Ltmp3198-.Lfunc_begin18
	.quad	.Ltmp3200-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3200-.Lfunc_begin18
	.quad	.Ltmp3449-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	.Ltmp3449-.Lfunc_begin18
	.quad	.Ltmp3450-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3450-.Lfunc_begin18
	.quad	.Ltmp3544-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	.Ltmp3794-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	44                      # 44
	.quad	0
	.quad	0
.Ldebug_loc420:
	.quad	.Ltmp3202-.Lfunc_begin18
	.quad	.Ltmp3206-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3207-.Lfunc_begin18
	.quad	.Ltmp3211-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc421:
	.quad	.Ltmp3206-.Lfunc_begin18
	.quad	.Ltmp3207-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp3215-.Lfunc_begin18
	.quad	.Ltmp3217-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3217-.Lfunc_begin18
	.quad	.Ltmp3225-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp3226-.Lfunc_begin18
	.quad	.Ltmp3452-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	0
	.quad	0
.Ldebug_loc422:
	.quad	.Ltmp3206-.Lfunc_begin18
	.quad	.Ltmp3207-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp3214-.Lfunc_begin18
	.quad	.Ltmp3216-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3216-.Lfunc_begin18
	.quad	.Ltmp3225-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp3226-.Lfunc_begin18
	.quad	.Ltmp3452-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	0
	.quad	0
.Ldebug_loc423:
	.quad	.Ltmp3214-.Lfunc_begin18
	.quad	.Ltmp3216-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3216-.Lfunc_begin18
	.quad	.Ltmp3219-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	.Ltmp3226-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	60                      # 60
	.quad	0
	.quad	0
.Ldebug_loc424:
	.quad	.Ltmp3215-.Lfunc_begin18
	.quad	.Ltmp3217-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3217-.Lfunc_begin18
	.quad	.Ltmp3219-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp3226-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	0
	.quad	0
.Ldebug_loc425:
	.quad	.Ltmp3223-.Lfunc_begin18
	.quad	.Ltmp3224-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3224-.Lfunc_begin18
	.quad	.Ltmp3227-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp3237-.Lfunc_begin18
	.quad	.Ltmp3238-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3238-.Lfunc_begin18
	.quad	.Ltmp3239-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3239-.Lfunc_begin18
	.quad	.Ltmp3377-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp3378-.Lfunc_begin18
	.quad	.Ltmp3379-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3444-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	.Ltmp3444-.Lfunc_begin18
	.quad	.Ltmp3445-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3445-.Lfunc_begin18
	.quad	.Ltmp3446-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	232                     # 104
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc426:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3231-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3275-.Lfunc_begin18
	.quad	.Ltmp3276-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3302-.Lfunc_begin18
	.quad	.Ltmp3303-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3324-.Lfunc_begin18
	.quad	.Ltmp3329-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3350-.Lfunc_begin18
	.quad	.Ltmp3357-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc427:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3231-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3324-.Lfunc_begin18
	.quad	.Ltmp3329-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3330-.Lfunc_begin18
	.quad	.Ltmp3333-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc428:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3232-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3244-.Lfunc_begin18
	.quad	.Ltmp3268-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3268-.Lfunc_begin18
	.quad	.Ltmp3289-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3293-.Lfunc_begin18
	.quad	.Ltmp3300-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3314-.Lfunc_begin18
	.quad	.Ltmp3318-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3319-.Lfunc_begin18
	.quad	.Ltmp3320-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3320-.Lfunc_begin18
	.quad	.Ltmp3337-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3404-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc429:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3268-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3268-.Lfunc_begin18
	.quad	.Ltmp3272-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3273-.Lfunc_begin18
	.quad	.Ltmp3279-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3281-.Lfunc_begin18
	.quad	.Ltmp3287-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3288-.Lfunc_begin18
	.quad	.Ltmp3349-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3402-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc430:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3245-.Lfunc_begin18
	.quad	.Ltmp3247-.Lfunc_begin18
	.short	6                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3247-.Lfunc_begin18
	.quad	.Ltmp3358-.Lfunc_begin18
	.short	8                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3358-.Lfunc_begin18
	.quad	.Ltmp3364-.Lfunc_begin18
	.short	11                      # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3364-.Lfunc_begin18
	.quad	.Ltmp3372-.Lfunc_begin18
	.short	10                      # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3372-.Lfunc_begin18
	.quad	.Ltmp3373-.Lfunc_begin18
	.short	10                      # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3373-.Lfunc_begin18
	.quad	.Ltmp3375-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3443-.Lfunc_begin18
	.short	10                      # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	95                      # super-register DW_OP_reg15
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc431:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp3245-.Lfunc_begin18
	.quad	.Ltmp3247-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3247-.Lfunc_begin18
	.quad	.Ltmp3446-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc432:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	5                       # Loc expr size
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3244-.Lfunc_begin18
	.quad	.Ltmp3350-.Lfunc_begin18
	.short	5                       # Loc expr size
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3350-.Lfunc_begin18
	.quad	.Ltmp3351-.Lfunc_begin18
	.short	6                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3351-.Lfunc_begin18
	.quad	.Ltmp3356-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3356-.Lfunc_begin18
	.quad	.Ltmp3362-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	86                      # super-register DW_OP_reg6
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3362-.Lfunc_begin18
	.quad	.Ltmp3370-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3370-.Lfunc_begin18
	.quad	.Ltmp3371-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3371-.Lfunc_begin18
	.quad	.Ltmp3380-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3404-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	90                      # super-register DW_OP_reg10
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc433:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3237-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3244-.Lfunc_begin18
	.quad	.Ltmp3367-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3404-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc434:
	.quad	.Ltmp3232-.Lfunc_begin18
	.quad	.Ltmp3236-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3335-.Lfunc_begin18
	.quad	.Ltmp3341-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3352-.Lfunc_begin18
	.quad	.Ltmp3359-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc435:
	.quad	.Ltmp3232-.Lfunc_begin18
	.quad	.Ltmp3236-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3335-.Lfunc_begin18
	.quad	.Ltmp3341-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3342-.Lfunc_begin18
	.quad	.Ltmp3346-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc436:
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3270-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3295-.Lfunc_begin18
	.quad	.Ltmp3299-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3402-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc437:
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3248-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc438:
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3268-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3268-.Lfunc_begin18
	.quad	.Ltmp3271-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp3272-.Lfunc_begin18
	.quad	.Ltmp3283-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3289-.Lfunc_begin18
	.quad	.Ltmp3316-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3402-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc439:
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3248-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc440:
	.quad	.Ltmp3243-.Lfunc_begin18
	.quad	.Ltmp3270-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3295-.Lfunc_begin18
	.quad	.Ltmp3299-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3348-.Lfunc_begin18
	.quad	.Ltmp3352-.Lfunc_begin18
	.short	8                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	91                      # super-register DW_OP_reg11
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3352-.Lfunc_begin18
	.quad	.Ltmp3354-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	80                      # super-register DW_OP_reg0
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	91                      # super-register DW_OP_reg11
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3354-.Lfunc_begin18
	.quad	.Ltmp3355-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	91                      # super-register DW_OP_reg11
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3355-.Lfunc_begin18
	.quad	.Ltmp3361-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	91                      # super-register DW_OP_reg11
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3361-.Lfunc_begin18
	.quad	.Ltmp3365-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	91                      # super-register DW_OP_reg11
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3365-.Lfunc_begin18
	.quad	.Ltmp3368-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3368-.Lfunc_begin18
	.quad	.Ltmp3369-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3369-.Lfunc_begin18
	.quad	.Ltmp3376-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3402-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	9                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	89                      # super-register DW_OP_reg9
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.byte	82                      # super-register DW_OP_reg2
	.byte	147                     # DW_OP_piece
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc441:
	.quad	.Ltmp3244-.Lfunc_begin18
	.quad	.Ltmp3248-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc442:
	.quad	.Ltmp3244-.Lfunc_begin18
	.quad	.Ltmp3268-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3268-.Lfunc_begin18
	.quad	.Ltmp3298-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp3298-.Lfunc_begin18
	.quad	.Ltmp3309-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3319-.Lfunc_begin18
	.quad	.Ltmp3322-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp3380-.Lfunc_begin18
	.quad	.Ltmp3404-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3440-.Lfunc_begin18
	.quad	.Ltmp3441-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc443:
	.quad	.Ltmp3245-.Lfunc_begin18
	.quad	.Ltmp3247-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3247-.Lfunc_begin18
	.quad	.Ltmp3248-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc444:
	.quad	.Ltmp3246-.Lfunc_begin18
	.quad	.Ltmp3248-.Lfunc_begin18
	.short	10                      # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	1                       # 1
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc445:
	.quad	.Ltmp3250-.Lfunc_begin18
	.quad	.Ltmp3265-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc446:
	.quad	.Ltmp3250-.Lfunc_begin18
	.quad	.Ltmp3254-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3254-.Lfunc_begin18
	.quad	.Ltmp3265-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc447:
	.quad	.Ltmp3250-.Lfunc_begin18
	.quad	.Ltmp3255-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3255-.Lfunc_begin18
	.quad	.Ltmp3257-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3259-.Lfunc_begin18
	.quad	.Ltmp3261-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3261-.Lfunc_begin18
	.quad	.Ltmp3264-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc448:
	.quad	.Ltmp3266-.Lfunc_begin18
	.quad	.Ltmp3317-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3319-.Lfunc_begin18
	.quad	.Ltmp3323-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc449:
	.quad	.Ltmp3274-.Lfunc_begin18
	.quad	.Ltmp3277-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3281-.Lfunc_begin18
	.quad	.Ltmp3286-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc450:
	.quad	.Ltmp3288-.Lfunc_begin18
	.quad	.Ltmp3289-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3295-.Lfunc_begin18
	.quad	.Ltmp3297-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc451:
	.quad	.Ltmp3290-.Lfunc_begin18
	.quad	.Ltmp3295-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc452:
	.quad	.Ltmp3301-.Lfunc_begin18
	.quad	.Ltmp3304-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3308-.Lfunc_begin18
	.quad	.Ltmp3311-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc453:
	.quad	.Ltmp3331-.Lfunc_begin18
	.quad	.Ltmp3334-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc454:
	.quad	.Ltmp3343-.Lfunc_begin18
	.quad	.Ltmp3347-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc455:
	.quad	.Ltmp3389-.Lfunc_begin18
	.quad	.Ltmp3439-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc456:
	.quad	.Ltmp3391-.Lfunc_begin18
	.quad	.Ltmp3392-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3392-.Lfunc_begin18
	.quad	.Ltmp3393-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp3393-.Lfunc_begin18
	.quad	.Ltmp3396-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3396-.Lfunc_begin18
	.quad	.Ltmp3400-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp3400-.Lfunc_begin18
	.quad	.Ltmp3409-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc457:
	.quad	.Ltmp3393-.Lfunc_begin18
	.quad	.Ltmp3401-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc458:
	.quad	.Ltmp3397-.Lfunc_begin18
	.quad	.Ltmp3398-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3398-.Lfunc_begin18
	.quad	.Ltmp3413-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp3413-.Lfunc_begin18
	.quad	.Ltmp3414-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3414-.Lfunc_begin18
	.quad	.Ltmp3425-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp3425-.Lfunc_begin18
	.quad	.Ltmp3426-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3426-.Lfunc_begin18
	.quad	.Ltmp3437-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc459:
	.quad	.Ltmp3403-.Lfunc_begin18
	.quad	.Ltmp3437-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	0
	.quad	0
.Ldebug_loc460:
	.quad	.Ltmp3403-.Lfunc_begin18
	.quad	.Ltmp3437-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	28                      # 28
	.quad	0
	.quad	0
.Ldebug_loc461:
	.quad	.Ltmp3469-.Lfunc_begin18
	.quad	.Ltmp3470-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3471-.Lfunc_begin18
	.quad	.Ltmp3477-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3485-.Lfunc_begin18
	.quad	.Ltmp3486-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3487-.Lfunc_begin18
	.quad	.Ltmp3495-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc462:
	.quad	.Ltmp3509-.Lfunc_begin18
	.quad	.Ltmp3526-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc463:
	.quad	.Ltmp3510-.Lfunc_begin18
	.quad	.Ltmp3511-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc464:
	.quad	.Ltmp3510-.Lfunc_begin18
	.quad	.Ltmp3525-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc465:
	.quad	.Ltmp3520-.Lfunc_begin18
	.quad	.Ltmp3523-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3527-.Lfunc_begin18
	.quad	.Ltmp3531-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3533-.Lfunc_begin18
	.quad	.Ltmp3536-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc466:
	.quad	.Ltmp3521-.Lfunc_begin18
	.quad	.Ltmp3522-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3528-.Lfunc_begin18
	.quad	.Ltmp3529-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3534-.Lfunc_begin18
	.quad	.Ltmp3535-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc467:
	.quad	.Ltmp3574-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	90                      # 90
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc468:
	.quad	.Ltmp3574-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc469:
	.quad	.Ltmp3579-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	104                     # 104
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc470:
	.quad	.Ltmp3579-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc471:
	.quad	.Ltmp3584-.Lfunc_begin18
	.quad	.Ltmp3587-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc472:
	.quad	.Ltmp3585-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc473:
	.quad	.Ltmp3585-.Lfunc_begin18
	.quad	.Ltmp3590-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc474:
	.quad	.Ltmp3600-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	65                      # 65
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc475:
	.quad	.Ltmp3600-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc476:
	.quad	.Ltmp3605-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	89                      # 89
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc477:
	.quad	.Ltmp3605-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc478:
	.quad	.Ltmp3610-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	38                      # 38
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc479:
	.quad	.Ltmp3610-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc480:
	.quad	.Ltmp3615-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	83                      # 83
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc481:
	.quad	.Ltmp3615-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc482:
	.quad	.Ltmp3620-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	89                      # 89
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc483:
	.quad	.Ltmp3620-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc484:
	.quad	.Ltmp3626-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc485:
	.quad	.Ltmp3626-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc486:
	.quad	.Ltmp3633-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	72                      # DW_OP_lit24
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc487:
	.quad	.Ltmp3633-.Lfunc_begin18
	.quad	.Ltmp3638-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc488:
	.quad	.Ltmp3640-.Lfunc_begin18
	.quad	.Ltmp3743-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc489:
	.quad	.Ltmp3641-.Lfunc_begin18
	.quad	.Ltmp3743-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc490:
	.quad	.Ltmp3642-.Lfunc_begin18
	.quad	.Ltmp3743-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc491:
	.quad	.Ltmp3643-.Lfunc_begin18
	.quad	.Ltmp3644-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc492:
	.quad	.Ltmp3652-.Lfunc_begin18
	.quad	.Ltmp3668-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3668-.Lfunc_begin18
	.quad	.Ltmp3669-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3671-.Lfunc_begin18
	.quad	.Ltmp3675-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3675-.Lfunc_begin18
	.quad	.Ltmp3719-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc493:
	.quad	.Ltmp3671-.Lfunc_begin18
	.quad	.Ltmp3675-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3675-.Lfunc_begin18
	.quad	.Ltmp3695-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3696-.Lfunc_begin18
	.quad	.Ltmp3703-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3704-.Lfunc_begin18
	.quad	.Ltmp3732-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3733-.Lfunc_begin18
	.quad	.Ltmp3738-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc494:
	.quad	.Ltmp3671-.Lfunc_begin18
	.quad	.Ltmp3675-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3675-.Lfunc_begin18
	.quad	.Ltmp3688-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3704-.Lfunc_begin18
	.quad	.Ltmp3716-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3717-.Lfunc_begin18
	.quad	.Ltmp3725-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3739-.Lfunc_begin18
	.quad	.Ltmp3740-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3741-.Lfunc_begin18
	.quad	.Ltmp3743-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc495:
	.quad	.Ltmp3674-.Lfunc_begin18
	.quad	.Ltmp3682-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp3707-.Lfunc_begin18
	.quad	.Ltmp3709-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3712-.Lfunc_begin18
	.quad	.Ltmp3713-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc496:
	.quad	.Ltmp3676-.Lfunc_begin18
	.quad	.Ltmp3677-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3678-.Lfunc_begin18
	.quad	.Ltmp3679-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc497:
	.quad	.Ltmp3680-.Lfunc_begin18
	.quad	.Ltmp3719-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc498:
	.quad	.Ltmp3680-.Lfunc_begin18
	.quad	.Ltmp3682-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc499:
	.quad	.Ltmp3680-.Lfunc_begin18
	.quad	.Ltmp3682-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp3705-.Lfunc_begin18
	.quad	.Ltmp3708-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3708-.Lfunc_begin18
	.quad	.Ltmp3711-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3711-.Lfunc_begin18
	.quad	.Ltmp3715-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc500:
	.quad	.Ltmp3707-.Lfunc_begin18
	.quad	.Ltmp3710-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc501:
	.quad	.Ltmp3751-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	114                     # 114
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc502:
	.quad	.Ltmp3751-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc503:
	.quad	.Ltmp3756-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	69                      # 69
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc504:
	.quad	.Ltmp3756-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc505:
	.quad	.Ltmp3761-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	56                      # 56
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc506:
	.quad	.Ltmp3761-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc507:
	.quad	.Ltmp3766-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	80                      # 80
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc508:
	.quad	.Ltmp3766-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc509:
	.quad	.Ltmp3771-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	4                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	144                     # 144
	.byte	1                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc510:
	.quad	.Ltmp3771-.Lfunc_begin18
	.quad	.Lfunc_end18-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc511:
	.quad	.Lfunc_begin19-.Lfunc_begin18
	.quad	.Ltmp3815-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc512:
	.quad	.Lfunc_begin19-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc513:
	.quad	.Lfunc_begin19-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc514:
	.quad	.Lfunc_begin19-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc515:
	.quad	.Ltmp3800-.Lfunc_begin18
	.quad	.Ltmp3806-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc516:
	.quad	.Ltmp3808-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc517:
	.quad	.Ltmp3808-.Lfunc_begin18
	.quad	.Ltmp3813-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc518:
	.quad	.Ltmp3815-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc519:
	.quad	.Ltmp3815-.Lfunc_begin18
	.quad	.Ltmp3820-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc520:
	.quad	.Ltmp3822-.Lfunc_begin18
	.quad	.Lfunc_end19-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc521:
	.quad	.Ltmp3822-.Lfunc_begin18
	.quad	.Ltmp3827-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc522:
	.quad	.Lfunc_begin20-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp4219-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp4220-.Lfunc_begin18
	.quad	.Ltmp4235-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp4962-.Lfunc_begin18
	.quad	.Ltmp4963-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp4972-.Lfunc_begin18
	.quad	.Ltmp4973-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp4979-.Lfunc_begin18
	.quad	.Ltmp4980-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc523:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc524:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc525:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc526:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc527:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc528:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc529:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc530:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc531:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc532:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc533:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc534:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc535:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc536:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc537:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc538:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc539:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc540:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc541:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc542:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc543:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc544:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc545:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc546:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc547:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc548:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc549:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc550:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc551:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc552:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc553:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc554:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc555:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc556:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc557:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc558:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc559:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc560:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc561:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc562:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc563:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc564:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc565:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc566:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc567:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc568:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc569:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc570:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc571:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc572:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc573:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc574:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc575:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc576:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc577:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc578:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc579:
	.quad	.Ltmp3830-.Lfunc_begin18
	.quad	.Ltmp3831-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3831-.Lfunc_begin18
	.quad	.Ltmp3835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc580:
	.quad	.Ltmp3834-.Lfunc_begin18
	.quad	.Ltmp4953-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	.Ltmp4954-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc581:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3837-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3940-.Lfunc_begin18
	.quad	.Ltmp3941-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3946-.Lfunc_begin18
	.quad	.Ltmp3947-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3971-.Lfunc_begin18
	.quad	.Ltmp3972-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4135-.Lfunc_begin18
	.quad	.Ltmp4136-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4136-.Lfunc_begin18
	.quad	.Ltmp4137-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4137-.Lfunc_begin18
	.quad	.Ltmp4138-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4139-.Lfunc_begin18
	.quad	.Ltmp4140-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4142-.Lfunc_begin18
	.quad	.Ltmp4143-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4145-.Lfunc_begin18
	.quad	.Ltmp4146-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4148-.Lfunc_begin18
	.quad	.Ltmp4149-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4155-.Lfunc_begin18
	.quad	.Ltmp4158-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4160-.Lfunc_begin18
	.quad	.Ltmp4163-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4165-.Lfunc_begin18
	.quad	.Ltmp4168-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4169-.Lfunc_begin18
	.quad	.Ltmp4172-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4199-.Lfunc_begin18
	.quad	.Ltmp4330-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp4364-.Lfunc_begin18
	.quad	.Ltmp4365-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4365-.Lfunc_begin18
	.quad	.Ltmp4411-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp4514-.Lfunc_begin18
	.quad	.Ltmp4515-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4515-.Lfunc_begin18
	.quad	.Ltmp4516-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp4516-.Lfunc_begin18
	.quad	.Ltmp4549-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp4972-.Lfunc_begin18
	.quad	.Ltmp4974-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp4974-.Lfunc_begin18
	.quad	.Ltmp4978-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc582:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3838-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3838-.Lfunc_begin18
	.quad	.Ltmp4953-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp4954-.Lfunc_begin18
	.quad	.Ltmp4962-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp4963-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc583:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3838-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3838-.Lfunc_begin18
	.quad	.Ltmp3839-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc584:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3838-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3838-.Lfunc_begin18
	.quad	.Ltmp3839-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp4234-.Lfunc_begin18
	.quad	.Ltmp4273-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp4273-.Lfunc_begin18
	.quad	.Ltmp4279-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc585:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3838-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3838-.Lfunc_begin18
	.quad	.Ltmp3839-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp4217-.Lfunc_begin18
	.quad	.Ltmp4221-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4221-.Lfunc_begin18
	.quad	.Ltmp4222-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp4234-.Lfunc_begin18
	.quad	.Ltmp4254-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc586:
	.quad	.Ltmp3836-.Lfunc_begin18
	.quad	.Ltmp3838-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3838-.Lfunc_begin18
	.quad	.Ltmp3839-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc587:
	.quad	.Ltmp3837-.Lfunc_begin18
	.quad	.Ltmp3843-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3892-.Lfunc_begin18
	.quad	.Ltmp3896-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3896-.Lfunc_begin18
	.quad	.Ltmp3897-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3898-.Lfunc_begin18
	.quad	.Ltmp3906-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3911-.Lfunc_begin18
	.quad	.Ltmp3917-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3922-.Lfunc_begin18
	.quad	.Ltmp3926-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3947-.Lfunc_begin18
	.quad	.Ltmp3952-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3953-.Lfunc_begin18
	.quad	.Ltmp3957-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3960-.Lfunc_begin18
	.quad	.Ltmp3962-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc588:
	.quad	.Ltmp3852-.Lfunc_begin18
	.quad	.Ltmp3854-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp3866-.Lfunc_begin18
	.quad	.Ltmp3885-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp3885-.Lfunc_begin18
	.quad	.Ltmp3888-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp3888-.Lfunc_begin18
	.quad	.Ltmp3892-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp3919-.Lfunc_begin18
	.quad	.Ltmp3920-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc589:
	.quad	.Ltmp3864-.Lfunc_begin18
	.quad	.Ltmp3865-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc590:
	.quad	.Ltmp3864-.Lfunc_begin18
	.quad	.Ltmp3865-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3866-.Lfunc_begin18
	.quad	.Ltmp3886-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp3886-.Lfunc_begin18
	.quad	.Ltmp3888-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3888-.Lfunc_begin18
	.quad	.Ltmp3892-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc591:
	.quad	.Ltmp3864-.Lfunc_begin18
	.quad	.Ltmp3865-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc592:
	.quad	.Ltmp3864-.Lfunc_begin18
	.quad	.Ltmp3866-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3866-.Lfunc_begin18
	.quad	.Ltmp3887-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3888-.Lfunc_begin18
	.quad	.Ltmp3892-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3918-.Lfunc_begin18
	.quad	.Ltmp3939-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp3946-.Lfunc_begin18
	.quad	.Ltmp3964-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp3964-.Lfunc_begin18
	.quad	.Ltmp3967-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3967-.Lfunc_begin18
	.quad	.Ltmp4192-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp4192-.Lfunc_begin18
	.quad	.Ltmp4195-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp4556-.Lfunc_begin18
	.quad	.Ltmp4559-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4559-.Lfunc_begin18
	.quad	.Ltmp4570-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4927-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4945-.Lfunc_begin18
	.quad	.Ltmp4947-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4947-.Lfunc_begin18
	.quad	.Ltmp4948-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4978-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc593:
	.quad	.Ltmp3867-.Lfunc_begin18
	.quad	.Ltmp3878-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3888-.Lfunc_begin18
	.quad	.Ltmp3890-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc594:
	.quad	.Ltmp3868-.Lfunc_begin18
	.quad	.Ltmp3871-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3871-.Lfunc_begin18
	.quad	.Ltmp3888-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3889-.Lfunc_begin18
	.quad	.Ltmp3920-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc595:
	.quad	.Ltmp3868-.Lfunc_begin18
	.quad	.Ltmp3871-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp3871-.Lfunc_begin18
	.quad	.Ltmp3872-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3874-.Lfunc_begin18
	.quad	.Ltmp3918-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp3970-.Lfunc_begin18
	.quad	.Ltmp3972-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp3972-.Lfunc_begin18
	.quad	.Ltmp3974-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp3974-.Lfunc_begin18
	.quad	.Ltmp4192-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp4560-.Lfunc_begin18
	.quad	.Ltmp4562-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp4562-.Lfunc_begin18
	.quad	.Ltmp4568-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4568-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4924-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4924-.Lfunc_begin18
	.quad	.Ltmp4944-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	192                     # 64
	.byte	0                       # 
	.quad	.Ltmp4978-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc596:
	.quad	.Ltmp3920-.Lfunc_begin18
	.quad	.Ltmp3922-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3922-.Lfunc_begin18
	.quad	.Ltmp4335-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp4335-.Lfunc_begin18
	.quad	.Ltmp4336-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp4336-.Lfunc_begin18
	.quad	.Ltmp4953-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp4954-.Lfunc_begin18
	.quad	.Ltmp4962-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp4963-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	.Ltmp4980-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	216                     # 88
	.byte	0                       # 
	.quad	0
	.quad	0
.Ldebug_loc597:
	.quad	.Ltmp3939-.Lfunc_begin18
	.quad	.Ltmp3946-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp3964-.Lfunc_begin18
	.quad	.Ltmp3967-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3967-.Lfunc_begin18
	.quad	.Ltmp3968-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3968-.Lfunc_begin18
	.quad	.Ltmp4192-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp4196-.Lfunc_begin18
	.quad	.Ltmp4953-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp4954-.Lfunc_begin18
	.quad	.Ltmp4962-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp4963-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	.Ltmp4980-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc598:
	.quad	.Ltmp3939-.Lfunc_begin18
	.quad	.Ltmp3940-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp3964-.Lfunc_begin18
	.quad	.Ltmp3967-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3967-.Lfunc_begin18
	.quad	.Ltmp3969-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp3969-.Lfunc_begin18
	.quad	.Ltmp4191-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	208                     # 80
	.byte	0                       # 
	.quad	.Ltmp4191-.Lfunc_begin18
	.quad	.Ltmp4195-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp4196-.Lfunc_begin18
	.quad	.Ltmp4198-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc599:
	.quad	.Ltmp3967-.Lfunc_begin18
	.quad	.Ltmp4134-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp4181-.Lfunc_begin18
	.quad	.Ltmp4184-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4340-.Lfunc_begin18
	.quad	.Ltmp4342-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4342-.Lfunc_begin18
	.quad	.Ltmp4344-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4344-.Lfunc_begin18
	.quad	.Ltmp4346-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4346-.Lfunc_begin18
	.quad	.Ltmp4348-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4348-.Lfunc_begin18
	.quad	.Ltmp4350-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4350-.Lfunc_begin18
	.quad	.Ltmp4353-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4353-.Lfunc_begin18
	.quad	.Ltmp4361-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp4365-.Lfunc_begin18
	.quad	.Ltmp4376-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4376-.Lfunc_begin18
	.quad	.Ltmp4380-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp4415-.Lfunc_begin18
	.quad	.Ltmp4416-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4416-.Lfunc_begin18
	.quad	.Ltmp4429-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp4432-.Lfunc_begin18
	.quad	.Ltmp4434-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4434-.Lfunc_begin18
	.quad	.Ltmp4447-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp4450-.Lfunc_begin18
	.quad	.Ltmp4469-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp4482-.Lfunc_begin18
	.quad	.Ltmp4486-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4486-.Lfunc_begin18
	.quad	.Ltmp4507-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp4522-.Lfunc_begin18
	.quad	.Ltmp4525-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4525-.Lfunc_begin18
	.quad	.Ltmp4547-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp4559-.Lfunc_begin18
	.quad	.Ltmp4570-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4927-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4930-.Lfunc_begin18
	.quad	.Ltmp4936-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp4978-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc600:
	.quad	.Ltmp3975-.Lfunc_begin18
	.quad	.Ltmp3977-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3980-.Lfunc_begin18
	.quad	.Ltmp4126-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc601:
	.quad	.Ltmp3975-.Lfunc_begin18
	.quad	.Ltmp3977-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3979-.Lfunc_begin18
	.quad	.Ltmp4125-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc602:
	.quad	.Ltmp3975-.Lfunc_begin18
	.quad	.Ltmp3977-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3978-.Lfunc_begin18
	.quad	.Ltmp4127-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc603:
	.quad	.Ltmp4151-.Lfunc_begin18
	.quad	.Ltmp4153-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4153-.Lfunc_begin18
	.quad	.Ltmp4177-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4178-.Lfunc_begin18
	.quad	.Ltmp4182-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc604:
	.quad	.Ltmp4151-.Lfunc_begin18
	.quad	.Ltmp4174-.Lfunc_begin18
	.short	7                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	255                     # 999999999
	.byte	147                     # 
	.byte	235                     # 
	.byte	220                     # 
	.byte	3                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4174-.Lfunc_begin18
	.quad	.Ltmp4195-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc605:
	.quad	.Ltmp4196-.Lfunc_begin18
	.quad	.Ltmp4198-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	24                      # 24
	.quad	0
	.quad	0
.Ldebug_loc606:
	.quad	.Ltmp4202-.Lfunc_begin18
	.quad	.Ltmp4212-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4212-.Lfunc_begin18
	.quad	.Ltmp4213-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4217-.Lfunc_begin18
	.quad	.Ltmp4221-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4221-.Lfunc_begin18
	.quad	.Ltmp4227-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4283-.Lfunc_begin18
	.quad	.Ltmp4286-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4286-.Lfunc_begin18
	.quad	.Ltmp4287-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4288-.Lfunc_begin18
	.quad	.Ltmp4289-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4289-.Lfunc_begin18
	.quad	.Ltmp4294-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4307-.Lfunc_begin18
	.quad	.Ltmp4315-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4319-.Lfunc_begin18
	.quad	.Ltmp4324-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4324-.Lfunc_begin18
	.quad	.Ltmp4328-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc607:
	.quad	.Ltmp4202-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	65                      # DW_OP_lit17
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc608:
	.quad	.Ltmp4223-.Lfunc_begin18
	.quad	.Ltmp4225-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc609:
	.quad	.Ltmp4222-.Lfunc_begin18
	.quad	.Ltmp4228-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc610:
	.quad	.Ltmp4236-.Lfunc_begin18
	.quad	.Ltmp4246-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4246-.Lfunc_begin18
	.quad	.Ltmp4249-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp4249-.Lfunc_begin18
	.quad	.Ltmp4251-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp4251-.Lfunc_begin18
	.quad	.Ltmp4252-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc611:
	.quad	.Ltmp4236-.Lfunc_begin18
	.quad	.Ltmp4240-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4240-.Lfunc_begin18
	.quad	.Ltmp4246-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4246-.Lfunc_begin18
	.quad	.Ltmp4258-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc612:
	.quad	.Ltmp4236-.Lfunc_begin18
	.quad	.Ltmp4257-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc613:
	.quad	.Ltmp4254-.Lfunc_begin18
	.quad	.Ltmp4264-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4264-.Lfunc_begin18
	.quad	.Ltmp4267-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp4267-.Lfunc_begin18
	.quad	.Ltmp4269-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp4269-.Lfunc_begin18
	.quad	.Ltmp4270-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc614:
	.quad	.Ltmp4254-.Lfunc_begin18
	.quad	.Ltmp4258-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4258-.Lfunc_begin18
	.quad	.Ltmp4264-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4264-.Lfunc_begin18
	.quad	.Ltmp4271-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc615:
	.quad	.Ltmp4254-.Lfunc_begin18
	.quad	.Ltmp4276-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc616:
	.quad	.Ltmp4276-.Lfunc_begin18
	.quad	.Ltmp4278-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc617:
	.quad	.Ltmp4283-.Lfunc_begin18
	.quad	.Ltmp4286-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4286-.Lfunc_begin18
	.quad	.Ltmp4287-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4288-.Lfunc_begin18
	.quad	.Ltmp4305-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp4305-.Lfunc_begin18
	.quad	.Ltmp4325-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc618:
	.quad	.Ltmp4326-.Lfunc_begin18
	.quad	.Ltmp4327-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc619:
	.quad	.Ltmp4289-.Lfunc_begin18
	.quad	.Ltmp4290-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4291-.Lfunc_begin18
	.quad	.Ltmp4293-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4295-.Lfunc_begin18
	.quad	.Ltmp4296-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4297-.Lfunc_begin18
	.quad	.Ltmp4299-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4310-.Lfunc_begin18
	.quad	.Ltmp4311-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp4312-.Lfunc_begin18
	.quad	.Ltmp4314-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc620:
	.quad	.Ltmp4353-.Lfunc_begin18
	.quad	.Ltmp4356-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4356-.Lfunc_begin18
	.quad	.Ltmp4358-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp4358-.Lfunc_begin18
	.quad	.Ltmp4364-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc621:
	.quad	.Ltmp4354-.Lfunc_begin18
	.quad	.Ltmp4355-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4355-.Lfunc_begin18
	.quad	.Ltmp4356-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp4417-.Lfunc_begin18
	.quad	.Ltmp4419-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4419-.Lfunc_begin18
	.quad	.Ltmp4420-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4420-.Lfunc_begin18
	.quad	.Ltmp4421-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4421-.Lfunc_begin18
	.quad	.Ltmp4422-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4422-.Lfunc_begin18
	.quad	.Ltmp4423-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	58                      # DW_OP_lit10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4423-.Lfunc_begin18
	.quad	.Ltmp4424-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	59                      # DW_OP_lit11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4424-.Lfunc_begin18
	.quad	.Ltmp4425-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	60                      # DW_OP_lit12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4425-.Lfunc_begin18
	.quad	.Ltmp4426-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	61                      # DW_OP_lit13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4426-.Lfunc_begin18
	.quad	.Ltmp4427-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	62                      # DW_OP_lit14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4427-.Lfunc_begin18
	.quad	.Ltmp4428-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	63                      # DW_OP_lit15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4452-.Lfunc_begin18
	.quad	.Ltmp4453-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4453-.Lfunc_begin18
	.quad	.Ltmp4467-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp4489-.Lfunc_begin18
	.quad	.Ltmp4494-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4494-.Lfunc_begin18
	.quad	.Ltmp4504-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc622:
	.quad	.Ltmp4354-.Lfunc_begin18
	.quad	.Ltmp4364-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc623:
	.quad	.Ltmp4355-.Lfunc_begin18
	.quad	.Ltmp4357-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc624:
	.quad	.Ltmp4365-.Lfunc_begin18
	.quad	.Ltmp4376-.Lfunc_begin18
	.short	3                       # Loc expr size
	.byte	16                      # DW_OP_constu
	.byte	32                      # 32
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4376-.Lfunc_begin18
	.quad	.Ltmp4410-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp4974-.Lfunc_begin18
	.quad	.Ltmp4978-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc625:
	.quad	.Ltmp4365-.Lfunc_begin18
	.quad	.Ltmp4376-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4376-.Lfunc_begin18
	.quad	.Ltmp4411-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp4974-.Lfunc_begin18
	.quad	.Ltmp4975-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp4976-.Lfunc_begin18
	.quad	.Ltmp4977-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc626:
	.quad	.Ltmp4382-.Lfunc_begin18
	.quad	.Ltmp4384-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp4389-.Lfunc_begin18
	.quad	.Ltmp4409-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp4409-.Lfunc_begin18
	.quad	.Ltmp4410-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp4410-.Lfunc_begin18
	.quad	.Ltmp4411-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc627:
	.quad	.Ltmp4382-.Lfunc_begin18
	.quad	.Ltmp4384-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc628:
	.quad	.Ltmp4382-.Lfunc_begin18
	.quad	.Ltmp4384-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc629:
	.quad	.Ltmp4386-.Lfunc_begin18
	.quad	.Ltmp4389-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4389-.Lfunc_begin18
	.quad	.Ltmp4411-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc630:
	.quad	.Ltmp4389-.Lfunc_begin18
	.quad	.Ltmp4392-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4392-.Lfunc_begin18
	.quad	.Ltmp4393-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp4394-.Lfunc_begin18
	.quad	.Ltmp4397-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp4402-.Lfunc_begin18
	.quad	.Ltmp4411-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc631:
	.quad	.Ltmp4432-.Lfunc_begin18
	.quad	.Ltmp4473-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4473-.Lfunc_begin18
	.quad	.Ltmp4513-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4514-.Lfunc_begin18
	.quad	.Ltmp4555-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp4556-.Lfunc_begin18
	.quad	.Ltmp4952-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4954-.Lfunc_begin18
	.quad	.Ltmp4958-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4963-.Lfunc_begin18
	.quad	.Ltmp4964-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4967-.Lfunc_begin18
	.quad	.Ltmp4968-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp4969-.Lfunc_begin18
	.quad	.Ltmp4970-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4978-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp4981-.Lfunc_begin18
	.quad	.Ltmp4982-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc632:
	.quad	.Ltmp4434-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc633:
	.quad	.Ltmp4434-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc634:
	.quad	.Ltmp4454-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc635:
	.quad	.Ltmp4454-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc636:
	.quad	.Ltmp4478-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	63                      # DW_OP_lit15
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc637:
	.quad	.Ltmp4488-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc638:
	.quad	.Ltmp4490-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc639:
	.quad	.Ltmp4490-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc640:
	.quad	.Ltmp4494-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc641:
	.quad	.Ltmp4525-.Lfunc_begin18
	.quad	.Ltmp4549-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc642:
	.quad	.Ltmp4534-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc643:
	.quad	.Ltmp4534-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc644:
	.quad	.Ltmp4541-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc645:
	.quad	.Ltmp4541-.Lfunc_begin18
	.quad	.Lfunc_end20-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc646:
	.quad	.Ltmp4556-.Lfunc_begin18
	.quad	.Ltmp4559-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp4559-.Lfunc_begin18
	.quad	.Ltmp4569-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp4569-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4923-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp4923-.Lfunc_begin18
	.quad	.Ltmp4944-.Lfunc_begin18
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	56                      # 56
	.quad	.Ltmp4948-.Lfunc_begin18
	.quad	.Ltmp4952-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4969-.Lfunc_begin18
	.quad	.Ltmp4971-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4978-.Lfunc_begin18
	.quad	.Ltmp4979-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp4981-.Lfunc_begin18
	.quad	.Ltmp4982-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc647:
	.quad	.Ltmp4572-.Lfunc_begin18
	.quad	.Ltmp4577-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc648:
	.quad	.Ltmp4572-.Lfunc_begin18
	.quad	.Ltmp4579-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc649:
	.quad	.Ltmp4580-.Lfunc_begin18
	.quad	.Ltmp4584-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc650:
	.quad	.Ltmp4580-.Lfunc_begin18
	.quad	.Ltmp4586-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc651:
	.quad	.Ltmp4586-.Lfunc_begin18
	.quad	.Ltmp4590-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc652:
	.quad	.Ltmp4586-.Lfunc_begin18
	.quad	.Ltmp4592-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc653:
	.quad	.Ltmp4593-.Lfunc_begin18
	.quad	.Ltmp4597-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc654:
	.quad	.Ltmp4593-.Lfunc_begin18
	.quad	.Ltmp4599-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc655:
	.quad	.Ltmp4600-.Lfunc_begin18
	.quad	.Ltmp4604-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc656:
	.quad	.Ltmp4600-.Lfunc_begin18
	.quad	.Ltmp4606-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc657:
	.quad	.Ltmp4607-.Lfunc_begin18
	.quad	.Ltmp4611-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc658:
	.quad	.Ltmp4607-.Lfunc_begin18
	.quad	.Ltmp4613-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc659:
	.quad	.Ltmp4614-.Lfunc_begin18
	.quad	.Ltmp4618-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc660:
	.quad	.Ltmp4614-.Lfunc_begin18
	.quad	.Ltmp4620-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc661:
	.quad	.Ltmp4621-.Lfunc_begin18
	.quad	.Ltmp4625-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc662:
	.quad	.Ltmp4621-.Lfunc_begin18
	.quad	.Ltmp4627-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc663:
	.quad	.Ltmp4628-.Lfunc_begin18
	.quad	.Ltmp4632-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc664:
	.quad	.Ltmp4628-.Lfunc_begin18
	.quad	.Ltmp4634-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc665:
	.quad	.Ltmp4635-.Lfunc_begin18
	.quad	.Ltmp4639-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc666:
	.quad	.Ltmp4635-.Lfunc_begin18
	.quad	.Ltmp4641-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc667:
	.quad	.Ltmp4642-.Lfunc_begin18
	.quad	.Ltmp4646-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc668:
	.quad	.Ltmp4642-.Lfunc_begin18
	.quad	.Ltmp4648-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc669:
	.quad	.Ltmp4649-.Lfunc_begin18
	.quad	.Ltmp4653-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc670:
	.quad	.Ltmp4649-.Lfunc_begin18
	.quad	.Ltmp4655-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc671:
	.quad	.Ltmp4656-.Lfunc_begin18
	.quad	.Ltmp4660-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc672:
	.quad	.Ltmp4656-.Lfunc_begin18
	.quad	.Ltmp4662-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc673:
	.quad	.Ltmp4663-.Lfunc_begin18
	.quad	.Ltmp4667-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc674:
	.quad	.Ltmp4663-.Lfunc_begin18
	.quad	.Ltmp4669-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc675:
	.quad	.Ltmp4670-.Lfunc_begin18
	.quad	.Ltmp4674-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc676:
	.quad	.Ltmp4670-.Lfunc_begin18
	.quad	.Ltmp4676-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc677:
	.quad	.Ltmp4677-.Lfunc_begin18
	.quad	.Ltmp4681-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc678:
	.quad	.Ltmp4677-.Lfunc_begin18
	.quad	.Ltmp4683-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc679:
	.quad	.Ltmp4684-.Lfunc_begin18
	.quad	.Ltmp4688-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc680:
	.quad	.Ltmp4684-.Lfunc_begin18
	.quad	.Ltmp4690-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc681:
	.quad	.Ltmp4691-.Lfunc_begin18
	.quad	.Ltmp4695-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc682:
	.quad	.Ltmp4691-.Lfunc_begin18
	.quad	.Ltmp4697-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc683:
	.quad	.Ltmp4698-.Lfunc_begin18
	.quad	.Ltmp4702-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc684:
	.quad	.Ltmp4698-.Lfunc_begin18
	.quad	.Ltmp4704-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc685:
	.quad	.Ltmp4705-.Lfunc_begin18
	.quad	.Ltmp4709-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc686:
	.quad	.Ltmp4705-.Lfunc_begin18
	.quad	.Ltmp4711-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc687:
	.quad	.Ltmp4712-.Lfunc_begin18
	.quad	.Ltmp4716-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc688:
	.quad	.Ltmp4712-.Lfunc_begin18
	.quad	.Ltmp4718-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc689:
	.quad	.Ltmp4719-.Lfunc_begin18
	.quad	.Ltmp4723-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc690:
	.quad	.Ltmp4719-.Lfunc_begin18
	.quad	.Ltmp4725-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc691:
	.quad	.Ltmp4726-.Lfunc_begin18
	.quad	.Ltmp4730-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc692:
	.quad	.Ltmp4726-.Lfunc_begin18
	.quad	.Ltmp4732-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc693:
	.quad	.Ltmp4733-.Lfunc_begin18
	.quad	.Ltmp4737-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc694:
	.quad	.Ltmp4733-.Lfunc_begin18
	.quad	.Ltmp4739-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc695:
	.quad	.Ltmp4740-.Lfunc_begin18
	.quad	.Ltmp4744-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc696:
	.quad	.Ltmp4740-.Lfunc_begin18
	.quad	.Ltmp4746-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc697:
	.quad	.Ltmp4747-.Lfunc_begin18
	.quad	.Ltmp4751-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc698:
	.quad	.Ltmp4747-.Lfunc_begin18
	.quad	.Ltmp4753-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc699:
	.quad	.Ltmp4754-.Lfunc_begin18
	.quad	.Ltmp4758-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc700:
	.quad	.Ltmp4754-.Lfunc_begin18
	.quad	.Ltmp4760-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc701:
	.quad	.Ltmp4761-.Lfunc_begin18
	.quad	.Ltmp4765-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc702:
	.quad	.Ltmp4761-.Lfunc_begin18
	.quad	.Ltmp4767-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc703:
	.quad	.Ltmp4768-.Lfunc_begin18
	.quad	.Ltmp4772-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc704:
	.quad	.Ltmp4768-.Lfunc_begin18
	.quad	.Ltmp4774-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc705:
	.quad	.Ltmp4775-.Lfunc_begin18
	.quad	.Ltmp4779-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc706:
	.quad	.Ltmp4775-.Lfunc_begin18
	.quad	.Ltmp4781-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc707:
	.quad	.Ltmp4782-.Lfunc_begin18
	.quad	.Ltmp4786-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc708:
	.quad	.Ltmp4782-.Lfunc_begin18
	.quad	.Ltmp4788-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc709:
	.quad	.Ltmp4789-.Lfunc_begin18
	.quad	.Ltmp4793-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc710:
	.quad	.Ltmp4789-.Lfunc_begin18
	.quad	.Ltmp4795-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc711:
	.quad	.Ltmp4796-.Lfunc_begin18
	.quad	.Ltmp4800-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc712:
	.quad	.Ltmp4796-.Lfunc_begin18
	.quad	.Ltmp4802-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc713:
	.quad	.Ltmp4803-.Lfunc_begin18
	.quad	.Ltmp4807-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc714:
	.quad	.Ltmp4803-.Lfunc_begin18
	.quad	.Ltmp4809-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc715:
	.quad	.Ltmp4810-.Lfunc_begin18
	.quad	.Ltmp4814-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc716:
	.quad	.Ltmp4810-.Lfunc_begin18
	.quad	.Ltmp4816-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc717:
	.quad	.Ltmp4817-.Lfunc_begin18
	.quad	.Ltmp4821-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc718:
	.quad	.Ltmp4817-.Lfunc_begin18
	.quad	.Ltmp4823-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc719:
	.quad	.Ltmp4824-.Lfunc_begin18
	.quad	.Ltmp4828-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc720:
	.quad	.Ltmp4824-.Lfunc_begin18
	.quad	.Ltmp4830-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc721:
	.quad	.Ltmp4831-.Lfunc_begin18
	.quad	.Ltmp4835-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc722:
	.quad	.Ltmp4831-.Lfunc_begin18
	.quad	.Ltmp4837-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc723:
	.quad	.Ltmp4838-.Lfunc_begin18
	.quad	.Ltmp4842-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc724:
	.quad	.Ltmp4838-.Lfunc_begin18
	.quad	.Ltmp4844-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc725:
	.quad	.Ltmp4845-.Lfunc_begin18
	.quad	.Ltmp4849-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc726:
	.quad	.Ltmp4845-.Lfunc_begin18
	.quad	.Ltmp4851-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc727:
	.quad	.Ltmp4852-.Lfunc_begin18
	.quad	.Ltmp4856-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc728:
	.quad	.Ltmp4852-.Lfunc_begin18
	.quad	.Ltmp4858-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc729:
	.quad	.Ltmp4859-.Lfunc_begin18
	.quad	.Ltmp4863-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc730:
	.quad	.Ltmp4859-.Lfunc_begin18
	.quad	.Ltmp4865-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc731:
	.quad	.Ltmp4866-.Lfunc_begin18
	.quad	.Ltmp4870-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc732:
	.quad	.Ltmp4866-.Lfunc_begin18
	.quad	.Ltmp4872-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc733:
	.quad	.Ltmp4873-.Lfunc_begin18
	.quad	.Ltmp4877-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc734:
	.quad	.Ltmp4873-.Lfunc_begin18
	.quad	.Ltmp4879-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc735:
	.quad	.Ltmp4880-.Lfunc_begin18
	.quad	.Ltmp4884-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc736:
	.quad	.Ltmp4880-.Lfunc_begin18
	.quad	.Ltmp4886-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc737:
	.quad	.Ltmp4887-.Lfunc_begin18
	.quad	.Ltmp4891-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc738:
	.quad	.Ltmp4887-.Lfunc_begin18
	.quad	.Ltmp4893-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc739:
	.quad	.Ltmp4894-.Lfunc_begin18
	.quad	.Ltmp4898-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc740:
	.quad	.Ltmp4894-.Lfunc_begin18
	.quad	.Ltmp4900-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc741:
	.quad	.Ltmp4901-.Lfunc_begin18
	.quad	.Ltmp4905-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc742:
	.quad	.Ltmp4901-.Lfunc_begin18
	.quad	.Ltmp4907-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc743:
	.quad	.Ltmp4908-.Lfunc_begin18
	.quad	.Ltmp4912-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc744:
	.quad	.Ltmp4908-.Lfunc_begin18
	.quad	.Ltmp4914-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc745:
	.quad	.Ltmp4915-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp4940-.Lfunc_begin18
	.quad	.Ltmp4942-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc746:
	.quad	.Ltmp4915-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp4940-.Lfunc_begin18
	.quad	.Ltmp4943-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc747:
	.quad	.Ltmp4931-.Lfunc_begin18
	.quad	.Ltmp4935-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc748:
	.quad	.Ltmp4931-.Lfunc_begin18
	.quad	.Ltmp4940-.Lfunc_begin18
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	46                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	47                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	48                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	49                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	50                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	51                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	52                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	53                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	54                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	55                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	56                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	57                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	58                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	59                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	60                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	61                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	5                       # DW_FORM_data2
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	62                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	63                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	64                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	65                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	66                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	56                      # DW_AT_data_member_location
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	67                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	68                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	69                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	70                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	71                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	72                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	73                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	74                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	75                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	76                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	77                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	78                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	79                      # Abbreviation Code
	.byte	4                       # DW_TAG_enumeration_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	80                      # Abbreviation Code
	.byte	40                      # DW_TAG_enumerator
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	28                      # DW_AT_const_value
	.byte	15                      # DW_FORM_udata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	81                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	5                       # DW_FORM_data2
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	82                      # Abbreviation Code
	.byte	21                      # DW_TAG_subroutine_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	83                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	84                      # Abbreviation Code
	.byte	21                      # DW_TAG_subroutine_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	85                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	86                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	87                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	88                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	89                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	90                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	91                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	92                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	93                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	94                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	95                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	96                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	97                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	98                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	99                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	100                     # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	101                     # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	102                     # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	103                     # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	15                      # DW_FORM_udata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	104                     # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	105                     # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	106                     # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	107                     # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	108                     # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xbbb DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0xb DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x35:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	4                       # Abbrev [4] 0x3c:0x15 DW_TAG_variable
	.long	.Linfo_string5          # DW_AT_name
	.long	81                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	spec_fd
	.byte	5                       # Abbrev [5] 0x51:0xc DW_TAG_array_type
	.long	93                      # DW_AT_type
	.byte	6                       # Abbrev [6] 0x56:0x6 DW_TAG_subrange_type
	.long	162                     # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	7                       # Abbrev [7] 0x5d:0x39 DW_TAG_structure_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	24                      # DW_AT_byte_size
	.byte	1                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x65:0xc DW_TAG_member
	.long	.Linfo_string6          # DW_AT_name
	.long	53                      # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x71:0xc DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	53                      # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x7d:0xc DW_TAG_member
	.long	.Linfo_string8          # DW_AT_name
	.long	53                      # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x89:0xc DW_TAG_member
	.long	.Linfo_string9          # DW_AT_name
	.long	150                     # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x96:0x5 DW_TAG_pointer_type
	.long	155                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x9b:0x7 DW_TAG_base_type
	.long	.Linfo_string10         # DW_AT_name
	.byte	8                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	10                      # Abbrev [10] 0xa2:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0xa9:0xb DW_TAG_variable
	.long	.Linfo_string13         # DW_AT_name
	.long	180                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0xb4:0x7 DW_TAG_base_type
	.long	.Linfo_string14         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	3                       # Abbrev [3] 0xbb:0x7 DW_TAG_base_type
	.long	.Linfo_string15         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	11                      # Abbrev [11] 0xc2:0x1 DW_TAG_pointer_type
	.byte	9                       # Abbrev [9] 0xc3:0x5 DW_TAG_pointer_type
	.long	200                     # DW_AT_type
	.byte	9                       # Abbrev [9] 0xc8:0x5 DW_TAG_pointer_type
	.long	205                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0xcd:0x7 DW_TAG_base_type
	.long	.Linfo_string16         # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	12                      # Abbrev [12] 0xd4:0x2c DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	558                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xe7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	570                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	581                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0xf9:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	592                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	15                      # Abbrev [15] 0x100:0x30 DW_TAG_subprogram
	.long	.Linfo_string94         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	16                      # Abbrev [16] 0x10c:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x117:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x122:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x123:0xb DW_TAG_variable
	.long	.Linfo_string6          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x130:0x5c DW_TAG_subprogram
	.long	.Linfo_string97         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x13c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string98         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	19                      # Abbrev [19] 0x147:0xb DW_TAG_formal_parameter
	.long	.Linfo_string99         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.long	200                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x152:0xb DW_TAG_formal_parameter
	.long	.Linfo_string100        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	132                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x15d:0xb DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	134                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x168:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	134                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x173:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	134                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x17e:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x17f:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	155                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	20                      # Abbrev [20] 0x18c:0x9 DW_TAG_subprogram
	.long	.Linfo_string104        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	388                     # DW_AT_decl_line
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	21                      # Abbrev [21] 0x195:0x1a DW_TAG_subprogram
	.long	.Linfo_string105        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0x1a2:0xc DW_TAG_formal_parameter
	.long	.Linfo_string106        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.short	278                     # DW_AT_decl_line
	.long	.debug_info+8189        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x1af:0x2e DW_TAG_subprogram
	.long	.Linfo_string126        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x1b8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1c4:0xc DW_TAG_formal_parameter
	.long	.Linfo_string128        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1d0:0xc DW_TAG_formal_parameter
	.long	.Linfo_string129        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x1dd:0x2e DW_TAG_subprogram
	.long	.Linfo_string130        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x1e6:0xc DW_TAG_formal_parameter
	.long	.Linfo_string127        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1f2:0xc DW_TAG_formal_parameter
	.long	.Linfo_string128        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1fe:0xc DW_TAG_formal_parameter
	.long	.Linfo_string129        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x20b:0x23 DW_TAG_subprogram
	.long	.Linfo_string186        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x217:0xb DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x222:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x22e:0x2e DW_TAG_subprogram
	.long	.Linfo_string189        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x23a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string190        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.long	155                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x245:0xb DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x250:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	222                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x25c:0x44 DW_TAG_subprogram
	.long	.Linfo_string191        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	185                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x268:0xb DW_TAG_formal_parameter
	.long	.Linfo_string9          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	185                     # DW_AT_decl_line
	.long	150                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x273:0xb DW_TAG_formal_parameter
	.long	.Linfo_string100        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	185                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	19                      # Abbrev [19] 0x27e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string98         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	185                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	19                      # Abbrev [19] 0x289:0xb DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	185                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x294:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	186                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x2a0:0x3e DW_TAG_subprogram
	.long	.Linfo_string197        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x2ad:0xc DW_TAG_formal_parameter
	.long	.Linfo_string9          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.long	150                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2b9:0xc DW_TAG_formal_parameter
	.long	.Linfo_string100        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2c5:0xc DW_TAG_formal_parameter
	.long	.Linfo_string98         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2d1:0xc DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x2de:0x18 DW_TAG_subprogram
	.long	.Linfo_string202        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	243                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x2ea:0xb DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	243                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x2f6:0x18 DW_TAG_subprogram
	.long	.Linfo_string203        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	239                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x302:0xb DW_TAG_formal_parameter
	.long	.Linfo_string101        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	239                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x30e:0x8b7 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string408        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	53                      # DW_AT_type
                                        # DW_AT_external
	.byte	26                      # Abbrev [26] 0x328:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string427        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x338:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc3            # DW_AT_location
	.long	.Linfo_string428        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	195                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x348:0x10 DW_TAG_variable
	.long	.Ldebug_loc4            # DW_AT_location
	.long	.Linfo_string429        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x358:0x10 DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	.Linfo_string430        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	289                     # DW_AT_decl_line
	.long	200                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x368:0x10 DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	.Linfo_string431        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x378:0x10 DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	.Linfo_string432        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	290                     # DW_AT_decl_line
	.long	150                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x388:0x10 DW_TAG_variable
	.long	.Ldebug_loc17           # DW_AT_location
	.long	.Linfo_string95         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	287                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x398:0x10 DW_TAG_variable
	.long	.Ldebug_loc18           # DW_AT_location
	.long	.Linfo_string433        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.short	287                     # DW_AT_decl_line
	.long	53                      # DW_AT_type
	.byte	28                      # Abbrev [28] 0x3a8:0x1e DW_TAG_inlined_subroutine
	.long	405                     # DW_AT_abstract_origin
	.quad	.Ltmp138                # DW_AT_low_pc
	.long	.Ltmp142-.Ltmp138       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	296                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x3bc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc20           # DW_AT_location
	.long	418                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x3c6:0x2e DW_TAG_inlined_subroutine
	.long	256                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	303                     # DW_AT_call_line
	.byte	30                      # Abbrev [30] 0x3d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc9            # DW_AT_location
	.long	268                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3db:0x9 DW_TAG_variable
	.long	.Ldebug_loc11           # DW_AT_location
	.long	279                     # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3e4:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges1         # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x3e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc10           # DW_AT_location
	.long	291                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x3f4:0x57 DW_TAG_inlined_subroutine
	.long	304                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges2         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	307                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x400:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	316                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x406:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc7            # DW_AT_location
	.long	327                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x40f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc8            # DW_AT_location
	.long	338                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x418:0x9 DW_TAG_variable
	.long	.Ldebug_loc12           # DW_AT_location
	.long	349                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x421:0x9 DW_TAG_variable
	.long	.Ldebug_loc13           # DW_AT_location
	.long	360                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x42a:0x9 DW_TAG_variable
	.long	.Ldebug_loc14           # DW_AT_location
	.long	371                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x433:0x17 DW_TAG_lexical_block
	.quad	.Ltmp101                # DW_AT_low_pc
	.long	.Ltmp107-.Ltmp101       # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x440:0x9 DW_TAG_variable
	.long	.Ldebug_loc15           # DW_AT_location
	.long	383                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x44b:0x35c DW_TAG_inlined_subroutine
	.long	431                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges3         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	353                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x457:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc69           # DW_AT_location
	.long	440                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x460:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc68           # DW_AT_location
	.long	452                     # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x469:0x5 DW_TAG_formal_parameter
	.long	464                     # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x46e:0x338 DW_TAG_inlined_subroutine
	.long	.debug_info+6891        # DW_AT_abstract_origin
	.long	.Ldebug_ranges4         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	402                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x47a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc75           # DW_AT_location
	.long	.debug_info+6904        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x483:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc74           # DW_AT_location
	.long	.debug_info+6916        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x48c:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	.debug_info+6928        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x495:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320'"
	.long	.debug_info+6940        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x49e:0x9 DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.debug_info+6952        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4a7:0x9 DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.debug_info+6964        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4b0:0x9 DW_TAG_variable
	.long	.Ldebug_loc72           # DW_AT_location
	.long	.debug_info+6976        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4b9:0x9 DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	.debug_info+6988        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4c2:0x9 DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	.debug_info+7000        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4cb:0x9 DW_TAG_variable
	.long	.Ldebug_loc93           # DW_AT_location
	.long	.debug_info+7012        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4d4:0x9 DW_TAG_variable
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.debug_info+7024        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4dd:0x9 DW_TAG_variable
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.debug_info+7036        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4e6:0x9 DW_TAG_variable
	.long	.Ldebug_loc107          # DW_AT_location
	.long	.debug_info+7048        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x4ef:0x82 DW_TAG_inlined_subroutine
	.long	.debug_info+8199        # DW_AT_abstract_origin
	.long	.Ldebug_ranges5         # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	569                     # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x4fb:0x5 DW_TAG_formal_parameter
	.long	.debug_info+8212        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x500:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc97           # DW_AT_location
	.long	.debug_info+8224        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x509:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc98           # DW_AT_location
	.long	.debug_info+8236        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x512:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc99           # DW_AT_location
	.long	.debug_info+8248        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x51b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc101          # DW_AT_location
	.long	.debug_info+8260        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x524:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc94           # DW_AT_location
	.long	.debug_info+8272        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x52d:0x9 DW_TAG_variable
	.long	.Ldebug_loc80           # DW_AT_location
	.long	.debug_info+8284        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x536:0x9 DW_TAG_variable
	.long	.Ldebug_loc106          # DW_AT_location
	.long	.debug_info+8296        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x53f:0x31 DW_TAG_inlined_subroutine
	.long	.debug_info+9580        # DW_AT_abstract_origin
	.long	.Ldebug_ranges6         # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1202                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x54b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc105          # DW_AT_location
	.long	.debug_info+9593        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x554:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc103          # DW_AT_location
	.long	.debug_info+9605        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x55d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc102          # DW_AT_location
	.long	.debug_info+9617        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x566:0x9 DW_TAG_variable
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.debug_info+9629        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x571:0x98 DW_TAG_inlined_subroutine
	.long	.debug_info+8199        # DW_AT_abstract_origin
	.quad	.Ltmp288                # DW_AT_low_pc
	.long	.Ltmp306-.Ltmp288       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	569                     # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x585:0x5 DW_TAG_formal_parameter
	.long	.debug_info+8212        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x58a:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	.debug_info+8224        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x590:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+8236        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x596:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+8248        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x59c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc71           # DW_AT_location
	.long	.debug_info+8260        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x5a5:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+8272        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x5ab:0x9 DW_TAG_variable
	.long	.Ldebug_loc70           # DW_AT_location
	.long	.debug_info+8284        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x5b4:0x9 DW_TAG_variable
	.long	.Ldebug_loc79           # DW_AT_location
	.long	.debug_info+8296        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x5bd:0x4b DW_TAG_inlined_subroutine
	.long	.debug_info+9580        # DW_AT_abstract_origin
	.long	.Ldebug_ranges7         # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1202                    # DW_AT_call_line
	.byte	38                      # Abbrev [38] 0x5c9:0x9 DW_TAG_variable
	.long	.Ldebug_loc78           # DW_AT_location
	.long	.debug_info+9629        # DW_AT_abstract_origin
	.byte	40                      # Abbrev [40] 0x5d2:0x35 DW_TAG_inlined_subroutine
	.long	.debug_info+10625       # DW_AT_abstract_origin
	.quad	.Ltmp298                # DW_AT_low_pc
	.long	.Ltmp299-.Ltmp298       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	565                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x5e6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc76           # DW_AT_location
	.long	.debug_info+10637       # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x5ef:0x8 DW_TAG_formal_parameter
	.ascii	"\220\365\003"          # DW_AT_const_value
	.long	.debug_info+10648       # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x5f7:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	.debug_info+10659       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x5fd:0x9 DW_TAG_variable
	.long	.Ldebug_loc77           # DW_AT_location
	.long	.debug_info+10670       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x609:0xed DW_TAG_inlined_subroutine
	.long	.debug_info+10682       # DW_AT_abstract_origin
	.long	.Ldebug_ranges8         # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	577                     # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x615:0x5 DW_TAG_formal_parameter
	.long	.debug_info+10695       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x61a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc84           # DW_AT_location
	.long	.debug_info+10707       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x623:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc87           # DW_AT_location
	.long	.debug_info+10719       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x62c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc86           # DW_AT_location
	.long	.debug_info+10731       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x635:0x9 DW_TAG_variable
	.long	.Ldebug_loc83           # DW_AT_location
	.long	.debug_info+10743       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x63e:0x9 DW_TAG_variable
	.long	.Ldebug_loc89           # DW_AT_location
	.long	.debug_info+10755       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x647:0x9 DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	.debug_info+10767       # DW_AT_abstract_origin
	.byte	40                      # Abbrev [40] 0x650:0x3a DW_TAG_inlined_subroutine
	.long	.debug_info+10780       # DW_AT_abstract_origin
	.quad	.Ltmp326                # DW_AT_low_pc
	.long	.Ltmp331-.Ltmp326       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	1261                    # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x664:0x5 DW_TAG_formal_parameter
	.long	.debug_info+10793       # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x669:0x20 DW_TAG_inlined_subroutine
	.long	523                     # DW_AT_abstract_origin
	.quad	.Ltmp326                # DW_AT_low_pc
	.long	.Ltmp330-.Ltmp326       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	972                     # DW_AT_call_line
	.byte	34                      # Abbrev [34] 0x67d:0x5 DW_TAG_formal_parameter
	.long	535                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x682:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	546                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x68a:0x31 DW_TAG_inlined_subroutine
	.long	604                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges9         # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1262                    # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x696:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc85           # DW_AT_location
	.long	616                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x69f:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	627                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x6a5:0x7 DW_TAG_formal_parameter
	.ascii	"\210'"                 # DW_AT_const_value
	.long	638                     # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x6ac:0x5 DW_TAG_formal_parameter
	.long	649                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x6b1:0x9 DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	660                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x6bb:0x3a DW_TAG_inlined_subroutine
	.long	.debug_info+10780       # DW_AT_abstract_origin
	.quad	.Ltmp348                # DW_AT_low_pc
	.long	.Ltmp354-.Ltmp348       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	1276                    # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x6cf:0x5 DW_TAG_formal_parameter
	.long	.debug_info+10793       # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x6d4:0x20 DW_TAG_inlined_subroutine
	.long	523                     # DW_AT_abstract_origin
	.quad	.Ltmp348                # DW_AT_low_pc
	.long	.Ltmp353-.Ltmp348       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	972                     # DW_AT_call_line
	.byte	34                      # Abbrev [34] 0x6e8:0x5 DW_TAG_formal_parameter
	.long	535                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x6ed:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	546                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x6f6:0x30 DW_TAG_inlined_subroutine
	.long	672                     # DW_AT_abstract_origin
	.quad	.Ltmp371                # DW_AT_low_pc
	.long	.Ltmp373-.Ltmp371       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	580                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x70a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc92           # DW_AT_location
	.long	685                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x713:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	697                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x719:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	709                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x71f:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	721                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x726:0x29 DW_TAG_inlined_subroutine
	.long	.debug_info+10818       # DW_AT_abstract_origin
	.long	.Ldebug_ranges10        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	585                     # DW_AT_call_line
	.byte	39                      # Abbrev [39] 0x732:0x5 DW_TAG_formal_parameter
	.long	.debug_info+10827       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x737:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc82           # DW_AT_location
	.long	.debug_info+10839       # DW_AT_abstract_origin
	.byte	39                      # Abbrev [39] 0x740:0x5 DW_TAG_formal_parameter
	.long	.debug_info+10851       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x745:0x9 DW_TAG_variable
	.long	.Ldebug_loc81           # DW_AT_location
	.long	.debug_info+10875       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x74f:0x56 DW_TAG_inlined_subroutine
	.long	.debug_info+7381        # DW_AT_abstract_origin
	.quad	.Ltmp412                # DW_AT_low_pc
	.long	.Ltmp420-.Ltmp412       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	594                     # DW_AT_call_line
	.byte	41                      # Abbrev [41] 0x763:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	.debug_info+7394        # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x769:0x19 DW_TAG_inlined_subroutine
	.long	523                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges11        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	426                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x775:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	535                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x77b:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	546                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x782:0x22 DW_TAG_inlined_subroutine
	.long	558                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges12        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	428                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x78e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc100          # DW_AT_location
	.long	570                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x797:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	581                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x79d:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	592                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x7a7:0x37f DW_TAG_inlined_subroutine
	.long	477                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges13        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	333                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x7b3:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	486                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x7b9:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	498                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x7bf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc24           # DW_AT_location
	.long	510                     # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x7c8:0x35d DW_TAG_inlined_subroutine
	.long	.debug_info+7086        # DW_AT_abstract_origin
	.long	.Ldebug_ranges14        # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.short	398                     # DW_AT_call_line
	.byte	41                      # Abbrev [41] 0x7d4:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+7095        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x7da:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	.debug_info+7107        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x7e0:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320'"
	.long	.debug_info+7119        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x7e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.debug_info+7131        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x7f2:0x9 DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.debug_info+7143        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x7fb:0x9 DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	.debug_info+7155        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x804:0x9 DW_TAG_variable
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.debug_info+7167        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x80d:0xbf DW_TAG_inlined_subroutine
	.long	.debug_info+8327        # DW_AT_abstract_origin
	.long	.Ldebug_ranges15        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	454                     # DW_AT_call_line
	.byte	41                      # Abbrev [41] 0x819:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	.debug_info+8352        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x81f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.debug_info+8364        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x828:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+8376        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x82e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc32           # DW_AT_location
	.long	.debug_info+8388        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x837:0x9 DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.debug_info+8400        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x840:0x9 DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	.debug_info+8412        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x849:0x82 DW_TAG_inlined_subroutine
	.long	.debug_info+8425        # DW_AT_abstract_origin
	.long	.Ldebug_ranges16        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1019                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x855:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc39           # DW_AT_location
	.long	.debug_info+8437        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x85e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.debug_info+8448        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x867:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+8459        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x86d:0x6 DW_TAG_formal_parameter
	.byte	30                      # DW_AT_const_value
	.long	.debug_info+8470        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x873:0x9 DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.debug_info+8481        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x87c:0x9 DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.debug_info+8492        # DW_AT_abstract_origin
	.byte	40                      # Abbrev [40] 0x885:0x1e DW_TAG_inlined_subroutine
	.long	.debug_info+9152        # DW_AT_abstract_origin
	.quad	.Ltmp168                # DW_AT_low_pc
	.long	.Ltmp169-.Ltmp168       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	265                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x899:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.debug_info+9160        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x8a3:0x27 DW_TAG_inlined_subroutine
	.long	.debug_info+9172        # DW_AT_abstract_origin
	.quad	.Ltmp169                # DW_AT_low_pc
	.long	.Ltmp174-.Ltmp169       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	266                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x8b7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.debug_info+9180        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x8c0:0x9 DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.debug_info+9191        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x8cc:0x56 DW_TAG_inlined_subroutine
	.long	.debug_info+7381        # DW_AT_abstract_origin
	.quad	.Ltmp177                # DW_AT_low_pc
	.long	.Ltmp186-.Ltmp177       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	462                     # DW_AT_call_line
	.byte	41                      # Abbrev [41] 0x8e0:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+7394        # DW_AT_abstract_origin
	.byte	29                      # Abbrev [29] 0x8e6:0x19 DW_TAG_inlined_subroutine
	.long	523                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges17        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	426                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x8f2:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	535                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x8f8:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	546                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x8ff:0x22 DW_TAG_inlined_subroutine
	.long	558                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges18        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	428                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x90b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc46           # DW_AT_location
	.long	570                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x914:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	581                     # DW_AT_abstract_origin
	.byte	14                      # Abbrev [14] 0x91a:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	592                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x922:0x3a DW_TAG_inlined_subroutine
	.long	604                     # DW_AT_abstract_origin
	.quad	.Ltmp186                # DW_AT_low_pc
	.long	.Ltmp190-.Ltmp186       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	463                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x936:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc50           # DW_AT_location
	.long	616                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x93f:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	627                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x945:0x7 DW_TAG_formal_parameter
	.ascii	"\210'"                 # DW_AT_const_value
	.long	638                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x94c:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	649                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x952:0x9 DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	660                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x95c:0xb4 DW_TAG_inlined_subroutine
	.long	.debug_info+9203        # DW_AT_abstract_origin
	.quad	.Ltmp192                # DW_AT_low_pc
	.long	.Ltmp223-.Ltmp192       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.short	465                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x970:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.debug_info+9224        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x979:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc51           # DW_AT_location
	.long	.debug_info+9236        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x982:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc49           # DW_AT_location
	.long	.debug_info+9248        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x98b:0x9 DW_TAG_variable
	.long	.Ldebug_loc30           # DW_AT_location
	.long	.debug_info+9260        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x994:0x9 DW_TAG_variable
	.long	.Ldebug_loc54           # DW_AT_location
	.long	.debug_info+9272        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x99d:0x9 DW_TAG_variable
	.long	.Ldebug_loc55           # DW_AT_location
	.long	.debug_info+9284        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x9a6:0x9 DW_TAG_variable
	.long	.Ldebug_loc57           # DW_AT_location
	.long	.debug_info+9296        # DW_AT_abstract_origin
	.byte	40                      # Abbrev [40] 0x9af:0x36 DW_TAG_inlined_subroutine
	.long	.debug_info+9309        # DW_AT_abstract_origin
	.quad	.Ltmp198                # DW_AT_low_pc
	.long	.Ltmp208-.Ltmp198       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	1058                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x9c3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.debug_info+9322        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x9cc:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+9334        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x9d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc52           # DW_AT_location
	.long	.debug_info+9346        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x9db:0x9 DW_TAG_variable
	.long	.Ldebug_loc53           # DW_AT_location
	.long	.debug_info+9358        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x9e5:0x2a DW_TAG_inlined_subroutine
	.long	672                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges19        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1064                    # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x9f1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc44           # DW_AT_location
	.long	685                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x9fa:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	697                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xa00:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc56           # DW_AT_location
	.long	709                     # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0xa09:0x5 DW_TAG_formal_parameter
	.long	721                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xa10:0xe0 DW_TAG_inlined_subroutine
	.long	.debug_info+9371        # DW_AT_abstract_origin
	.long	.Ldebug_ranges20        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	470                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xa1c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc29           # DW_AT_location
	.long	.debug_info+9392        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0xa25:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	.debug_info+9404        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa2b:0x9 DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.debug_info+9464        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa34:0x9 DW_TAG_variable
	.long	.Ldebug_loc63           # DW_AT_location
	.long	.debug_info+9476        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa3d:0x9 DW_TAG_variable
	.long	.Ldebug_loc64           # DW_AT_location
	.long	.debug_info+9488        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa46:0x9 DW_TAG_variable
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.debug_info+9500        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0xa4f:0x4f DW_TAG_inlined_subroutine
	.long	.debug_info+9309        # DW_AT_abstract_origin
	.long	.Ldebug_ranges21        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1117                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xa5b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.debug_info+9322        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0xa64:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc61           # DW_AT_location
	.long	.debug_info+9334        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa6d:0x9 DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	.debug_info+9358        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa76:0x9 DW_TAG_variable
	.long	.Ldebug_loc60           # DW_AT_location
	.long	.debug_info+9346        # DW_AT_abstract_origin
	.byte	40                      # Abbrev [40] 0xa7f:0x1e DW_TAG_inlined_subroutine
	.long	.debug_info+9556        # DW_AT_abstract_origin
	.quad	.Ltmp247                # DW_AT_low_pc
	.long	.Ltmp250-.Ltmp247       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	515                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xa93:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc62           # DW_AT_location
	.long	.debug_info+9568        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0xa9e:0x2a DW_TAG_inlined_subroutine
	.long	672                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges22        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1123                    # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xaaa:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc45           # DW_AT_location
	.long	685                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xab3:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	697                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xab9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc65           # DW_AT_location
	.long	709                     # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0xac2:0x5 DW_TAG_formal_parameter
	.long	721                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0xac8:0x27 DW_TAG_inlined_subroutine
	.long	.debug_info+9518        # DW_AT_abstract_origin
	.quad	.Ltmp230                # DW_AT_low_pc
	.long	.Ltmp245-.Ltmp230       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	1149                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xadc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc38           # DW_AT_location
	.long	.debug_info+9531        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xae5:0x9 DW_TAG_variable
	.long	.Ldebug_loc58           # DW_AT_location
	.long	.debug_info+9543        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xaf0:0x34 DW_TAG_inlined_subroutine
	.long	.debug_info+9371        # DW_AT_abstract_origin
	.long	.Ldebug_ranges23        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.short	521                     # DW_AT_call_line
	.byte	40                      # Abbrev [40] 0xafc:0x27 DW_TAG_inlined_subroutine
	.long	.debug_info+9518        # DW_AT_abstract_origin
	.quad	.Ltmp493                # DW_AT_low_pc
	.long	.Ltmp509-.Ltmp493       # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	1149                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xb10:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc109          # DW_AT_location
	.long	.debug_info+9531        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xb19:0x9 DW_TAG_variable
	.long	.Ldebug_loc108          # DW_AT_location
	.long	.debug_info+9543        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb26:0x1b DW_TAG_inlined_subroutine
	.long	734                     # DW_AT_abstract_origin
	.quad	.Ltmp284                # DW_AT_low_pc
	.long	.Ltmp285-.Ltmp284       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	348                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0xb3a:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	746                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb41:0x1b DW_TAG_inlined_subroutine
	.long	758                     # DW_AT_abstract_origin
	.quad	.Ltmp285                # DW_AT_low_pc
	.long	.Ltmp286-.Ltmp285       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	349                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0xb55:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	770                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb5c:0x1b DW_TAG_inlined_subroutine
	.long	734                     # DW_AT_abstract_origin
	.quad	.Ltmp465                # DW_AT_low_pc
	.long	.Ltmp466-.Ltmp465       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	375                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0xb70:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	746                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb77:0x1b DW_TAG_inlined_subroutine
	.long	758                     # DW_AT_abstract_origin
	.quad	.Ltmp466                # DW_AT_low_pc
	.long	.Ltmp467-.Ltmp466       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	376                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0xb8b:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	770                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	42                      # Abbrev [42] 0xb92:0x14 DW_TAG_inlined_subroutine
	.long	396                     # DW_AT_abstract_origin
	.quad	.Ltmp129                # DW_AT_low_pc
	.long	.Ltmp131-.Ltmp129       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	327                     # DW_AT_call_line
	.byte	28                      # Abbrev [28] 0xba6:0x1e DW_TAG_inlined_subroutine
	.long	405                     # DW_AT_abstract_origin
	.quad	.Ltmp133                # DW_AT_low_pc
	.long	.Ltmp135-.Ltmp133       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.short	294                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xbba:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc19           # DW_AT_location
	.long	418                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end0:
.Lcu_begin1:
	.long	.Ldebug_info_end1-.Ldebug_info_start1 # Length of Unit
.Ldebug_info_start1:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0xd79 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string17         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin2 # DW_AT_high_pc
	.byte	43                      # Abbrev [43] 0x2a:0x16 DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.long	64                      # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.short	527                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	incs
	.byte	5                       # Abbrev [5] 0x40:0xc DW_TAG_array_type
	.long	76                      # DW_AT_type
	.byte	6                       # Abbrev [6] 0x45:0x6 DW_TAG_subrange_type
	.long	87                      # DW_AT_type
	.byte	14                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x4c:0xb DW_TAG_typedef
	.long	.debug_info+53          # DW_AT_type
	.long	.Linfo_string19         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x57:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	9                       # Abbrev [9] 0x5e:0x5 DW_TAG_pointer_type
	.long	99                      # DW_AT_type
	.byte	45                      # Abbrev [45] 0x63:0xb DW_TAG_typedef
	.long	110                     # DW_AT_type
	.long	.Linfo_string21         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x6e:0x7 DW_TAG_base_type
	.long	.Linfo_string20         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	2                       # DW_AT_byte_size
	.byte	9                       # Abbrev [9] 0x75:0x5 DW_TAG_pointer_type
	.long	122                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x7a:0xb DW_TAG_typedef
	.long	.debug_info+155         # DW_AT_type
	.long	.Linfo_string22         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.byte	44                      # Abbrev [44] 0x85:0xb DW_TAG_typedef
	.long	.debug_info+155         # DW_AT_type
	.long	.Linfo_string23         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	82                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x90:0x7 DW_TAG_base_type
	.long	.Linfo_string24         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	46                      # Abbrev [46] 0x97:0x156 DW_TAG_subprogram
	.long	.Linfo_string260        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	140                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0x9f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string261        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	140                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	47                      # Abbrev [47] 0xaa:0xb DW_TAG_formal_parameter
	.long	.Linfo_string262        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	19                      # Abbrev [19] 0xb5:0xb DW_TAG_formal_parameter
	.long	.Linfo_string263        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	142                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	19                      # Abbrev [19] 0xc0:0xb DW_TAG_formal_parameter
	.long	.Linfo_string264        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0xcb:0xb DW_TAG_variable
	.long	.Linfo_string265        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	493                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0xd6:0xb DW_TAG_variable
	.long	.Linfo_string266        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	149                     # DW_AT_decl_line
	.long	493                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0xe1:0xb DW_TAG_variable
	.long	.Linfo_string267        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0xec:0xb DW_TAG_variable
	.long	.Linfo_string268        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	147                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	16                      # Abbrev [16] 0xf7:0xb DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x102:0xb DW_TAG_variable
	.long	.Linfo_string269        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0x10d:0xb DW_TAG_variable
	.long	.Linfo_string270        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	147                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	16                      # Abbrev [16] 0x118:0xb DW_TAG_variable
	.long	.Linfo_string271        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x123:0xb DW_TAG_variable
	.long	.Linfo_string272        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x12e:0xb DW_TAG_variable
	.long	.Linfo_string273        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x139:0xb DW_TAG_variable
	.long	.Linfo_string274        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x144:0xb DW_TAG_variable
	.long	.Linfo_string275        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x14f:0xb DW_TAG_variable
	.long	.Linfo_string276        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0x15a:0xb DW_TAG_variable
	.long	.Linfo_string277        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	147                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x165:0x30 DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x166:0xb DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x171:0xb DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x17c:0xb DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x187:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x188:0xb DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x195:0x30 DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x196:0xb DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1a1:0xb DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x1ac:0xb DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1b7:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x1b8:0xb DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1c5:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x1c6:0xb DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	187                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1d2:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x1d3:0xb DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1df:0xd DW_TAG_lexical_block
	.byte	16                      # Abbrev [16] 0x1e0:0xb DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x1ed:0xc DW_TAG_array_type
	.long	76                      # DW_AT_type
	.byte	6                       # Abbrev [6] 0x1f2:0x6 DW_TAG_subrange_type
	.long	87                      # DW_AT_type
	.byte	100                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x1f9:0x61 DW_TAG_subprogram
	.long	.Linfo_string282        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0x201:0xb DW_TAG_formal_parameter
	.long	.Linfo_string261        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x20c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string262        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	19                      # Abbrev [19] 0x217:0xb DW_TAG_formal_parameter
	.long	.Linfo_string273        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	19                      # Abbrev [19] 0x222:0xb DW_TAG_formal_parameter
	.long	.Linfo_string271        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	82                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x22d:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x238:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	16                      # Abbrev [16] 0x243:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0x24e:0xb DW_TAG_variable
	.long	.Linfo_string283        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0x25a:0x2d3 DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string409        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	259                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	50                      # Abbrev [50] 0x270:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc110          # DW_AT_location
	.long	.Linfo_string261        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	259                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	50                      # Abbrev [50] 0x280:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string262        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	50                      # Abbrev [50] 0x290:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string435        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	26                      # Abbrev [26] 0x2a0:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	26                      # Abbrev [26] 0x2b0:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc114          # DW_AT_location
	.long	.Linfo_string349        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	263                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	51                      # Abbrev [51] 0x2c0:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.long	.Linfo_string153        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	265                     # DW_AT_decl_line
	.long	.debug_info+10558       # DW_AT_type
	.byte	51                      # Abbrev [51] 0x2d0:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\017"
	.long	.Linfo_string434        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.long	.debug_info+10545       # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2e0:0x10 DW_TAG_variable
	.long	.Ldebug_loc115          # DW_AT_location
	.long	.Linfo_string436        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	270                     # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2f0:0x10 DW_TAG_variable
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string95         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x300:0x10 DW_TAG_variable
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x310:0x10 DW_TAG_variable
	.long	.Ldebug_loc122          # DW_AT_location
	.long	.Linfo_string361        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x320:0x10 DW_TAG_variable
	.long	.Ldebug_loc123          # DW_AT_location
	.long	.Linfo_string437        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	269                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x330:0x10 DW_TAG_variable
	.long	.Ldebug_loc124          # DW_AT_location
	.long	.Linfo_string438        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x340:0x10 DW_TAG_variable
	.long	.Ldebug_loc125          # DW_AT_location
	.long	.Linfo_string439        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x350:0x10 DW_TAG_variable
	.long	.Ldebug_loc126          # DW_AT_location
	.long	.Linfo_string268        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x360:0x10 DW_TAG_variable
	.long	.Ldebug_loc156          # DW_AT_location
	.long	.Linfo_string440        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x370:0x10 DW_TAG_variable
	.long	.Ldebug_loc157          # DW_AT_location
	.long	.Linfo_string441        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x380:0xc DW_TAG_variable
	.long	.Linfo_string442        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x38c:0x1a0 DW_TAG_inlined_subroutine
	.long	151                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges24        # DW_AT_ranges
	.byte	3                       # DW_AT_call_file
	.short	344                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x398:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc116          # DW_AT_location
	.long	159                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x3a1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc117          # DW_AT_location
	.long	170                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x3aa:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc130          # DW_AT_location
	.long	181                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x3b3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc127          # DW_AT_location
	.long	192                     # DW_AT_abstract_origin
	.byte	53                      # Abbrev [53] 0x3bc:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\f"
	.long	203                     # DW_AT_abstract_origin
	.byte	53                      # Abbrev [53] 0x3c5:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\t"
	.long	214                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3ce:0x9 DW_TAG_variable
	.long	.Ldebug_loc128          # DW_AT_location
	.long	225                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3d7:0x9 DW_TAG_variable
	.long	.Ldebug_loc129          # DW_AT_location
	.long	236                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3e0:0x9 DW_TAG_variable
	.long	.Ldebug_loc131          # DW_AT_location
	.long	247                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc133          # DW_AT_location
	.long	258                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3f2:0x9 DW_TAG_variable
	.long	.Ldebug_loc134          # DW_AT_location
	.long	269                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3fb:0x9 DW_TAG_variable
	.long	.Ldebug_loc135          # DW_AT_location
	.long	280                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x404:0x9 DW_TAG_variable
	.long	.Ldebug_loc136          # DW_AT_location
	.long	291                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x40d:0x9 DW_TAG_variable
	.long	.Ldebug_loc138          # DW_AT_location
	.long	302                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x416:0x9 DW_TAG_variable
	.long	.Ldebug_loc140          # DW_AT_location
	.long	313                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x41f:0x9 DW_TAG_variable
	.long	.Ldebug_loc141          # DW_AT_location
	.long	324                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x428:0x9 DW_TAG_variable
	.long	.Ldebug_loc145          # DW_AT_location
	.long	335                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x431:0x9 DW_TAG_variable
	.long	.Ldebug_loc149          # DW_AT_location
	.long	346                     # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x43a:0x2c DW_TAG_lexical_block
	.long	.Ldebug_ranges26        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x43f:0x9 DW_TAG_variable
	.long	.Ldebug_loc132          # DW_AT_location
	.long	358                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x448:0x9 DW_TAG_variable
	.long	.Ldebug_loc142          # DW_AT_location
	.long	369                     # DW_AT_abstract_origin
	.byte	54                      # Abbrev [54] 0x451:0x5 DW_TAG_variable
	.long	380                     # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x456:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges25        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x45b:0x9 DW_TAG_variable
	.long	.Ldebug_loc154          # DW_AT_location
	.long	392                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x466:0x2c DW_TAG_lexical_block
	.long	.Ldebug_ranges28        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x46b:0x9 DW_TAG_variable
	.long	.Ldebug_loc137          # DW_AT_location
	.long	406                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x474:0x9 DW_TAG_variable
	.long	.Ldebug_loc152          # DW_AT_location
	.long	417                     # DW_AT_abstract_origin
	.byte	54                      # Abbrev [54] 0x47d:0x5 DW_TAG_variable
	.long	428                     # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x482:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges27        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x487:0x9 DW_TAG_variable
	.long	.Ldebug_loc155          # DW_AT_location
	.long	440                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	55                      # Abbrev [55] 0x492:0x54 DW_TAG_inlined_subroutine
	.long	505                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges29        # DW_AT_ranges
	.byte	3                       # DW_AT_call_file
	.byte	162                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x49d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc118          # DW_AT_location
	.long	513                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x4a6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc119          # DW_AT_location
	.long	524                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x4af:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc139          # DW_AT_location
	.long	535                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x4b8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc143          # DW_AT_location
	.long	546                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4c1:0x9 DW_TAG_variable
	.long	.Ldebug_loc144          # DW_AT_location
	.long	557                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4ca:0x9 DW_TAG_variable
	.long	.Ldebug_loc146          # DW_AT_location
	.long	568                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4d3:0x9 DW_TAG_variable
	.long	.Ldebug_loc147          # DW_AT_location
	.long	579                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4dc:0x9 DW_TAG_variable
	.long	.Ldebug_loc148          # DW_AT_location
	.long	590                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x4e6:0x17 DW_TAG_lexical_block
	.quad	.Ltmp710                # DW_AT_low_pc
	.long	.Ltmp711-.Ltmp710       # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x4f3:0x9 DW_TAG_variable
	.long	.Ldebug_loc150          # DW_AT_location
	.long	454                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x4fd:0x17 DW_TAG_lexical_block
	.quad	.Ltmp739                # DW_AT_low_pc
	.long	.Ltmp740-.Ltmp739       # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x50a:0x9 DW_TAG_variable
	.long	.Ldebug_loc153          # DW_AT_location
	.long	467                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x514:0x17 DW_TAG_lexical_block
	.quad	.Ltmp718                # DW_AT_low_pc
	.long	.Ltmp720-.Ltmp718       # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x521:0x9 DW_TAG_variable
	.long	.Ldebug_loc151          # DW_AT_location
	.long	480                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	56                      # Abbrev [56] 0x52d:0xbd DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string410        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	133                     # DW_AT_type
	.byte	50                      # Abbrev [50] 0x547:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc158          # DW_AT_location
	.long	.Linfo_string443        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	50                      # Abbrev [50] 0x557:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc159          # DW_AT_location
	.long	.Linfo_string444        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	395                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	57                      # Abbrev [57] 0x567:0xe DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	.Linfo_string156        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	57                      # Abbrev [57] 0x575:0xe DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	.Linfo_string353        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	397                     # DW_AT_decl_line
	.long	94                      # DW_AT_type
	.byte	50                      # Abbrev [50] 0x583:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc160          # DW_AT_location
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	398                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	58                      # Abbrev [58] 0x593:0xe DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	89
	.long	.Linfo_string351        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	399                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	52                      # Abbrev [52] 0x5a1:0xc DW_TAG_variable
	.long	.Linfo_string362        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	402                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x5ad:0x10 DW_TAG_variable
	.long	.Ldebug_loc161          # DW_AT_location
	.long	.Linfo_string445        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	402                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x5bd:0x10 DW_TAG_variable
	.long	.Ldebug_loc162          # DW_AT_location
	.long	.Linfo_string361        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	401                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x5cd:0xc DW_TAG_variable
	.long	.Linfo_string446        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	403                     # DW_AT_decl_line
	.long	99                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x5d9:0x10 DW_TAG_variable
	.long	.Ldebug_loc163          # DW_AT_location
	.long	.Linfo_string447        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	403                     # DW_AT_decl_line
	.long	99                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x5ea:0x8e DW_TAG_subprogram
	.long	.Linfo_string348        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1078                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x5f3:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1078                    # DW_AT_decl_line
	.long	1656                    # DW_AT_type
	.byte	52                      # Abbrev [52] 0x5ff:0xc DW_TAG_variable
	.long	.Linfo_string349        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1084                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x60b:0xc DW_TAG_variable
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1083                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	59                      # Abbrev [59] 0x617:0xc DW_TAG_variable
	.long	.Linfo_string153        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1082                    # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x623:0xc DW_TAG_variable
	.long	.Linfo_string155        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1080                    # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	52                      # Abbrev [52] 0x62f:0xc DW_TAG_variable
	.long	.Linfo_string156        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1081                    # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x63b:0xc DW_TAG_variable
	.long	.Linfo_string350        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1085                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x647:0xc DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1089                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x653:0xc DW_TAG_variable
	.long	.Linfo_string351        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1087                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x65f:0xc DW_TAG_variable
	.long	.Linfo_string352        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1088                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x66b:0xc DW_TAG_variable
	.long	.Linfo_string353        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1086                    # DW_AT_decl_line
	.long	94                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x678:0x5 DW_TAG_pointer_type
	.long	1661                    # DW_AT_type
	.byte	60                      # Abbrev [60] 0x67d:0xc DW_TAG_typedef
	.long	1673                    # DW_AT_type
	.long	.Linfo_string182        # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	300                     # DW_AT_decl_line
	.byte	61                      # Abbrev [61] 0x689:0x205 DW_TAG_structure_type
	.short	55768                   # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x68e:0xc DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	2190                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	233                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x69a:0xc DW_TAG_member
	.long	.Linfo_string149        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	237                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x6a6:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	238                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x6b2:0xc DW_TAG_member
	.long	.Linfo_string150        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	241                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x6be:0xc DW_TAG_member
	.long	.Linfo_string151        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	244                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x6ca:0xc DW_TAG_member
	.long	.Linfo_string152        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x6d6:0xc DW_TAG_member
	.long	.Linfo_string153        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x6e2:0xc DW_TAG_member
	.long	.Linfo_string154        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	247                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x6ee:0xc DW_TAG_member
	.long	.Linfo_string155        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	250                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x6fa:0xc DW_TAG_member
	.long	.Linfo_string156        # DW_AT_name
	.long	117                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x706:0xc DW_TAG_member
	.long	.Linfo_string157        # DW_AT_name
	.long	94                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x712:0xc DW_TAG_member
	.long	.Linfo_string158        # DW_AT_name
	.long	117                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x71e:0xd DW_TAG_member
	.long	.Linfo_string48         # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x72b:0xd DW_TAG_member
	.long	.Linfo_string159        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	259                     # DW_AT_decl_line
	.byte	92                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x738:0xd DW_TAG_member
	.long	.Linfo_string160        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x745:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	100                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x752:0xd DW_TAG_member
	.long	.Linfo_string162        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x75f:0xd DW_TAG_member
	.long	.Linfo_string163        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	108                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x76c:0xd DW_TAG_member
	.long	.Linfo_string164        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	265                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x779:0xd DW_TAG_member
	.long	.Linfo_string165        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x786:0xd DW_TAG_member
	.long	.Linfo_string166        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x793:0xd DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	270                     # DW_AT_decl_line
	.byte	124                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x7a0:0xd DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	.debug_info+9043        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	271                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7ad:0xe DW_TAG_member
	.long	.Linfo_string169        # DW_AT_name
	.long	.debug_info+9056        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.short	384                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7bb:0xe DW_TAG_member
	.long	.Linfo_string170        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	275                     # DW_AT_decl_line
	.short	640                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x7c9:0xe DW_TAG_member
	.long	.Linfo_string171        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	276                     # DW_AT_decl_line
	.short	644                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7d7:0xe DW_TAG_member
	.long	.Linfo_string172        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.short	648                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7e5:0xe DW_TAG_member
	.long	.Linfo_string173        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.short	652                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x7f3:0xe DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.short	656                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x801:0xe DW_TAG_member
	.long	.Linfo_string174        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.short	660                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x80f:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.short	664                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x81d:0xe DW_TAG_member
	.long	.Linfo_string175        # DW_AT_name
	.long	76                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.short	668                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x82b:0xe DW_TAG_member
	.long	.Linfo_string176        # DW_AT_name
	.long	.debug_info+9069        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	289                     # DW_AT_decl_line
	.short	672                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x839:0xe DW_TAG_member
	.long	.Linfo_string177        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	290                     # DW_AT_decl_line
	.short	1704                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x847:0xe DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	291                     # DW_AT_decl_line
	.short	19706                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x855:0xe DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	.debug_info+9095        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.short	37708                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x863:0xe DW_TAG_member
	.long	.Linfo_string179        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	294                     # DW_AT_decl_line
	.short	39256                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x871:0xe DW_TAG_member
	.long	.Linfo_string180        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	295                     # DW_AT_decl_line
	.short	45448                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x87f:0xe DW_TAG_member
	.long	.Linfo_string181        # DW_AT_name
	.long	.debug_info+9133        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	297                     # DW_AT_decl_line
	.short	51640                   # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x88e:0x5 DW_TAG_pointer_type
	.long	2195                    # DW_AT_type
	.byte	45                      # Abbrev [45] 0x893:0xb DW_TAG_typedef
	.long	2206                    # DW_AT_type
	.long	.Linfo_string81         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.byte	67                      # Abbrev [67] 0x89e:0x95 DW_TAG_structure_type
	.byte	80                      # DW_AT_byte_size
	.byte	7                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.byte	62                      # Abbrev [62] 0x8a2:0xc DW_TAG_member
	.long	.Linfo_string69         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8ae:0xc DW_TAG_member
	.long	.Linfo_string70         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8ba:0xc DW_TAG_member
	.long	.Linfo_string71         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8c6:0xc DW_TAG_member
	.long	.Linfo_string72         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x8d2:0xc DW_TAG_member
	.long	.Linfo_string73         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8de:0xc DW_TAG_member
	.long	.Linfo_string74         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8ea:0xc DW_TAG_member
	.long	.Linfo_string75         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x8f6:0xc DW_TAG_member
	.long	.Linfo_string76         # DW_AT_name
	.long	144                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x902:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x90e:0xc DW_TAG_member
	.long	.Linfo_string78         # DW_AT_name
	.long	.debug_info+8112        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	217                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x91a:0xc DW_TAG_member
	.long	.Linfo_string79         # DW_AT_name
	.long	.debug_info+8138        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x926:0xc DW_TAG_member
	.long	.Linfo_string80         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	219                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	68                      # Abbrev [68] 0x933:0x162 DW_TAG_subprogram
	.long	.Linfo_string354        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	798                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0x93c:0xc DW_TAG_formal_parameter
	.long	.Linfo_string155        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	798                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	24                      # Abbrev [24] 0x948:0xc DW_TAG_formal_parameter
	.long	.Linfo_string156        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	799                     # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x954:0xc DW_TAG_formal_parameter
	.long	.Linfo_string353        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	800                     # DW_AT_decl_line
	.long	94                      # DW_AT_type
	.byte	22                      # Abbrev [22] 0x960:0xc DW_TAG_formal_parameter
	.long	.Linfo_string153        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	801                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	24                      # Abbrev [24] 0x96c:0xc DW_TAG_formal_parameter
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	802                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x978:0xc DW_TAG_formal_parameter
	.long	.Linfo_string349        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	803                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	22                      # Abbrev [22] 0x984:0xc DW_TAG_formal_parameter
	.long	.Linfo_string351        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	804                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	59                      # Abbrev [59] 0x990:0xc DW_TAG_variable
	.long	.Linfo_string355        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	807                     # DW_AT_decl_line
	.long	.debug_info+10545       # DW_AT_type
	.byte	59                      # Abbrev [59] 0x99c:0xc DW_TAG_variable
	.long	.Linfo_string356        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	808                     # DW_AT_decl_line
	.long	.debug_info+9043        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x9a8:0xc DW_TAG_variable
	.long	.Linfo_string357        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	809                     # DW_AT_decl_line
	.long	.debug_info+10545       # DW_AT_type
	.byte	59                      # Abbrev [59] 0x9b4:0xc DW_TAG_variable
	.long	.Linfo_string358        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	810                     # DW_AT_decl_line
	.long	.debug_info+10545       # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9c0:0xc DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	806                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9cc:0xc DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	806                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9d8:0xc DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	813                     # DW_AT_decl_line
	.long	99                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9e4:0xc DW_TAG_variable
	.long	.Linfo_string359        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	812                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9f0:0xc DW_TAG_variable
	.long	.Linfo_string360        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	806                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x9fc:0xc DW_TAG_variable
	.long	.Linfo_string361        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	806                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa08:0xc DW_TAG_variable
	.long	.Linfo_string362        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	811                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa14:0xc DW_TAG_variable
	.long	.Linfo_string363        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	806                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0xa20:0x1a DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xa21:0xc DW_TAG_variable
	.long	.Linfo_string364        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	891                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa2d:0xc DW_TAG_variable
	.long	.Linfo_string365        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	890                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xa3a:0x1a DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xa3b:0xc DW_TAG_variable
	.long	.Linfo_string271        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	938                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa47:0xc DW_TAG_variable
	.long	.Linfo_string273        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	937                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xa54:0x40 DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xa55:0xc DW_TAG_variable
	.long	.Linfo_string366        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1037                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa61:0xc DW_TAG_variable
	.long	.Linfo_string367        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1039                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa6d:0xc DW_TAG_variable
	.long	.Linfo_string368        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1038                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0xa79:0x1a DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xa7a:0xc DW_TAG_variable
	.long	.Linfo_string369        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1045                    # DW_AT_decl_line
	.long	99                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xa86:0xc DW_TAG_variable
	.long	.Linfo_string370        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	1044                    # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	68                      # Abbrev [68] 0xa95:0x1f2 DW_TAG_subprogram
	.long	.Linfo_string371        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	668                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0xa9e:0xc DW_TAG_formal_parameter
	.long	.Linfo_string155        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	668                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	24                      # Abbrev [24] 0xaaa:0xc DW_TAG_formal_parameter
	.long	.Linfo_string156        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	669                     # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xab6:0xc DW_TAG_formal_parameter
	.long	.Linfo_string353        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	670                     # DW_AT_decl_line
	.long	94                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xac2:0xc DW_TAG_formal_parameter
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	671                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xace:0xc DW_TAG_formal_parameter
	.long	.Linfo_string263        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	672                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xada:0xc DW_TAG_formal_parameter
	.long	.Linfo_string264        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	673                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xae6:0xc DW_TAG_formal_parameter
	.long	.Linfo_string372        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	674                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	22                      # Abbrev [22] 0xaf2:0xc DW_TAG_formal_parameter
	.long	.Linfo_string351        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	675                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	52                      # Abbrev [52] 0xafe:0xc DW_TAG_variable
	.long	.Linfo_string265        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	680                     # DW_AT_decl_line
	.long	493                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb0a:0xc DW_TAG_variable
	.long	.Linfo_string266        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	681                     # DW_AT_decl_line
	.long	493                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb16:0xc DW_TAG_variable
	.long	.Linfo_string373        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	682                     # DW_AT_decl_line
	.long	493                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb22:0xc DW_TAG_variable
	.long	.Linfo_string267        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	678                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb2e:0xc DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb3a:0xc DW_TAG_variable
	.long	.Linfo_string269        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb46:0xc DW_TAG_variable
	.long	.Linfo_string275        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb52:0xc DW_TAG_variable
	.long	.Linfo_string374        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	686                     # DW_AT_decl_line
	.long	3207                    # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb5e:0xc DW_TAG_variable
	.long	.Linfo_string375        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	678                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb6a:0xc DW_TAG_variable
	.long	.Linfo_string376        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	685                     # DW_AT_decl_line
	.long	3207                    # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb76:0xc DW_TAG_variable
	.long	.Linfo_string271        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	678                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb82:0xc DW_TAG_variable
	.long	.Linfo_string272        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb8e:0xc DW_TAG_variable
	.long	.Linfo_string273        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	678                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xb9a:0xc DW_TAG_variable
	.long	.Linfo_string274        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xba6:0xc DW_TAG_variable
	.long	.Linfo_string377        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	684                     # DW_AT_decl_line
	.long	3207                    # DW_AT_type
	.byte	52                      # Abbrev [52] 0xbb2:0xc DW_TAG_variable
	.long	.Linfo_string276        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xbbe:0xc DW_TAG_variable
	.long	.Linfo_string270        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	677                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0xbca:0x34 DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xbcb:0xc DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xbd7:0xc DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xbe3:0xc DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0xbef:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xbf0:0xc DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xbfe:0x34 DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xbff:0xc DW_TAG_variable
	.long	.Linfo_string278        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	744                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xc0b:0xc DW_TAG_variable
	.long	.Linfo_string279        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	744                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xc17:0xc DW_TAG_variable
	.long	.Linfo_string280        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	744                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0xc23:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc24:0xc DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	744                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc32:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc33:0xc DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	716                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc40:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc41:0xc DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	726                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc4e:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc4f:0xc DW_TAG_variable
	.long	.Linfo_string281        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	733                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc5c:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc5d:0xc DW_TAG_variable
	.long	.Linfo_string378        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	753                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc6a:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc6b:0xc DW_TAG_variable
	.long	.Linfo_string378        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	754                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0xc78:0xe DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xc79:0xc DW_TAG_variable
	.long	.Linfo_string378        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	755                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0xc87:0xc DW_TAG_array_type
	.long	76                      # DW_AT_type
	.byte	6                       # Abbrev [6] 0xc8c:0x6 DW_TAG_subrange_type
	.long	87                      # DW_AT_type
	.byte	3                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	69                      # Abbrev [69] 0xc93:0x3e DW_TAG_subprogram
	.long	.Linfo_string379        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	630                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	122                     # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xca0:0xc DW_TAG_formal_parameter
	.long	.Linfo_string380        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	630                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xcac:0xc DW_TAG_formal_parameter
	.long	.Linfo_string142        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	630                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xcb8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string188        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	630                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xcc4:0xc DW_TAG_variable
	.long	.Linfo_string287        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	632                     # DW_AT_decl_line
	.long	122                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	68                      # Abbrev [68] 0xcd1:0xb2 DW_TAG_subprogram
	.long	.Linfo_string381        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	532                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0xcda:0xc DW_TAG_formal_parameter
	.long	.Linfo_string155        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	532                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	24                      # Abbrev [24] 0xce6:0xc DW_TAG_formal_parameter
	.long	.Linfo_string156        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	533                     # DW_AT_decl_line
	.long	117                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xcf2:0xc DW_TAG_formal_parameter
	.long	.Linfo_string353        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	534                     # DW_AT_decl_line
	.long	94                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xcfe:0xc DW_TAG_formal_parameter
	.long	.Linfo_string163        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	535                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xd0a:0xc DW_TAG_formal_parameter
	.long	.Linfo_string273        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	536                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xd16:0xc DW_TAG_formal_parameter
	.long	.Linfo_string271        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	537                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xd22:0xc DW_TAG_formal_parameter
	.long	.Linfo_string375        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	538                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	22                      # Abbrev [22] 0xd2e:0xc DW_TAG_formal_parameter
	.long	.Linfo_string351        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	539                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	52                      # Abbrev [52] 0xd3a:0xc DW_TAG_variable
	.long	.Linfo_string382        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	541                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xd46:0xc DW_TAG_variable
	.long	.Linfo_string383        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	541                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xd52:0xc DW_TAG_variable
	.long	.Linfo_string364        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	541                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xd5e:0xc DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	541                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0xd6a:0xc DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	541                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	59                      # Abbrev [59] 0xd76:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	542                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end1:
.Lcu_begin2:
	.long	.Ldebug_info_end2-.Ldebug_info_start2 # Length of Unit
.Ldebug_info_start2:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x477 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string25         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin4 # DW_AT_high_pc
	.byte	70                      # Abbrev [70] 0x2a:0xc DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	282                     # DW_AT_decl_line
	.byte	71                      # Abbrev [71] 0x36:0xc DW_TAG_typedef
	.long	.debug_info+53          # DW_AT_type
	.long	.Linfo_string19         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	263                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x42:0xc DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.byte	71                      # Abbrev [71] 0x4e:0xc DW_TAG_typedef
	.long	.debug_info+155         # DW_AT_type
	.long	.Linfo_string23         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x5a:0xc DW_TAG_variable
	.long	.Linfo_string28         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x66:0xc DW_TAG_variable
	.long	.Linfo_string29         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x72:0xc DW_TAG_variable
	.long	.Linfo_string30         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x7e:0xc DW_TAG_variable
	.long	.Linfo_string31         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x8a:0xc DW_TAG_variable
	.long	.Linfo_string32         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x96:0xc DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0xa2:0xc DW_TAG_variable
	.long	.Linfo_string34         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0xae:0xc DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.byte	72                      # Abbrev [72] 0xba:0x16 DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	blockSize100k
	.byte	70                      # Abbrev [70] 0xd0:0xc DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0xdc:0xc DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	298                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0xe8:0xc DW_TAG_variable
	.long	.Linfo_string39         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	299                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0xf4:0xc DW_TAG_variable
	.long	.Linfo_string40         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x100:0xc DW_TAG_variable
	.long	.Linfo_string41         # DW_AT_name
	.long	268                     # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	304                     # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x10c:0xd DW_TAG_array_type
	.long	281                     # DW_AT_type
	.byte	73                      # Abbrev [73] 0x111:0x7 DW_TAG_subrange_type
	.long	293                     # DW_AT_type
	.short	1034                    # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	71                      # Abbrev [71] 0x119:0xc DW_TAG_typedef
	.long	.debug_info+205         # DW_AT_type
	.long	.Linfo_string42         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x125:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	70                      # Abbrev [70] 0x12c:0xc DW_TAG_variable
	.long	.Linfo_string43         # DW_AT_name
	.long	268                     # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	305                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x138:0xc DW_TAG_variable
	.long	.Linfo_string44         # DW_AT_name
	.long	268                     # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	306                     # DW_AT_decl_line
	.byte	70                      # Abbrev [70] 0x144:0xc DW_TAG_variable
	.long	.Linfo_string45         # DW_AT_name
	.long	336                     # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	307                     # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0x150:0x5 DW_TAG_pointer_type
	.long	281                     # DW_AT_type
	.byte	70                      # Abbrev [70] 0x155:0xc DW_TAG_variable
	.long	.Linfo_string46         # DW_AT_name
	.long	268                     # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.byte	74                      # Abbrev [74] 0x161:0xc DW_TAG_variable
	.long	.Linfo_string47         # DW_AT_name
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	310                     # DW_AT_decl_line
	.byte	72                      # Abbrev [72] 0x16d:0x1c DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.long	54                      # DW_AT_type
                                        # DW_AT_external
	.byte	4                       # DW_AT_decl_file
	.short	314                     # DW_AT_decl_line
	.byte	15                      # DW_AT_location
	.byte	3
	.quad	workFactor
	.byte	6
	.byte	78
	.byte	30
	.byte	48
	.byte	34
	.byte	159
	.byte	9                       # Abbrev [9] 0x189:0x5 DW_TAG_pointer_type
	.long	398                     # DW_AT_type
	.byte	71                      # Abbrev [71] 0x18e:0xc DW_TAG_typedef
	.long	.debug_info+155         # DW_AT_type
	.long	.Linfo_string22         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x19a:0x7 DW_TAG_base_type
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	21                      # Abbrev [21] 0x1a1:0xb6 DW_TAG_subprogram
	.long	.Linfo_string116        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	544                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	78                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0x1ae:0xc DW_TAG_formal_parameter
	.long	.Linfo_string117        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	544                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x1ba:0xc DW_TAG_formal_parameter
	.long	.Linfo_string118        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	544                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x1c6:0xc DW_TAG_variable
	.long	.Linfo_string112        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	553                     # DW_AT_decl_line
	.long	599                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x1d2:0xc DW_TAG_variable
	.long	.Linfo_string119        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	552                     # DW_AT_decl_line
	.long	599                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x1de:0xc DW_TAG_variable
	.long	.Linfo_string113        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	554                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	59                      # Abbrev [59] 0x1ea:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	550                     # DW_AT_decl_line
	.long	.debug_info+8309        # DW_AT_type
	.byte	52                      # Abbrev [52] 0x1f6:0xc DW_TAG_variable
	.long	.Linfo_string120        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x202:0xc DW_TAG_variable
	.long	.Linfo_string121        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x20e:0xc DW_TAG_variable
	.long	.Linfo_string122        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	59                      # Abbrev [59] 0x21a:0xc DW_TAG_variable
	.long	.Linfo_string123        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	555                     # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	52                      # Abbrev [52] 0x226:0xc DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x232:0xc DW_TAG_variable
	.long	.Linfo_string124        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	556                     # DW_AT_decl_line
	.long	393                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x23e:0xc DW_TAG_variable
	.long	.Linfo_string125        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x24a:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x257:0xd DW_TAG_array_type
	.long	398                     # DW_AT_type
	.byte	73                      # Abbrev [73] 0x25c:0x7 DW_TAG_subrange_type
	.long	293                     # DW_AT_type
	.short	5000                    # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x264:0xe4 DW_TAG_subprogram
	.long	.Linfo_string132        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	435                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0x26d:0xc DW_TAG_formal_parameter
	.long	.Linfo_string118        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	435                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x279:0xc DW_TAG_formal_parameter
	.long	.Linfo_string117        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	435                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x285:0xc DW_TAG_variable
	.long	.Linfo_string133        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	442                     # DW_AT_decl_line
	.long	599                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x291:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	441                     # DW_AT_decl_line
	.long	.debug_info+8309        # DW_AT_type
	.byte	52                      # Abbrev [52] 0x29d:0xc DW_TAG_variable
	.long	.Linfo_string120        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	446                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2a9:0xc DW_TAG_variable
	.long	.Linfo_string134        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	443                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2b5:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	446                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2c1:0xc DW_TAG_variable
	.long	.Linfo_string135        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	444                     # DW_AT_decl_line
	.long	840                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2cd:0xc DW_TAG_variable
	.long	.Linfo_string136        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	444                     # DW_AT_decl_line
	.long	840                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2d9:0xc DW_TAG_variable
	.long	.Linfo_string137        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	445                     # DW_AT_decl_line
	.long	840                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2e5:0xc DW_TAG_variable
	.long	.Linfo_string138        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	445                     # DW_AT_decl_line
	.long	840                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x2f1:0xc DW_TAG_variable
	.long	.Linfo_string125        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	446                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x2fd:0x4a DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0x2fe:0xc DW_TAG_variable
	.long	.Linfo_string139        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	496                     # DW_AT_decl_line
	.long	852                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x30a:0xc DW_TAG_variable
	.long	.Linfo_string140        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	496                     # DW_AT_decl_line
	.long	852                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x316:0xc DW_TAG_variable
	.long	.Linfo_string141        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	497                     # DW_AT_decl_line
	.long	864                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x322:0xc DW_TAG_variable
	.long	.Linfo_string144        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	497                     # DW_AT_decl_line
	.long	864                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x32e:0xc DW_TAG_variable
	.long	.Linfo_string145        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	498                     # DW_AT_decl_line
	.long	410                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x33a:0xc DW_TAG_variable
	.long	.Linfo_string146        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	498                     # DW_AT_decl_line
	.long	410                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	71                      # Abbrev [71] 0x348:0xc DW_TAG_typedef
	.long	.debug_info+3158        # DW_AT_type
	.long	.Linfo_string64         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x354:0xc DW_TAG_array_type
	.long	281                     # DW_AT_type
	.byte	6                       # Abbrev [6] 0x359:0x6 DW_TAG_subrange_type
	.long	293                     # DW_AT_type
	.byte	32                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	60                      # Abbrev [60] 0x360:0xc DW_TAG_typedef
	.long	876                     # DW_AT_type
	.long	.Linfo_string143        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	336                     # DW_AT_decl_line
	.byte	75                      # Abbrev [75] 0x36c:0x13 DW_TAG_structure_type
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # DW_AT_decl_file
	.short	335                     # DW_AT_decl_line
	.byte	63                      # Abbrev [63] 0x371:0xd DW_TAG_member
	.long	.Linfo_string142        # DW_AT_name
	.long	895                     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.short	335                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x37f:0xc DW_TAG_array_type
	.long	398                     # DW_AT_type
	.byte	6                       # Abbrev [6] 0x384:0x6 DW_TAG_subrange_type
	.long	293                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	69                      # Abbrev [69] 0x38b:0x26 DW_TAG_subprogram
	.long	.Linfo_string187        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	421                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	78                      # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0x398:0xc DW_TAG_formal_parameter
	.long	.Linfo_string110        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	421                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x3a4:0xc DW_TAG_variable
	.long	.Linfo_string188        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	426                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	76                      # Abbrev [76] 0x3b1:0x16 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string411        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	1026                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	76                      # Abbrev [76] 0x3c7:0x16 DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string412        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	1014                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	76                      # Abbrev [76] 0x3dd:0x16 DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string413        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	929                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	49                      # Abbrev [49] 0x3f3:0x27 DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string414        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	879                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	26                      # Abbrev [26] 0x409:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc164          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	879                     # DW_AT_decl_line
	.long	336                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0x41a:0x2f DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string415        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	818                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	24                      # Abbrev [24] 0x430:0xc DW_TAG_formal_parameter
	.long	.Linfo_string448        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	818                     # DW_AT_decl_line
	.long	54                      # DW_AT_type
	.byte	52                      # Abbrev [52] 0x43c:0xc DW_TAG_variable
	.long	.Linfo_string285        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	820                     # DW_AT_decl_line
	.long	1141                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	76                      # Abbrev [76] 0x449:0x16 DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string416        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	899                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	76                      # Abbrev [76] 0x45f:0x16 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string417        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	912                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	71                      # Abbrev [71] 0x475:0xc DW_TAG_typedef
	.long	.debug_info+53          # DW_AT_type
	.long	.Linfo_string449        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.short	275                     # DW_AT_decl_line
	.byte	0                       # End Of Children Mark
.Ldebug_info_end2:
.Lcu_begin3:
	.long	.Ldebug_info_end3-.Ldebug_info_start3 # Length of Unit
.Ldebug_info_start3:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x19a3 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string50         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin11 # DW_AT_high_pc
	.byte	77                      # Abbrev [77] 0x2a:0xc DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.long	54                      # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	1637                    # DW_AT_decl_line
	.byte	78                      # Abbrev [78] 0x36:0xc DW_TAG_array_type
	.long	.debug_info+200         # DW_AT_type
	.byte	6                       # Abbrev [6] 0x3b:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x42:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	79                      # Abbrev [79] 0x49:0x5b DW_TAG_enumeration_type
	.long	.debug_info+3158        # DW_AT_type
	.byte	4                       # DW_AT_byte_size
	.byte	6                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	80                      # Abbrev [80] 0x51:0x7 DW_TAG_enumerator
	.long	.Linfo_string52         # DW_AT_name
	.ascii	"\200\002"              # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x58:0x7 DW_TAG_enumerator
	.long	.Linfo_string53         # DW_AT_name
	.ascii	"\200\004"              # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x5f:0x7 DW_TAG_enumerator
	.long	.Linfo_string54         # DW_AT_name
	.ascii	"\200\b"                # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x66:0x7 DW_TAG_enumerator
	.long	.Linfo_string55         # DW_AT_name
	.ascii	"\200\020"              # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x6d:0x7 DW_TAG_enumerator
	.long	.Linfo_string56         # DW_AT_name
	.ascii	"\200 "                 # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x74:0x7 DW_TAG_enumerator
	.long	.Linfo_string57         # DW_AT_name
	.ascii	"\200@"                 # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x7b:0x8 DW_TAG_enumerator
	.long	.Linfo_string58         # DW_AT_name
	.ascii	"\200\200\001"          # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x83:0x8 DW_TAG_enumerator
	.long	.Linfo_string59         # DW_AT_name
	.ascii	"\200\200\002"          # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x8b:0x6 DW_TAG_enumerator
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x91:0x6 DW_TAG_enumerator
	.long	.Linfo_string61         # DW_AT_name
	.byte	2                       # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x97:0x6 DW_TAG_enumerator
	.long	.Linfo_string62         # DW_AT_name
	.byte	4                       # DW_AT_const_value
	.byte	80                      # Abbrev [80] 0x9d:0x6 DW_TAG_enumerator
	.long	.Linfo_string63         # DW_AT_name
	.byte	8                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0xa4:0x5 DW_TAG_pointer_type
	.long	169                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0xa9:0xb DW_TAG_typedef
	.long	.debug_info+3158        # DW_AT_type
	.long	.Linfo_string64         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.byte	9                       # Abbrev [9] 0xb4:0x5 DW_TAG_pointer_type
	.long	185                     # DW_AT_type
	.byte	60                      # Abbrev [60] 0xb9:0xc DW_TAG_typedef
	.long	197                     # DW_AT_type
	.long	.Linfo_string84         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	962                     # DW_AT_decl_line
	.byte	81                      # Abbrev [81] 0xc5:0x67 DW_TAG_structure_type
	.short	5104                    # DW_AT_byte_size
	.byte	5                       # DW_AT_decl_file
	.short	949                     # DW_AT_decl_line
	.byte	64                      # Abbrev [64] 0xcb:0xd DW_TAG_member
	.long	.Linfo_string65         # DW_AT_name
	.long	.debug_info+53          # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	951                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0xd8:0xd DW_TAG_member
	.long	.Linfo_string9          # DW_AT_name
	.long	300                     # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	955                     # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xe5:0xe DW_TAG_member
	.long	.Linfo_string66         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	956                     # DW_AT_decl_line
	.short	5004                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xf3:0xe DW_TAG_member
	.long	.Linfo_string67         # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	957                     # DW_AT_decl_line
	.short	5008                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x101:0xe DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	324                     # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	958                     # DW_AT_decl_line
	.short	5016                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x10f:0xe DW_TAG_member
	.long	.Linfo_string82         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	959                     # DW_AT_decl_line
	.short	5096                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x11d:0xe DW_TAG_member
	.long	.Linfo_string83         # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.short	960                     # DW_AT_decl_line
	.short	5100                    # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x12c:0xd DW_TAG_array_type
	.long	313                     # DW_AT_type
	.byte	73                      # Abbrev [73] 0x131:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	5000                    # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x139:0xb DW_TAG_typedef
	.long	.debug_info+205         # DW_AT_type
	.long	.Linfo_string42         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.byte	45                      # Abbrev [45] 0x144:0xb DW_TAG_typedef
	.long	335                     # DW_AT_type
	.long	.Linfo_string81         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.byte	67                      # Abbrev [67] 0x14f:0x95 DW_TAG_structure_type
	.byte	80                      # DW_AT_byte_size
	.byte	7                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.byte	62                      # Abbrev [62] 0x153:0xc DW_TAG_member
	.long	.Linfo_string69         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x15f:0xc DW_TAG_member
	.long	.Linfo_string70         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x16b:0xc DW_TAG_member
	.long	.Linfo_string71         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x177:0xc DW_TAG_member
	.long	.Linfo_string72         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x183:0xc DW_TAG_member
	.long	.Linfo_string73         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x18f:0xc DW_TAG_member
	.long	.Linfo_string74         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x19b:0xc DW_TAG_member
	.long	.Linfo_string75         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x1a7:0xc DW_TAG_member
	.long	.Linfo_string76         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x1b3:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x1bf:0xc DW_TAG_member
	.long	.Linfo_string78         # DW_AT_name
	.long	484                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	217                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x1cb:0xc DW_TAG_member
	.long	.Linfo_string79         # DW_AT_name
	.long	510                     # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x1d7:0xc DW_TAG_member
	.long	.Linfo_string80         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	219                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x1e4:0x5 DW_TAG_pointer_type
	.long	489                     # DW_AT_type
	.byte	82                      # Abbrev [82] 0x1e9:0x15 DW_TAG_subroutine_type
	.long	.debug_info+194         # DW_AT_type
                                        # DW_AT_prototyped
	.byte	83                      # Abbrev [83] 0x1ee:0x5 DW_TAG_formal_parameter
	.long	.debug_info+194         # DW_AT_type
	.byte	83                      # Abbrev [83] 0x1f3:0x5 DW_TAG_formal_parameter
	.long	.debug_info+53          # DW_AT_type
	.byte	83                      # Abbrev [83] 0x1f8:0x5 DW_TAG_formal_parameter
	.long	.debug_info+53          # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x1fe:0x5 DW_TAG_pointer_type
	.long	515                     # DW_AT_type
	.byte	84                      # Abbrev [84] 0x203:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	83                      # Abbrev [83] 0x204:0x5 DW_TAG_formal_parameter
	.long	.debug_info+194         # DW_AT_type
	.byte	83                      # Abbrev [83] 0x209:0x5 DW_TAG_formal_parameter
	.long	.debug_info+194         # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	45                      # Abbrev [45] 0x20f:0xb DW_TAG_typedef
	.long	538                     # DW_AT_type
	.long	.Linfo_string86         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x21a:0x7 DW_TAG_base_type
	.long	.Linfo_string85         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	9                       # Abbrev [9] 0x221:0x5 DW_TAG_pointer_type
	.long	550                     # DW_AT_type
	.byte	85                      # Abbrev [85] 0x226:0x1 DW_TAG_const_type
	.byte	9                       # Abbrev [9] 0x227:0x5 DW_TAG_pointer_type
	.long	556                     # DW_AT_type
	.byte	86                      # Abbrev [86] 0x22c:0x5 DW_TAG_const_type
	.long	.debug_info+155         # DW_AT_type
	.byte	9                       # Abbrev [9] 0x231:0x5 DW_TAG_pointer_type
	.long	566                     # DW_AT_type
	.byte	86                      # Abbrev [86] 0x236:0x5 DW_TAG_const_type
	.long	.debug_info+205         # DW_AT_type
	.byte	21                      # Abbrev [21] 0x23b:0x6e DW_TAG_subprogram
	.long	.Linfo_string107        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1155                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	681                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x248:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1156                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x254:0xc DW_TAG_formal_parameter
	.long	.Linfo_string110        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1158                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x260:0xc DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1162                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x26c:0xc DW_TAG_formal_parameter
	.long	.Linfo_string111        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1163                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x278:0xc DW_TAG_formal_parameter
	.long	.Linfo_string112        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1164                    # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	22                      # Abbrev [22] 0x284:0xc DW_TAG_formal_parameter
	.long	.Linfo_string113        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1165                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x290:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1167                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x29c:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1168                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x2a9:0x5 DW_TAG_pointer_type
	.long	686                     # DW_AT_type
	.byte	87                      # Abbrev [87] 0x2ae:0x8 DW_TAG_typedef
	.long	.Linfo_string108        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.short	292                     # DW_AT_decl_line
	.byte	88                      # Abbrev [88] 0x2b6:0x5 DW_TAG_pointer_type
	.long	.debug_info+53          # DW_AT_type
	.byte	21                      # Abbrev [21] 0x2bb:0x62 DW_TAG_subprogram
	.long	.Linfo_string131        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	980                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	681                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x2c8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	981                     # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x2d4:0xc DW_TAG_formal_parameter
	.long	.Linfo_string110        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	983                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x2e0:0xc DW_TAG_formal_parameter
	.long	.Linfo_string36         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	987                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x2ec:0xc DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	988                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x2f8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	989                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x304:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	992                     # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x310:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	991                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	89                      # Abbrev [89] 0x31d:0x4f DW_TAG_subprogram
	.long	.Linfo_string147        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x329:0xb DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	47                      # Abbrev [47] 0x334:0xb DW_TAG_formal_parameter
	.long	.Linfo_string36         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	47                      # Abbrev [47] 0x33f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	47                      # Abbrev [47] 0x34a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	209                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	16                      # Abbrev [16] 0x355:0xb DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	48                      # Abbrev [48] 0x360:0xb DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x36c:0x5 DW_TAG_pointer_type
	.long	324                     # DW_AT_type
	.byte	9                       # Abbrev [9] 0x371:0x5 DW_TAG_pointer_type
	.long	886                     # DW_AT_type
	.byte	60                      # Abbrev [60] 0x376:0xc DW_TAG_typedef
	.long	898                     # DW_AT_type
	.long	.Linfo_string182        # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	300                     # DW_AT_decl_line
	.byte	61                      # Abbrev [61] 0x382:0x205 DW_TAG_structure_type
	.short	55768                   # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x387:0xc DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	876                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	233                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x393:0xc DW_TAG_member
	.long	.Linfo_string149        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	237                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x39f:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	238                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x3ab:0xc DW_TAG_member
	.long	.Linfo_string150        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	241                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x3b7:0xc DW_TAG_member
	.long	.Linfo_string151        # DW_AT_name
	.long	164                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	244                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x3c3:0xc DW_TAG_member
	.long	.Linfo_string152        # DW_AT_name
	.long	164                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x3cf:0xc DW_TAG_member
	.long	.Linfo_string153        # DW_AT_name
	.long	164                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x3db:0xc DW_TAG_member
	.long	.Linfo_string154        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	247                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	8                       # Abbrev [8] 0x3e7:0xc DW_TAG_member
	.long	.Linfo_string155        # DW_AT_name
	.long	164                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	250                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x3f3:0xc DW_TAG_member
	.long	.Linfo_string156        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x3ff:0xc DW_TAG_member
	.long	.Linfo_string157        # DW_AT_name
	.long	.debug_info+3108        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x40b:0xc DW_TAG_member
	.long	.Linfo_string158        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x417:0xd DW_TAG_member
	.long	.Linfo_string48         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x424:0xd DW_TAG_member
	.long	.Linfo_string159        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	259                     # DW_AT_decl_line
	.byte	92                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x431:0xd DW_TAG_member
	.long	.Linfo_string160        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x43e:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	100                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x44b:0xd DW_TAG_member
	.long	.Linfo_string162        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x458:0xd DW_TAG_member
	.long	.Linfo_string163        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	108                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x465:0xd DW_TAG_member
	.long	.Linfo_string164        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	265                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x472:0xd DW_TAG_member
	.long	.Linfo_string165        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x47f:0xd DW_TAG_member
	.long	.Linfo_string166        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x48c:0xd DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	270                     # DW_AT_decl_line
	.byte	124                     # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x499:0xd DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	1415                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	271                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x4a6:0xe DW_TAG_member
	.long	.Linfo_string169        # DW_AT_name
	.long	1428                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.short	384                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x4b4:0xe DW_TAG_member
	.long	.Linfo_string170        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	275                     # DW_AT_decl_line
	.short	640                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x4c2:0xe DW_TAG_member
	.long	.Linfo_string171        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	276                     # DW_AT_decl_line
	.short	644                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x4d0:0xe DW_TAG_member
	.long	.Linfo_string172        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.short	648                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x4de:0xe DW_TAG_member
	.long	.Linfo_string173        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.short	652                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x4ec:0xe DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.short	656                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x4fa:0xe DW_TAG_member
	.long	.Linfo_string174        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.short	660                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x508:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.short	664                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x516:0xe DW_TAG_member
	.long	.Linfo_string175        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.short	668                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x524:0xe DW_TAG_member
	.long	.Linfo_string176        # DW_AT_name
	.long	1441                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	289                     # DW_AT_decl_line
	.short	672                     # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x532:0xe DW_TAG_member
	.long	.Linfo_string177        # DW_AT_name
	.long	1454                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	290                     # DW_AT_decl_line
	.short	1704                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x540:0xe DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	1454                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	291                     # DW_AT_decl_line
	.short	19706                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x54e:0xe DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	1467                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.short	37708                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x55c:0xe DW_TAG_member
	.long	.Linfo_string179        # DW_AT_name
	.long	1486                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	294                     # DW_AT_decl_line
	.short	39256                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x56a:0xe DW_TAG_member
	.long	.Linfo_string180        # DW_AT_name
	.long	1486                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	295                     # DW_AT_decl_line
	.short	45448                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x578:0xe DW_TAG_member
	.long	.Linfo_string181        # DW_AT_name
	.long	1505                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	297                     # DW_AT_decl_line
	.short	51640                   # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x587:0xd DW_TAG_array_type
	.long	.debug_info+3147        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x58c:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	256                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x594:0xd DW_TAG_array_type
	.long	.debug_info+3136        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x599:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	256                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x5a1:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x5a6:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	258                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x5ae:0xd DW_TAG_array_type
	.long	.debug_info+3136        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x5b3:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	18002                   # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x5bb:0x13 DW_TAG_array_type
	.long	.debug_info+3136        # DW_AT_type
	.byte	6                       # Abbrev [6] 0x5c0:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	73                      # Abbrev [73] 0x5c6:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	258                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x5ce:0x13 DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	6                       # Abbrev [6] 0x5d3:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	73                      # Abbrev [73] 0x5d9:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	258                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x5e1:0x13 DW_TAG_array_type
	.long	169                     # DW_AT_type
	.byte	73                      # Abbrev [73] 0x5e6:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	258                     # DW_AT_count
	.byte	6                       # Abbrev [6] 0x5ed:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x5f4:0x14 DW_TAG_subprogram
	.long	.Linfo_string184        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	188                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x5fc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	188                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x608:0x1f DW_TAG_subprogram
	.long	.Linfo_string185        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	174                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x610:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	174                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	48                      # Abbrev [48] 0x61b:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	176                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x627:0x6a DW_TAG_subprogram
	.long	.Linfo_string192        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1032                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x630:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1033                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x63c:0xc DW_TAG_formal_parameter
	.long	.Linfo_string142        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1034                    # DW_AT_decl_line
	.long	681                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x648:0xc DW_TAG_formal_parameter
	.long	.Linfo_string9          # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1035                    # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	22                      # Abbrev [22] 0x654:0xc DW_TAG_formal_parameter
	.long	.Linfo_string7          # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1036                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x660:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1039                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x66c:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1038                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x678:0xc DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1038                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x684:0xc DW_TAG_variable
	.long	.Linfo_string193        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1038                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	90                      # Abbrev [90] 0x691:0x3e DW_TAG_subprogram
	.long	.Linfo_string194        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x69e:0xc DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x6aa:0xc DW_TAG_formal_parameter
	.long	.Linfo_string195        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x6b6:0xc DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	467                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x6c2:0xc DW_TAG_variable
	.long	.Linfo_string196        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	466                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0x6cf:0x8e DW_TAG_subprogram
	.long	.Linfo_string198        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1089                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x6d8:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1090                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6e4:0xc DW_TAG_formal_parameter
	.long	.Linfo_string142        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1091                    # DW_AT_decl_line
	.long	681                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x6f0:0xc DW_TAG_formal_parameter
	.long	.Linfo_string199        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1092                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	24                      # Abbrev [24] 0x6fc:0xc DW_TAG_formal_parameter
	.long	.Linfo_string135        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1093                    # DW_AT_decl_line
	.long	1885                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x708:0xc DW_TAG_formal_parameter
	.long	.Linfo_string136        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1094                    # DW_AT_decl_line
	.long	1885                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x714:0xc DW_TAG_formal_parameter
	.long	.Linfo_string137        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1095                    # DW_AT_decl_line
	.long	1885                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x720:0xc DW_TAG_formal_parameter
	.long	.Linfo_string138        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1096                    # DW_AT_decl_line
	.long	1885                    # DW_AT_type
	.byte	52                      # Abbrev [52] 0x72c:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1099                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x738:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1098                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x744:0xc DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1098                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x750:0xc DW_TAG_variable
	.long	.Linfo_string193        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1098                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	88                      # Abbrev [88] 0x75d:0x5 DW_TAG_pointer_type
	.long	.debug_info+3158        # DW_AT_type
	.byte	90                      # Abbrev [90] 0x762:0x26 DW_TAG_subprogram
	.long	.Linfo_string200        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	525                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x76f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	525                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x77b:0xc DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	527                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	91                      # Abbrev [91] 0x788:0x18 DW_TAG_subprogram
	.long	.Linfo_string201        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	196                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x794:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	196                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	90                      # Abbrev [90] 0x7a0:0x3e DW_TAG_subprogram
	.long	.Linfo_string204        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	549                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x7ad:0xc DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	550                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x7b9:0xc DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	551                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	22                      # Abbrev [22] 0x7c5:0xc DW_TAG_formal_parameter
	.long	.Linfo_string111        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	552                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0x7d1:0xc DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	554                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x7de:0x5 DW_TAG_pointer_type
	.long	2019                    # DW_AT_type
	.byte	60                      # Abbrev [60] 0x7e3:0xc DW_TAG_typedef
	.long	2031                    # DW_AT_type
	.long	.Linfo_string254        # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	472                     # DW_AT_decl_line
	.byte	81                      # Abbrev [81] 0x7ef:0x376 DW_TAG_structure_type
	.short	64144                   # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.short	382                     # DW_AT_decl_line
	.byte	63                      # Abbrev [63] 0x7f5:0xd DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	876                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	384                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x802:0xd DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	387                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x80f:0xd DW_TAG_member
	.long	.Linfo_string205        # DW_AT_name
	.long	.debug_info+3136        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	390                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x81c:0xd DW_TAG_member
	.long	.Linfo_string206        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	391                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x829:0xd DW_TAG_member
	.long	.Linfo_string207        # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	392                     # DW_AT_decl_line
	.byte	20                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x836:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	393                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x843:0xd DW_TAG_member
	.long	.Linfo_string162        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	393                     # DW_AT_decl_line
	.byte	28                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x850:0xd DW_TAG_member
	.long	.Linfo_string170        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x85d:0xd DW_TAG_member
	.long	.Linfo_string171        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	397                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x86a:0xd DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x877:0xd DW_TAG_member
	.long	.Linfo_string208        # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	401                     # DW_AT_decl_line
	.byte	44                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x884:0xd DW_TAG_member
	.long	.Linfo_string209        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	402                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x891:0xd DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	403                     # DW_AT_decl_line
	.byte	52                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x89e:0xd DW_TAG_member
	.long	.Linfo_string154        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	406                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x8ab:0xd DW_TAG_member
	.long	.Linfo_string210        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	407                     # DW_AT_decl_line
	.byte	60                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x8b8:0xd DW_TAG_member
	.long	.Linfo_string211        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	408                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	63                      # Abbrev [63] 0x8c5:0xd DW_TAG_member
	.long	.Linfo_string212        # DW_AT_name
	.long	2917                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	409                     # DW_AT_decl_line
	.byte	68                      # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x8d2:0xe DW_TAG_member
	.long	.Linfo_string213        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	410                     # DW_AT_decl_line
	.short	1092                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x8e0:0xe DW_TAG_member
	.long	.Linfo_string214        # DW_AT_name
	.long	2930                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	411                     # DW_AT_decl_line
	.short	1096                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x8ee:0xe DW_TAG_member
	.long	.Linfo_string215        # DW_AT_name
	.long	2930                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	412                     # DW_AT_decl_line
	.short	2124                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x8fc:0xe DW_TAG_member
	.long	.Linfo_string216        # DW_AT_name
	.long	164                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	415                     # DW_AT_decl_line
	.short	3152                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x90a:0xe DW_TAG_member
	.long	.Linfo_string217        # DW_AT_name
	.long	.debug_info+3108        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	418                     # DW_AT_decl_line
	.short	3160                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x918:0xe DW_TAG_member
	.long	.Linfo_string218        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	419                     # DW_AT_decl_line
	.short	3168                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x926:0xe DW_TAG_member
	.long	.Linfo_string219        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	422                     # DW_AT_decl_line
	.short	3176                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x934:0xe DW_TAG_member
	.long	.Linfo_string220        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	423                     # DW_AT_decl_line
	.short	3180                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x942:0xe DW_TAG_member
	.long	.Linfo_string221        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	424                     # DW_AT_decl_line
	.short	3184                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x950:0xe DW_TAG_member
	.long	.Linfo_string222        # DW_AT_name
	.long	169                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	425                     # DW_AT_decl_line
	.short	3188                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x95e:0xe DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	428                     # DW_AT_decl_line
	.short	3192                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x96c:0xe DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	1415                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	429                     # DW_AT_decl_line
	.short	3196                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x97a:0xe DW_TAG_member
	.long	.Linfo_string223        # DW_AT_name
	.long	2943                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	430                     # DW_AT_decl_line
	.short	3452                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x988:0xe DW_TAG_member
	.long	.Linfo_string224        # DW_AT_name
	.long	1428                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	431                     # DW_AT_decl_line
	.short	3468                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x996:0xe DW_TAG_member
	.long	.Linfo_string225        # DW_AT_name
	.long	2955                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	434                     # DW_AT_decl_line
	.short	3724                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9a4:0xe DW_TAG_member
	.long	.Linfo_string226        # DW_AT_name
	.long	2968                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	435                     # DW_AT_decl_line
	.short	7820                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9b2:0xe DW_TAG_member
	.long	.Linfo_string177        # DW_AT_name
	.long	1454                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	436                     # DW_AT_decl_line
	.short	7884                    # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9c0:0xe DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	1454                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	437                     # DW_AT_decl_line
	.short	25886                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9ce:0xe DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	1467                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	438                     # DW_AT_decl_line
	.short	43888                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9dc:0xe DW_TAG_member
	.long	.Linfo_string6          # DW_AT_name
	.long	1486                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	440                     # DW_AT_decl_line
	.short	45436                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9ea:0xe DW_TAG_member
	.long	.Linfo_string227        # DW_AT_name
	.long	1486                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	441                     # DW_AT_decl_line
	.short	51628                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0x9f8:0xe DW_TAG_member
	.long	.Linfo_string228        # DW_AT_name
	.long	1486                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	442                     # DW_AT_decl_line
	.short	57820                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0xa06:0xe DW_TAG_member
	.long	.Linfo_string229        # DW_AT_name
	.long	2980                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	443                     # DW_AT_decl_line
	.short	64012                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa14:0xe DW_TAG_member
	.long	.Linfo_string230        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	446                     # DW_AT_decl_line
	.short	64036                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa22:0xe DW_TAG_member
	.long	.Linfo_string231        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	447                     # DW_AT_decl_line
	.short	64040                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa30:0xe DW_TAG_member
	.long	.Linfo_string232        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	448                     # DW_AT_decl_line
	.short	64044                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa3e:0xe DW_TAG_member
	.long	.Linfo_string233        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	449                     # DW_AT_decl_line
	.short	64048                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa4c:0xe DW_TAG_member
	.long	.Linfo_string234        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	450                     # DW_AT_decl_line
	.short	64052                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa5a:0xe DW_TAG_member
	.long	.Linfo_string235        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	451                     # DW_AT_decl_line
	.short	64056                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa68:0xe DW_TAG_member
	.long	.Linfo_string236        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	452                     # DW_AT_decl_line
	.short	64060                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa76:0xe DW_TAG_member
	.long	.Linfo_string237        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	453                     # DW_AT_decl_line
	.short	64064                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa84:0xe DW_TAG_member
	.long	.Linfo_string238        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	454                     # DW_AT_decl_line
	.short	64068                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xa92:0xe DW_TAG_member
	.long	.Linfo_string239        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	455                     # DW_AT_decl_line
	.short	64072                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xaa0:0xe DW_TAG_member
	.long	.Linfo_string240        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	456                     # DW_AT_decl_line
	.short	64076                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xaae:0xe DW_TAG_member
	.long	.Linfo_string241        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	457                     # DW_AT_decl_line
	.short	64080                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xabc:0xe DW_TAG_member
	.long	.Linfo_string242        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.short	64084                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xaca:0xe DW_TAG_member
	.long	.Linfo_string243        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	459                     # DW_AT_decl_line
	.short	64088                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xad8:0xe DW_TAG_member
	.long	.Linfo_string244        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	460                     # DW_AT_decl_line
	.short	64092                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xae6:0xe DW_TAG_member
	.long	.Linfo_string245        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	461                     # DW_AT_decl_line
	.short	64096                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xaf4:0xe DW_TAG_member
	.long	.Linfo_string246        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	462                     # DW_AT_decl_line
	.short	64100                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xb02:0xe DW_TAG_member
	.long	.Linfo_string247        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	463                     # DW_AT_decl_line
	.short	64104                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xb10:0xe DW_TAG_member
	.long	.Linfo_string248        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.short	64108                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xb1e:0xe DW_TAG_member
	.long	.Linfo_string249        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	465                     # DW_AT_decl_line
	.short	64112                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0xb2c:0xe DW_TAG_member
	.long	.Linfo_string250        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	466                     # DW_AT_decl_line
	.short	64116                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0xb3a:0xe DW_TAG_member
	.long	.Linfo_string251        # DW_AT_name
	.long	2992                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	467                     # DW_AT_decl_line
	.short	64120                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0xb48:0xe DW_TAG_member
	.long	.Linfo_string252        # DW_AT_name
	.long	2992                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	468                     # DW_AT_decl_line
	.short	64128                   # DW_AT_data_member_location
	.byte	66                      # Abbrev [66] 0xb56:0xe DW_TAG_member
	.long	.Linfo_string253        # DW_AT_name
	.long	2992                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	469                     # DW_AT_decl_line
	.short	64136                   # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xb65:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0xb6a:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	256                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xb72:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0xb77:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	257                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xb7f:0xc DW_TAG_array_type
	.long	.debug_info+3147        # DW_AT_type
	.byte	6                       # Abbrev [6] 0xb84:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xb8b:0xd DW_TAG_array_type
	.long	.debug_info+3136        # DW_AT_type
	.byte	73                      # Abbrev [73] 0xb90:0x7 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.short	4096                    # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xb98:0xc DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	6                       # Abbrev [6] 0xb9d:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	16                      # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0xba4:0xc DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	6                       # Abbrev [6] 0xba9:0x6 DW_TAG_subrange_type
	.long	66                      # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	88                      # Abbrev [88] 0xbb0:0x5 DW_TAG_pointer_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	91                      # Abbrev [91] 0xbb5:0x39 DW_TAG_subprogram
	.long	.Linfo_string255        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	159                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+194         # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0xbc1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string80         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	159                     # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	47                      # Abbrev [47] 0xbcc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string256        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	159                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0xbd7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string100        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	159                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xbe2:0xb DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	90                      # Abbrev [90] 0xbee:0x62 DW_TAG_subprogram
	.long	.Linfo_string258        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1233                    # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xbfb:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1234                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc07:0xc DW_TAG_formal_parameter
	.long	.Linfo_string142        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1235                    # DW_AT_decl_line
	.long	681                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0xc13:0xc DW_TAG_formal_parameter
	.long	.Linfo_string9          # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1236                    # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	22                      # Abbrev [22] 0xc1f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string7          # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1237                    # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	52                      # Abbrev [52] 0xc2b:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1240                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0xc37:0xc DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1239                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xc43:0xc DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1239                    # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	92                      # Abbrev [92] 0xc50:0x26 DW_TAG_subprogram
	.long	.Linfo_string187        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	967                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0xc5d:0xc DW_TAG_formal_parameter
	.long	.Linfo_string110        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	967                     # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	59                      # Abbrev [59] 0xc69:0xc DW_TAG_variable
	.long	.Linfo_string188        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	972                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	23                      # Abbrev [23] 0xc76:0x46 DW_TAG_subprogram
	.long	.Linfo_string259        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1293                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xc7f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1294                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc8b:0xc DW_TAG_formal_parameter
	.long	.Linfo_string142        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1295                    # DW_AT_decl_line
	.long	681                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc97:0xc DW_TAG_formal_parameter
	.long	.Linfo_string112        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1296                    # DW_AT_decl_line
	.long	3260                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0xca3:0xc DW_TAG_formal_parameter
	.long	.Linfo_string113        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1297                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xcaf:0xc DW_TAG_variable
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1299                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	88                      # Abbrev [88] 0xcbc:0x5 DW_TAG_pointer_type
	.long	.debug_info+194         # DW_AT_type
	.byte	93                      # Abbrev [93] 0xcc1:0x25 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string418        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	94                      # Abbrev [94] 0xcd6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc165          # DW_AT_location
	.long	.Linfo_string450        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.long	.debug_info+53          # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	12                      # Abbrev [12] 0xce6:0x32 DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	2997                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xcf9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc166          # DW_AT_location
	.long	3009                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xd02:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc167          # DW_AT_location
	.long	3020                    # DW_AT_abstract_origin
	.byte	95                      # Abbrev [95] 0xd0b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	3031                    # DW_AT_abstract_origin
	.byte	54                      # Abbrev [54] 0xd12:0x5 DW_TAG_variable
	.long	3042                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	96                      # Abbrev [96] 0xd18:0x30 DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string419        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	97                      # Abbrev [97] 0xd2d:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string80         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	97                      # Abbrev [97] 0xd3a:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	.Linfo_string451        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.long	.debug_info+194         # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	92                      # Abbrev [92] 0xd48:0x26 DW_TAG_subprogram
	.long	.Linfo_string317        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	762                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xd55:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	762                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.byte	59                      # Abbrev [59] 0xd61:0xc DW_TAG_variable
	.long	.Linfo_string318        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	764                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	92                      # Abbrev [92] 0xd6e:0xb8 DW_TAG_subprogram
	.long	.Linfo_string319        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	593                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0xd7b:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	593                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.byte	59                      # Abbrev [59] 0xd87:0xc DW_TAG_variable
	.long	.Linfo_string318        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	595                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	17                      # Abbrev [17] 0xd93:0x92 DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0xd94:0xc DW_TAG_variable
	.long	.Linfo_string320        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	649                     # DW_AT_decl_line
	.long	169                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0xda0:0xc DW_TAG_variable
	.long	.Linfo_string321        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	650                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xdac:0xc DW_TAG_variable
	.long	.Linfo_string322        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	651                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xdb8:0xc DW_TAG_variable
	.long	.Linfo_string323        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	652                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xdc4:0xc DW_TAG_variable
	.long	.Linfo_string324        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	653                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	52                      # Abbrev [52] 0xdd0:0xc DW_TAG_variable
	.long	.Linfo_string325        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	654                     # DW_AT_decl_line
	.long	164                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0xddc:0xc DW_TAG_variable
	.long	.Linfo_string326        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	655                     # DW_AT_decl_line
	.long	169                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0xde8:0xc DW_TAG_variable
	.long	.Linfo_string327        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	656                     # DW_AT_decl_line
	.long	.debug_info+200         # DW_AT_type
	.byte	52                      # Abbrev [52] 0xdf4:0xc DW_TAG_variable
	.long	.Linfo_string328        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	660                     # DW_AT_decl_line
	.long	169                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe00:0xc DW_TAG_variable
	.long	.Linfo_string329        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	657                     # DW_AT_decl_line
	.long	.debug_info+3158        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe0c:0xc DW_TAG_variable
	.long	.Linfo_string330        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	661                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe18:0xc DW_TAG_variable
	.long	.Linfo_string331        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	662                     # DW_AT_decl_line
	.long	.debug_info+3158        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	90                      # Abbrev [90] 0xe26:0x4a DW_TAG_subprogram
	.long	.Linfo_string332        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3090        # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	22                      # Abbrev [22] 0xe33:0xc DW_TAG_formal_parameter
	.long	.Linfo_string333        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe3f:0xc DW_TAG_formal_parameter
	.long	.Linfo_string214        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	743                     # DW_AT_decl_line
	.long	2992                    # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe4b:0xc DW_TAG_variable
	.long	.Linfo_string334        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	745                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe57:0xc DW_TAG_variable
	.long	.Linfo_string335        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	745                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0xe63:0xc DW_TAG_variable
	.long	.Linfo_string336        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	745                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	98                      # Abbrev [98] 0xe70:0x84c DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string420        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	864                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	26                      # Abbrev [26] 0xe8a:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc168          # DW_AT_location
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	864                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0xe9a:0x10 DW_TAG_variable
	.long	.Ldebug_loc169          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	867                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.byte	59                      # Abbrev [59] 0xeaa:0xc DW_TAG_variable
	.long	.Linfo_string452        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	866                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	31                      # Abbrev [31] 0xeb6:0x4f1 DW_TAG_lexical_block
	.long	.Ldebug_ranges68        # DW_AT_ranges
	.byte	99                      # Abbrev [99] 0xebb:0x10 DW_TAG_variable
	.long	.Ldebug_loc324          # DW_AT_location
	.long	.Linfo_string268        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	898                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	35                      # Abbrev [35] 0xecb:0x4db DW_TAG_inlined_subroutine
	.long	.debug_info+22219       # DW_AT_abstract_origin
	.long	.Ldebug_ranges30        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	898                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0xed7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc180          # DW_AT_location
	.long	.debug_info+22231       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xee0:0x9 DW_TAG_variable
	.long	.Ldebug_loc183          # DW_AT_location
	.long	.debug_info+22242       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xee9:0x9 DW_TAG_variable
	.long	.Ldebug_loc184          # DW_AT_location
	.long	.debug_info+22253       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xef2:0x9 DW_TAG_variable
	.long	.Ldebug_loc186          # DW_AT_location
	.long	.debug_info+22264       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xefb:0x9 DW_TAG_variable
	.long	.Ldebug_loc237          # DW_AT_location
	.long	.debug_info+22275       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf04:0x9 DW_TAG_variable
	.long	.Ldebug_loc238          # DW_AT_location
	.long	.debug_info+22286       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf0d:0x9 DW_TAG_variable
	.long	.Ldebug_loc239          # DW_AT_location
	.long	.debug_info+22297       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf16:0x9 DW_TAG_variable
	.long	.Ldebug_loc240          # DW_AT_location
	.long	.debug_info+22308       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf1f:0x9 DW_TAG_variable
	.long	.Ldebug_loc241          # DW_AT_location
	.long	.debug_info+22319       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf28:0x9 DW_TAG_variable
	.long	.Ldebug_loc242          # DW_AT_location
	.long	.debug_info+22330       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf31:0x9 DW_TAG_variable
	.long	.Ldebug_loc243          # DW_AT_location
	.long	.debug_info+22341       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf3a:0x9 DW_TAG_variable
	.long	.Ldebug_loc244          # DW_AT_location
	.long	.debug_info+22352       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf43:0x9 DW_TAG_variable
	.long	.Ldebug_loc245          # DW_AT_location
	.long	.debug_info+22363       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf4c:0x9 DW_TAG_variable
	.long	.Ldebug_loc246          # DW_AT_location
	.long	.debug_info+22374       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf55:0x9 DW_TAG_variable
	.long	.Ldebug_loc247          # DW_AT_location
	.long	.debug_info+22385       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf5e:0x9 DW_TAG_variable
	.long	.Ldebug_loc248          # DW_AT_location
	.long	.debug_info+22396       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf67:0x9 DW_TAG_variable
	.long	.Ldebug_loc249          # DW_AT_location
	.long	.debug_info+22407       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf70:0x9 DW_TAG_variable
	.long	.Ldebug_loc250          # DW_AT_location
	.long	.debug_info+22418       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf79:0x9 DW_TAG_variable
	.long	.Ldebug_loc251          # DW_AT_location
	.long	.debug_info+22429       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf82:0x9 DW_TAG_variable
	.long	.Ldebug_loc252          # DW_AT_location
	.long	.debug_info+22440       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf8b:0x9 DW_TAG_variable
	.long	.Ldebug_loc253          # DW_AT_location
	.long	.debug_info+22451       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf94:0x9 DW_TAG_variable
	.long	.Ldebug_loc254          # DW_AT_location
	.long	.debug_info+22462       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xf9d:0x9 DW_TAG_variable
	.long	.Ldebug_loc255          # DW_AT_location
	.long	.debug_info+22473       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfa6:0x9 DW_TAG_variable
	.long	.Ldebug_loc256          # DW_AT_location
	.long	.debug_info+22484       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfaf:0x9 DW_TAG_variable
	.long	.Ldebug_loc257          # DW_AT_location
	.long	.debug_info+22495       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfb8:0x9 DW_TAG_variable
	.long	.Ldebug_loc258          # DW_AT_location
	.long	.debug_info+22506       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfc1:0x9 DW_TAG_variable
	.long	.Ldebug_loc259          # DW_AT_location
	.long	.debug_info+22517       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfca:0x9 DW_TAG_variable
	.long	.Ldebug_loc260          # DW_AT_location
	.long	.debug_info+22528       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfd3:0x9 DW_TAG_variable
	.long	.Ldebug_loc292          # DW_AT_location
	.long	.debug_info+22539       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xfdc:0x9 DW_TAG_variable
	.long	.Ldebug_loc293          # DW_AT_location
	.long	.debug_info+22550       # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xfe5:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges31        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0xfea:0x9 DW_TAG_variable
	.long	.Ldebug_loc185          # DW_AT_location
	.long	.debug_info+22562       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0xff4:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges32        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0xff9:0x9 DW_TAG_variable
	.long	.Ldebug_loc206          # DW_AT_location
	.long	.debug_info+22575       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1003:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges33        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1008:0x9 DW_TAG_variable
	.long	.Ldebug_loc283          # DW_AT_location
	.long	.debug_info+22588       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1012:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges34        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1017:0x9 DW_TAG_variable
	.long	.Ldebug_loc285          # DW_AT_location
	.long	.debug_info+22602       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1021:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges35        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1026:0x9 DW_TAG_variable
	.long	.Ldebug_loc268          # DW_AT_location
	.long	.debug_info+22616       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1030:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges36        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1035:0x9 DW_TAG_variable
	.long	.Ldebug_loc263          # DW_AT_location
	.long	.debug_info+22630       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x103f:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges37        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1044:0x9 DW_TAG_variable
	.long	.Ldebug_loc282          # DW_AT_location
	.long	.debug_info+22644       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x104e:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges38        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1053:0x9 DW_TAG_variable
	.long	.Ldebug_loc284          # DW_AT_location
	.long	.debug_info+22658       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x105d:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges39        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1062:0x9 DW_TAG_variable
	.long	.Ldebug_loc262          # DW_AT_location
	.long	.debug_info+22672       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x106c:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges40        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1071:0x9 DW_TAG_variable
	.long	.Ldebug_loc281          # DW_AT_location
	.long	.debug_info+22685       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x107b:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges41        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1080:0x9 DW_TAG_variable
	.long	.Ldebug_loc288          # DW_AT_location
	.long	.debug_info+22699       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x108a:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges42        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x108f:0x9 DW_TAG_variable
	.long	.Ldebug_loc261          # DW_AT_location
	.long	.debug_info+22713       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1099:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges43        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x109e:0x9 DW_TAG_variable
	.long	.Ldebug_loc267          # DW_AT_location
	.long	.debug_info+22726       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10a8:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges44        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10ad:0x9 DW_TAG_variable
	.long	.Ldebug_loc269          # DW_AT_location
	.long	.debug_info+22740       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10b7:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges45        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc270          # DW_AT_location
	.long	.debug_info+22754       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10c6:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges46        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10cb:0x9 DW_TAG_variable
	.long	.Ldebug_loc273          # DW_AT_location
	.long	.debug_info+22768       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10d5:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges47        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10da:0x9 DW_TAG_variable
	.long	.Ldebug_loc274          # DW_AT_location
	.long	.debug_info+22782       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10e4:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges48        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc277          # DW_AT_location
	.long	.debug_info+22796       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x10f3:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges49        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x10f8:0x9 DW_TAG_variable
	.long	.Ldebug_loc278          # DW_AT_location
	.long	.debug_info+22810       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1102:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges50        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1107:0x9 DW_TAG_variable
	.long	.Ldebug_loc306          # DW_AT_location
	.long	.debug_info+22824       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x1111:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2815               # DW_AT_low_pc
	.long	.Ltmp2818-.Ltmp2815     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x111e:0x9 DW_TAG_variable
	.long	.Ldebug_loc325          # DW_AT_location
	.long	.debug_info+22838       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1128:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges51        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x112d:0x9 DW_TAG_variable
	.long	.Ldebug_loc307          # DW_AT_location
	.long	.debug_info+22852       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x1137:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2725               # DW_AT_low_pc
	.long	.Ltmp2728-.Ltmp2725     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x1144:0x9 DW_TAG_variable
	.long	.Ldebug_loc320          # DW_AT_location
	.long	.debug_info+22866       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x114e:0x3d DW_TAG_lexical_block
	.long	.Ldebug_ranges52        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1153:0x9 DW_TAG_variable
	.long	.Ldebug_loc310          # DW_AT_location
	.long	.debug_info+22880       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x115c:0x9 DW_TAG_variable
	.long	.Ldebug_loc311          # DW_AT_location
	.long	.debug_info+22892       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1165:0x9 DW_TAG_variable
	.long	.Ldebug_loc312          # DW_AT_location
	.long	.debug_info+22904       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x116e:0x9 DW_TAG_variable
	.long	.Ldebug_loc313          # DW_AT_location
	.long	.debug_info+22916       # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x1177:0x5 DW_TAG_variable
	.long	.debug_info+22928       # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x117c:0x5 DW_TAG_variable
	.long	.debug_info+22940       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1181:0x9 DW_TAG_variable
	.long	.Ldebug_loc319          # DW_AT_location
	.long	.debug_info+22952       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x118b:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges53        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1190:0x9 DW_TAG_variable
	.long	.Ldebug_loc280          # DW_AT_location
	.long	.debug_info+22980       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x119a:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges54        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x119f:0x9 DW_TAG_variable
	.long	.Ldebug_loc271          # DW_AT_location
	.long	.debug_info+22994       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x11a9:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges55        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x11ae:0x9 DW_TAG_variable
	.long	.Ldebug_loc275          # DW_AT_location
	.long	.debug_info+23008       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x11b8:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges56        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x11bd:0x9 DW_TAG_variable
	.long	.Ldebug_loc276          # DW_AT_location
	.long	.debug_info+23022       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x11c7:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges57        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x11cc:0x9 DW_TAG_variable
	.long	.Ldebug_loc279          # DW_AT_location
	.long	.debug_info+23036       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x11d6:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges58        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x11db:0x9 DW_TAG_variable
	.long	.Ldebug_loc291          # DW_AT_location
	.long	.debug_info+23078       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x11e5:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges59        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x11ea:0x9 DW_TAG_variable
	.long	.Ldebug_loc289          # DW_AT_location
	.long	.debug_info+23092       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x11f4:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2348               # DW_AT_low_pc
	.long	.Ltmp2351-.Ltmp2348     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x1201:0x9 DW_TAG_variable
	.long	.Ldebug_loc305          # DW_AT_location
	.long	.debug_info+23106       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x120b:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges60        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1210:0x9 DW_TAG_variable
	.long	.Ldebug_loc286          # DW_AT_location
	.long	.debug_info+23120       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x121a:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges61        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x121f:0x9 DW_TAG_variable
	.long	.Ldebug_loc287          # DW_AT_location
	.long	.debug_info+23134       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1229:0x20 DW_TAG_lexical_block
	.long	.Ldebug_ranges62        # DW_AT_ranges
	.byte	37                      # Abbrev [37] 0x122e:0x8 DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	34
	.long	.debug_info+23162       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1236:0x9 DW_TAG_variable
	.long	.Ldebug_loc264          # DW_AT_location
	.long	.debug_info+23174       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x123f:0x9 DW_TAG_variable
	.long	.Ldebug_loc265          # DW_AT_location
	.long	.debug_info+23186       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1249:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges63        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x124e:0x9 DW_TAG_variable
	.long	.Ldebug_loc266          # DW_AT_location
	.long	.debug_info+23200       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1258:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges64        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x125d:0x9 DW_TAG_variable
	.long	.Ldebug_loc272          # DW_AT_location
	.long	.debug_info+23214       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x1267:0x5e DW_TAG_inlined_subroutine
	.long	.debug_info+24471       # DW_AT_abstract_origin
	.long	.Ldebug_ranges65        # DW_AT_ranges
	.byte	12                      # DW_AT_call_file
	.short	379                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x1273:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc300          # DW_AT_location
	.long	.debug_info+24479       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x127c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc296          # DW_AT_location
	.long	.debug_info+24490       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x1285:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc297          # DW_AT_location
	.long	.debug_info+24523       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x128e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc298          # DW_AT_location
	.long	.debug_info+24534       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x1297:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc290          # DW_AT_location
	.long	.debug_info+24545       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12a0:0x9 DW_TAG_variable
	.long	.Ldebug_loc294          # DW_AT_location
	.long	.debug_info+24556       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12a9:0x9 DW_TAG_variable
	.long	.Ldebug_loc295          # DW_AT_location
	.long	.debug_info+24567       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12b2:0x9 DW_TAG_variable
	.long	.Ldebug_loc299          # DW_AT_location
	.long	.debug_info+24578       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12bb:0x9 DW_TAG_variable
	.long	.Ldebug_loc301          # DW_AT_location
	.long	.debug_info+24589       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x12c5:0x29 DW_TAG_lexical_block
	.quad	.Ltmp2309               # DW_AT_low_pc
	.long	.Ltmp2327-.Ltmp2309     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x12d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc302          # DW_AT_location
	.long	.debug_info+23228       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12db:0x9 DW_TAG_variable
	.long	.Ldebug_loc303          # DW_AT_location
	.long	.debug_info+23240       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x12e4:0x9 DW_TAG_variable
	.long	.Ldebug_loc304          # DW_AT_location
	.long	.debug_info+23252       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x12ee:0x27 DW_TAG_inlined_subroutine
	.long	.debug_info+24409       # DW_AT_abstract_origin
	.quad	.Ltmp2417               # DW_AT_low_pc
	.long	.Ltmp2427-.Ltmp2417     # DW_AT_high_pc
	.byte	12                      # DW_AT_call_file
	.short	322                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x1302:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc181          # DW_AT_location
	.long	.debug_info+24417       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x130b:0x9 DW_TAG_variable
	.long	.Ldebug_loc308          # DW_AT_location
	.long	.debug_info+24428       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1315:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges66        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x131a:0x9 DW_TAG_variable
	.long	.Ldebug_loc309          # DW_AT_location
	.long	.debug_info+23294       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1324:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges67        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x1329:0x9 DW_TAG_variable
	.long	.Ldebug_loc314          # DW_AT_location
	.long	.debug_info+23308       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1333:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp2635               # DW_AT_low_pc
	.long	.Ltmp2643-.Ltmp2635     # DW_AT_high_pc
	.byte	12                      # DW_AT_call_file
	.short	571                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1347:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc315          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1350:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc182          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1359:0x9 DW_TAG_variable
	.long	.Ldebug_loc316          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1362:0x9 DW_TAG_variable
	.long	.Ldebug_loc317          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x136b:0x9 DW_TAG_variable
	.long	.Ldebug_loc318          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1375:0x30 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp2739               # DW_AT_low_pc
	.long	.Ltmp2747-.Ltmp2739     # DW_AT_high_pc
	.byte	12                      # DW_AT_call_file
	.short	574                     # DW_AT_call_line
	.byte	30                      # Abbrev [30] 0x1389:0x9 DW_TAG_variable
	.long	.Ldebug_loc321          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1392:0x9 DW_TAG_variable
	.long	.Ldebug_loc322          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x139b:0x9 DW_TAG_variable
	.long	.Ldebug_loc323          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x13a7:0x287 DW_TAG_inlined_subroutine
	.long	3400                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges69        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	877                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x13b3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc170          # DW_AT_location
	.long	3413                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x13bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc187          # DW_AT_location
	.long	3425                    # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x13c5:0x3e DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1354               # DW_AT_low_pc
	.long	.Ltmp1362-.Ltmp1354     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	791                     # DW_AT_call_line
	.byte	34                      # Abbrev [34] 0x13d9:0x5 DW_TAG_formal_parameter
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x13de:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc171          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x13e7:0x9 DW_TAG_variable
	.long	.Ldebug_loc218          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x13f0:0x9 DW_TAG_variable
	.long	.Ldebug_loc219          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x13f9:0x9 DW_TAG_variable
	.long	.Ldebug_loc220          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1403:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1377               # DW_AT_low_pc
	.long	.Ltmp1385-.Ltmp1377     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	797                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1417:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc221          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1420:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc172          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1429:0x9 DW_TAG_variable
	.long	.Ldebug_loc222          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1432:0x9 DW_TAG_variable
	.long	.Ldebug_loc223          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x143b:0x9 DW_TAG_variable
	.long	.Ldebug_loc224          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1445:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1406               # DW_AT_low_pc
	.long	.Ltmp1414-.Ltmp1406     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	803                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1459:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc225          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1462:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc173          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x146b:0x9 DW_TAG_variable
	.long	.Ldebug_loc226          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1474:0x9 DW_TAG_variable
	.long	.Ldebug_loc227          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x147d:0x9 DW_TAG_variable
	.long	.Ldebug_loc228          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1487:0x30 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1427               # DW_AT_low_pc
	.long	.Ltmp1435-.Ltmp1427     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	808                     # DW_AT_call_line
	.byte	30                      # Abbrev [30] 0x149b:0x9 DW_TAG_variable
	.long	.Ldebug_loc229          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x14a4:0x9 DW_TAG_variable
	.long	.Ldebug_loc230          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x14ad:0x9 DW_TAG_variable
	.long	.Ldebug_loc231          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x14b7:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1444               # DW_AT_low_pc
	.long	.Ltmp1452-.Ltmp1444     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	811                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x14cb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc232          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x14d4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc174          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x14dd:0x9 DW_TAG_variable
	.long	.Ldebug_loc233          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x14e6:0x9 DW_TAG_variable
	.long	.Ldebug_loc234          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x14ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc235          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x14f9:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1173               # DW_AT_low_pc
	.long	.Ltmp1181-.Ltmp1173     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	850                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x150d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc205          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1516:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc177          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x151f:0x9 DW_TAG_variable
	.long	.Ldebug_loc188          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1528:0x9 DW_TAG_variable
	.long	.Ldebug_loc189          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1531:0x9 DW_TAG_variable
	.long	.Ldebug_loc190          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x153b:0x30 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1188               # DW_AT_low_pc
	.long	.Ltmp1196-.Ltmp1188     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	854                     # DW_AT_call_line
	.byte	30                      # Abbrev [30] 0x154f:0x9 DW_TAG_variable
	.long	.Ldebug_loc191          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1558:0x9 DW_TAG_variable
	.long	.Ldebug_loc192          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1561:0x9 DW_TAG_variable
	.long	.Ldebug_loc193          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x156b:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1199               # DW_AT_low_pc
	.long	.Ltmp1207-.Ltmp1199     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	856                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x157f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc194          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1588:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc178          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1591:0x9 DW_TAG_variable
	.long	.Ldebug_loc195          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x159a:0x9 DW_TAG_variable
	.long	.Ldebug_loc196          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x15a3:0x9 DW_TAG_variable
	.long	.Ldebug_loc197          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x15ad:0x3e DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1219               # DW_AT_low_pc
	.long	.Ltmp1226-.Ltmp1219     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	840                     # DW_AT_call_line
	.byte	34                      # Abbrev [34] 0x15c1:0x5 DW_TAG_formal_parameter
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x15c6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc175          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x15cf:0x9 DW_TAG_variable
	.long	.Ldebug_loc198          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x15d8:0x9 DW_TAG_variable
	.long	.Ldebug_loc199          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x15e1:0x9 DW_TAG_variable
	.long	.Ldebug_loc200          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x15eb:0x42 DW_TAG_inlined_subroutine
	.long	3622                    # DW_AT_abstract_origin
	.quad	.Ltmp1234               # DW_AT_low_pc
	.long	.Ltmp1242-.Ltmp1234     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	845                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x15ff:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc201          # DW_AT_location
	.long	3635                    # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1608:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc176          # DW_AT_location
	.long	3647                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1611:0x9 DW_TAG_variable
	.long	.Ldebug_loc202          # DW_AT_location
	.long	3659                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x161a:0x9 DW_TAG_variable
	.long	.Ldebug_loc203          # DW_AT_location
	.long	3671                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1623:0x9 DW_TAG_variable
	.long	.Ldebug_loc204          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x162e:0x8d DW_TAG_inlined_subroutine
	.long	3438                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges70        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	878                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x163a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc179          # DW_AT_location
	.long	3451                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1643:0x9 DW_TAG_variable
	.long	.Ldebug_loc236          # DW_AT_location
	.long	3463                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x164c:0x6e DW_TAG_lexical_block
	.long	.Ldebug_ranges71        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x1651:0x9 DW_TAG_variable
	.long	.Ldebug_loc207          # DW_AT_location
	.long	3476                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x165a:0x9 DW_TAG_variable
	.long	.Ldebug_loc208          # DW_AT_location
	.long	3488                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1663:0x9 DW_TAG_variable
	.long	.Ldebug_loc209          # DW_AT_location
	.long	3500                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x166c:0x9 DW_TAG_variable
	.long	.Ldebug_loc210          # DW_AT_location
	.long	3512                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1675:0x9 DW_TAG_variable
	.long	.Ldebug_loc211          # DW_AT_location
	.long	3524                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x167e:0x9 DW_TAG_variable
	.long	.Ldebug_loc212          # DW_AT_location
	.long	3536                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1687:0x9 DW_TAG_variable
	.long	.Ldebug_loc213          # DW_AT_location
	.long	3548                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1690:0x9 DW_TAG_variable
	.long	.Ldebug_loc214          # DW_AT_location
	.long	3560                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1699:0x9 DW_TAG_variable
	.long	.Ldebug_loc215          # DW_AT_location
	.long	3572                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x16a2:0x9 DW_TAG_variable
	.long	.Ldebug_loc216          # DW_AT_location
	.long	3584                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x16ab:0x9 DW_TAG_variable
	.long	.Ldebug_loc217          # DW_AT_location
	.long	3596                    # DW_AT_abstract_origin
	.byte	54                      # Abbrev [54] 0x16b4:0x5 DW_TAG_variable
	.long	3608                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	92                      # Abbrev [92] 0x16bc:0x26 DW_TAG_subprogram
	.long	.Linfo_string341        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	391                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x16c9:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	391                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x16d5:0xc DW_TAG_variable
	.long	.Linfo_string342        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	393                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	92                      # Abbrev [92] 0x16e2:0x5e DW_TAG_subprogram
	.long	.Linfo_string343        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	346                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x16ef:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	346                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	59                      # Abbrev [59] 0x16fb:0xc DW_TAG_variable
	.long	.Linfo_string344        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	348                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1707:0x1c DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0x1708:0xc DW_TAG_variable
	.long	.Linfo_string345        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	377                     # DW_AT_decl_line
	.long	169                     # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1714:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1715:0xc DW_TAG_variable
	.long	.Linfo_string190        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	377                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1723:0x1c DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0x1724:0xc DW_TAG_variable
	.long	.Linfo_string345        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	359                     # DW_AT_decl_line
	.long	169                     # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1730:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1731:0xc DW_TAG_variable
	.long	.Linfo_string190        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	359                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	68                      # Abbrev [68] 0x1740:0x16 DW_TAG_subprogram
	.long	.Linfo_string346        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x1749:0xc DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	101                     # Abbrev [101] 0x1756:0x184 DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string421        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	418                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3147        # DW_AT_type
	.byte	26                      # Abbrev [26] 0x1770:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc326          # DW_AT_location
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	418                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	99                      # Abbrev [99] 0x1780:0x10 DW_TAG_variable
	.long	.Ldebug_loc327          # DW_AT_location
	.long	.Linfo_string344        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	420                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x1790:0x10 DW_TAG_variable
	.long	.Ldebug_loc328          # DW_AT_location
	.long	.Linfo_string342        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	421                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	27                      # Abbrev [27] 0x17a0:0x10 DW_TAG_variable
	.long	.Ldebug_loc329          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	422                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x17b0:0x34 DW_TAG_inlined_subroutine
	.long	5952                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges72        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	442                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x17bc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc335          # DW_AT_location
	.long	5961                    # DW_AT_abstract_origin
	.byte	28                      # Abbrev [28] 0x17c5:0x1e DW_TAG_inlined_subroutine
	.long	1524                    # DW_AT_abstract_origin
	.quad	.Ltmp2993               # DW_AT_low_pc
	.long	.Ltmp2994-.Ltmp2993     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	312                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x17d9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc336          # DW_AT_location
	.long	1532                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x17e4:0x73 DW_TAG_inlined_subroutine
	.long	5858                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges73        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	440                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x17f0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc334          # DW_AT_location
	.long	5871                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x17f9:0x9 DW_TAG_variable
	.long	.Ldebug_loc339          # DW_AT_location
	.long	5883                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1802:0x2e DW_TAG_lexical_block
	.quad	.Ltmp2953               # DW_AT_low_pc
	.long	.Ltmp2968-.Ltmp2953     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x180f:0x9 DW_TAG_variable
	.long	.Ldebug_loc342          # DW_AT_location
	.long	5896                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1818:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2961               # DW_AT_low_pc
	.long	.Ltmp2963-.Ltmp2961     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x1825:0x9 DW_TAG_variable
	.long	.Ldebug_loc343          # DW_AT_location
	.long	5909                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1830:0x26 DW_TAG_lexical_block
	.long	.Ldebug_ranges74        # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x1835:0x9 DW_TAG_variable
	.long	.Ldebug_loc340          # DW_AT_location
	.long	5924                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x183e:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2933               # DW_AT_low_pc
	.long	.Ltmp2935-.Ltmp2933     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0x184b:0x9 DW_TAG_variable
	.long	.Ldebug_loc341          # DW_AT_location
	.long	5937                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x1857:0x1f DW_TAG_inlined_subroutine
	.long	5820                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges75        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	427                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1863:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc330          # DW_AT_location
	.long	5833                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x186c:0x9 DW_TAG_variable
	.long	.Ldebug_loc337          # DW_AT_location
	.long	5845                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1876:0x1e DW_TAG_inlined_subroutine
	.long	1928                    # DW_AT_abstract_origin
	.quad	.Ltmp2899               # DW_AT_low_pc
	.long	.Ltmp2902-.Ltmp2899     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	431                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x188a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc331          # DW_AT_location
	.long	1940                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1894:0x27 DW_TAG_inlined_subroutine
	.long	1544                    # DW_AT_abstract_origin
	.quad	.Ltmp2902               # DW_AT_low_pc
	.long	.Ltmp2907-.Ltmp2902     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	432                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x18a8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc332          # DW_AT_location
	.long	1552                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x18b1:0x9 DW_TAG_variable
	.long	.Ldebug_loc338          # DW_AT_location
	.long	1563                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x18bb:0x1e DW_TAG_inlined_subroutine
	.long	1928                    # DW_AT_abstract_origin
	.quad	.Ltmp2910               # DW_AT_low_pc
	.long	.Ltmp2913-.Ltmp2910     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.short	436                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x18cf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc333          # DW_AT_location
	.long	1940                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0x18da:0x47 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string422        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	273                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	26                      # Abbrev [26] 0x18f0:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc344          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	273                     # DW_AT_decl_line
	.long	881                     # DW_AT_type
	.byte	99                      # Abbrev [99] 0x1900:0x10 DW_TAG_variable
	.long	.Ldebug_loc345          # DW_AT_location
	.long	.Linfo_string95         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	275                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x1910:0x10 DW_TAG_variable
	.long	.Ldebug_loc346          # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	276                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	90                      # Abbrev [90] 0x1921:0x26 DW_TAG_subprogram
	.long	.Linfo_string347        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	918                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+53          # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	24                      # Abbrev [24] 0x192e:0xc DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	918                     # DW_AT_decl_line
	.long	876                     # DW_AT_type
	.byte	52                      # Abbrev [52] 0x193a:0xc DW_TAG_variable
	.long	.Linfo_string148        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	920                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	102                     # Abbrev [102] 0x1947:0x66 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string423        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1215                    # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	26                      # Abbrev [26] 0x195d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc347          # DW_AT_location
	.long	.Linfo_string109        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1215                    # DW_AT_decl_line
	.long	694                     # DW_AT_type
	.byte	26                      # Abbrev [26] 0x196d:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc348          # DW_AT_location
	.long	.Linfo_string142        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1215                    # DW_AT_decl_line
	.long	681                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x197d:0x10 DW_TAG_variable
	.long	.Ldebug_loc349          # DW_AT_location
	.long	.Linfo_string114        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.short	1217                    # DW_AT_decl_line
	.long	180                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x198d:0x1f DW_TAG_inlined_subroutine
	.long	6433                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges76        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.short	1227                    # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1999:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc351          # DW_AT_location
	.long	6446                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x19a2:0x9 DW_TAG_variable
	.long	.Ldebug_loc350          # DW_AT_location
	.long	6458                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end3:
.Lcu_begin4:
	.long	.Ldebug_info_end4-.Ldebug_info_start4 # Length of Unit
.Ldebug_info_start4:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x1ee0 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string87         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin18 # DW_AT_high_pc
	.byte	46                      # Abbrev [46] 0x2a:0x2a DW_TAG_subprogram
	.long	.Linfo_string384        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	117                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x32:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	117                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	47                      # Abbrev [47] 0x3d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string183        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	117                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x48:0xb DW_TAG_formal_parameter
	.long	.Linfo_string257        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	117                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x54:0x5 DW_TAG_pointer_type
	.long	89                      # DW_AT_type
	.byte	60                      # Abbrev [60] 0x59:0xc DW_TAG_typedef
	.long	101                     # DW_AT_type
	.long	.Linfo_string182        # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	300                     # DW_AT_decl_line
	.byte	61                      # Abbrev [61] 0x65:0x205 DW_TAG_structure_type
	.short	55768                   # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.byte	231                     # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x6a:0xc DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	618                     # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	233                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x76:0xc DW_TAG_member
	.long	.Linfo_string149        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	237                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x82:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	238                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x8e:0xc DW_TAG_member
	.long	.Linfo_string150        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	241                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x9a:0xc DW_TAG_member
	.long	.Linfo_string151        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	244                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xa6:0xc DW_TAG_member
	.long	.Linfo_string152        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xb2:0xc DW_TAG_member
	.long	.Linfo_string153        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xbe:0xc DW_TAG_member
	.long	.Linfo_string154        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	247                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xca:0xc DW_TAG_member
	.long	.Linfo_string155        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	250                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xd6:0xc DW_TAG_member
	.long	.Linfo_string156        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	251                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xe2:0xc DW_TAG_member
	.long	.Linfo_string157        # DW_AT_name
	.long	.debug_info+3108        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	252                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0xee:0xc DW_TAG_member
	.long	.Linfo_string158        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.byte	80                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0xfa:0xd DW_TAG_member
	.long	.Linfo_string48         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.byte	88                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x107:0xd DW_TAG_member
	.long	.Linfo_string159        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	259                     # DW_AT_decl_line
	.byte	92                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x114:0xd DW_TAG_member
	.long	.Linfo_string160        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	260                     # DW_AT_decl_line
	.byte	96                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x121:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	100                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x12e:0xd DW_TAG_member
	.long	.Linfo_string162        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	261                     # DW_AT_decl_line
	.byte	104                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x13b:0xd DW_TAG_member
	.long	.Linfo_string163        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	264                     # DW_AT_decl_line
	.byte	108                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x148:0xd DW_TAG_member
	.long	.Linfo_string164        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	265                     # DW_AT_decl_line
	.byte	112                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x155:0xd DW_TAG_member
	.long	.Linfo_string165        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.byte	116                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x162:0xd DW_TAG_member
	.long	.Linfo_string166        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	267                     # DW_AT_decl_line
	.byte	120                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x16f:0xd DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	270                     # DW_AT_decl_line
	.byte	124                     # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x17c:0xd DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	.debug_info+9043        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	271                     # DW_AT_decl_line
	.byte	128                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x189:0xe DW_TAG_member
	.long	.Linfo_string169        # DW_AT_name
	.long	.debug_info+9056        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.short	384                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x197:0xe DW_TAG_member
	.long	.Linfo_string170        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	275                     # DW_AT_decl_line
	.short	640                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1a5:0xe DW_TAG_member
	.long	.Linfo_string171        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	276                     # DW_AT_decl_line
	.short	644                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1b3:0xe DW_TAG_member
	.long	.Linfo_string172        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	279                     # DW_AT_decl_line
	.short	648                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1c1:0xe DW_TAG_member
	.long	.Linfo_string173        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	280                     # DW_AT_decl_line
	.short	652                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1cf:0xe DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.short	656                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1dd:0xe DW_TAG_member
	.long	.Linfo_string174        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.short	660                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1eb:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.short	664                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x1f9:0xe DW_TAG_member
	.long	.Linfo_string175        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.short	668                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x207:0xe DW_TAG_member
	.long	.Linfo_string176        # DW_AT_name
	.long	.debug_info+9069        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	289                     # DW_AT_decl_line
	.short	672                     # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x215:0xe DW_TAG_member
	.long	.Linfo_string177        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	290                     # DW_AT_decl_line
	.short	1704                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x223:0xe DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	291                     # DW_AT_decl_line
	.short	19706                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x231:0xe DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	.debug_info+9095        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	293                     # DW_AT_decl_line
	.short	37708                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x23f:0xe DW_TAG_member
	.long	.Linfo_string179        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	294                     # DW_AT_decl_line
	.short	39256                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x24d:0xe DW_TAG_member
	.long	.Linfo_string180        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	295                     # DW_AT_decl_line
	.short	45448                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x25b:0xe DW_TAG_member
	.long	.Linfo_string181        # DW_AT_name
	.long	.debug_info+9133        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	297                     # DW_AT_decl_line
	.short	51640                   # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x26a:0x5 DW_TAG_pointer_type
	.long	623                     # DW_AT_type
	.byte	45                      # Abbrev [45] 0x26f:0xb DW_TAG_typedef
	.long	634                     # DW_AT_type
	.long	.Linfo_string81         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.byte	67                      # Abbrev [67] 0x27a:0x95 DW_TAG_structure_type
	.byte	80                      # DW_AT_byte_size
	.byte	7                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.byte	62                      # Abbrev [62] 0x27e:0xc DW_TAG_member
	.long	.Linfo_string69         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x28a:0xc DW_TAG_member
	.long	.Linfo_string70         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x296:0xc DW_TAG_member
	.long	.Linfo_string71         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2a2:0xc DW_TAG_member
	.long	.Linfo_string72         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2ae:0xc DW_TAG_member
	.long	.Linfo_string73         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2ba:0xc DW_TAG_member
	.long	.Linfo_string74         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2c6:0xc DW_TAG_member
	.long	.Linfo_string75         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2d2:0xc DW_TAG_member
	.long	.Linfo_string76         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2de:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2ea:0xc DW_TAG_member
	.long	.Linfo_string78         # DW_AT_name
	.long	.debug_info+8112        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	217                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x2f6:0xc DW_TAG_member
	.long	.Linfo_string79         # DW_AT_name
	.long	.debug_info+8138        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x302:0xc DW_TAG_member
	.long	.Linfo_string80         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	219                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x30f:0x1f DW_TAG_subprogram
	.long	.Linfo_string385        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	138                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x317:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	138                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	47                      # Abbrev [47] 0x322:0xb DW_TAG_formal_parameter
	.long	.Linfo_string188        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	138                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x32e:0xb4 DW_TAG_subprogram
	.long	.Linfo_string386        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	164                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x336:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	164                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0x341:0xb DW_TAG_variable
	.long	.Linfo_string387        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.long	.debug_info+9056        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x34c:0xb DW_TAG_variable
	.long	.Linfo_string155        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	194                     # DW_AT_decl_line
	.long	.debug_info+7792        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x357:0xb DW_TAG_variable
	.long	.Linfo_string156        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	195                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x362:0xb DW_TAG_variable
	.long	.Linfo_string157        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	196                     # DW_AT_decl_line
	.long	.debug_info+3108        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x36d:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	167                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x378:0xb DW_TAG_variable
	.long	.Linfo_string291        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	170                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x383:0xb DW_TAG_variable
	.long	.Linfo_string388        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	168                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x38e:0xb DW_TAG_variable
	.long	.Linfo_string389        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	169                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x399:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	167                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x3a4:0x3d DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x3a5:0xb DW_TAG_variable
	.long	.Linfo_string390        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x3b0:0x30 DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x3b1:0xb DW_TAG_variable
	.long	.Linfo_string391        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	235                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x3bc:0xb DW_TAG_variable
	.long	.Linfo_string392        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	236                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x3c7:0xb DW_TAG_variable
	.long	.Linfo_string393        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	234                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x3d2:0xd DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x3d3:0xb DW_TAG_variable
	.long	.Linfo_string394        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	242                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x3e2:0x1f DW_TAG_subprogram
	.long	.Linfo_string395        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	150                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x3ea:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	150                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	48                      # Abbrev [48] 0x3f5:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	152                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	46                      # Abbrev [46] 0x401:0x14 DW_TAG_subprogram
	.long	.Linfo_string396        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	90                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x409:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	90                      # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	102                     # Abbrev [102] 0x415:0xa7c DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string424        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	646                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	26                      # Abbrev [26] 0x42b:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc352          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	646                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	50                      # Abbrev [50] 0x43b:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc353          # DW_AT_location
	.long	.Linfo_string453        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	646                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	35                      # Abbrev [35] 0x44b:0x3cf DW_TAG_inlined_subroutine
	.long	.debug_info+4528        # DW_AT_abstract_origin
	.long	.Ldebug_ranges77        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	660                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x457:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc354          # DW_AT_location
	.long	.debug_info+4537        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x460:0x9 DW_TAG_variable
	.long	.Ldebug_loc394          # DW_AT_location
	.long	.debug_info+4549        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x469:0x9 DW_TAG_variable
	.long	.Ldebug_loc395          # DW_AT_location
	.long	.debug_info+4561        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x472:0x9 DW_TAG_variable
	.long	.Ldebug_loc396          # DW_AT_location
	.long	.debug_info+4573        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x47b:0x9 DW_TAG_variable
	.long	.Ldebug_loc398          # DW_AT_location
	.long	.debug_info+4585        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x484:0x9 DW_TAG_variable
	.long	.Ldebug_loc402          # DW_AT_location
	.long	.debug_info+4597        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x48d:0x9 DW_TAG_variable
	.long	.Ldebug_loc405          # DW_AT_location
	.long	.debug_info+4609        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x496:0x9 DW_TAG_variable
	.long	.Ldebug_loc406          # DW_AT_location
	.long	.debug_info+4621        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x49f:0x9 DW_TAG_variable
	.long	.Ldebug_loc407          # DW_AT_location
	.long	.debug_info+4633        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4a8:0x9 DW_TAG_variable
	.long	.Ldebug_loc408          # DW_AT_location
	.long	.debug_info+4645        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4b1:0x9 DW_TAG_variable
	.long	.Ldebug_loc411          # DW_AT_location
	.long	.debug_info+4657        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x4ba:0x35f DW_TAG_inlined_subroutine
	.long	.debug_info+5369        # DW_AT_abstract_origin
	.long	.Ldebug_ranges78        # DW_AT_ranges
	.byte	3                       # DW_AT_call_file
	.short	1115                    # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x4c6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc399          # DW_AT_location
	.long	.debug_info+5378        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4cf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc409          # DW_AT_location
	.long	.debug_info+5390        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4d8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc412          # DW_AT_location
	.long	.debug_info+5402        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4e1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc397          # DW_AT_location
	.long	.debug_info+5414        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4ea:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc393          # DW_AT_location
	.long	.debug_info+5426        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4f3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc392          # DW_AT_location
	.long	.debug_info+5438        # DW_AT_abstract_origin
	.byte	39                      # Abbrev [39] 0x4fc:0x5 DW_TAG_formal_parameter
	.long	.debug_info+5450        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x501:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\002"
	.long	.debug_info+5462        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x50a:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\n"
	.long	.debug_info+5474        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x513:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\035"
	.long	.debug_info+5486        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x51c:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\300\025"
	.long	.debug_info+5498        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x525:0x9 DW_TAG_variable
	.long	.Ldebug_loc410          # DW_AT_location
	.long	.debug_info+5510        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x52e:0x9 DW_TAG_variable
	.long	.Ldebug_loc415          # DW_AT_location
	.long	.debug_info+5522        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x537:0x9 DW_TAG_variable
	.long	.Ldebug_loc416          # DW_AT_location
	.long	.debug_info+5534        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x540:0x9 DW_TAG_variable
	.long	.Ldebug_loc419          # DW_AT_location
	.long	.debug_info+5546        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x549:0x9 DW_TAG_variable
	.long	.Ldebug_loc420          # DW_AT_location
	.long	.debug_info+5558        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x552:0x9 DW_TAG_variable
	.long	.Ldebug_loc461          # DW_AT_location
	.long	.debug_info+5570        # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x55b:0x5 DW_TAG_variable
	.long	.debug_info+5582        # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x560:0x20 DW_TAG_lexical_block
	.quad	.Ltmp3179               # DW_AT_low_pc
	.long	.Ltmp3198-.Ltmp3179     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x56d:0x9 DW_TAG_variable
	.long	.Ldebug_loc417          # DW_AT_location
	.long	.debug_info+5607        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x576:0x9 DW_TAG_variable
	.long	.Ldebug_loc418          # DW_AT_location
	.long	.debug_info+5619        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x580:0x25f DW_TAG_lexical_block
	.long	.Ldebug_ranges84        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x585:0x9 DW_TAG_variable
	.long	.Ldebug_loc421          # DW_AT_location
	.long	.debug_info+5633        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x58e:0x9 DW_TAG_variable
	.long	.Ldebug_loc422          # DW_AT_location
	.long	.debug_info+5645        # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x597:0x247 DW_TAG_inlined_subroutine
	.long	.debug_info+5723        # DW_AT_abstract_origin
	.long	.Ldebug_ranges79        # DW_AT_ranges
	.byte	3                       # DW_AT_call_file
	.short	944                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x5a3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc400          # DW_AT_location
	.long	.debug_info+5732        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5ac:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc403          # DW_AT_location
	.long	.debug_info+5744        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5b5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc413          # DW_AT_location
	.long	.debug_info+5756        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5be:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc391          # DW_AT_location
	.long	.debug_info+5768        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5c7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc423          # DW_AT_location
	.long	.debug_info+5780        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5d0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc424          # DW_AT_location
	.long	.debug_info+5792        # DW_AT_abstract_origin
	.byte	41                      # Abbrev [41] 0x5d9:0x6 DW_TAG_formal_parameter
	.byte	2                       # DW_AT_const_value
	.long	.debug_info+5804        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5df:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc460          # DW_AT_location
	.long	.debug_info+5816        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x5e8:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\022"
	.long	.debug_info+5828        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x5f1:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\017"
	.long	.debug_info+5840        # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x5fa:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\f"
	.long	.debug_info+5852        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x603:0x9 DW_TAG_variable
	.long	.Ldebug_loc425          # DW_AT_location
	.long	.debug_info+5864        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x60c:0x9 DW_TAG_variable
	.long	.Ldebug_loc426          # DW_AT_location
	.long	.debug_info+5876        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x615:0x9 DW_TAG_variable
	.long	.Ldebug_loc428          # DW_AT_location
	.long	.debug_info+5888        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x61e:0x9 DW_TAG_variable
	.long	.Ldebug_loc429          # DW_AT_location
	.long	.debug_info+5900        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x627:0x9 DW_TAG_variable
	.long	.Ldebug_loc430          # DW_AT_location
	.long	.debug_info+5912        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x630:0x9 DW_TAG_variable
	.long	.Ldebug_loc431          # DW_AT_location
	.long	.debug_info+5924        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x639:0x9 DW_TAG_variable
	.long	.Ldebug_loc432          # DW_AT_location
	.long	.debug_info+5936        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x642:0x9 DW_TAG_variable
	.long	.Ldebug_loc433          # DW_AT_location
	.long	.debug_info+5948        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x64b:0x9 DW_TAG_variable
	.long	.Ldebug_loc434          # DW_AT_location
	.long	.debug_info+5960        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x654:0x9 DW_TAG_variable
	.long	.Ldebug_loc436          # DW_AT_location
	.long	.debug_info+5972        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x65d:0x9 DW_TAG_variable
	.long	.Ldebug_loc438          # DW_AT_location
	.long	.debug_info+5984        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x666:0x9 DW_TAG_variable
	.long	.Ldebug_loc440          # DW_AT_location
	.long	.debug_info+5996        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x66f:0x9 DW_TAG_variable
	.long	.Ldebug_loc442          # DW_AT_location
	.long	.debug_info+6008        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x678:0x9 DW_TAG_variable
	.long	.Ldebug_loc448          # DW_AT_location
	.long	.debug_info+6020        # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x681:0x2c DW_TAG_lexical_block
	.long	.Ldebug_ranges81        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x686:0x9 DW_TAG_variable
	.long	.Ldebug_loc427          # DW_AT_location
	.long	.debug_info+6033        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x68f:0x9 DW_TAG_variable
	.long	.Ldebug_loc439          # DW_AT_location
	.long	.debug_info+6045        # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x698:0x5 DW_TAG_variable
	.long	.debug_info+6057        # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x69d:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges80        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x6a2:0x9 DW_TAG_variable
	.long	.Ldebug_loc453          # DW_AT_location
	.long	.debug_info+6070        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x6ad:0x2c DW_TAG_lexical_block
	.long	.Ldebug_ranges83        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x6b2:0x9 DW_TAG_variable
	.long	.Ldebug_loc435          # DW_AT_location
	.long	.debug_info+6085        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x6bb:0x9 DW_TAG_variable
	.long	.Ldebug_loc450          # DW_AT_location
	.long	.debug_info+6097        # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x6c4:0x5 DW_TAG_variable
	.long	.debug_info+6109        # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x6c9:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges82        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x6ce:0x9 DW_TAG_variable
	.long	.Ldebug_loc454          # DW_AT_location
	.long	.debug_info+6122        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x6d9:0x8f DW_TAG_inlined_subroutine
	.long	.debug_info+6295        # DW_AT_abstract_origin
	.quad	.Ltmp3380               # DW_AT_low_pc
	.long	.Ltmp3439-.Ltmp3380     # DW_AT_high_pc
	.byte	3                       # DW_AT_call_file
	.short	698                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x6ed:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc401          # DW_AT_location
	.long	.debug_info+6304        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x6f6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc404          # DW_AT_location
	.long	.debug_info+6316        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x6ff:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc414          # DW_AT_location
	.long	.debug_info+6328        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x708:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc390          # DW_AT_location
	.long	.debug_info+6340        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x711:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc437          # DW_AT_location
	.long	.debug_info+6352        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x71a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc441          # DW_AT_location
	.long	.debug_info+6364        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x723:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc443          # DW_AT_location
	.long	.debug_info+6376        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x72c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc459          # DW_AT_location
	.long	.debug_info+6388        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x735:0x9 DW_TAG_variable
	.long	.Ldebug_loc444          # DW_AT_location
	.long	.debug_info+6400        # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x73e:0x5 DW_TAG_variable
	.long	.debug_info+6412        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x743:0x9 DW_TAG_variable
	.long	.Ldebug_loc455          # DW_AT_location
	.long	.debug_info+6424        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x74c:0x9 DW_TAG_variable
	.long	.Ldebug_loc456          # DW_AT_location
	.long	.debug_info+6436        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x755:0x9 DW_TAG_variable
	.long	.Ldebug_loc457          # DW_AT_location
	.long	.debug_info+6448        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x75e:0x9 DW_TAG_variable
	.long	.Ldebug_loc458          # DW_AT_location
	.long	.debug_info+6460        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x768:0x30 DW_TAG_inlined_subroutine
	.long	.debug_info+6233        # DW_AT_abstract_origin
	.quad	.Ltmp3250               # DW_AT_low_pc
	.long	.Ltmp3265-.Ltmp3250     # DW_AT_high_pc
	.byte	3                       # DW_AT_call_file
	.short	704                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x77c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc447          # DW_AT_location
	.long	.debug_info+6246        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x785:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc446          # DW_AT_location
	.long	.debug_info+6258        # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x78e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc445          # DW_AT_location
	.long	.debug_info+6270        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x798:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3281               # DW_AT_low_pc
	.long	.Ltmp3282-.Ltmp3281     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x7a5:0x9 DW_TAG_variable
	.long	.Ldebug_loc449          # DW_AT_location
	.long	.debug_info+6137        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x7af:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3308               # DW_AT_low_pc
	.long	.Ltmp3309-.Ltmp3308     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x7bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc452          # DW_AT_location
	.long	.debug_info+6151        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x7c6:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3289               # DW_AT_low_pc
	.long	.Ltmp3291-.Ltmp3289     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x7d3:0x9 DW_TAG_variable
	.long	.Ldebug_loc451          # DW_AT_location
	.long	.debug_info+6165        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x7df:0x39 DW_TAG_lexical_block
	.long	.Ldebug_ranges86        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x7e4:0x9 DW_TAG_variable
	.long	.Ldebug_loc462          # DW_AT_location
	.long	.debug_info+5659        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x7ed:0x9 DW_TAG_variable
	.long	.Ldebug_loc463          # DW_AT_location
	.long	.debug_info+5671        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x7f6:0x9 DW_TAG_variable
	.long	.Ldebug_loc464          # DW_AT_location
	.long	.debug_info+5683        # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x7ff:0x18 DW_TAG_lexical_block
	.long	.Ldebug_ranges85        # DW_AT_ranges
	.byte	38                      # Abbrev [38] 0x804:0x9 DW_TAG_variable
	.long	.Ldebug_loc465          # DW_AT_location
	.long	.debug_info+5696        # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x80d:0x9 DW_TAG_variable
	.long	.Ldebug_loc466          # DW_AT_location
	.long	.debug_info+5708        # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x81a:0x3b DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3573               # DW_AT_low_pc
	.long	.Ltmp3574-.Ltmp3573     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	668                     # DW_AT_call_line
	.byte	103                     # Abbrev [103] 0x82e:0x6 DW_TAG_formal_parameter
	.byte	66                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x834:0x20 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3573               # DW_AT_low_pc
	.long	.Ltmp3574-.Ltmp3573     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x847:0x6 DW_TAG_formal_parameter
	.byte	8                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x84d:0x6 DW_TAG_formal_parameter
	.byte	66                      # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x855:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3574               # DW_AT_low_pc
	.long	.Ltmp3579-.Ltmp3574     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	669                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x869:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc355          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x872:0x6 DW_TAG_formal_parameter
	.byte	90                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x878:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3574               # DW_AT_low_pc
	.long	.Ltmp3579-.Ltmp3574     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x88b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc356          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x894:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc468          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x89d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc467          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x8a8:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3579               # DW_AT_low_pc
	.long	.Ltmp3583-.Ltmp3579     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	670                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x8bc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc357          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x8c5:0x6 DW_TAG_formal_parameter
	.byte	104                     # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x8cb:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3579               # DW_AT_low_pc
	.long	.Ltmp3583-.Ltmp3579     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x8de:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc358          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x8e7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc470          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x8f0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc469          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x8fb:0x56 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3584               # DW_AT_low_pc
	.long	.Ltmp3591-.Ltmp3584     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	671                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x90f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc359          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x918:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc471          # DW_AT_location
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x921:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3585               # DW_AT_low_pc
	.long	.Ltmp3591-.Ltmp3585     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x934:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc360          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x93d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc472          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x946:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc473          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x951:0x4d DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3594               # DW_AT_low_pc
	.long	.Ltmp3600-.Ltmp3594     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	676                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x965:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc361          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x96e:0x6 DW_TAG_formal_parameter
	.byte	49                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x974:0x29 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3594               # DW_AT_low_pc
	.long	.Ltmp3600-.Ltmp3594     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x987:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc362          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x990:0x6 DW_TAG_formal_parameter
	.byte	8                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x996:0x6 DW_TAG_formal_parameter
	.byte	49                      # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x99e:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3600               # DW_AT_low_pc
	.long	.Ltmp3605-.Ltmp3600     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	676                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x9b2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc363          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x9bb:0x6 DW_TAG_formal_parameter
	.byte	65                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0x9c1:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3600               # DW_AT_low_pc
	.long	.Ltmp3605-.Ltmp3600     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x9d4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc364          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x9dd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc475          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x9e6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc474          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x9f1:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3605               # DW_AT_low_pc
	.long	.Ltmp3610-.Ltmp3605     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	677                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xa05:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc365          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xa0e:0x6 DW_TAG_formal_parameter
	.byte	89                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xa14:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3605               # DW_AT_low_pc
	.long	.Ltmp3610-.Ltmp3605     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xa27:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc366          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xa30:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc477          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xa39:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc476          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xa44:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3610               # DW_AT_low_pc
	.long	.Ltmp3615-.Ltmp3610     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	677                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xa58:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc367          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xa61:0x6 DW_TAG_formal_parameter
	.byte	38                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xa67:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3610               # DW_AT_low_pc
	.long	.Ltmp3615-.Ltmp3610     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xa7a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc368          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xa83:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc479          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xa8c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc478          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xa97:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3615               # DW_AT_low_pc
	.long	.Ltmp3620-.Ltmp3615     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	678                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xaab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc369          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xab4:0x6 DW_TAG_formal_parameter
	.byte	83                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xaba:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3615               # DW_AT_low_pc
	.long	.Ltmp3620-.Ltmp3615     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xacd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc370          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xad6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc481          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xadf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc480          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xaea:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3620               # DW_AT_low_pc
	.long	.Ltmp3625-.Ltmp3620     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	678                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xafe:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc371          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xb07:0x6 DW_TAG_formal_parameter
	.byte	89                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xb0d:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3620               # DW_AT_low_pc
	.long	.Ltmp3625-.Ltmp3620     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xb20:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc372          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb29:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc483          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb32:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc482          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb3d:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3626               # DW_AT_low_pc
	.long	.Ltmp3632-.Ltmp3626     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	692                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xb51:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc373          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb5a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc485          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb63:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc484          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb6d:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3633               # DW_AT_low_pc
	.long	.Ltmp3639-.Ltmp3633     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	694                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xb81:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc374          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb8a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc486          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xb93:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc487          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xb9d:0xe8 DW_TAG_inlined_subroutine
	.long	814                     # DW_AT_abstract_origin
	.quad	.Ltmp3639               # DW_AT_low_pc
	.long	.Ltmp3742-.Ltmp3639     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	695                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xbb1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc375          # DW_AT_location
	.long	822                     # DW_AT_abstract_origin
	.byte	53                      # Abbrev [53] 0xbba:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\002"
	.long	833                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbc3:0x9 DW_TAG_variable
	.long	.Ldebug_loc488          # DW_AT_location
	.long	844                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbcc:0x9 DW_TAG_variable
	.long	.Ldebug_loc489          # DW_AT_location
	.long	855                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbd5:0x9 DW_TAG_variable
	.long	.Ldebug_loc490          # DW_AT_location
	.long	866                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbde:0x9 DW_TAG_variable
	.long	.Ldebug_loc492          # DW_AT_location
	.long	877                     # DW_AT_abstract_origin
	.byte	54                      # Abbrev [54] 0xbe7:0x5 DW_TAG_variable
	.long	888                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbec:0x9 DW_TAG_variable
	.long	.Ldebug_loc493          # DW_AT_location
	.long	899                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbf5:0x9 DW_TAG_variable
	.long	.Ldebug_loc494          # DW_AT_location
	.long	910                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbfe:0x9 DW_TAG_variable
	.long	.Ldebug_loc496          # DW_AT_location
	.long	921                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xc07:0x26 DW_TAG_inlined_subroutine
	.long	994                     # DW_AT_abstract_origin
	.quad	.Ltmp3642               # DW_AT_low_pc
	.long	.Ltmp3652-.Ltmp3642     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	198                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xc1a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc376          # DW_AT_location
	.long	1002                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xc23:0x9 DW_TAG_variable
	.long	.Ldebug_loc491          # DW_AT_location
	.long	1013                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0xc2d:0x57 DW_TAG_lexical_block
	.quad	.Ltmp3675               # DW_AT_low_pc
	.long	.Ltmp3718-.Ltmp3675     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0xc3a:0x9 DW_TAG_variable
	.long	.Ldebug_loc497          # DW_AT_location
	.long	933                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xc43:0x40 DW_TAG_lexical_block
	.quad	.Ltmp3703               # DW_AT_low_pc
	.long	.Ltmp3718-.Ltmp3703     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0xc50:0x9 DW_TAG_variable
	.long	.Ldebug_loc495          # DW_AT_location
	.long	945                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xc59:0x9 DW_TAG_variable
	.long	.Ldebug_loc498          # DW_AT_location
	.long	956                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xc62:0x9 DW_TAG_variable
	.long	.Ldebug_loc499          # DW_AT_location
	.long	967                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xc6b:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3707               # DW_AT_low_pc
	.long	.Ltmp3710-.Ltmp3707     # DW_AT_high_pc
	.byte	30                      # Abbrev [30] 0xc78:0x9 DW_TAG_variable
	.long	.Ldebug_loc500          # DW_AT_location
	.long	979                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xc85:0x4d DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3745               # DW_AT_low_pc
	.long	.Ltmp3751-.Ltmp3745     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	703                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xc99:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc377          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xca2:0x6 DW_TAG_formal_parameter
	.byte	23                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xca8:0x29 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3745               # DW_AT_low_pc
	.long	.Ltmp3751-.Ltmp3745     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xcbb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc378          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xcc4:0x6 DW_TAG_formal_parameter
	.byte	8                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xcca:0x6 DW_TAG_formal_parameter
	.byte	23                      # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xcd2:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3751               # DW_AT_low_pc
	.long	.Ltmp3756-.Ltmp3751     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	703                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xce6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc379          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xcef:0x6 DW_TAG_formal_parameter
	.byte	114                     # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xcf5:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3751               # DW_AT_low_pc
	.long	.Ltmp3756-.Ltmp3751     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xd08:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc380          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xd11:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc502          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xd1a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc501          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xd25:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3756               # DW_AT_low_pc
	.long	.Ltmp3761-.Ltmp3756     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	704                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xd39:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc381          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xd42:0x6 DW_TAG_formal_parameter
	.byte	69                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xd48:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3756               # DW_AT_low_pc
	.long	.Ltmp3761-.Ltmp3756     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xd5b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc382          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xd64:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc504          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xd6d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc503          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xd78:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3761               # DW_AT_low_pc
	.long	.Ltmp3766-.Ltmp3761     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	704                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xd8c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc383          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xd95:0x6 DW_TAG_formal_parameter
	.byte	56                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xd9b:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3761               # DW_AT_low_pc
	.long	.Ltmp3766-.Ltmp3761     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xdae:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc384          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xdb7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc506          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xdc0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc505          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xdcb:0x53 DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3766               # DW_AT_low_pc
	.long	.Ltmp3771-.Ltmp3766     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	705                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xddf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc385          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xde8:0x6 DW_TAG_formal_parameter
	.byte	80                      # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xdee:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3766               # DW_AT_low_pc
	.long	.Ltmp3771-.Ltmp3766     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xe01:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc386          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xe0a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc508          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xe13:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc507          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0xe1e:0x5c DW_TAG_inlined_subroutine
	.long	783                     # DW_AT_abstract_origin
	.quad	.Ltmp3771               # DW_AT_low_pc
	.long	.Ltmp3776-.Ltmp3771     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	705                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xe32:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc387          # DW_AT_location
	.long	791                     # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0xe3b:0xf DW_TAG_formal_parameter
	.ascii	"\220\377\377\377\377\377\377\377\377\001" # DW_AT_const_value
	.long	802                     # DW_AT_abstract_origin
	.byte	104                     # Abbrev [104] 0xe4a:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3771               # DW_AT_low_pc
	.long	.Ltmp3776-.Ltmp3771     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	140                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xe5d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc388          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xe66:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc510          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xe6f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc509          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0xe7a:0x16 DW_TAG_inlined_subroutine
	.long	1025                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges87        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	709                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xe86:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc389          # DW_AT_location
	.long	1033                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	96                      # Abbrev [96] 0xe91:0xe9 DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string425        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	127                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	105                     # Abbrev [105] 0xea6:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	127                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	94                      # Abbrev [94] 0xeb3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc511          # DW_AT_location
	.long	.Linfo_string454        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	127                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	104                     # Abbrev [104] 0xec2:0x2a DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3800               # DW_AT_low_pc
	.long	.Ltmp3807-.Ltmp3800     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	129                     # DW_AT_call_line
	.byte	95                      # Abbrev [95] 0xed5:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	50                      # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xedc:0x6 DW_TAG_formal_parameter
	.byte	8                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xee2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc515          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	104                     # Abbrev [104] 0xeec:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3808               # DW_AT_low_pc
	.long	.Ltmp3814-.Ltmp3808     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	130                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xeff:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc512          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf08:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc516          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf11:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc517          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	104                     # Abbrev [104] 0xf1b:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3815               # DW_AT_low_pc
	.long	.Ltmp3821-.Ltmp3815     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	131                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xf2e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc513          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf37:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc518          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf40:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc519          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	104                     # Abbrev [104] 0xf4a:0x2f DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp3822               # DW_AT_low_pc
	.long	.Ltmp3828-.Ltmp3822     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.byte	132                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0xf5d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc514          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf66:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc520          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0xf6f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc521          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0xf7a:0xf5d DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
	.long	.Linfo_string426        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	26                      # Abbrev [26] 0xf90:0x10 DW_TAG_formal_parameter
	.long	.Ldebug_loc522          # DW_AT_location
	.long	.Linfo_string148        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	283                     # DW_AT_decl_line
	.long	84                      # DW_AT_type
	.byte	106                     # Abbrev [106] 0xfa0:0xf DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	44
	.long	.Linfo_string455        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	300                     # DW_AT_decl_line
	.long	7895                    # DW_AT_type
	.byte	51                      # Abbrev [51] 0xfaf:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\260\002"
	.long	.Linfo_string456        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	301                     # DW_AT_decl_line
	.long	.debug_info+10608       # DW_AT_type
	.byte	99                      # Abbrev [99] 0xfbf:0x10 DW_TAG_variable
	.long	.Ldebug_loc580          # DW_AT_location
	.long	.Linfo_string157        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	303                     # DW_AT_decl_line
	.long	.debug_info+3108        # DW_AT_type
	.byte	99                      # Abbrev [99] 0xfcf:0x10 DW_TAG_variable
	.long	.Ldebug_loc581          # DW_AT_location
	.long	.Linfo_string287        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0xfdf:0x10 DW_TAG_variable
	.long	.Ldebug_loc582          # DW_AT_location
	.long	.Linfo_string288        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0xfef:0x10 DW_TAG_variable
	.long	.Ldebug_loc587          # DW_AT_location
	.long	.Linfo_string257        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0xfff:0x10 DW_TAG_variable
	.long	.Ldebug_loc591          # DW_AT_location
	.long	.Linfo_string289        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	287                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x100f:0x10 DW_TAG_variable
	.long	.Ldebug_loc592          # DW_AT_location
	.long	.Linfo_string459        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x101f:0x10 DW_TAG_variable
	.long	.Ldebug_loc595          # DW_AT_location
	.long	.Linfo_string462        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x102f:0x10 DW_TAG_variable
	.long	.Ldebug_loc596          # DW_AT_location
	.long	.Linfo_string463        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x103f:0x10 DW_TAG_variable
	.long	.Ldebug_loc597          # DW_AT_location
	.long	.Linfo_string290        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x104f:0x10 DW_TAG_variable
	.long	.Ldebug_loc598          # DW_AT_location
	.long	.Linfo_string464        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x105f:0x10 DW_TAG_variable
	.long	.Ldebug_loc599          # DW_AT_location
	.long	.Linfo_string95         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x106f:0x10 DW_TAG_variable
	.long	.Ldebug_loc603          # DW_AT_location
	.long	.Linfo_string469        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x107f:0x10 DW_TAG_variable
	.long	.Ldebug_loc604          # DW_AT_location
	.long	.Linfo_string470        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x108f:0x10 DW_TAG_variable
	.long	.Ldebug_loc621          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	285                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x109f:0x10 DW_TAG_variable
	.long	.Ldebug_loc624          # DW_AT_location
	.long	.Linfo_string307        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x10af:0x10 DW_TAG_variable
	.long	.Ldebug_loc625          # DW_AT_location
	.long	.Linfo_string308        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x10bf:0x10 DW_TAG_variable
	.long	.Ldebug_loc631          # DW_AT_location
	.long	.Linfo_string472        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	287                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x10cf:0x10 DW_TAG_variable
	.long	.Ldebug_loc646          # DW_AT_location
	.long	.Linfo_string473        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	33                      # Abbrev [33] 0x10df:0x4e DW_TAG_lexical_block
	.quad	.Ltmp3864               # DW_AT_low_pc
	.long	.Ltmp3920-.Ltmp3864     # DW_AT_high_pc
	.byte	99                      # Abbrev [99] 0x10ec:0x10 DW_TAG_variable
	.long	.Ldebug_loc588          # DW_AT_location
	.long	.Linfo_string457        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	325                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x10fc:0x10 DW_TAG_variable
	.long	.Ldebug_loc590          # DW_AT_location
	.long	.Linfo_string458        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	325                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x110c:0x10 DW_TAG_variable
	.long	.Ldebug_loc593          # DW_AT_location
	.long	.Linfo_string460        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	325                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x111c:0x10 DW_TAG_variable
	.long	.Ldebug_loc594          # DW_AT_location
	.long	.Linfo_string461        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	325                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x112d:0x4a DW_TAG_lexical_block
	.quad	.Ltmp3975               # DW_AT_low_pc
	.long	.Ltmp4127-.Ltmp3975     # DW_AT_high_pc
	.byte	99                      # Abbrev [99] 0x113a:0x10 DW_TAG_variable
	.long	.Ldebug_loc600          # DW_AT_location
	.long	.Linfo_string465        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	404                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x114a:0x10 DW_TAG_variable
	.long	.Ldebug_loc601          # DW_AT_location
	.long	.Linfo_string466        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	404                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x115a:0x10 DW_TAG_variable
	.long	.Ldebug_loc602          # DW_AT_location
	.long	.Linfo_string467        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	404                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x116a:0xc DW_TAG_variable
	.long	.Linfo_string468        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	405                     # DW_AT_decl_line
	.long	.debug_info+3113        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x1177:0x1a DW_TAG_lexical_block
	.quad	.Ltmp4131               # DW_AT_low_pc
	.long	.Ltmp4149-.Ltmp4131     # DW_AT_high_pc
	.byte	59                      # Abbrev [59] 0x1184:0xc DW_TAG_variable
	.long	.Linfo_string468        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	434                     # DW_AT_decl_line
	.long	.debug_info+3113        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x1191:0x108 DW_TAG_inlined_subroutine
	.long	.debug_info+24601       # DW_AT_abstract_origin
	.long	.Ldebug_ranges88        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	494                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x119d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc583          # DW_AT_location
	.long	.debug_info+24631       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x11a6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc607          # DW_AT_location
	.long	.debug_info+24642       # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x11af:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320\002"
	.long	.debug_info+24653       # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x11b8:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\n"
	.long	.debug_info+24664       # DW_AT_abstract_origin
	.byte	37                      # Abbrev [37] 0x11c1:0x9 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\360\032"
	.long	.debug_info+24675       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x11ca:0x9 DW_TAG_variable
	.long	.Ldebug_loc584          # DW_AT_location
	.long	.debug_info+24686       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x11d3:0x9 DW_TAG_variable
	.long	.Ldebug_loc585          # DW_AT_location
	.long	.debug_info+24697       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x11dc:0x9 DW_TAG_variable
	.long	.Ldebug_loc606          # DW_AT_location
	.long	.debug_info+24708       # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x11e5:0x5 DW_TAG_variable
	.long	.debug_info+24719       # DW_AT_abstract_origin
	.byte	100                     # Abbrev [100] 0x11ea:0x5 DW_TAG_variable
	.long	.debug_info+24730       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x11ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc617          # DW_AT_location
	.long	.debug_info+24741       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x11f8:0x9 DW_TAG_variable
	.long	.Ldebug_loc618          # DW_AT_location
	.long	.debug_info+24752       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1201:0x9 DW_TAG_variable
	.long	.Ldebug_loc619          # DW_AT_location
	.long	.debug_info+24763       # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x120a:0x20 DW_TAG_lexical_block
	.quad	.Ltmp4222               # DW_AT_low_pc
	.long	.Ltmp4227-.Ltmp4222     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x1217:0x9 DW_TAG_variable
	.long	.Ldebug_loc608          # DW_AT_location
	.long	.debug_info+24775       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1220:0x9 DW_TAG_variable
	.long	.Ldebug_loc609          # DW_AT_location
	.long	.debug_info+24786       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x122a:0x29 DW_TAG_lexical_block
	.quad	.Ltmp4236               # DW_AT_low_pc
	.long	.Ltmp4253-.Ltmp4236     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x1237:0x9 DW_TAG_variable
	.long	.Ldebug_loc610          # DW_AT_location
	.long	.debug_info+24799       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1240:0x9 DW_TAG_variable
	.long	.Ldebug_loc611          # DW_AT_location
	.long	.debug_info+24810       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1249:0x9 DW_TAG_variable
	.long	.Ldebug_loc612          # DW_AT_location
	.long	.debug_info+24821       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x1253:0x29 DW_TAG_lexical_block
	.quad	.Ltmp4254               # DW_AT_low_pc
	.long	.Ltmp4272-.Ltmp4254     # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x1260:0x9 DW_TAG_variable
	.long	.Ldebug_loc613          # DW_AT_location
	.long	.debug_info+24834       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1269:0x9 DW_TAG_variable
	.long	.Ldebug_loc614          # DW_AT_location
	.long	.debug_info+24845       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1272:0x9 DW_TAG_variable
	.long	.Ldebug_loc615          # DW_AT_location
	.long	.debug_info+24856       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	33                      # Abbrev [33] 0x127c:0x1c DW_TAG_lexical_block
	.quad	.Ltmp4275               # DW_AT_low_pc
	.long	.Ltmp4280-.Ltmp4275     # DW_AT_high_pc
	.byte	100                     # Abbrev [100] 0x1289:0x5 DW_TAG_variable
	.long	.debug_info+24869       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x128e:0x9 DW_TAG_variable
	.long	.Ldebug_loc616          # DW_AT_location
	.long	.debug_info+24880       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x1299:0x46 DW_TAG_lexical_block
	.long	.Ldebug_ranges89        # DW_AT_ranges
	.byte	51                      # Abbrev [51] 0x129e:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\n"
	.long	.Linfo_string8          # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	507                     # DW_AT_decl_line
	.long	.debug_info+24390       # DW_AT_type
	.byte	99                      # Abbrev [99] 0x12ae:0x10 DW_TAG_variable
	.long	.Ldebug_loc620          # DW_AT_location
	.long	.Linfo_string103        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	507                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x12be:0x10 DW_TAG_variable
	.long	.Ldebug_loc622          # DW_AT_location
	.long	.Linfo_string390        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	507                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	99                      # Abbrev [99] 0x12ce:0x10 DW_TAG_variable
	.long	.Ldebug_loc623          # DW_AT_location
	.long	.Linfo_string471        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	507                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x12df:0x4b DW_TAG_inlined_subroutine
	.long	.debug_info+24926       # DW_AT_abstract_origin
	.quad	.Ltmp4386               # DW_AT_low_pc
	.long	.Ltmp4411-.Ltmp4386     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	534                     # DW_AT_call_line
	.byte	36                      # Abbrev [36] 0x12f3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc628          # DW_AT_location
	.long	.debug_info+24956       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x12fc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc627          # DW_AT_location
	.long	.debug_info+24967       # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x1305:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc586          # DW_AT_location
	.long	.debug_info+24978       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x130e:0x9 DW_TAG_variable
	.long	.Ldebug_loc626          # DW_AT_location
	.long	.debug_info+24989       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1317:0x9 DW_TAG_variable
	.long	.Ldebug_loc629          # DW_AT_location
	.long	.debug_info+25000       # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1320:0x9 DW_TAG_variable
	.long	.Ldebug_loc630          # DW_AT_location
	.long	.debug_info+25011       # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x132a:0xb8 DW_TAG_lexical_block
	.long	.Ldebug_ranges90        # DW_AT_ranges
	.byte	51                      # Abbrev [51] 0x132f:0x10 DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\340\n"
	.long	.Linfo_string223        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	540                     # DW_AT_decl_line
	.long	.debug_info+10571       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x133f:0x2d DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4437               # DW_AT_low_pc
	.long	.Ltmp4441-.Ltmp4437     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	549                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1353:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc523          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x135c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc633          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x1365:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x136c:0x24 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4442               # DW_AT_low_pc
	.long	.Ltmp4445-.Ltmp4442     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	549                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1380:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc632          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x1389:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1390:0x2d DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4457               # DW_AT_low_pc
	.long	.Ltmp4461-.Ltmp4457     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	554                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x13a4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc524          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x13ad:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc634          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x13b6:0x6 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x13bd:0x24 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4462               # DW_AT_low_pc
	.long	.Ltmp4465-.Ltmp4462     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	554                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x13d1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc635          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x13da:0x6 DW_TAG_formal_parameter
	.byte	0                       # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x13e2:0x1c DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.long	.Ldebug_ranges91        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	563                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x13ee:0x6 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x13f4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc589          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x13fe:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4478               # DW_AT_low_pc
	.long	.Ltmp4483-.Ltmp4478     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	564                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1412:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc525          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x141b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc636          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1424:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc605          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x142e:0x28 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.long	.Ldebug_ranges92        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	567                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x143a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc526          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1443:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc638          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x144c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc637          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1456:0x27 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4493               # DW_AT_low_pc
	.long	.Ltmp4498-.Ltmp4493     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	566                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x146a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc639          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1473:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc640          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x147d:0xaf DW_TAG_lexical_block
	.long	.Ldebug_ranges94        # DW_AT_ranges
	.byte	99                      # Abbrev [99] 0x1482:0x10 DW_TAG_variable
	.long	.Ldebug_loc641          # DW_AT_location
	.long	.Linfo_string297        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	576                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1492:0x21 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.long	.Ldebug_ranges93        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	577                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x149e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc527          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x14a7:0x6 DW_TAG_formal_parameter
	.byte	5                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x14ad:0x5 DW_TAG_formal_parameter
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x14b3:0x21 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4526               # DW_AT_low_pc
	.long	.Ltmp4530-.Ltmp4526     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	579                     # DW_AT_call_line
	.byte	32                      # Abbrev [32] 0x14c7:0x6 DW_TAG_formal_parameter
	.byte	2                       # DW_AT_const_value
	.long	61                      # DW_AT_abstract_origin
	.byte	103                     # Abbrev [103] 0x14cd:0x6 DW_TAG_formal_parameter
	.byte	2                       # DW_AT_const_value
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x14d4:0x27 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4533               # DW_AT_low_pc
	.long	.Ltmp4538-.Ltmp4533     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	580                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x14e8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc643          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x14f1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc642          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x14fb:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4540               # DW_AT_low_pc
	.long	.Ltmp4547-.Ltmp4540     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	581                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x150f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc528          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1518:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc645          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1521:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc644          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x152c:0x982 DW_TAG_lexical_block
	.long	.Ldebug_ranges96        # DW_AT_ranges
	.byte	59                      # Abbrev [59] 0x1531:0xc DW_TAG_variable
	.long	.Linfo_string474        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	600                     # DW_AT_decl_line
	.long	.debug_info+3113        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x153d:0xc DW_TAG_variable
	.long	.Linfo_string475        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	601                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x1549:0xc DW_TAG_variable
	.long	.Linfo_string476        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.short	603                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	28                      # Abbrev [28] 0x1555:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4572               # DW_AT_low_pc
	.long	.Ltmp4578-.Ltmp4572     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	612                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1569:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc530          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1572:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc648          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x157b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc647          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1585:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4580               # DW_AT_low_pc
	.long	.Ltmp4585-.Ltmp4580     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	612                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1599:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc531          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x15a2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc650          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x15ab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc649          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x15b5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4586               # DW_AT_low_pc
	.long	.Ltmp4591-.Ltmp4586     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	612                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x15c9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc532          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x15d2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc652          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x15db:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc651          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x15e5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4593               # DW_AT_low_pc
	.long	.Ltmp4598-.Ltmp4593     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	612                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x15f9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc533          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1602:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc654          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x160b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc653          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1615:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4600               # DW_AT_low_pc
	.long	.Ltmp4605-.Ltmp4600     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	612                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1629:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc534          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1632:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc656          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x163b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc655          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1645:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4607               # DW_AT_low_pc
	.long	.Ltmp4612-.Ltmp4607     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	613                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1659:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc535          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1662:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc658          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x166b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc657          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1675:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4614               # DW_AT_low_pc
	.long	.Ltmp4619-.Ltmp4614     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	613                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1689:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc536          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1692:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc660          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x169b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc659          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x16a5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4621               # DW_AT_low_pc
	.long	.Ltmp4626-.Ltmp4621     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	613                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x16b9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc537          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x16c2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc662          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x16cb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc661          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x16d5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4628               # DW_AT_low_pc
	.long	.Ltmp4633-.Ltmp4628     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	613                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x16e9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc538          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x16f2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc664          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x16fb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc663          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1705:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4635               # DW_AT_low_pc
	.long	.Ltmp4640-.Ltmp4635     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	613                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1719:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc539          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1722:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc666          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x172b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc665          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1735:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4642               # DW_AT_low_pc
	.long	.Ltmp4647-.Ltmp4642     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	614                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1749:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc540          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1752:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc668          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x175b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc667          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1765:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4649               # DW_AT_low_pc
	.long	.Ltmp4654-.Ltmp4649     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	614                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1779:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc541          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1782:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc670          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x178b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc669          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1795:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4656               # DW_AT_low_pc
	.long	.Ltmp4661-.Ltmp4656     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	614                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x17a9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc542          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x17b2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc672          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x17bb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc671          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x17c5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4663               # DW_AT_low_pc
	.long	.Ltmp4668-.Ltmp4663     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	614                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x17d9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc543          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x17e2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc674          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x17eb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc673          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x17f5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4670               # DW_AT_low_pc
	.long	.Ltmp4675-.Ltmp4670     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	614                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1809:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc544          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1812:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc676          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x181b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc675          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1825:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4677               # DW_AT_low_pc
	.long	.Ltmp4682-.Ltmp4677     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	615                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1839:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc545          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1842:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc678          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x184b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc677          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1855:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4684               # DW_AT_low_pc
	.long	.Ltmp4689-.Ltmp4684     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	615                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1869:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc546          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1872:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc680          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x187b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc679          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1885:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4691               # DW_AT_low_pc
	.long	.Ltmp4696-.Ltmp4691     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	615                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1899:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc547          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x18a2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc682          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x18ab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc681          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x18b5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4698               # DW_AT_low_pc
	.long	.Ltmp4703-.Ltmp4698     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	615                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x18c9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc548          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x18d2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc684          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x18db:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc683          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x18e5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4705               # DW_AT_low_pc
	.long	.Ltmp4710-.Ltmp4705     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	615                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x18f9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc549          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1902:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc686          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x190b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc685          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1915:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4712               # DW_AT_low_pc
	.long	.Ltmp4717-.Ltmp4712     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	616                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1929:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc550          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1932:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc688          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x193b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc687          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1945:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4719               # DW_AT_low_pc
	.long	.Ltmp4724-.Ltmp4719     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	616                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1959:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc551          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1962:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc690          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x196b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc689          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1975:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4726               # DW_AT_low_pc
	.long	.Ltmp4731-.Ltmp4726     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	616                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1989:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc552          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1992:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc692          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x199b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc691          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x19a5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4733               # DW_AT_low_pc
	.long	.Ltmp4738-.Ltmp4733     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	616                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x19b9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc553          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x19c2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc694          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x19cb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc693          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x19d5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4740               # DW_AT_low_pc
	.long	.Ltmp4745-.Ltmp4740     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	616                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x19e9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc554          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x19f2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc696          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x19fb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc695          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1a05:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4747               # DW_AT_low_pc
	.long	.Ltmp4752-.Ltmp4747     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	617                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1a19:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc555          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a22:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc698          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a2b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc697          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1a35:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4754               # DW_AT_low_pc
	.long	.Ltmp4759-.Ltmp4754     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	617                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1a49:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc556          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a52:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc700          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a5b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc699          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1a65:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4761               # DW_AT_low_pc
	.long	.Ltmp4766-.Ltmp4761     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	617                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1a79:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc557          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a82:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc702          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1a8b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc701          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1a95:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4768               # DW_AT_low_pc
	.long	.Ltmp4773-.Ltmp4768     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	617                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1aa9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc558          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ab2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc704          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1abb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc703          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1ac5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4775               # DW_AT_low_pc
	.long	.Ltmp4780-.Ltmp4775     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	617                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1ad9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc559          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ae2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc706          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1aeb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc705          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1af5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4782               # DW_AT_low_pc
	.long	.Ltmp4787-.Ltmp4782     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	618                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1b09:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc560          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b12:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc708          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b1b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc707          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1b25:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4789               # DW_AT_low_pc
	.long	.Ltmp4794-.Ltmp4789     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	618                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1b39:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc561          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b42:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc710          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b4b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc709          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1b55:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4796               # DW_AT_low_pc
	.long	.Ltmp4801-.Ltmp4796     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	618                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1b69:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc562          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b72:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc712          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1b7b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc711          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1b85:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4803               # DW_AT_low_pc
	.long	.Ltmp4808-.Ltmp4803     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	618                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1b99:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc563          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ba2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc714          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1bab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc713          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1bb5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4810               # DW_AT_low_pc
	.long	.Ltmp4815-.Ltmp4810     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	618                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1bc9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc564          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1bd2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc716          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1bdb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc715          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1be5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4817               # DW_AT_low_pc
	.long	.Ltmp4822-.Ltmp4817     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	619                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1bf9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc565          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c02:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc718          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c0b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc717          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1c15:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4824               # DW_AT_low_pc
	.long	.Ltmp4829-.Ltmp4824     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	619                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1c29:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc566          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c32:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc720          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c3b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc719          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1c45:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4831               # DW_AT_low_pc
	.long	.Ltmp4836-.Ltmp4831     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	619                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1c59:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc567          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c62:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc722          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c6b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc721          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1c75:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4838               # DW_AT_low_pc
	.long	.Ltmp4843-.Ltmp4838     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	619                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1c89:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc568          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c92:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc724          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1c9b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc723          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1ca5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4845               # DW_AT_low_pc
	.long	.Ltmp4850-.Ltmp4845     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	619                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1cb9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc569          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1cc2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc726          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ccb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc725          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1cd5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4852               # DW_AT_low_pc
	.long	.Ltmp4857-.Ltmp4852     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	620                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1ce9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc570          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1cf2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc728          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1cfb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc727          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1d05:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4859               # DW_AT_low_pc
	.long	.Ltmp4864-.Ltmp4859     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	620                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1d19:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc571          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d22:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc730          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d2b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc729          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1d35:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4866               # DW_AT_low_pc
	.long	.Ltmp4871-.Ltmp4866     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	620                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1d49:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc572          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d52:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc732          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d5b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc731          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1d65:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4873               # DW_AT_low_pc
	.long	.Ltmp4878-.Ltmp4873     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	620                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1d79:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc573          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d82:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc734          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1d8b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc733          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1d95:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4880               # DW_AT_low_pc
	.long	.Ltmp4885-.Ltmp4880     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	620                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1da9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc574          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1db2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc736          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1dbb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc735          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1dc5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4887               # DW_AT_low_pc
	.long	.Ltmp4892-.Ltmp4887     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	621                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1dd9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc575          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1de2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc738          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1deb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc737          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1df5:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4894               # DW_AT_low_pc
	.long	.Ltmp4899-.Ltmp4894     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	621                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1e09:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc576          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e12:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc740          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e1b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc739          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1e25:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4901               # DW_AT_low_pc
	.long	.Ltmp4906-.Ltmp4901     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	621                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1e39:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc577          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e42:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc742          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e4b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc741          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	28                      # Abbrev [28] 0x1e55:0x30 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.quad	.Ltmp4908               # DW_AT_low_pc
	.long	.Ltmp4913-.Ltmp4908     # DW_AT_high_pc
	.byte	14                      # DW_AT_call_file
	.short	621                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1e69:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc578          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e72:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc744          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e7b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc743          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x1e85:0x28 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.long	.Ldebug_ranges95        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	621                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1e91:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc579          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1e9a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc746          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ea3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc745          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	29                      # Abbrev [29] 0x1eae:0x28 DW_TAG_inlined_subroutine
	.long	42                      # DW_AT_abstract_origin
	.long	.Ldebug_ranges97        # DW_AT_ranges
	.byte	14                      # DW_AT_call_file
	.short	628                     # DW_AT_call_line
	.byte	13                      # Abbrev [13] 0x1eba:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc529          # DW_AT_location
	.long	50                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ec3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc748          # DW_AT_location
	.long	61                      # DW_AT_abstract_origin
	.byte	13                      # Abbrev [13] 0x1ecc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc747          # DW_AT_location
	.long	72                      # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x1ed7:0xc DW_TAG_array_type
	.long	.debug_info+3113        # DW_AT_type
	.byte	6                       # Abbrev [6] 0x1edc:0x6 DW_TAG_subrange_type
	.long	7907                    # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x1ee3:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Ldebug_info_end4:
.Lcu_begin5:
	.long	.Ldebug_info_end5-.Ldebug_info_start5 # Length of Unit
.Ldebug_info_start5:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	107                     # Abbrev [107] 0xb:0x3d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string88         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.byte	4                       # Abbrev [4] 0x1e:0x15 DW_TAG_variable
	.long	.Linfo_string89         # DW_AT_name
	.long	51                      # DW_AT_type
                                        # DW_AT_external
	.byte	9                       # DW_AT_decl_file
	.byte	71                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	BZ2_crc32Table
	.byte	78                      # Abbrev [78] 0x33:0xd DW_TAG_array_type
	.long	.debug_info+7797        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x38:0x7 DW_TAG_subrange_type
	.long	64                      # DW_AT_type
	.short	256                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x40:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Ldebug_info_end5:
.Lcu_begin6:
	.long	.Ldebug_info_end6-.Ldebug_info_start6 # Length of Unit
.Ldebug_info_start6:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	107                     # Abbrev [107] 0xb:0x8c1 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string90         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.byte	89                      # Abbrev [89] 0x1e:0x44f DW_TAG_subprogram
	.long	.Linfo_string284        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.debug_info+3090        # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x2a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
	.long	1133                    # DW_AT_type
	.byte	16                      # Abbrev [16] 0x35:0xb DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	151                     # DW_AT_decl_line
	.long	2036                    # DW_AT_type
	.byte	48                      # Abbrev [48] 0x40:0xb DW_TAG_variable
	.long	.Linfo_string285        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	149                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x4b:0xb DW_TAG_variable
	.long	.Linfo_string286        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x56:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	154                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x61:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	155                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x6c:0xb DW_TAG_variable
	.long	.Linfo_string287        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	156                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x77:0xb DW_TAG_variable
	.long	.Linfo_string288        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	157                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x82:0xb DW_TAG_variable
	.long	.Linfo_string289        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	158                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x8d:0xb DW_TAG_variable
	.long	.Linfo_string290        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	159                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x98:0xb DW_TAG_variable
	.long	.Linfo_string291        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xa3:0xb DW_TAG_variable
	.long	.Linfo_string292        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	161                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xae:0xb DW_TAG_variable
	.long	.Linfo_string293        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xb9:0xb DW_TAG_variable
	.long	.Linfo_string294        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	163                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xc4:0xb DW_TAG_variable
	.long	.Linfo_string164        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	164                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xcf:0xb DW_TAG_variable
	.long	.Linfo_string163        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	165                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xda:0xb DW_TAG_variable
	.long	.Linfo_string295        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xe5:0xb DW_TAG_variable
	.long	.Linfo_string296        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	167                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xf0:0xb DW_TAG_variable
	.long	.Linfo_string297        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	168                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0xfb:0xb DW_TAG_variable
	.long	.Linfo_string298        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	169                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x106:0xb DW_TAG_variable
	.long	.Linfo_string299        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	170                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x111:0xb DW_TAG_variable
	.long	.Linfo_string300        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	171                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x11c:0xb DW_TAG_variable
	.long	.Linfo_string301        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	172                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x127:0xb DW_TAG_variable
	.long	.Linfo_string302        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	173                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x132:0xb DW_TAG_variable
	.long	.Linfo_string303        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	174                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x13d:0xb DW_TAG_variable
	.long	.Linfo_string304        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	175                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	48                      # Abbrev [48] 0x148:0xb DW_TAG_variable
	.long	.Linfo_string305        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	176                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	48                      # Abbrev [48] 0x153:0xb DW_TAG_variable
	.long	.Linfo_string306        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	177                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	48                      # Abbrev [48] 0x15e:0xb DW_TAG_variable
	.long	.Linfo_string307        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	150                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x169:0xb DW_TAG_variable
	.long	.Linfo_string308        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	150                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x174:0xd DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x175:0xb DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	237                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x181:0xd DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x182:0xb DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	240                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x18e:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x18f:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	610                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x19c:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x19d:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	616                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1aa:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1ab:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	268                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1b8:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1b9:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	329                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1c6:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1c7:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	608                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1d4:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1d5:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	612                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1e2:0xd DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x1e3:0xb DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1ef:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1f0:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	606                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1fd:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x1fe:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	622                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x20b:0xd DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x20c:0xb DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	243                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x218:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x219:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	266                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x226:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x227:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	270                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x234:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x235:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	272                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x242:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x243:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	284                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x250:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x251:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	286                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x25e:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x25f:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	294                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x26c:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x26d:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	296                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x27a:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x27b:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	427                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x288:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x289:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	427                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x296:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x297:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	516                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x2a4:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x2a5:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	516                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x2b2:0x64 DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x2b3:0xc DW_TAG_variable
	.long	.Linfo_string309        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	459                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2bf:0xc DW_TAG_variable
	.long	.Linfo_string310        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2cb:0xc DW_TAG_variable
	.long	.Linfo_string311        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2d7:0xc DW_TAG_variable
	.long	.Linfo_string312        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2e3:0xc DW_TAG_variable
	.long	.Linfo_string313        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2ef:0xc DW_TAG_variable
	.long	.Linfo_string314        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x2fb:0xc DW_TAG_variable
	.long	.Linfo_string315        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x307:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x308:0xc DW_TAG_variable
	.long	.Linfo_string316        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	467                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x316:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x317:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	604                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x324:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x325:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	274                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x332:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x333:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	288                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x340:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x341:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	291                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x34e:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x34f:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	298                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x35c:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x35d:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	364                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x36a:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x36b:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	362                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x378:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x379:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	358                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x386:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x387:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	413                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x394:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x395:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	413                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3a2:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x3a3:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	618                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3b0:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x3b1:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	620                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3be:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x3bf:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	334                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3cc:0x26 DW_TAG_lexical_block
	.byte	52                      # Abbrev [52] 0x3cd:0xc DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	344                     # DW_AT_decl_line
	.long	2201                    # DW_AT_type
	.byte	59                      # Abbrev [59] 0x3d9:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	344                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x3e5:0xc DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	344                     # DW_AT_decl_line
	.long	.debug_info+3136        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x3f2:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x3f3:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	262                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x400:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x401:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	282                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x40e:0x26 DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x40f:0xc DW_TAG_variable
	.long	.Linfo_string314        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x41b:0xc DW_TAG_variable
	.long	.Linfo_string313        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	59                      # Abbrev [59] 0x427:0xc DW_TAG_variable
	.long	.Linfo_string315        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x434:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x435:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	308                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x442:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x443:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	319                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x450:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x451:0xc DW_TAG_variable
	.long	.Linfo_string257        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	327                     # DW_AT_decl_line
	.long	.debug_info+7797        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x45e:0xe DW_TAG_lexical_block
	.byte	59                      # Abbrev [59] 0x45f:0xc DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.short	560                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x46d:0x5 DW_TAG_pointer_type
	.long	1138                    # DW_AT_type
	.byte	60                      # Abbrev [60] 0x472:0xc DW_TAG_typedef
	.long	1150                    # DW_AT_type
	.long	.Linfo_string254        # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	472                     # DW_AT_decl_line
	.byte	81                      # Abbrev [81] 0x47e:0x376 DW_TAG_structure_type
	.short	64144                   # DW_AT_byte_size
	.byte	2                       # DW_AT_decl_file
	.short	382                     # DW_AT_decl_line
	.byte	63                      # Abbrev [63] 0x484:0xd DW_TAG_member
	.long	.Linfo_string68         # DW_AT_name
	.long	2036                    # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	384                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x491:0xd DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	387                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x49e:0xd DW_TAG_member
	.long	.Linfo_string205        # DW_AT_name
	.long	.debug_info+3136        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	390                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4ab:0xd DW_TAG_member
	.long	.Linfo_string206        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	391                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4b8:0xd DW_TAG_member
	.long	.Linfo_string207        # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	392                     # DW_AT_decl_line
	.byte	20                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4c5:0xd DW_TAG_member
	.long	.Linfo_string161        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	393                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4d2:0xd DW_TAG_member
	.long	.Linfo_string162        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	393                     # DW_AT_decl_line
	.byte	28                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4df:0xd DW_TAG_member
	.long	.Linfo_string170        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4ec:0xd DW_TAG_member
	.long	.Linfo_string171        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	397                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x4f9:0xd DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x506:0xd DW_TAG_member
	.long	.Linfo_string208        # DW_AT_name
	.long	.debug_info+3147        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	401                     # DW_AT_decl_line
	.byte	44                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x513:0xd DW_TAG_member
	.long	.Linfo_string209        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	402                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x520:0xd DW_TAG_member
	.long	.Linfo_string26         # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	403                     # DW_AT_decl_line
	.byte	52                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x52d:0xd DW_TAG_member
	.long	.Linfo_string154        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	406                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x53a:0xd DW_TAG_member
	.long	.Linfo_string210        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	407                     # DW_AT_decl_line
	.byte	60                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x547:0xd DW_TAG_member
	.long	.Linfo_string211        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	408                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	64                      # Abbrev [64] 0x554:0xd DW_TAG_member
	.long	.Linfo_string212        # DW_AT_name
	.long	.debug_info+10545       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	409                     # DW_AT_decl_line
	.byte	68                      # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x561:0xe DW_TAG_member
	.long	.Linfo_string213        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	410                     # DW_AT_decl_line
	.short	1092                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x56f:0xe DW_TAG_member
	.long	.Linfo_string214        # DW_AT_name
	.long	.debug_info+10558       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	411                     # DW_AT_decl_line
	.short	1096                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x57d:0xe DW_TAG_member
	.long	.Linfo_string215        # DW_AT_name
	.long	.debug_info+10558       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	412                     # DW_AT_decl_line
	.short	2124                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x58b:0xe DW_TAG_member
	.long	.Linfo_string216        # DW_AT_name
	.long	.debug_info+7792        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	415                     # DW_AT_decl_line
	.short	3152                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x599:0xe DW_TAG_member
	.long	.Linfo_string217        # DW_AT_name
	.long	.debug_info+3108        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	418                     # DW_AT_decl_line
	.short	3160                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5a7:0xe DW_TAG_member
	.long	.Linfo_string218        # DW_AT_name
	.long	.debug_info+3131        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	419                     # DW_AT_decl_line
	.short	3168                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5b5:0xe DW_TAG_member
	.long	.Linfo_string219        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	422                     # DW_AT_decl_line
	.short	3176                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5c3:0xe DW_TAG_member
	.long	.Linfo_string220        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	423                     # DW_AT_decl_line
	.short	3180                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5d1:0xe DW_TAG_member
	.long	.Linfo_string221        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	424                     # DW_AT_decl_line
	.short	3184                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5df:0xe DW_TAG_member
	.long	.Linfo_string222        # DW_AT_name
	.long	.debug_info+7797        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	425                     # DW_AT_decl_line
	.short	3188                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5ed:0xe DW_TAG_member
	.long	.Linfo_string167        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	428                     # DW_AT_decl_line
	.short	3192                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x5fb:0xe DW_TAG_member
	.long	.Linfo_string168        # DW_AT_name
	.long	.debug_info+9043        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	429                     # DW_AT_decl_line
	.short	3196                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x609:0xe DW_TAG_member
	.long	.Linfo_string223        # DW_AT_name
	.long	.debug_info+10571       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	430                     # DW_AT_decl_line
	.short	3452                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x617:0xe DW_TAG_member
	.long	.Linfo_string224        # DW_AT_name
	.long	.debug_info+9056        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	431                     # DW_AT_decl_line
	.short	3468                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x625:0xe DW_TAG_member
	.long	.Linfo_string225        # DW_AT_name
	.long	.debug_info+10583       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	434                     # DW_AT_decl_line
	.short	3724                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x633:0xe DW_TAG_member
	.long	.Linfo_string226        # DW_AT_name
	.long	.debug_info+10596       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	435                     # DW_AT_decl_line
	.short	7820                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x641:0xe DW_TAG_member
	.long	.Linfo_string177        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	436                     # DW_AT_decl_line
	.short	7884                    # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x64f:0xe DW_TAG_member
	.long	.Linfo_string178        # DW_AT_name
	.long	.debug_info+9082        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	437                     # DW_AT_decl_line
	.short	25886                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x65d:0xe DW_TAG_member
	.long	.Linfo_string7          # DW_AT_name
	.long	.debug_info+9095        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	438                     # DW_AT_decl_line
	.short	43888                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x66b:0xe DW_TAG_member
	.long	.Linfo_string6          # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	440                     # DW_AT_decl_line
	.short	45436                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x679:0xe DW_TAG_member
	.long	.Linfo_string227        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	441                     # DW_AT_decl_line
	.short	51628                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x687:0xe DW_TAG_member
	.long	.Linfo_string228        # DW_AT_name
	.long	.debug_info+9114        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	442                     # DW_AT_decl_line
	.short	57820                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x695:0xe DW_TAG_member
	.long	.Linfo_string229        # DW_AT_name
	.long	.debug_info+10608       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	443                     # DW_AT_decl_line
	.short	64012                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6a3:0xe DW_TAG_member
	.long	.Linfo_string230        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	446                     # DW_AT_decl_line
	.short	64036                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6b1:0xe DW_TAG_member
	.long	.Linfo_string231        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	447                     # DW_AT_decl_line
	.short	64040                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6bf:0xe DW_TAG_member
	.long	.Linfo_string232        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	448                     # DW_AT_decl_line
	.short	64044                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6cd:0xe DW_TAG_member
	.long	.Linfo_string233        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	449                     # DW_AT_decl_line
	.short	64048                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6db:0xe DW_TAG_member
	.long	.Linfo_string234        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	450                     # DW_AT_decl_line
	.short	64052                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6e9:0xe DW_TAG_member
	.long	.Linfo_string235        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	451                     # DW_AT_decl_line
	.short	64056                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x6f7:0xe DW_TAG_member
	.long	.Linfo_string236        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	452                     # DW_AT_decl_line
	.short	64060                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x705:0xe DW_TAG_member
	.long	.Linfo_string237        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	453                     # DW_AT_decl_line
	.short	64064                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x713:0xe DW_TAG_member
	.long	.Linfo_string238        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	454                     # DW_AT_decl_line
	.short	64068                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x721:0xe DW_TAG_member
	.long	.Linfo_string239        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	455                     # DW_AT_decl_line
	.short	64072                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x72f:0xe DW_TAG_member
	.long	.Linfo_string240        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	456                     # DW_AT_decl_line
	.short	64076                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x73d:0xe DW_TAG_member
	.long	.Linfo_string241        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	457                     # DW_AT_decl_line
	.short	64080                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x74b:0xe DW_TAG_member
	.long	.Linfo_string242        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	458                     # DW_AT_decl_line
	.short	64084                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x759:0xe DW_TAG_member
	.long	.Linfo_string243        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	459                     # DW_AT_decl_line
	.short	64088                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x767:0xe DW_TAG_member
	.long	.Linfo_string244        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	460                     # DW_AT_decl_line
	.short	64092                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x775:0xe DW_TAG_member
	.long	.Linfo_string245        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	461                     # DW_AT_decl_line
	.short	64096                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x783:0xe DW_TAG_member
	.long	.Linfo_string246        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	462                     # DW_AT_decl_line
	.short	64100                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x791:0xe DW_TAG_member
	.long	.Linfo_string247        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	463                     # DW_AT_decl_line
	.short	64104                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x79f:0xe DW_TAG_member
	.long	.Linfo_string248        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	464                     # DW_AT_decl_line
	.short	64108                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7ad:0xe DW_TAG_member
	.long	.Linfo_string249        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	465                     # DW_AT_decl_line
	.short	64112                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7bb:0xe DW_TAG_member
	.long	.Linfo_string250        # DW_AT_name
	.long	.debug_info+3090        # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	466                     # DW_AT_decl_line
	.short	64116                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7c9:0xe DW_TAG_member
	.long	.Linfo_string251        # DW_AT_name
	.long	.debug_info+10620       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	467                     # DW_AT_decl_line
	.short	64120                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7d7:0xe DW_TAG_member
	.long	.Linfo_string252        # DW_AT_name
	.long	.debug_info+10620       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	468                     # DW_AT_decl_line
	.short	64128                   # DW_AT_data_member_location
	.byte	65                      # Abbrev [65] 0x7e5:0xe DW_TAG_member
	.long	.Linfo_string253        # DW_AT_name
	.long	.debug_info+10620       # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	469                     # DW_AT_decl_line
	.short	64136                   # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0x7f4:0x5 DW_TAG_pointer_type
	.long	2041                    # DW_AT_type
	.byte	45                      # Abbrev [45] 0x7f9:0xb DW_TAG_typedef
	.long	2052                    # DW_AT_type
	.long	.Linfo_string81         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	221                     # DW_AT_decl_line
	.byte	67                      # Abbrev [67] 0x804:0x95 DW_TAG_structure_type
	.byte	80                      # DW_AT_byte_size
	.byte	7                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
	.byte	62                      # Abbrev [62] 0x808:0xc DW_TAG_member
	.long	.Linfo_string69         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x814:0xc DW_TAG_member
	.long	.Linfo_string70         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x820:0xc DW_TAG_member
	.long	.Linfo_string71         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.byte	12                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x82c:0xc DW_TAG_member
	.long	.Linfo_string72         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.byte	16                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x838:0xc DW_TAG_member
	.long	.Linfo_string73         # DW_AT_name
	.long	.debug_info+200         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
	.byte	24                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x844:0xc DW_TAG_member
	.long	.Linfo_string74         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.byte	32                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x850:0xc DW_TAG_member
	.long	.Linfo_string75         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.byte	36                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x85c:0xc DW_TAG_member
	.long	.Linfo_string76         # DW_AT_name
	.long	.debug_info+3158        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.byte	40                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x868:0xc DW_TAG_member
	.long	.Linfo_string77         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.byte	48                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x874:0xc DW_TAG_member
	.long	.Linfo_string78         # DW_AT_name
	.long	.debug_info+8112        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	217                     # DW_AT_decl_line
	.byte	56                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x880:0xc DW_TAG_member
	.long	.Linfo_string79         # DW_AT_name
	.long	.debug_info+8138        # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.byte	64                      # DW_AT_data_member_location
	.byte	62                      # Abbrev [62] 0x88c:0xc DW_TAG_member
	.long	.Linfo_string80         # DW_AT_name
	.long	.debug_info+194         # DW_AT_type
	.byte	7                       # DW_AT_decl_file
	.byte	219                     # DW_AT_decl_line
	.byte	72                      # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x899:0xc DW_TAG_array_type
	.long	.debug_info+3136        # DW_AT_type
	.byte	6                       # Abbrev [6] 0x89e:0x6 DW_TAG_subrange_type
	.long	2213                    # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x8a5:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	46                      # Abbrev [46] 0x8ac:0x1f DW_TAG_subprogram
	.long	.Linfo_string340        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	1                       # DW_AT_inline
	.byte	19                      # Abbrev [19] 0x8b4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string148        # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.long	1133                    # DW_AT_type
	.byte	48                      # Abbrev [48] 0x8bf:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end6:
.Lcu_begin7:
	.long	.Ldebug_info_end7-.Ldebug_info_start7 # Length of Unit
.Ldebug_info_start7:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	107                     # Abbrev [107] 0xb:0x23c DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string91         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.byte	108                     # Abbrev [108] 0x1e:0x82 DW_TAG_subprogram
	.long	.Linfo_string337        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0x26:0xb DW_TAG_formal_parameter
	.long	.Linfo_string6          # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	210                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	47                      # Abbrev [47] 0x31:0xb DW_TAG_formal_parameter
	.long	.Linfo_string227        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	47                      # Abbrev [47] 0x3c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string228        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	47                      # Abbrev [47] 0x47:0xb DW_TAG_formal_parameter
	.long	.Linfo_string338        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x52:0xb DW_TAG_formal_parameter
	.long	.Linfo_string307        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x5d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string308        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x68:0xb DW_TAG_formal_parameter
	.long	.Linfo_string288        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	216                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x73:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x7e:0xb DW_TAG_variable
	.long	.Linfo_string310        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x89:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x94:0xb DW_TAG_variable
	.long	.Linfo_string339        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	218                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	108                     # Abbrev [108] 0xa0:0x124 DW_TAG_subprogram
	.long	.Linfo_string397        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	103                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0xa8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string7          # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	103                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	47                      # Abbrev [47] 0xb3:0xb DW_TAG_formal_parameter
	.long	.Linfo_string398        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	47                      # Abbrev [47] 0xbe:0xb DW_TAG_formal_parameter
	.long	.Linfo_string288        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	105                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0xc9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string308        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	16                      # Abbrev [16] 0xd4:0xb DW_TAG_variable
	.long	.Linfo_string399        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	115                     # DW_AT_decl_line
	.long	452                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0xdf:0xb DW_TAG_variable
	.long	.Linfo_string400        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	116                     # DW_AT_decl_line
	.long	472                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0xea:0xb DW_TAG_variable
	.long	.Linfo_string401        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	117                     # DW_AT_decl_line
	.long	472                     # DW_AT_type
	.byte	48                      # Abbrev [48] 0xf5:0xb DW_TAG_variable
	.long	.Linfo_string402        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x100:0xb DW_TAG_variable
	.long	.Linfo_string403        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x10b:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x116:0xb DW_TAG_variable
	.long	.Linfo_string404        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x121:0xb DW_TAG_variable
	.long	.Linfo_string193        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x12c:0xb DW_TAG_variable
	.long	.Linfo_string405        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	113                     # DW_AT_decl_line
	.long	.debug_info+3147        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x137:0xb DW_TAG_variable
	.long	.Linfo_string96         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x142:0xb DW_TAG_variable
	.long	.Linfo_string361        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	17                      # Abbrev [17] 0x14d:0x18 DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x14e:0xb DW_TAG_variable
	.long	.Linfo_string406        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	135                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x159:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	135                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x165:0x23 DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x166:0xb DW_TAG_variable
	.long	.Linfo_string387        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x171:0xb DW_TAG_variable
	.long	.Linfo_string406        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x17c:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x188:0x23 DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x189:0xb DW_TAG_variable
	.long	.Linfo_string387        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	142                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x194:0xb DW_TAG_variable
	.long	.Linfo_string406        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	142                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x19f:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	142                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	17                      # Abbrev [17] 0x1ab:0x18 DW_TAG_lexical_block
	.byte	48                      # Abbrev [48] 0x1ac:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	149                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x1b7:0xb DW_TAG_variable
	.long	.Linfo_string406        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	149                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	78                      # Abbrev [78] 0x1c4:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x1c9:0x7 DW_TAG_subrange_type
	.long	465                     # DW_AT_type
	.short	260                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x1d1:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	78                      # Abbrev [78] 0x1d8:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x1dd:0x7 DW_TAG_subrange_type
	.long	465                     # DW_AT_type
	.short	516                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	108                     # Abbrev [108] 0x1e5:0x61 DW_TAG_subprogram
	.long	.Linfo_string407        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	192                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	47                      # Abbrev [47] 0x1ed:0xb DW_TAG_formal_parameter
	.long	.Linfo_string179        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	192                     # DW_AT_decl_line
	.long	.debug_info+10620       # DW_AT_type
	.byte	47                      # Abbrev [47] 0x1f8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string338        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	193                     # DW_AT_decl_line
	.long	.debug_info+3131        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x203:0xb DW_TAG_formal_parameter
	.long	.Linfo_string307        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	194                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x20e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string308        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	195                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	47                      # Abbrev [47] 0x219:0xb DW_TAG_formal_parameter
	.long	.Linfo_string288        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	196                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x224:0xb DW_TAG_variable
	.long	.Linfo_string183        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x22f:0xb DW_TAG_variable
	.long	.Linfo_string339        # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	48                      # Abbrev [48] 0x23a:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
	.long	.debug_info+3090        # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end7:
.Lcu_begin8:
	.long	.Ldebug_info_end8-.Ldebug_info_start8 # Length of Unit
.Ldebug_info_start8:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	107                     # Abbrev [107] 0xb:0x3d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string92         # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.byte	4                       # Abbrev [4] 0x1e:0x15 DW_TAG_variable
	.long	.Linfo_string93         # DW_AT_name
	.long	51                      # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	BZ2_rNums
	.byte	78                      # Abbrev [78] 0x33:0xd DW_TAG_array_type
	.long	.debug_info+3090        # DW_AT_type
	.byte	73                      # Abbrev [73] 0x38:0x7 DW_TAG_subrange_type
	.long	64                      # DW_AT_type
	.short	512                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x40:0x7 DW_TAG_base_type
	.long	.Linfo_string12         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.Ldebug_info_end8:
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp26-.Lfunc_begin0
	.quad	.Ltmp84-.Lfunc_begin0
	.quad	.Ltmp537-.Lfunc_begin0
	.quad	.Ltmp538-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp84-.Lfunc_begin0
	.quad	.Ltmp537-.Lfunc_begin0
	.quad	.Ltmp538-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp113-.Lfunc_begin0
	.quad	.Ltmp114-.Lfunc_begin0
	.quad	.Ltmp456-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	.Ltmp537-.Lfunc_begin0
	.quad	.Ltmp538-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp287-.Lfunc_begin0
	.quad	.Ltmp454-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.quad	.Ltmp485-.Lfunc_begin0
	.quad	.Ltmp486-.Lfunc_begin0
	.quad	.Ltmp526-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp454-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.quad	.Ltmp485-.Lfunc_begin0
	.quad	.Ltmp486-.Lfunc_begin0
	.quad	.Ltmp526-.Lfunc_begin0
	.quad	.Ltmp533-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp142-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp306-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp306-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.quad	.Ltmp436-.Lfunc_begin0
	.quad	.Ltmp444-.Lfunc_begin0
	.quad	.Ltmp445-.Lfunc_begin0
	.quad	.Ltmp446-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp296-.Lfunc_begin0
	.quad	.Ltmp301-.Lfunc_begin0
	.quad	.Ltmp302-.Lfunc_begin0
	.quad	.Ltmp303-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp312-.Lfunc_begin0
	.quad	.Ltmp314-.Lfunc_begin0
	.quad	.Ltmp316-.Lfunc_begin0
	.quad	.Ltmp365-.Lfunc_begin0
	.quad	.Ltmp367-.Lfunc_begin0
	.quad	.Ltmp370-.Lfunc_begin0
	.quad	.Ltmp374-.Lfunc_begin0
	.quad	.Ltmp378-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp476-.Lfunc_begin0
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp333-.Lfunc_begin0
	.quad	.Ltmp341-.Lfunc_begin0
	.quad	.Ltmp480-.Lfunc_begin0
	.quad	.Ltmp481-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp379-.Lfunc_begin0
	.quad	.Ltmp387-.Lfunc_begin0
	.quad	.Ltmp528-.Lfunc_begin0
	.quad	.Ltmp529-.Lfunc_begin0
	.quad	.Ltmp530-.Lfunc_begin0
	.quad	.Ltmp532-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp412-.Lfunc_begin0
	.quad	.Ltmp415-.Lfunc_begin0
	.quad	.Ltmp417-.Lfunc_begin0
	.quad	.Ltmp418-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp415-.Lfunc_begin0
	.quad	.Ltmp417-.Lfunc_begin0
	.quad	.Ltmp418-.Lfunc_begin0
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp478-.Lfunc_begin0
	.quad	.Ltmp479-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.quad	.Ltmp515-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.quad	.Ltmp475-.Lfunc_begin0
	.quad	.Ltmp478-.Lfunc_begin0
	.quad	.Ltmp479-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.quad	.Ltmp515-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp145-.Lfunc_begin0
	.quad	.Ltmp177-.Lfunc_begin0
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp152-.Lfunc_begin0
	.quad	.Ltmp157-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp174-.Lfunc_begin0
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp177-.Lfunc_begin0
	.quad	.Ltmp181-.Lfunc_begin0
	.quad	.Ltmp183-.Lfunc_begin0
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp181-.Lfunc_begin0
	.quad	.Ltmp183-.Lfunc_begin0
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	.Ltmp186-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp213-.Lfunc_begin0
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp216-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges20:
	.quad	.Ltmp225-.Lfunc_begin0
	.quad	.Ltmp283-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp488-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges21:
	.quad	.Ltmp247-.Lfunc_begin0
	.quad	.Ltmp254-.Lfunc_begin0
	.quad	.Ltmp255-.Lfunc_begin0
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges22:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Ltmp277-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.quad	.Ltmp280-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges23:
	.quad	.Ltmp488-.Lfunc_begin0
	.quad	.Ltmp491-.Lfunc_begin0
	.quad	.Ltmp492-.Lfunc_begin0
	.quad	.Ltmp510-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges24:
	.quad	.Ltmp623-.Lfunc_begin2
	.quad	.Ltmp787-.Lfunc_begin2
	.quad	.Ltmp875-.Lfunc_begin2
	.quad	.Ltmp876-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges25:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp628-.Lfunc_begin2
	.quad	.Ltmp753-.Lfunc_begin2
	.quad	.Ltmp761-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges26:
	.quad	.Ltmp625-.Lfunc_begin2
	.quad	.Ltmp628-.Lfunc_begin2
	.quad	.Ltmp751-.Lfunc_begin2
	.quad	.Ltmp763-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges27:
	.quad	.Ltmp631-.Lfunc_begin2
	.quad	.Ltmp632-.Lfunc_begin2
	.quad	.Ltmp771-.Lfunc_begin2
	.quad	.Ltmp774-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges28:
	.quad	.Ltmp630-.Lfunc_begin2
	.quad	.Ltmp633-.Lfunc_begin2
	.quad	.Ltmp764-.Lfunc_begin2
	.quad	.Ltmp776-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges29:
	.quad	.Ltmp642-.Lfunc_begin2
	.quad	.Ltmp644-.Lfunc_begin2
	.quad	.Ltmp645-.Lfunc_begin2
	.quad	.Ltmp685-.Lfunc_begin2
	.quad	0
	.quad	0
.Ldebug_ranges30:
	.quad	.Ltmp1128-.Lfunc_begin11
	.quad	.Ltmp1136-.Lfunc_begin11
	.quad	.Ltmp1144-.Lfunc_begin11
	.quad	.Ltmp1160-.Lfunc_begin11
	.quad	.Ltmp1254-.Lfunc_begin11
	.quad	.Ltmp1266-.Lfunc_begin11
	.quad	.Ltmp1563-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1733-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.quad	.Ltmp2141-.Lfunc_begin11
	.quad	.Ltmp2811-.Lfunc_begin11
	.quad	.Ltmp2815-.Lfunc_begin11
	.quad	.Ltmp2860-.Lfunc_begin11
	.quad	.Ltmp2871-.Lfunc_begin11
	.quad	.Ltmp2872-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges31:
	.quad	.Ltmp1135-.Lfunc_begin11
	.quad	.Ltmp1136-.Lfunc_begin11
	.quad	.Ltmp1152-.Lfunc_begin11
	.quad	.Ltmp1154-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges32:
	.quad	.Ltmp1159-.Lfunc_begin11
	.quad	.Ltmp1160-.Lfunc_begin11
	.quad	.Ltmp1262-.Lfunc_begin11
	.quad	.Ltmp1264-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges33:
	.quad	.Ltmp2030-.Lfunc_begin11
	.quad	.Ltmp2031-.Lfunc_begin11
	.quad	.Ltmp2039-.Lfunc_begin11
	.quad	.Ltmp2041-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges34:
	.quad	.Ltmp2063-.Lfunc_begin11
	.quad	.Ltmp2064-.Lfunc_begin11
	.quad	.Ltmp2072-.Lfunc_begin11
	.quad	.Ltmp2074-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges35:
	.quad	.Ltmp1784-.Lfunc_begin11
	.quad	.Ltmp1785-.Lfunc_begin11
	.quad	.Ltmp1793-.Lfunc_begin11
	.quad	.Ltmp1795-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges36:
	.quad	.Ltmp1602-.Lfunc_begin11
	.quad	.Ltmp1603-.Lfunc_begin11
	.quad	.Ltmp1672-.Lfunc_begin11
	.quad	.Ltmp1674-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges37:
	.quad	.Ltmp2014-.Lfunc_begin11
	.quad	.Ltmp2015-.Lfunc_begin11
	.quad	.Ltmp2023-.Lfunc_begin11
	.quad	.Ltmp2025-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges38:
	.quad	.Ltmp2046-.Lfunc_begin11
	.quad	.Ltmp2047-.Lfunc_begin11
	.quad	.Ltmp2055-.Lfunc_begin11
	.quad	.Ltmp2057-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges39:
	.quad	.Ltmp1628-.Lfunc_begin11
	.quad	.Ltmp1629-.Lfunc_begin11
	.quad	.Ltmp1637-.Lfunc_begin11
	.quad	.Ltmp1639-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges40:
	.quad	.Ltmp1998-.Lfunc_begin11
	.quad	.Ltmp1999-.Lfunc_begin11
	.quad	.Ltmp2007-.Lfunc_begin11
	.quad	.Ltmp2009-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges41:
	.quad	.Ltmp2111-.Lfunc_begin11
	.quad	.Ltmp2112-.Lfunc_begin11
	.quad	.Ltmp2120-.Lfunc_begin11
	.quad	.Ltmp2122-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges42:
	.quad	.Ltmp1612-.Lfunc_begin11
	.quad	.Ltmp1613-.Lfunc_begin11
	.quad	.Ltmp1621-.Lfunc_begin11
	.quad	.Ltmp1623-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges43:
	.quad	.Ltmp1764-.Lfunc_begin11
	.quad	.Ltmp1765-.Lfunc_begin11
	.quad	.Ltmp1777-.Lfunc_begin11
	.quad	.Ltmp1779-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges44:
	.quad	.Ltmp1800-.Lfunc_begin11
	.quad	.Ltmp1801-.Lfunc_begin11
	.quad	.Ltmp1809-.Lfunc_begin11
	.quad	.Ltmp1811-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges45:
	.quad	.Ltmp1816-.Lfunc_begin11
	.quad	.Ltmp1817-.Lfunc_begin11
	.quad	.Ltmp1825-.Lfunc_begin11
	.quad	.Ltmp1827-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges46:
	.quad	.Ltmp1870-.Lfunc_begin11
	.quad	.Ltmp1871-.Lfunc_begin11
	.quad	.Ltmp1879-.Lfunc_begin11
	.quad	.Ltmp1881-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges47:
	.quad	.Ltmp1886-.Lfunc_begin11
	.quad	.Ltmp1887-.Lfunc_begin11
	.quad	.Ltmp1895-.Lfunc_begin11
	.quad	.Ltmp1897-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges48:
	.quad	.Ltmp1934-.Lfunc_begin11
	.quad	.Ltmp1935-.Lfunc_begin11
	.quad	.Ltmp1943-.Lfunc_begin11
	.quad	.Ltmp1945-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges49:
	.quad	.Ltmp1950-.Lfunc_begin11
	.quad	.Ltmp1951-.Lfunc_begin11
	.quad	.Ltmp1959-.Lfunc_begin11
	.quad	.Ltmp1961-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges50:
	.quad	.Ltmp2387-.Lfunc_begin11
	.quad	.Ltmp2388-.Lfunc_begin11
	.quad	.Ltmp2394-.Lfunc_begin11
	.quad	.Ltmp2396-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges51:
	.quad	.Ltmp2401-.Lfunc_begin11
	.quad	.Ltmp2402-.Lfunc_begin11
	.quad	.Ltmp2408-.Lfunc_begin11
	.quad	.Ltmp2410-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges52:
	.quad	.Ltmp2559-.Lfunc_begin11
	.quad	.Ltmp2589-.Lfunc_begin11
	.quad	.Ltmp2646-.Lfunc_begin11
	.quad	.Ltmp2694-.Lfunc_begin11
	.quad	.Ltmp2748-.Lfunc_begin11
	.quad	.Ltmp2751-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges53:
	.quad	.Ltmp1768-.Lfunc_begin11
	.quad	.Ltmp1769-.Lfunc_begin11
	.quad	.Ltmp1991-.Lfunc_begin11
	.quad	.Ltmp1993-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges54:
	.quad	.Ltmp1832-.Lfunc_begin11
	.quad	.Ltmp1833-.Lfunc_begin11
	.quad	.Ltmp1841-.Lfunc_begin11
	.quad	.Ltmp1843-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges55:
	.quad	.Ltmp1902-.Lfunc_begin11
	.quad	.Ltmp1903-.Lfunc_begin11
	.quad	.Ltmp1911-.Lfunc_begin11
	.quad	.Ltmp1913-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges56:
	.quad	.Ltmp1918-.Lfunc_begin11
	.quad	.Ltmp1919-.Lfunc_begin11
	.quad	.Ltmp1927-.Lfunc_begin11
	.quad	.Ltmp1930-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges57:
	.quad	.Ltmp1966-.Lfunc_begin11
	.quad	.Ltmp1967-.Lfunc_begin11
	.quad	.Ltmp1975-.Lfunc_begin11
	.quad	.Ltmp1977-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges58:
	.quad	.Ltmp2166-.Lfunc_begin11
	.quad	.Ltmp2167-.Lfunc_begin11
	.quad	.Ltmp2175-.Lfunc_begin11
	.quad	.Ltmp2177-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges59:
	.quad	.Ltmp2148-.Lfunc_begin11
	.quad	.Ltmp2149-.Lfunc_begin11
	.quad	.Ltmp2155-.Lfunc_begin11
	.quad	.Ltmp2157-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges60:
	.quad	.Ltmp2079-.Lfunc_begin11
	.quad	.Ltmp2080-.Lfunc_begin11
	.quad	.Ltmp2088-.Lfunc_begin11
	.quad	.Ltmp2090-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges61:
	.quad	.Ltmp2095-.Lfunc_begin11
	.quad	.Ltmp2096-.Lfunc_begin11
	.quad	.Ltmp2104-.Lfunc_begin11
	.quad	.Ltmp2106-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges62:
	.quad	.Ltmp1705-.Lfunc_begin11
	.quad	.Ltmp1733-.Lfunc_begin11
	.quad	.Ltmp2126-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges63:
	.quad	.Ltmp1748-.Lfunc_begin11
	.quad	.Ltmp1749-.Lfunc_begin11
	.quad	.Ltmp1757-.Lfunc_begin11
	.quad	.Ltmp1759-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges64:
	.quad	.Ltmp1854-.Lfunc_begin11
	.quad	.Ltmp1855-.Lfunc_begin11
	.quad	.Ltmp1863-.Lfunc_begin11
	.quad	.Ltmp1865-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges65:
	.quad	.Ltmp2191-.Lfunc_begin11
	.quad	.Ltmp2193-.Lfunc_begin11
	.quad	.Ltmp2207-.Lfunc_begin11
	.quad	.Ltmp2232-.Lfunc_begin11
	.quad	.Ltmp2234-.Lfunc_begin11
	.quad	.Ltmp2296-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges66:
	.quad	.Ltmp2434-.Lfunc_begin11
	.quad	.Ltmp2435-.Lfunc_begin11
	.quad	.Ltmp2443-.Lfunc_begin11
	.quad	.Ltmp2445-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges67:
	.quad	.Ltmp2616-.Lfunc_begin11
	.quad	.Ltmp2628-.Lfunc_begin11
	.quad	.Ltmp2629-.Lfunc_begin11
	.quad	.Ltmp2630-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges68:
	.quad	.Ltmp1128-.Lfunc_begin11
	.quad	.Ltmp1136-.Lfunc_begin11
	.quad	.Ltmp1144-.Lfunc_begin11
	.quad	.Ltmp1160-.Lfunc_begin11
	.quad	.Ltmp1254-.Lfunc_begin11
	.quad	.Ltmp1266-.Lfunc_begin11
	.quad	.Ltmp1563-.Lfunc_begin11
	.quad	.Ltmp1591-.Lfunc_begin11
	.quad	.Ltmp1595-.Lfunc_begin11
	.quad	.Ltmp1733-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.quad	.Ltmp2135-.Lfunc_begin11
	.quad	.Ltmp2141-.Lfunc_begin11
	.quad	.Ltmp2860-.Lfunc_begin11
	.quad	.Ltmp2865-.Lfunc_begin11
	.quad	.Ltmp2872-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges69:
	.quad	.Ltmp1138-.Lfunc_begin11
	.quad	.Ltmp1139-.Lfunc_begin11
	.quad	.Ltmp1140-.Lfunc_begin11
	.quad	.Ltmp1144-.Lfunc_begin11
	.quad	.Ltmp1165-.Lfunc_begin11
	.quad	.Ltmp1254-.Lfunc_begin11
	.quad	.Ltmp1346-.Lfunc_begin11
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges70:
	.quad	.Ltmp1161-.Lfunc_begin11
	.quad	.Ltmp1165-.Lfunc_begin11
	.quad	.Ltmp1266-.Lfunc_begin11
	.quad	.Ltmp1345-.Lfunc_begin11
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.quad	.Ltmp1738-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges71:
	.quad	.Ltmp1266-.Lfunc_begin11
	.quad	.Ltmp1278-.Lfunc_begin11
	.quad	.Ltmp1473-.Lfunc_begin11
	.quad	.Ltmp1552-.Lfunc_begin11
	.quad	.Ltmp1738-.Lfunc_begin11
	.quad	.Ltmp1741-.Lfunc_begin11
	.quad	.Ltmp2138-.Lfunc_begin11
	.quad	.Ltmp2140-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges72:
	.quad	.Ltmp2989-.Lfunc_begin11
	.quad	.Ltmp2992-.Lfunc_begin11
	.quad	.Ltmp2993-.Lfunc_begin11
	.quad	.Ltmp2994-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges73:
	.quad	.Ltmp2892-.Lfunc_begin11
	.quad	.Ltmp2893-.Lfunc_begin11
	.quad	.Ltmp2913-.Lfunc_begin11
	.quad	.Ltmp2977-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges74:
	.quad	.Ltmp2924-.Lfunc_begin11
	.quad	.Ltmp2939-.Lfunc_begin11
	.quad	.Ltmp2943-.Lfunc_begin11
	.quad	.Ltmp2944-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges75:
	.quad	.Ltmp2880-.Lfunc_begin11
	.quad	.Ltmp2881-.Lfunc_begin11
	.quad	.Ltmp2882-.Lfunc_begin11
	.quad	.Ltmp2892-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges76:
	.quad	.Ltmp3047-.Lfunc_begin11
	.quad	.Ltmp3050-.Lfunc_begin11
	.quad	.Ltmp3051-.Lfunc_begin11
	.quad	.Ltmp3064-.Lfunc_begin11
	.quad	0
	.quad	0
.Ldebug_ranges77:
	.quad	.Ltmp3079-.Lfunc_begin18
	.quad	.Ltmp3569-.Lfunc_begin18
	.quad	.Ltmp3786-.Lfunc_begin18
	.quad	.Ltmp3787-.Lfunc_begin18
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3799-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges78:
	.quad	.Ltmp3097-.Lfunc_begin18
	.quad	.Ltmp3099-.Lfunc_begin18
	.quad	.Ltmp3100-.Lfunc_begin18
	.quad	.Ltmp3544-.Lfunc_begin18
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	.Ltmp3793-.Lfunc_begin18
	.quad	.Ltmp3794-.Lfunc_begin18
	.quad	.Ltmp3799-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges79:
	.quad	.Ltmp3223-.Lfunc_begin18
	.quad	.Ltmp3446-.Lfunc_begin18
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges80:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3230-.Lfunc_begin18
	.quad	.Ltmp3325-.Lfunc_begin18
	.quad	.Ltmp3332-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges81:
	.quad	.Ltmp3227-.Lfunc_begin18
	.quad	.Ltmp3230-.Lfunc_begin18
	.quad	.Ltmp3324-.Lfunc_begin18
	.quad	.Ltmp3334-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges82:
	.quad	.Ltmp3233-.Lfunc_begin18
	.quad	.Ltmp3234-.Lfunc_begin18
	.quad	.Ltmp3342-.Lfunc_begin18
	.quad	.Ltmp3345-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges83:
	.quad	.Ltmp3232-.Lfunc_begin18
	.quad	.Ltmp3235-.Lfunc_begin18
	.quad	.Ltmp3335-.Lfunc_begin18
	.quad	.Ltmp3347-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges84:
	.quad	.Ltmp3206-.Lfunc_begin18
	.quad	.Ltmp3207-.Lfunc_begin18
	.quad	.Ltmp3213-.Lfunc_begin18
	.quad	.Ltmp3219-.Lfunc_begin18
	.quad	.Ltmp3221-.Lfunc_begin18
	.quad	.Ltmp3451-.Lfunc_begin18
	.quad	.Ltmp3795-.Lfunc_begin18
	.quad	.Ltmp3796-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges85:
	.quad	.Ltmp3516-.Lfunc_begin18
	.quad	.Ltmp3518-.Lfunc_begin18
	.quad	.Ltmp3519-.Lfunc_begin18
	.quad	.Ltmp3524-.Lfunc_begin18
	.quad	.Ltmp3526-.Lfunc_begin18
	.quad	.Ltmp3531-.Lfunc_begin18
	.quad	.Ltmp3532-.Lfunc_begin18
	.quad	.Ltmp3536-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges86:
	.quad	.Ltmp3508-.Lfunc_begin18
	.quad	.Ltmp3540-.Lfunc_begin18
	.quad	.Ltmp3798-.Lfunc_begin18
	.quad	.Ltmp3799-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges87:
	.quad	.Ltmp3779-.Lfunc_begin18
	.quad	.Ltmp3783-.Lfunc_begin18
	.quad	.Ltmp3788-.Lfunc_begin18
	.quad	.Ltmp3789-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges88:
	.quad	.Ltmp4200-.Lfunc_begin18
	.quad	.Ltmp4330-.Lfunc_begin18
	.quad	.Ltmp4972-.Lfunc_begin18
	.quad	.Ltmp4974-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges89:
	.quad	.Ltmp4339-.Lfunc_begin18
	.quad	.Ltmp4364-.Lfunc_begin18
	.quad	.Ltmp4483-.Lfunc_begin18
	.quad	.Ltmp4484-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges90:
	.quad	.Ltmp4415-.Lfunc_begin18
	.quad	.Ltmp4473-.Lfunc_begin18
	.quad	.Ltmp4963-.Lfunc_begin18
	.quad	.Ltmp4964-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges91:
	.quad	.Ltmp4473-.Lfunc_begin18
	.quad	.Ltmp4478-.Lfunc_begin18
	.quad	.Ltmp4965-.Lfunc_begin18
	.quad	.Ltmp4967-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges92:
	.quad	.Ltmp4487-.Lfunc_begin18
	.quad	.Ltmp4489-.Lfunc_begin18
	.quad	.Ltmp4503-.Lfunc_begin18
	.quad	.Ltmp4507-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges93:
	.quad	.Ltmp4518-.Lfunc_begin18
	.quad	.Ltmp4523-.Lfunc_begin18
	.quad	.Ltmp4550-.Lfunc_begin18
	.quad	.Ltmp4551-.Lfunc_begin18
	.quad	.Ltmp4960-.Lfunc_begin18
	.quad	.Ltmp4962-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges94:
	.quad	.Ltmp4515-.Lfunc_begin18
	.quad	.Ltmp4549-.Lfunc_begin18
	.quad	.Ltmp4550-.Lfunc_begin18
	.quad	.Ltmp4551-.Lfunc_begin18
	.quad	.Ltmp4960-.Lfunc_begin18
	.quad	.Ltmp4962-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges95:
	.quad	.Ltmp4915-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4941-.Lfunc_begin18
	.quad	.Ltmp4943-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges96:
	.quad	.Ltmp4569-.Lfunc_begin18
	.quad	.Ltmp4919-.Lfunc_begin18
	.quad	.Ltmp4941-.Lfunc_begin18
	.quad	.Ltmp4943-.Lfunc_begin18
	.quad	0
	.quad	0
.Ldebug_ranges97:
	.quad	.Ltmp4925-.Lfunc_begin18
	.quad	.Ltmp4928-.Lfunc_begin18
	.quad	.Ltmp4931-.Lfunc_begin18
	.quad	.Ltmp4937-.Lfunc_begin18
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0                       # End Of Macro List Mark

	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.ident	"clang version 8.0.0 (tags/RELEASE_800/final)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
